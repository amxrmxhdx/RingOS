
os.bin:     file format elf32-i386
os.bin
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00103240

Program Header:
    LOAD off    0x00001000 vaddr 0x00100000 paddr 0x00100000 align 2**12
         filesz 0x00004aba memsz 0x00004aba flags r-x
    LOAD off    0x00000000 vaddr 0x00105000 paddr 0x00105000 align 2**12
         filesz 0x00000000 memsz 0x00106c70 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000032f8  00100000  00100000  00001000  2**12
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       00000aba  00104000  00104000  00005000  2**12
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .bss          00106c70  00105000  00105000  00006000  2**12
                  ALLOC
  3 .debug_info   00005543  00000000  00000000  00005aba  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  4 .debug_abbrev 00001772  00000000  00000000  0000affd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_loclists 000024e7  00000000  00000000  0000c76f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_aranges 000001e0  00000000  00000000  0000ec56  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_rnglists 0000067f  00000000  00000000  0000ee36  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_line   00003791  00000000  00000000  0000f4b5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_str    00000bf5  00000000  00000000  00012c46  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_line_str 000001a4  00000000  00000000  0001383b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .comment      00000012  00000000  00000000  000139df  2**0
                  CONTENTS, READONLY
 12 .debug_frame  00000b98  00000000  00000000  000139f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 kernel/boot.asm
1badb002 l       *ABS*	00000000 MBOOT_HEADER_MAGIC
00000001 l       *ABS*	00000000 MBOOT_PAGE_ALIGN
00000002 l       *ABS*	00000000 MBOOT_MEM_INFO
00000003 l       *ABS*	00000000 MBOOT_HEADER_FLAGS
e4524ffb l       *ABS*	00000000 MBOOT_CHECKSUM
00207c70 l     O .bss	00000001 stack_bottom
0020bc70 l       .bss	00000000 stack_top
00103275 l       .text	00000000 _start.hang
001032ef l       .text	00000000 gdt_flush.flush
00000000 l    df *ABS*	00000000 gdt.c
00000000 l    df *ABS*	00000000 idt.c
00000000 l    df *ABS*	00000000 isr.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 shell.c
00100380 l     F .text	000000bb cmd_read_binary
00100440 l     F .text	000000dd ls_callback
00100520 l     F .text	000001d2 cmd_write_binary
00100700 l     F .text	0000005e print_prompt
00105840 l     O .bss	00001000 buffer.0
00106840 l     O .bss	00000004 cmd_index
00106860 l     O .bss	00000100 cmd_buffer
00000000 l    df *ABS*	00000000 ata.c
00106960 l     O .bss	00000004 ata_initialized
00000000 l    df *ABS*	00000000 fat32.c
001014c0 l     F .text	00000144 update_path
00106980 l     O .bss	00000004 directory_depth
00107aa0 l     O .bss	00000110 current_directory
001069a0 l     O .bss	00001100 parent_directories
00107bc0 l     O .bss	0000005a boot_sector
00107bb0 l     O .bss	00000004 sectors_per_cluster
00107bb8 l     O .bss	00000004 fat_begin_lba
00107bb4 l     O .bss	00000004 cluster_begin_lba
00107c1c l     O .bss	00000004 is_initialized
00000000 l    df *ABS*	00000000 keyboard.c
00107c24 l     O .bss	00000004 shift_pressed
00107c20 l     O .bss	00000004 caps_lock
00104a40 l     O .rodata	0000003a scancode_to_ascii_shift
00104a80 l     O .rodata	0000003a scancode_to_ascii
00000000 l    df *ABS*	00000000 loader.c
00000000 l    df *ABS*	00000000 memory.c
00107c40 l     O .bss	00000004 heap_ptr
00107c60 l     O .bss	00100000 heap
00000000 l    df *ABS*	00000000 stdterm.c
00000000 l    df *ABS*	00000000 vga.c
00207c62 l     O .bss	00000001 vga_color
00207c60 l     O .bss	00000002 cursor_pos
00000000 l    df *ABS*	00000000 stdint.c
00000000 l    df *ABS*	00000000 string.c
00103170 g     F .text	00000025 strcpy
00102bc0 g     F .text	00000005 print
00102ef0 g     F .text	0000001a vga_set_color
00101c70 g     F .text	0000014d fat32_create_file
00102df0 g     F .text	00000037 vga_writestr
00105000 g     O .bss	00000006 gp
00101610 g     F .text	000000ca fat32_init
00102f40 g     F .text	000000b0 uint32_t_to_str
001020f0 g     F .text	000000a3 fat32_allocate_cluster
00100760 g     F .text	0000020d cmd_cat
00105020 g     O .bss	00000006 idtp
001032a4 g       .text	00000000 isr80
00103080 g     F .text	0000002b memcpy
00102bb0 g     F .text	00000001 kfree
00101320 g     F .text	00000174 ata_write_sectors
00102ac0 g     F .text	0000007b jump_to_program
00101000 g     F .text	00000079 shell_handle_keypress
001028b0 g     F .text	0000001b keyboard_init
00105008 g     O .bss	00000018 gdt
00101700 g     F .text	00000053 fat32_get_next_cluster
00101c50 g     F .text	00000012 fat32_is_directory
00100b20 g     F .text	000004db shell_process_command
00101100 g     F .text	000000ba ata_init
00102c20 g     F .text	00000065 vga_init
00101f00 g     F .text	0000014d fat32_create_directory
00101b20 g     F .text	00000127 fat32_list_directory
00102050 g     F .text	0000009d fat32_write_fat_entry
001016e0 g     F .text	00000006 fat32_get_current_directory
00100260 g     F .text	000000f9 kernel_main
00101080 g     F .text	00000041 shell_init
001031a0 g     F .text	00000044 strcat
00102a10 g     F .text	00000006 keyboard_is_shift_pressed
00103240 g       .text	00000000 _start
00101760 g     F .text	000003b6 fat32_change_directory
001010d0 g     F .text	00000025 shell_run
00102b40 g     F .text	00000023 init_memory
00100010 g     F .text	0000006f set_gdt_entry
001011c0 g     F .text	0000015f ata_read_sectors
00100130 g     F .text	000000c4 init_idt
001030b0 g     F .text	00000056 memcmp
00100080 g     F .text	00000061 init_gdt
001031f0 g     F .text	0000004d strncat
00102eb0 g     F .text	0000003c vga_set_cursor_pos
00102bf0 g     F .text	00000010 printChar
00103030 g     F .text	00000043 memset
00103278 g       .text	00000000 isr0
00100200 g     F .text	0000005a isr_handler
00103110 g     F .text	00000059 strcmp
001028d0 g     F .text	00000134 keyboard_read
00105040 g     O .bss	00000800 idt
001021a0 g     F .text	00000210 fat32_write_file
00102a20 g     F .text	00000006 keyboard_is_caps_on
001016f0 g     F .text	00000006 fat32_get_current_path
00102c90 g     F .text	0000015f vga_putchar
001032d3 g       .text	00000000 gdt_flush
001000f0 g     F .text	0000003f set_idt_gate
00102b70 g     F .text	00000034 kmalloc
001032f0 g       .text	00000000 idt_flush
00103000 g     F .text	00000024 strlen
00102c00 g     F .text	00000005 clearScreen
00102bd0 g     F .text	00000019 println
00100970 g     F .text	000001a3 cmd_exec
001023b0 g     F .text	000004f5 fat32_read_file
00101dc0 g     F .text	0000013c fat32_delete_file
00102e30 g     F .text	00000072 vga_clear
00102a30 g     F .text	00000082 load_program



Disassembly of section .text:

00100000 <set_gdt_entry-0x10>:
  100000:	02 b0 ad 1b 03 00    	add    0x31bad(%eax),%dh
  100006:	00 00                	add    %al,(%eax)
  100008:	fb                   	sti
  100009:	4f                   	dec    %edi
  10000a:	52                   	push   %edx
  10000b:	e4 66                	in     $0x66,%al
  10000d:	90                   	nop
  10000e:	66 90                	xchg   %ax,%ax

00100010 <set_gdt_entry>:
struct gdt_ptr gp;

extern void gdt_flush(uint32_t);

// Helper function to set a GDT entry
void set_gdt_entry(int num, uint32_t base, uint32_t limit, uint8_t access, uint8_t granularity) {
  100010:	55                   	push   %ebp
  100011:	89 e5                	mov    %esp,%ebp
  100013:	57                   	push   %edi
  100014:	56                   	push   %esi
  100015:	53                   	push   %ebx
  100016:	83 ec 04             	sub    $0x4,%esp
  100019:	8b 45 18             	mov    0x18(%ebp),%eax
  10001c:	8b 55 0c             	mov    0xc(%ebp),%edx
  10001f:	8b 4d 08             	mov    0x8(%ebp),%ecx
  100022:	8b 75 14             	mov    0x14(%ebp),%esi
  100025:	89 45 f0             	mov    %eax,-0x10(%ebp)
    gdt[num].base_low = base & 0xFFFF;
    gdt[num].base_middle = (base >> 16) & 0xFF;
  100028:	89 d7                	mov    %edx,%edi
    gdt[num].base_high = (base >> 24) & 0xFF;

    gdt[num].limit_low = limit & 0xFFFF;
  10002a:	0f b7 45 10          	movzwl 0x10(%ebp),%eax
    gdt[num].base_middle = (base >> 16) & 0xFF;
  10002e:	c1 ef 10             	shr    $0x10,%edi
    gdt[num].base_low = base & 0xFFFF;
  100031:	66 89 14 cd 0a 50 10 	mov    %dx,0x10500a(,%ecx,8)
  100038:	00 
    gdt[num].base_middle = (base >> 16) & 0xFF;
  100039:	81 e2 00 00 00 ff    	and    $0xff000000,%edx
    gdt[num].limit_low = limit & 0xFFFF;
  10003f:	66 89 04 cd 08 50 10 	mov    %ax,0x105008(,%ecx,8)
  100046:	00 
    gdt[num].base_middle = (base >> 16) & 0xFF;
  100047:	89 fb                	mov    %edi,%ebx
  100049:	31 c0                	xor    %eax,%eax
  10004b:	88 d8                	mov    %bl,%al
  10004d:	89 f3                	mov    %esi,%ebx
    gdt[num].granularity = (limit >> 16) & 0x0F;
  10004f:	8b 75 10             	mov    0x10(%ebp),%esi
    gdt[num].base_middle = (base >> 16) & 0xFF;
  100052:	88 dc                	mov    %bl,%ah
  100054:	0f b6 5d f0          	movzbl -0x10(%ebp),%ebx
    gdt[num].granularity = (limit >> 16) & 0x0F;
  100058:	c1 ee 10             	shr    $0x10,%esi
    gdt[num].base_middle = (base >> 16) & 0xFF;
  10005b:	0f b7 c0             	movzwl %ax,%eax
    gdt[num].granularity = (limit >> 16) & 0x0F;
  10005e:	83 e6 0f             	and    $0xf,%esi
    gdt[num].base_middle = (base >> 16) & 0xFF;
  100061:	83 e3 f0             	and    $0xfffffff0,%ebx
  100064:	09 f3                	or     %esi,%ebx
  100066:	0f b6 db             	movzbl %bl,%ebx
  100069:	c1 e3 10             	shl    $0x10,%ebx
  10006c:	09 d8                	or     %ebx,%eax
  10006e:	09 c2                	or     %eax,%edx
  100070:	89 14 cd 0c 50 10 00 	mov    %edx,0x10500c(,%ecx,8)
    gdt[num].granularity |= granularity & 0xF0;
    gdt[num].access = access;
}
  100077:	83 c4 04             	add    $0x4,%esp
  10007a:	5b                   	pop    %ebx
  10007b:	5e                   	pop    %esi
  10007c:	5f                   	pop    %edi
  10007d:	5d                   	pop    %ebp
  10007e:	c3                   	ret
  10007f:	90                   	nop

00100080 <init_gdt>:

// Initialize the GDT
void init_gdt() {
  100080:	55                   	push   %ebp
    gp.limit = sizeof(gdt) - 1;
  100081:	b8 17 00 00 00       	mov    $0x17,%eax
  100086:	66 a3 00 50 10 00    	mov    %ax,0x105000
    gp.base = (uint32_t)&gdt;
  10008c:	c7 05 02 50 10 00 08 	movl   $0x105008,0x105002
  100093:	50 10 00 
    gdt[num].limit_low = limit & 0xFFFF;
  100096:	c7 05 08 50 10 00 00 	movl   $0x0,0x105008
  10009d:	00 00 00 
void init_gdt() {
  1000a0:	89 e5                	mov    %esp,%ebp

    // Data segment
    set_gdt_entry(2, 0, 0xFFFFF, 0x92, 0xCF);

    // Load the GDT
    gdt_flush((uint32_t)&gp);
  1000a2:	68 00 50 10 00       	push   $0x105000
    gdt[num].base_middle = (base >> 16) & 0xFF;
  1000a7:	c7 05 0c 50 10 00 00 	movl   $0x0,0x10500c
  1000ae:	00 00 00 
    gdt[num].limit_low = limit & 0xFFFF;
  1000b1:	c7 05 10 50 10 00 ff 	movl   $0xffff,0x105010
  1000b8:	ff 00 00 
    gdt[num].base_middle = (base >> 16) & 0xFF;
  1000bb:	c7 05 14 50 10 00 00 	movl   $0xcf9a00,0x105014
  1000c2:	9a cf 00 
    gdt[num].limit_low = limit & 0xFFFF;
  1000c5:	c7 05 18 50 10 00 ff 	movl   $0xffff,0x105018
  1000cc:	ff 00 00 
    gdt[num].base_middle = (base >> 16) & 0xFF;
  1000cf:	c7 05 1c 50 10 00 00 	movl   $0xcf9200,0x10501c
  1000d6:	92 cf 00 
    gdt_flush((uint32_t)&gp);
  1000d9:	e8 f5 31 00 00       	call   1032d3 <gdt_flush>
}
  1000de:	5a                   	pop    %edx
  1000df:	c9                   	leave
  1000e0:	c3                   	ret
  1000e1:	66 90                	xchg   %ax,%ax
  1000e3:	66 90                	xchg   %ax,%ax
  1000e5:	66 90                	xchg   %ax,%ax
  1000e7:	66 90                	xchg   %ax,%ax
  1000e9:	66 90                	xchg   %ax,%ax
  1000eb:	66 90                	xchg   %ax,%ax
  1000ed:	66 90                	xchg   %ax,%ax
  1000ef:	90                   	nop

001000f0 <set_idt_gate>:
struct idt_ptr idtp;

extern void idt_flush(uint32_t);

// Helper function to set an IDT gate
void set_idt_gate(int num, uint32_t base, uint16_t sel, uint8_t flags) {
  1000f0:	55                   	push   %ebp
  1000f1:	89 e5                	mov    %esp,%ebp
  1000f3:	53                   	push   %ebx
  1000f4:	8b 45 08             	mov    0x8(%ebp),%eax
  1000f7:	8b 55 0c             	mov    0xc(%ebp),%edx
  1000fa:	8b 5d 10             	mov    0x10(%ebp),%ebx
  1000fd:	8b 4d 14             	mov    0x14(%ebp),%ecx
    idt[num].offset_low = base & 0xFFFF;
  100100:	66 89 14 c5 40 50 10 	mov    %dx,0x105040(,%eax,8)
  100107:	00 
    idt[num].selector = sel;
    idt[num].zero = 0;
    idt[num].type_attr = flags;
    idt[num].offset_high = (base >> 16) & 0xFFFF;
  100108:	c1 ea 10             	shr    $0x10,%edx
    idt[num].selector = sel;
  10010b:	66 89 1c c5 42 50 10 	mov    %bx,0x105042(,%eax,8)
  100112:	00 
    idt[num].zero = 0;
  100113:	c6 04 c5 44 50 10 00 	movb   $0x0,0x105044(,%eax,8)
  10011a:	00 
    idt[num].type_attr = flags;
  10011b:	88 0c c5 45 50 10 00 	mov    %cl,0x105045(,%eax,8)
}
  100122:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    idt[num].offset_high = (base >> 16) & 0xFFFF;
  100125:	66 89 14 c5 46 50 10 	mov    %dx,0x105046(,%eax,8)
  10012c:	00 
}
  10012d:	c9                   	leave
  10012e:	c3                   	ret
  10012f:	90                   	nop

00100130 <init_idt>:

// Initialize the IDT
void init_idt() {
  100130:	55                   	push   %ebp
    idtp.limit = sizeof(idt) - 1;
  100131:	b8 ff 07 00 00       	mov    $0x7ff,%eax
  100136:	b9 44 58 10 00       	mov    $0x105844,%ecx
  10013b:	0f b7 15 00 40 10 00 	movzwl 0x104000,%edx
    idtp.base = (uint32_t)&idt;
  100142:	c7 05 22 50 10 00 40 	movl   $0x105040,0x105022
  100149:	50 10 00 
    idtp.limit = sizeof(idt) - 1;
  10014c:	66 a3 20 50 10 00    	mov    %ax,0x105020

    // Clear the IDT
    for (int i = 0; i < 256; i++) {
  100152:	b8 44 50 10 00       	mov    $0x105044,%eax
void init_idt() {
  100157:	89 e5                	mov    %esp,%ebp
  100159:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    idt[num].offset_low = base & 0xFFFF;
  100160:	c7 40 fc 00 00 08 00 	movl   $0x80000,-0x4(%eax)
  100167:	83 c0 20             	add    $0x20,%eax
  10016a:	c7 40 e4 00 00 08 00 	movl   $0x80000,-0x1c(%eax)
  100171:	c7 40 ec 00 00 08 00 	movl   $0x80000,-0x14(%eax)
  100178:	c7 40 f4 00 00 08 00 	movl   $0x80000,-0xc(%eax)
    idt[num].zero = 0;
  10017f:	66 89 50 e0          	mov    %dx,-0x20(%eax)
  100183:	66 89 50 e8          	mov    %dx,-0x18(%eax)
  100187:	66 89 50 f0          	mov    %dx,-0x10(%eax)
  10018b:	66 89 50 f8          	mov    %dx,-0x8(%eax)
    idt[num].offset_high = (base >> 16) & 0xFFFF;
  10018f:	66 c7 40 e2 00 00    	movw   $0x0,-0x1e(%eax)
  100195:	66 c7 40 ea 00 00    	movw   $0x0,-0x16(%eax)
  10019b:	66 c7 40 f2 00 00    	movw   $0x0,-0xe(%eax)
  1001a1:	66 c7 40 fa 00 00    	movw   $0x0,-0x6(%eax)
    for (int i = 0; i < 256; i++) {
  1001a7:	39 c1                	cmp    %eax,%ecx
  1001a9:	75 b5                	jne    100160 <init_idt+0x30>
    }

    // Set specific ISRs
    extern void isr0();
    extern void isr80();
    set_idt_gate(0, (uint32_t)isr0, 0x08, 0x8E);   // Divide-by-zero
  1001ab:	b8 78 32 10 00       	mov    $0x103278,%eax
    set_idt_gate(0x80, (uint32_t)isr80, 0x08, 0x8E); // Syscall

    // Load the IDT
    idt_flush((uint32_t)&idtp);
  1001b0:	68 20 50 10 00       	push   $0x105020
    idt[num].offset_low = base & 0xFFFF;
  1001b5:	66 a3 40 50 10 00    	mov    %ax,0x105040
    idt[num].offset_high = (base >> 16) & 0xFFFF;
  1001bb:	c1 e8 10             	shr    $0x10,%eax
  1001be:	66 a3 46 50 10 00    	mov    %ax,0x105046
    set_idt_gate(0x80, (uint32_t)isr80, 0x08, 0x8E); // Syscall
  1001c4:	b8 a4 32 10 00       	mov    $0x1032a4,%eax
    idt[num].offset_low = base & 0xFFFF;
  1001c9:	66 a3 40 54 10 00    	mov    %ax,0x105440
    idt[num].offset_high = (base >> 16) & 0xFFFF;
  1001cf:	c1 e8 10             	shr    $0x10,%eax
  1001d2:	66 a3 46 54 10 00    	mov    %ax,0x105446
    idt[num].selector = sel;
  1001d8:	c7 05 42 50 10 00 08 	movl   $0x8e000008,0x105042
  1001df:	00 00 8e 
  1001e2:	c7 05 42 54 10 00 08 	movl   $0x8e000008,0x105442
  1001e9:	00 00 8e 
    idt_flush((uint32_t)&idtp);
  1001ec:	e8 ff 30 00 00       	call   1032f0 <idt_flush>
}
  1001f1:	58                   	pop    %eax
  1001f2:	c9                   	leave
  1001f3:	c3                   	ret
  1001f4:	66 90                	xchg   %ax,%ax
  1001f6:	66 90                	xchg   %ax,%ax
  1001f8:	66 90                	xchg   %ax,%ax
  1001fa:	66 90                	xchg   %ax,%ax
  1001fc:	66 90                	xchg   %ax,%ax
  1001fe:	66 90                	xchg   %ax,%ax

00100200 <isr_handler>:
#include "idt.h"
#include "stdterm.h"

void isr_handler(struct registers_t *regs) {
  100200:	55                   	push   %ebp
  100201:	89 e5                	mov    %esp,%ebp
  100203:	8b 55 08             	mov    0x8(%ebp),%edx
    uint32_t syscall = regs->int_no;
  100206:	8b 42 30             	mov    0x30(%edx),%eax
    uint32_t arg1 = regs->ebx;

    if (syscall == 0) {
  100209:	85 c0                	test   %eax,%eax
  10020b:	74 24                	je     100231 <isr_handler+0x31>
        print("Divide-by-zero exception!\n");
        while (1);
    } else if (syscall == 1) {
  10020d:	83 f8 01             	cmp    $0x1,%eax
  100210:	74 3b                	je     10024d <isr_handler+0x4d>
        // printChar syscall
        printChar(arg1);
    } else if (syscall == 0x80) {
  100212:	3d 80 00 00 00       	cmp    $0x80,%eax
  100217:	74 27                	je     100240 <isr_handler+0x40>
        print("Syscall interrupt!\n");
    } else {
        print("Unhandled interrupt: ");
  100219:	68 31 40 10 00       	push   $0x104031
  10021e:	e8 9d 29 00 00       	call   102bc0 <print>
        // print_hex(regs->int_no);
        print("\n");
  100223:	58                   	pop    %eax
  100224:	c7 45 08 0a 44 10 00 	movl   $0x10440a,0x8(%ebp)
    }
  10022b:	c9                   	leave
        print("\n");
  10022c:	e9 8f 29 00 00       	jmp    102bc0 <print>
        print("Divide-by-zero exception!\n");
  100231:	68 02 40 10 00       	push   $0x104002
  100236:	e8 85 29 00 00       	call   102bc0 <print>
  10023b:	5a                   	pop    %edx
        while (1);
  10023c:	eb fe                	jmp    10023c <isr_handler+0x3c>
  10023e:	66 90                	xchg   %ax,%ax
        print("Syscall interrupt!\n");
  100240:	c7 45 08 1d 40 10 00 	movl   $0x10401d,0x8(%ebp)
  100247:	c9                   	leave
        print("Syscall interrupt!\n");
  100248:	e9 73 29 00 00       	jmp    102bc0 <print>
        printChar(arg1);
  10024d:	0f be 42 20          	movsbl 0x20(%edx),%eax
  100251:	89 45 08             	mov    %eax,0x8(%ebp)
  100254:	c9                   	leave
        printChar(arg1);
  100255:	e9 96 29 00 00       	jmp    102bf0 <printChar>
  10025a:	66 90                	xchg   %ax,%ax
  10025c:	66 90                	xchg   %ax,%ax
  10025e:	66 90                	xchg   %ax,%ax

00100260 <kernel_main>:
#include <fat32.h>
#include "shell.h"
#include "idt.h"
#include "gdt.h"

void kernel_main(void) {
  100260:	55                   	push   %ebp
  100261:	89 e5                	mov    %esp,%ebp
  100263:	53                   	push   %ebx
    vga_writestr("IDT init starting...\n");
    init_idt();
    vga_writestr("IDT init done.\n");

    
    vga_writestr("Initializing hardware...\n");
  100264:	bb 03 00 00 00       	mov    $0x3,%ebx
    vga_init();
  100269:	e8 b2 29 00 00       	call   102c20 <vga_init>
    keyboard_init();
  10026e:	e8 3d 26 00 00       	call   1028b0 <keyboard_init>
    vga_writestr("GDT init starting...\n");
  100273:	68 47 40 10 00       	push   $0x104047
  100278:	e8 73 2b 00 00       	call   102df0 <vga_writestr>
    init_gdt();
  10027d:	e8 fe fd ff ff       	call   100080 <init_gdt>
    vga_writestr("GDT init done.\n");
  100282:	68 5d 40 10 00       	push   $0x10405d
  100287:	e8 64 2b 00 00       	call   102df0 <vga_writestr>
    vga_writestr("IDT init starting...\n");
  10028c:	68 6d 40 10 00       	push   $0x10406d
  100291:	e8 5a 2b 00 00       	call   102df0 <vga_writestr>
    init_idt();
  100296:	e8 95 fe ff ff       	call   100130 <init_idt>
    vga_writestr("IDT init done.\n");
  10029b:	68 83 40 10 00       	push   $0x104083
  1002a0:	e8 4b 2b 00 00       	call   102df0 <vga_writestr>
    vga_writestr("Initializing hardware...\n");
  1002a5:	68 93 40 10 00       	push   $0x104093
  1002aa:	e8 41 2b 00 00       	call   102df0 <vga_writestr>
  1002af:	83 c4 14             	add    $0x14,%esp
    // Initialize ATA with retry
    int retries = 3;
    bool ata_ok = false;
    
    while (retries-- && !ata_ok) {
        vga_writestr("Initializing ATA drive... ");
  1002b2:	68 ad 40 10 00       	push   $0x1040ad
  1002b7:	e8 34 2b 00 00       	call   102df0 <vga_writestr>
        ata_ok = ata_init();
  1002bc:	e8 3f 0e 00 00       	call   101100 <ata_init>
        if (!ata_ok) {
  1002c1:	5a                   	pop    %edx
  1002c2:	85 c0                	test   %eax,%eax
  1002c4:	74 4a                	je     100310 <kernel_main+0xb0>
        vga_writestr("\nFATAL: Could not initialize ATA drive!\n");
        vga_writestr("System halted.\n");
        while(1);
    }
    
    vga_writestr("OK\n");
  1002c6:	68 c8 40 10 00       	push   $0x1040c8
  1002cb:	e8 20 2b 00 00       	call   102df0 <vga_writestr>
    
    // Initialize filesystem
    vga_writestr("Initializing filesystem... ");
  1002d0:	68 cc 40 10 00       	push   $0x1040cc
  1002d5:	e8 16 2b 00 00       	call   102df0 <vga_writestr>
    if (!fat32_init()) {
  1002da:	e8 31 13 00 00       	call   101610 <fat32_init>
  1002df:	5a                   	pop    %edx
  1002e0:	59                   	pop    %ecx
  1002e1:	85 c0                	test   %eax,%eax
  1002e3:	75 5b                	jne    100340 <kernel_main+0xe0>
        vga_writestr("Failed!\n");
  1002e5:	68 0d 41 10 00       	push   $0x10410d
  1002ea:	e8 01 2b 00 00       	call   102df0 <vga_writestr>
        vga_writestr("WARNING: Filesystem commands will be unavailable.\n");
  1002ef:	68 80 45 10 00       	push   $0x104580
  1002f4:	e8 f7 2a 00 00       	call   102df0 <vga_writestr>
  1002f9:	5a                   	pop    %edx
  1002fa:	59                   	pop    %ecx
    } else {
        vga_writestr("OK\n");
    }
    
    // Start shell
    shell_init();
  1002fb:	e8 80 0d 00 00       	call   101080 <shell_init>
    shell_run();
  100300:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  100303:	c9                   	leave
    shell_run();
  100304:	e9 c7 0d 00 00       	jmp    1010d0 <shell_run>
  100309:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
            vga_writestr("Failed, retrying...\n");
  100310:	68 e8 40 10 00       	push   $0x1040e8
  100315:	e8 d6 2a 00 00       	call   102df0 <vga_writestr>
    while (retries-- && !ata_ok) {
  10031a:	58                   	pop    %eax
  10031b:	83 eb 01             	sub    $0x1,%ebx
  10031e:	75 92                	jne    1002b2 <kernel_main+0x52>
        vga_writestr("\nFATAL: Could not initialize ATA drive!\n");
  100320:	68 54 45 10 00       	push   $0x104554
  100325:	e8 c6 2a 00 00       	call   102df0 <vga_writestr>
        vga_writestr("System halted.\n");
  10032a:	68 fd 40 10 00       	push   $0x1040fd
  10032f:	e8 bc 2a 00 00       	call   102df0 <vga_writestr>
  100334:	5b                   	pop    %ebx
  100335:	58                   	pop    %eax
        while(1);
  100336:	eb fe                	jmp    100336 <kernel_main+0xd6>
  100338:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  10033f:	00 
        vga_writestr("OK\n");
  100340:	68 c8 40 10 00       	push   $0x1040c8
  100345:	e8 a6 2a 00 00       	call   102df0 <vga_writestr>
  10034a:	58                   	pop    %eax
    shell_init();
  10034b:	e8 30 0d 00 00       	call   101080 <shell_init>
  100350:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  100353:	c9                   	leave
    shell_run();
  100354:	e9 77 0d 00 00       	jmp    1010d0 <shell_run>
  100359:	66 90                	xchg   %ax,%ax
  10035b:	66 90                	xchg   %ax,%ax
  10035d:	66 90                	xchg   %ax,%ax
  10035f:	66 90                	xchg   %ax,%ax
  100361:	66 90                	xchg   %ax,%ax
  100363:	66 90                	xchg   %ax,%ax
  100365:	66 90                	xchg   %ax,%ax
  100367:	66 90                	xchg   %ax,%ax
  100369:	66 90                	xchg   %ax,%ax
  10036b:	66 90                	xchg   %ax,%ax
  10036d:	66 90                	xchg   %ax,%ax
  10036f:	66 90                	xchg   %ax,%ax
  100371:	66 90                	xchg   %ax,%ax
  100373:	66 90                	xchg   %ax,%ax
  100375:	66 90                	xchg   %ax,%ax
  100377:	66 90                	xchg   %ax,%ax
  100379:	66 90                	xchg   %ax,%ax
  10037b:	66 90                	xchg   %ax,%ax
  10037d:	66 90                	xchg   %ax,%ax
  10037f:	90                   	nop

00100380 <cmd_read_binary>:
    } else {
        vga_writestr("\nError writing binary file\n");
    }
}

static void cmd_read_binary(const char* filename) {
  100380:	55                   	push   %ebp
  100381:	89 e5                	mov    %esp,%ebp
  100383:	57                   	push   %edi
  100384:	56                   	push   %esi
    uint8_t buffer[4096];
    uint32_t size = sizeof(buffer);

    if (fat32_read_file(filename, buffer, &size)) {
  100385:	8d 95 f0 ef ff ff    	lea    -0x1010(%ebp),%edx
static void cmd_read_binary(const char* filename) {
  10038b:	53                   	push   %ebx
    if (fat32_read_file(filename, buffer, &size)) {
  10038c:	8d 9d f4 ef ff ff    	lea    -0x100c(%ebp),%ebx
static void cmd_read_binary(const char* filename) {
  100392:	81 ec 08 10 00 00    	sub    $0x1008,%esp
    uint32_t size = sizeof(buffer);
  100398:	c7 85 f0 ef ff ff 00 	movl   $0x1000,-0x1010(%ebp)
  10039f:	10 00 00 
    if (fat32_read_file(filename, buffer, &size)) {
  1003a2:	52                   	push   %edx
  1003a3:	53                   	push   %ebx
  1003a4:	50                   	push   %eax
  1003a5:	e8 06 20 00 00       	call   1023b0 <fat32_read_file>
  1003aa:	83 c4 0c             	add    $0xc,%esp
  1003ad:	85 c0                	test   %eax,%eax
  1003af:	74 77                	je     100428 <cmd_read_binary+0xa8>
        vga_writestr("\nContent (hex): ");
  1003b1:	68 16 41 10 00       	push   $0x104116
  1003b6:	e8 35 2a 00 00       	call   102df0 <vga_writestr>
        for (uint32_t i = 0; i < size; i++) {
  1003bb:	8b bd f0 ef ff ff    	mov    -0x1010(%ebp),%edi
  1003c1:	5e                   	pop    %esi
  1003c2:	85 ff                	test   %edi,%edi
  1003c4:	74 4c                	je     100412 <cmd_read_binary+0x92>
  1003c6:	31 ff                	xor    %edi,%edi
  1003c8:	8d b5 ec ef ff ff    	lea    -0x1014(%ebp),%esi
  1003ce:	66 90                	xchg   %ax,%ax
            char hex[3];
            hex[0] = "0123456789ABCDEF"[buffer[i] >> 4];
  1003d0:	0f b6 04 3b          	movzbl (%ebx,%edi,1),%eax
            hex[1] = "0123456789ABCDEF"[buffer[i] & 0xF];
            hex[2] = 0;
  1003d4:	c6 85 ee ef ff ff 00 	movb   $0x0,-0x1012(%ebp)
        for (uint32_t i = 0; i < size; i++) {
  1003db:	83 c7 01             	add    $0x1,%edi
            hex[0] = "0123456789ABCDEF"[buffer[i] >> 4];
  1003de:	89 c2                	mov    %eax,%edx
            hex[1] = "0123456789ABCDEF"[buffer[i] & 0xF];
  1003e0:	83 e0 0f             	and    $0xf,%eax
            hex[0] = "0123456789ABCDEF"[buffer[i] >> 4];
  1003e3:	c0 ea 04             	shr    $0x4,%dl
            hex[1] = "0123456789ABCDEF"[buffer[i] & 0xF];
  1003e6:	0f b6 80 43 41 10 00 	movzbl 0x104143(%eax),%eax
            hex[0] = "0123456789ABCDEF"[buffer[i] >> 4];
  1003ed:	0f b6 d2             	movzbl %dl,%edx
  1003f0:	0f b6 92 43 41 10 00 	movzbl 0x104143(%edx),%edx
            hex[1] = "0123456789ABCDEF"[buffer[i] & 0xF];
  1003f7:	88 85 ed ef ff ff    	mov    %al,-0x1013(%ebp)
            hex[0] = "0123456789ABCDEF"[buffer[i] >> 4];
  1003fd:	88 95 ec ef ff ff    	mov    %dl,-0x1014(%ebp)
            vga_writestr(hex);
  100403:	56                   	push   %esi
  100404:	e8 e7 29 00 00       	call   102df0 <vga_writestr>
        for (uint32_t i = 0; i < size; i++) {
  100409:	59                   	pop    %ecx
  10040a:	3b bd f0 ef ff ff    	cmp    -0x1010(%ebp),%edi
  100410:	72 be                	jb     1003d0 <cmd_read_binary+0x50>
        }
        vga_writestr("\n");
  100412:	68 0a 44 10 00       	push   $0x10440a
  100417:	e8 d4 29 00 00       	call   102df0 <vga_writestr>
  10041c:	5a                   	pop    %edx
    } else {
        vga_writestr("\nError reading binary file\n");
    }
}
  10041d:	8d 65 f4             	lea    -0xc(%ebp),%esp
  100420:	5b                   	pop    %ebx
  100421:	5e                   	pop    %esi
  100422:	5f                   	pop    %edi
  100423:	5d                   	pop    %ebp
  100424:	c3                   	ret
  100425:	8d 76 00             	lea    0x0(%esi),%esi
        vga_writestr("\nError reading binary file\n");
  100428:	68 27 41 10 00       	push   $0x104127
  10042d:	e8 be 29 00 00       	call   102df0 <vga_writestr>
  100432:	58                   	pop    %eax
}
  100433:	8d 65 f4             	lea    -0xc(%ebp),%esp
  100436:	5b                   	pop    %ebx
  100437:	5e                   	pop    %esi
  100438:	5f                   	pop    %edi
  100439:	5d                   	pop    %ebp
  10043a:	c3                   	ret
  10043b:	2e 8d 74 26 00       	lea    %cs:0x0(%esi,%eiz,1),%esi

00100440 <ls_callback>:
static void ls_callback(const char* name, uint32_t size, uint8_t attr) {
  100440:	55                   	push   %ebp
  100441:	89 e5                	mov    %esp,%ebp
  100443:	57                   	push   %edi
  100444:	56                   	push   %esi
    int len = 0;
  100445:	31 f6                	xor    %esi,%esi
static void ls_callback(const char* name, uint32_t size, uint8_t attr) {
  100447:	53                   	push   %ebx
  100448:	8d 5d e3             	lea    -0x1d(%ebp),%ebx
  10044b:	83 ec 1c             	sub    $0x1c,%esp
  10044e:	8b 7d 08             	mov    0x8(%ebp),%edi
  100451:	8b 45 10             	mov    0x10(%ebp),%eax
  100454:	8b 4d 0c             	mov    0xc(%ebp),%ecx
  100457:	89 45 dc             	mov    %eax,-0x24(%ebp)
        size_str[len++] = '0' + (temp % 10);
  10045a:	89 7d d8             	mov    %edi,-0x28(%ebp)
  10045d:	eb 21                	jmp    100480 <ls_callback+0x40>
  10045f:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  100466:	00 
  100467:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  10046e:	00 
  10046f:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  100476:	00 
  100477:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  10047e:	00 
  10047f:	90                   	nop
  100480:	b8 cd cc cc cc       	mov    $0xcccccccd,%eax
  100485:	89 75 e0             	mov    %esi,-0x20(%ebp)
  100488:	83 c6 01             	add    $0x1,%esi
  10048b:	f7 e1                	mul    %ecx
  10048d:	89 c8                	mov    %ecx,%eax
  10048f:	c1 ea 03             	shr    $0x3,%edx
  100492:	8d 3c 92             	lea    (%edx,%edx,4),%edi
  100495:	01 ff                	add    %edi,%edi
  100497:	29 f8                	sub    %edi,%eax
  100499:	83 c0 30             	add    $0x30,%eax
  10049c:	88 04 33             	mov    %al,(%ebx,%esi,1)
        temp /= 10;
  10049f:	89 c8                	mov    %ecx,%eax
  1004a1:	89 d1                	mov    %edx,%ecx
    } while (temp > 0);
  1004a3:	83 f8 09             	cmp    $0x9,%eax
  1004a6:	77 d8                	ja     100480 <ls_callback+0x40>
    size_str[len] = '\0';
  1004a8:	8b 7d d8             	mov    -0x28(%ebp),%edi
  1004ab:	c6 44 35 e4 00       	movb   $0x0,-0x1c(%ebp,%esi,1)
    vga_writestr(name);
  1004b0:	57                   	push   %edi
  1004b1:	e8 3a 29 00 00       	call   102df0 <vga_writestr>
    vga_writestr("    ");
  1004b6:	68 54 41 10 00       	push   $0x104154
  1004bb:	e8 30 29 00 00       	call   102df0 <vga_writestr>
    while (len > 0) {
  1004c0:	8b 5d e0             	mov    -0x20(%ebp),%ebx
  1004c3:	8d 45 e4             	lea    -0x1c(%ebp),%eax
  1004c6:	5e                   	pop    %esi
  1004c7:	5f                   	pop    %edi
  1004c8:	01 c3                	add    %eax,%ebx
  1004ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
        vga_putchar(size_str[--len]);
  1004d0:	0f be 03             	movsbl (%ebx),%eax
    while (len > 0) {
  1004d3:	8d 75 e4             	lea    -0x1c(%ebp),%esi
        vga_putchar(size_str[--len]);
  1004d6:	50                   	push   %eax
  1004d7:	e8 b4 27 00 00       	call   102c90 <vga_putchar>
    while (len > 0) {
  1004dc:	89 d8                	mov    %ebx,%eax
  1004de:	59                   	pop    %ecx
  1004df:	83 eb 01             	sub    $0x1,%ebx
  1004e2:	39 f0                	cmp    %esi,%eax
  1004e4:	75 ea                	jne    1004d0 <ls_callback+0x90>
    vga_writestr(" bytes");
  1004e6:	68 59 41 10 00       	push   $0x104159
  1004eb:	e8 00 29 00 00       	call   102df0 <vga_writestr>
    if (attr & ATTR_DIRECTORY) {
  1004f0:	5a                   	pop    %edx
  1004f1:	f6 45 dc 10          	testb  $0x10,-0x24(%ebp)
  1004f5:	75 19                	jne    100510 <ls_callback+0xd0>
    vga_putchar('\n');
  1004f7:	c7 45 08 0a 00 00 00 	movl   $0xa,0x8(%ebp)
}
  1004fe:	8d 65 f4             	lea    -0xc(%ebp),%esp
  100501:	5b                   	pop    %ebx
  100502:	5e                   	pop    %esi
  100503:	5f                   	pop    %edi
  100504:	5d                   	pop    %ebp
    vga_putchar('\n');
  100505:	e9 86 27 00 00       	jmp    102c90 <vga_putchar>
  10050a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
        vga_writestr(" <DIR>");
  100510:	68 60 41 10 00       	push   $0x104160
  100515:	e8 d6 28 00 00       	call   102df0 <vga_writestr>
  10051a:	58                   	pop    %eax
  10051b:	eb da                	jmp    1004f7 <ls_callback+0xb7>
  10051d:	8d 76 00             	lea    0x0(%esi),%esi

00100520 <cmd_write_binary>:
static void cmd_write_binary(const char* args) {
  100520:	55                   	push   %ebp
  100521:	89 c2                	mov    %eax,%edx
    char hexdata[256] = {0};
  100523:	b9 40 00 00 00       	mov    $0x40,%ecx
  100528:	31 c0                	xor    %eax,%eax
static void cmd_write_binary(const char* args) {
  10052a:	89 e5                	mov    %esp,%ebp
  10052c:	57                   	push   %edi
  10052d:	56                   	push   %esi
    char hexdata[256] = {0};
  10052e:	8d bd f4 fe ff ff    	lea    -0x10c(%ebp),%edi
static void cmd_write_binary(const char* args) {
  100534:	53                   	push   %ebx
  100535:	81 ec 98 01 00 00    	sub    $0x198,%esp
    char filename[12] = {0};
  10053b:	c7 85 68 fe ff ff 00 	movl   $0x0,-0x198(%ebp)
  100542:	00 00 00 
    char hexdata[256] = {0};
  100545:	f3 ab                	rep stos %eax,%es:(%edi)
    uint8_t binary[128] = {0};
  100547:	b9 20 00 00 00       	mov    $0x20,%ecx
  10054c:	8d bd 74 fe ff ff    	lea    -0x18c(%ebp),%edi
    char filename[12] = {0};
  100552:	c7 85 6c fe ff ff 00 	movl   $0x0,-0x194(%ebp)
  100559:	00 00 00 
    uint8_t binary[128] = {0};
  10055c:	f3 ab                	rep stos %eax,%es:(%edi)
    while (args[i] && args[i] != ' ') {
  10055e:	0f b6 02             	movzbl (%edx),%eax
    char filename[12] = {0};
  100561:	c7 85 70 fe ff ff 00 	movl   $0x0,-0x190(%ebp)
  100568:	00 00 00 
    while (args[i] && args[i] != ' ') {
  10056b:	a8 df                	test   $0xdf,%al
  10056d:	0f 84 68 01 00 00    	je     1006db <cmd_write_binary+0x1bb>
  100573:	8d bd 68 fe ff ff    	lea    -0x198(%ebp),%edi
  100579:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
        if (i < 11) filename[i] = args[i];
  100580:	83 f9 0a             	cmp    $0xa,%ecx
  100583:	7f 03                	jg     100588 <cmd_write_binary+0x68>
  100585:	88 04 0f             	mov    %al,(%edi,%ecx,1)
        i++;
  100588:	83 c1 01             	add    $0x1,%ecx
    while (args[i] && args[i] != ' ') {
  10058b:	0f b6 04 0a          	movzbl (%edx,%ecx,1),%eax
  10058f:	a8 df                	test   $0xdf,%al
  100591:	75 ed                	jne    100580 <cmd_write_binary+0x60>
    while (args[i] == ' ') i++;  // Skip spaces
  100593:	3c 20                	cmp    $0x20,%al
  100595:	0f 85 50 01 00 00    	jne    1006eb <cmd_write_binary+0x1cb>
  10059b:	2e 8d 74 26 00       	lea    %cs:0x0(%esi,%eiz,1),%esi
  1005a0:	83 c1 01             	add    $0x1,%ecx
  1005a3:	0f b6 1c 0a          	movzbl (%edx,%ecx,1),%ebx
  1005a7:	80 fb 20             	cmp    $0x20,%bl
  1005aa:	74 f4                	je     1005a0 <cmd_write_binary+0x80>
    while (args[i] && j < 255) {
  1005ac:	84 db                	test   %bl,%bl
  1005ae:	0f 84 37 01 00 00    	je     1006eb <cmd_write_binary+0x1cb>
    int j = 0;
  1005b4:	31 c0                	xor    %eax,%eax
  1005b6:	8d b5 f3 fe ff ff    	lea    -0x10d(%ebp),%esi
  1005bc:	01 ca                	add    %ecx,%edx
  1005be:	eb 07                	jmp    1005c7 <cmd_write_binary+0xa7>
    while (args[i] && j < 255) {
  1005c0:	3d ff 00 00 00       	cmp    $0xff,%eax
  1005c5:	74 0e                	je     1005d5 <cmd_write_binary+0xb5>
        hexdata[j++] = args[i++];
  1005c7:	83 c0 01             	add    $0x1,%eax
  1005ca:	88 1c 06             	mov    %bl,(%esi,%eax,1)
    while (args[i] && j < 255) {
  1005cd:	0f b6 1c 02          	movzbl (%edx,%eax,1),%ebx
  1005d1:	84 db                	test   %bl,%bl
  1005d3:	75 eb                	jne    1005c0 <cmd_write_binary+0xa0>
    hexdata[j] = 0;
  1005d5:	c6 84 05 f4 fe ff ff 	movb   $0x0,-0x10c(%ebp,%eax,1)
  1005dc:	00 
    size_t hex_len = strlen(hexdata);
  1005dd:	8d 85 f4 fe ff ff    	lea    -0x10c(%ebp),%eax
  1005e3:	50                   	push   %eax
  1005e4:	e8 17 2a 00 00       	call   103000 <strlen>
  1005e9:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%ebp)
    for (size_t idx = 0; idx < hex_len; idx += 2) {
  1005ef:	59                   	pop    %ecx
  1005f0:	85 c0                	test   %eax,%eax
  1005f2:	0f 84 9c 00 00 00    	je     100694 <cmd_write_binary+0x174>
  1005f8:	89 bd 5c fe ff ff    	mov    %edi,-0x1a4(%ebp)
  1005fe:	8d 95 74 fe ff ff    	lea    -0x18c(%ebp),%edx
  100604:	31 f6                	xor    %esi,%esi
  100606:	eb 43                	jmp    10064b <cmd_write_binary+0x12b>
  100608:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  10060f:	00 
            else if (c >= 'A' && c <= 'F') value |= c - 'A' + 10;
  100610:	8d 5a bf             	lea    -0x41(%edx),%ebx
  100613:	80 fb 05             	cmp    $0x5,%bl
  100616:	76 58                	jbe    100670 <cmd_write_binary+0x150>
            else if (c >= 'a' && c <= 'f') value |= c - 'a' + 10;
  100618:	8d 5a 9f             	lea    -0x61(%edx),%ebx
  10061b:	83 ea 57             	sub    $0x57,%edx
  10061e:	09 c2                	or     %eax,%edx
  100620:	80 fb 06             	cmp    $0x6,%bl
  100623:	0f 42 c2             	cmovb  %edx,%eax
        for (int k = 0; k < 2; k++) {
  100626:	8d 51 01             	lea    0x1(%ecx),%edx
  100629:	b9 01 00 00 00       	mov    $0x1,%ecx
  10062e:	83 fa 02             	cmp    $0x2,%edx
  100631:	75 2a                	jne    10065d <cmd_write_binary+0x13d>
        binary[binary_size++] = value;
  100633:	8b 95 64 fe ff ff    	mov    -0x19c(%ebp),%edx
    for (size_t idx = 0; idx < hex_len; idx += 2) {
  100639:	83 c6 02             	add    $0x2,%esi
        binary[binary_size++] = value;
  10063c:	88 02                	mov    %al,(%edx)
    for (size_t idx = 0; idx < hex_len; idx += 2) {
  10063e:	8b 85 60 fe ff ff    	mov    -0x1a0(%ebp),%eax
  100644:	83 c2 01             	add    $0x1,%edx
  100647:	39 c6                	cmp    %eax,%esi
  100649:	73 35                	jae    100680 <cmd_write_binary+0x160>
            char c = hexdata[idx + k];
  10064b:	89 95 64 fe ff ff    	mov    %edx,-0x19c(%ebp)
  100651:	8d bd f4 fe ff ff    	lea    -0x10c(%ebp),%edi
        for (int k = 0; k < 2; k++) {
  100657:	31 c9                	xor    %ecx,%ecx
        uint8_t value = 0;
  100659:	31 c0                	xor    %eax,%eax
            char c = hexdata[idx + k];
  10065b:	01 f7                	add    %esi,%edi
            if (c >= '0' && c <= '9') value |= c - '0';
  10065d:	0f b6 14 0f          	movzbl (%edi,%ecx,1),%edx
            value <<= 4;
  100661:	c1 e0 04             	shl    $0x4,%eax
            if (c >= '0' && c <= '9') value |= c - '0';
  100664:	8d 5a d0             	lea    -0x30(%edx),%ebx
  100667:	80 fb 09             	cmp    $0x9,%bl
  10066a:	77 a4                	ja     100610 <cmd_write_binary+0xf0>
  10066c:	09 d8                	or     %ebx,%eax
  10066e:	eb b6                	jmp    100626 <cmd_write_binary+0x106>
            else if (c >= 'A' && c <= 'F') value |= c - 'A' + 10;
  100670:	83 ea 37             	sub    $0x37,%edx
  100673:	09 d0                	or     %edx,%eax
  100675:	eb af                	jmp    100626 <cmd_write_binary+0x106>
  100677:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  10067e:	00 
  10067f:	90                   	nop
  100680:	83 e8 01             	sub    $0x1,%eax
  100683:	8b bd 5c fe ff ff    	mov    -0x1a4(%ebp),%edi
  100689:	d1 e8                	shr    $1,%eax
  10068b:	83 c0 01             	add    $0x1,%eax
  10068e:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%ebp)
    if (fat32_write_file(filename, binary, binary_size)) {
  100694:	8d 85 74 fe ff ff    	lea    -0x18c(%ebp),%eax
  10069a:	ff b5 60 fe ff ff    	push   -0x1a0(%ebp)
  1006a0:	50                   	push   %eax
  1006a1:	57                   	push   %edi
  1006a2:	e8 f9 1a 00 00       	call   1021a0 <fat32_write_file>
  1006a7:	83 c4 0c             	add    $0xc,%esp
  1006aa:	85 c0                	test   %eax,%eax
  1006ac:	74 1a                	je     1006c8 <cmd_write_binary+0x1a8>
        vga_writestr("\nBinary file written successfully\n");
  1006ae:	68 b4 45 10 00       	push   $0x1045b4
  1006b3:	e8 38 27 00 00       	call   102df0 <vga_writestr>
  1006b8:	5a                   	pop    %edx
}
  1006b9:	8d 65 f4             	lea    -0xc(%ebp),%esp
  1006bc:	5b                   	pop    %ebx
  1006bd:	5e                   	pop    %esi
  1006be:	5f                   	pop    %edi
  1006bf:	5d                   	pop    %ebp
  1006c0:	c3                   	ret
  1006c1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
        vga_writestr("\nError writing binary file\n");
  1006c8:	68 67 41 10 00       	push   $0x104167
  1006cd:	e8 1e 27 00 00       	call   102df0 <vga_writestr>
  1006d2:	58                   	pop    %eax
}
  1006d3:	8d 65 f4             	lea    -0xc(%ebp),%esp
  1006d6:	5b                   	pop    %ebx
  1006d7:	5e                   	pop    %esi
  1006d8:	5f                   	pop    %edi
  1006d9:	5d                   	pop    %ebp
  1006da:	c3                   	ret
    int i = 0;
  1006db:	31 c9                	xor    %ecx,%ecx
  1006dd:	8d bd 68 fe ff ff    	lea    -0x198(%ebp),%edi
    while (args[i] == ' ') i++;  // Skip spaces
  1006e3:	3c 20                	cmp    $0x20,%al
  1006e5:	0f 84 b5 fe ff ff    	je     1005a0 <cmd_write_binary+0x80>
    int j = 0;
  1006eb:	31 c0                	xor    %eax,%eax
  1006ed:	e9 e3 fe ff ff       	jmp    1005d5 <cmd_write_binary+0xb5>
  1006f2:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  1006f9:	00 
  1006fa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00100700 <print_prompt>:
static void print_prompt(void) {
  100700:	55                   	push   %ebp
  100701:	89 e5                	mov    %esp,%ebp
  100703:	53                   	push   %ebx
    vga_set_color(VGA_CYAN, VGA_BLACK);
  100704:	6a 00                	push   $0x0
  100706:	6a 03                	push   $0x3
  100708:	e8 e3 27 00 00       	call   102ef0 <vga_set_color>
    vga_writestr("user");
  10070d:	68 83 41 10 00       	push   $0x104183
  100712:	e8 d9 26 00 00       	call   102df0 <vga_writestr>
    vga_set_color(VGA_MAGENTA, VGA_BLACK);
  100717:	6a 00                	push   $0x0
  100719:	6a 05                	push   $0x5
  10071b:	e8 d0 27 00 00       	call   102ef0 <vga_set_color>
    vga_writestr("@");
  100720:	68 88 41 10 00       	push   $0x104188
  100725:	e8 c6 26 00 00       	call   102df0 <vga_writestr>
    const char* path = fat32_get_current_path();
  10072a:	e8 c1 0f 00 00       	call   1016f0 <fat32_get_current_path>
    vga_set_color(VGA_CYAN, VGA_BLACK);
  10072f:	6a 00                	push   $0x0
  100731:	6a 03                	push   $0x3
    const char* path = fat32_get_current_path();
  100733:	89 c3                	mov    %eax,%ebx
    vga_set_color(VGA_CYAN, VGA_BLACK);
  100735:	e8 b6 27 00 00       	call   102ef0 <vga_set_color>
    vga_writestr(path);
  10073a:	83 c4 20             	add    $0x20,%esp
  10073d:	53                   	push   %ebx
  10073e:	e8 ad 26 00 00       	call   102df0 <vga_writestr>
    vga_set_color(VGA_WHITE, VGA_BLACK);
  100743:	6a 00                	push   $0x0
  100745:	6a 0f                	push   $0xf
  100747:	e8 a4 27 00 00       	call   102ef0 <vga_set_color>
    vga_writestr("> ");
  10074c:	68 8a 41 10 00       	push   $0x10418a
  100751:	e8 9a 26 00 00       	call   102df0 <vga_writestr>
}
  100756:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  100759:	83 c4 10             	add    $0x10,%esp
  10075c:	c9                   	leave
  10075d:	c3                   	ret
  10075e:	66 90                	xchg   %ax,%ax

00100760 <cmd_cat>:
void cmd_cat(const char* filename) {
  100760:	55                   	push   %ebp
  100761:	89 e5                	mov    %esp,%ebp
  100763:	57                   	push   %edi
  100764:	56                   	push   %esi
  100765:	53                   	push   %ebx
  100766:	83 ec 28             	sub    $0x28,%esp
  100769:	8b 5d 08             	mov    0x8(%ebp),%ebx
    if (!filename || !*filename) {
  10076c:	85 db                	test   %ebx,%ebx
  10076e:	74 05                	je     100775 <cmd_cat+0x15>
  100770:	80 3b 00             	cmpb   $0x0,(%ebx)
  100773:	75 1b                	jne    100790 <cmd_cat+0x30>
        vga_writestr("Usage: cat <filename>\n");
  100775:	c7 45 08 8d 41 10 00 	movl   $0x10418d,0x8(%ebp)
}
  10077c:	8d 65 f4             	lea    -0xc(%ebp),%esp
  10077f:	5b                   	pop    %ebx
  100780:	5e                   	pop    %esi
  100781:	5f                   	pop    %edi
  100782:	5d                   	pop    %ebp
        vga_writestr("Usage: cat <filename>\n");
  100783:	e9 68 26 00 00       	jmp    102df0 <vga_writestr>
  100788:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  10078f:	00 
    memset(fat_name, ' ', 11);
  100790:	8d 75 d9             	lea    -0x27(%ebp),%esi
  100793:	6a 0b                	push   $0xb
  100795:	6a 20                	push   $0x20
  100797:	56                   	push   %esi
  100798:	e8 93 28 00 00       	call   103030 <memset>
    while (*dot && *dot != '.' && name_len < 8) {
  10079d:	0f b6 03             	movzbl (%ebx),%eax
  1007a0:	83 c4 0c             	add    $0xc,%esp
  1007a3:	84 c0                	test   %al,%al
  1007a5:	74 51                	je     1007f8 <cmd_cat+0x98>
  1007a7:	3c 2e                	cmp    $0x2e,%al
  1007a9:	0f 84 d1 00 00 00    	je     100880 <cmd_cat+0x120>
    size_t name_len = 0;
  1007af:	89 5d cc             	mov    %ebx,-0x34(%ebp)
  1007b2:	31 d2                	xor    %edx,%edx
  1007b4:	eb 0f                	jmp    1007c5 <cmd_cat+0x65>
  1007b6:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  1007bd:	00 
  1007be:	66 90                	xchg   %ax,%ax
    while (*dot && *dot != '.' && name_len < 8) {
  1007c0:	83 fa 08             	cmp    $0x8,%edx
  1007c3:	74 30                	je     1007f5 <cmd_cat+0x95>
        fat_name[name_len] = (*dot >= 'a' && *dot <= 'z') ? 
  1007c5:	8d 78 9f             	lea    -0x61(%eax),%edi
                            (*dot - 'a' + 'A') : *dot;
  1007c8:	8d 48 e0             	lea    -0x20(%eax),%ecx
  1007cb:	89 fb                	mov    %edi,%ebx
  1007cd:	80 fb 1a             	cmp    $0x1a,%bl
  1007d0:	0f 42 c1             	cmovb  %ecx,%eax
        dot++;
  1007d3:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)
        fat_name[name_len] = (*dot >= 'a' && *dot <= 'z') ? 
  1007d7:	88 04 16             	mov    %al,(%esi,%edx,1)
        dot++;
  1007da:	8b 45 cc             	mov    -0x34(%ebp),%eax
        name_len++;
  1007dd:	83 c2 01             	add    $0x1,%edx
    while (*dot && *dot != '.' && name_len < 8) {
  1007e0:	0f b6 00             	movzbl (%eax),%eax
  1007e3:	84 c0                	test   %al,%al
  1007e5:	0f 95 c1             	setne  %cl
  1007e8:	3c 2e                	cmp    $0x2e,%al
  1007ea:	89 cf                	mov    %ecx,%edi
  1007ec:	0f 95 c1             	setne  %cl
  1007ef:	89 fb                	mov    %edi,%ebx
  1007f1:	84 cb                	test   %cl,%bl
  1007f3:	75 cb                	jne    1007c0 <cmd_cat+0x60>
  1007f5:	8b 5d cc             	mov    -0x34(%ebp),%ebx
    if (*dot == '.' && dot[1]) {
  1007f8:	3c 2e                	cmp    $0x2e,%al
  1007fa:	0f 84 80 00 00 00    	je     100880 <cmd_cat+0x120>
    vga_writestr("Looking for file: '");
  100800:	68 a4 41 10 00       	push   $0x1041a4
  100805:	89 f7                	mov    %esi,%edi
  100807:	8d 5d e4             	lea    -0x1c(%ebp),%ebx
  10080a:	e8 e1 25 00 00       	call   102df0 <vga_writestr>
    for (int i = 0; i < 11; i++) {
  10080f:	58                   	pop    %eax
        char c[2] = {fat_name[i], '\0'};
  100810:	0f b6 07             	movzbl (%edi),%eax
  100813:	c6 45 e5 00          	movb   $0x0,-0x1b(%ebp)
    for (int i = 0; i < 11; i++) {
  100817:	83 c7 01             	add    $0x1,%edi
        char c[2] = {fat_name[i], '\0'};
  10081a:	88 45 e4             	mov    %al,-0x1c(%ebp)
        vga_writestr(c);
  10081d:	53                   	push   %ebx
  10081e:	e8 cd 25 00 00       	call   102df0 <vga_writestr>
    for (int i = 0; i < 11; i++) {
  100823:	58                   	pop    %eax
  100824:	39 fb                	cmp    %edi,%ebx
  100826:	75 e8                	jne    100810 <cmd_cat+0xb0>
    vga_writestr("'\n");
  100828:	68 b8 41 10 00       	push   $0x1041b8
  10082d:	e8 be 25 00 00       	call   102df0 <vga_writestr>
    if (!fat32_read_file(fat_name, buffer, &size)) {
  100832:	8d 45 d4             	lea    -0x2c(%ebp),%eax
    uint32_t size = sizeof(buffer) - 1;  // Leave room for null terminator
  100835:	c7 45 d4 ff 0f 00 00 	movl   $0xfff,-0x2c(%ebp)
    if (!fat32_read_file(fat_name, buffer, &size)) {
  10083c:	50                   	push   %eax
  10083d:	68 40 58 10 00       	push   $0x105840
  100842:	56                   	push   %esi
  100843:	e8 68 1b 00 00       	call   1023b0 <fat32_read_file>
  100848:	83 c4 10             	add    $0x10,%esp
  10084b:	89 c6                	mov    %eax,%esi
  10084d:	85 c0                	test   %eax,%eax
  10084f:	74 6f                	je     1008c0 <cmd_cat+0x160>
    buffer[size] = '\0';
  100851:	8b 45 d4             	mov    -0x2c(%ebp),%eax
  100854:	c6 80 40 58 10 00 00 	movb   $0x0,0x105840(%eax)
    vga_writestr(buffer);
  10085b:	68 40 58 10 00       	push   $0x105840
  100860:	e8 8b 25 00 00       	call   102df0 <vga_writestr>
    vga_writestr("\n");
  100865:	68 0a 44 10 00       	push   $0x10440a
  10086a:	e8 81 25 00 00       	call   102df0 <vga_writestr>
  10086f:	58                   	pop    %eax
  100870:	5a                   	pop    %edx
}
  100871:	8d 65 f4             	lea    -0xc(%ebp),%esp
  100874:	5b                   	pop    %ebx
  100875:	5e                   	pop    %esi
  100876:	5f                   	pop    %edi
  100877:	5d                   	pop    %ebp
  100878:	c3                   	ret
  100879:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    if (*dot == '.' && dot[1]) {
  100880:	0f b6 43 01          	movzbl 0x1(%ebx),%eax
  100884:	84 c0                	test   %al,%al
  100886:	0f 84 74 ff ff ff    	je     100800 <cmd_cat+0xa0>
        size_t ext_pos = 8;
  10088c:	ba 08 00 00 00       	mov    $0x8,%edx
  100891:	89 df                	mov    %ebx,%edi
            fat_name[ext_pos] = (*dot >= 'a' && *dot <= 'z') ? 
  100893:	8d 58 9f             	lea    -0x61(%eax),%ebx
                               (*dot - 'a' + 'A') : *dot;
  100896:	8d 48 e0             	lea    -0x20(%eax),%ecx
  100899:	80 fb 1a             	cmp    $0x1a,%bl
  10089c:	0f 42 c1             	cmovb  %ecx,%eax
            fat_name[ext_pos] = (*dot >= 'a' && *dot <= 'z') ? 
  10089f:	88 04 16             	mov    %al,(%esi,%edx,1)
            ext_pos++;
  1008a2:	83 c2 01             	add    $0x1,%edx
        while (*dot && ext_pos < 11) {
  1008a5:	0f b6 44 17 f9       	movzbl -0x7(%edi,%edx,1),%eax
  1008aa:	84 c0                	test   %al,%al
  1008ac:	0f 84 4e ff ff ff    	je     100800 <cmd_cat+0xa0>
  1008b2:	83 fa 0b             	cmp    $0xb,%edx
  1008b5:	75 dc                	jne    100893 <cmd_cat+0x133>
  1008b7:	e9 44 ff ff ff       	jmp    100800 <cmd_cat+0xa0>
  1008bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
        vga_writestr("Error: File not found or error reading file (size=");
  1008c0:	68 d8 45 10 00       	push   $0x1045d8
  1008c5:	e8 26 25 00 00       	call   102df0 <vga_writestr>
        uint32_t temp = size;
  1008ca:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
  1008cd:	5f                   	pop    %edi
  1008ce:	eb 30                	jmp    100900 <cmd_cat+0x1a0>
  1008d0:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  1008d7:	00 
  1008d8:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  1008df:	00 
  1008e0:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  1008e7:	00 
  1008e8:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  1008ef:	00 
  1008f0:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  1008f7:	00 
  1008f8:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  1008ff:	00 
            size_str[idx++] = '0' + (temp % 10);
  100900:	b8 cd cc cc cc       	mov    $0xcccccccd,%eax
  100905:	89 75 cc             	mov    %esi,-0x34(%ebp)
  100908:	83 c6 01             	add    $0x1,%esi
  10090b:	f7 e1                	mul    %ecx
  10090d:	89 c8                	mov    %ecx,%eax
  10090f:	c1 ea 03             	shr    $0x3,%edx
  100912:	8d 3c 92             	lea    (%edx,%edx,4),%edi
  100915:	01 ff                	add    %edi,%edi
  100917:	29 f8                	sub    %edi,%eax
  100919:	83 c0 30             	add    $0x30,%eax
  10091c:	88 44 35 e3          	mov    %al,-0x1d(%ebp,%esi,1)
            temp /= 10;
  100920:	89 c8                	mov    %ecx,%eax
  100922:	89 d1                	mov    %edx,%ecx
        } while (temp > 0);
  100924:	83 f8 09             	cmp    $0x9,%eax
  100927:	77 d7                	ja     100900 <cmd_cat+0x1a0>
        size_str[idx] = '\0';
  100929:	c6 44 35 e4 00       	movb   $0x0,-0x1c(%ebp,%esi,1)
        while (idx > 0) {
  10092e:	8b 75 cc             	mov    -0x34(%ebp),%esi
  100931:	8d 7d d2             	lea    -0x2e(%ebp),%edi
  100934:	01 de                	add    %ebx,%esi
  100936:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  10093d:	00 
  10093e:	66 90                	xchg   %ax,%ax
            char c[2] = {size_str[--idx], '\0'};
  100940:	0f b6 06             	movzbl (%esi),%eax
  100943:	c6 45 d3 00          	movb   $0x0,-0x2d(%ebp)
  100947:	88 45 d2             	mov    %al,-0x2e(%ebp)
            vga_writestr(c);
  10094a:	57                   	push   %edi
  10094b:	e8 a0 24 00 00       	call   102df0 <vga_writestr>
        while (idx > 0) {
  100950:	89 f0                	mov    %esi,%eax
  100952:	5a                   	pop    %edx
  100953:	83 ee 01             	sub    $0x1,%esi
  100956:	39 c3                	cmp    %eax,%ebx
  100958:	75 e6                	jne    100940 <cmd_cat+0x1e0>
        vga_writestr(")\n");
  10095a:	68 bb 41 10 00       	push   $0x1041bb
  10095f:	e8 8c 24 00 00       	call   102df0 <vga_writestr>
        return;
  100964:	59                   	pop    %ecx
}
  100965:	8d 65 f4             	lea    -0xc(%ebp),%esp
  100968:	5b                   	pop    %ebx
  100969:	5e                   	pop    %esi
  10096a:	5f                   	pop    %edi
  10096b:	5d                   	pop    %ebp
  10096c:	c3                   	ret
  10096d:	8d 76 00             	lea    0x0(%esi),%esi

00100970 <cmd_exec>:
void cmd_exec(const char* filename) {
  100970:	55                   	push   %ebp
  100971:	89 e5                	mov    %esp,%ebp
  100973:	57                   	push   %edi
  100974:	56                   	push   %esi
  100975:	53                   	push   %ebx
  100976:	83 ec 20             	sub    $0x20,%esp
  100979:	8b 7d 08             	mov    0x8(%ebp),%edi
    if (!filename || !*filename) {
  10097c:	85 ff                	test   %edi,%edi
  10097e:	74 05                	je     100985 <cmd_exec+0x15>
  100980:	80 3f 00             	cmpb   $0x0,(%edi)
  100983:	75 1b                	jne    1009a0 <cmd_exec+0x30>
        vga_writestr("Usage: exec <filename>\n");
  100985:	c7 45 08 be 41 10 00 	movl   $0x1041be,0x8(%ebp)
}
  10098c:	8d 65 f4             	lea    -0xc(%ebp),%esp
  10098f:	5b                   	pop    %ebx
  100990:	5e                   	pop    %esi
  100991:	5f                   	pop    %edi
  100992:	5d                   	pop    %ebp
        vga_writestr("Usage: exec <filename>\n");
  100993:	e9 58 24 00 00       	jmp    102df0 <vga_writestr>
  100998:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  10099f:	00 
    memset(fat_name, ' ', 11);  // Fill with spaces
  1009a0:	8d 45 e8             	lea    -0x18(%ebp),%eax
  1009a3:	6a 0b                	push   $0xb
    size_t name_len = 0;
  1009a5:	31 db                	xor    %ebx,%ebx
    memset(fat_name, ' ', 11);  // Fill with spaces
  1009a7:	6a 20                	push   $0x20
  1009a9:	50                   	push   %eax
  1009aa:	e8 81 26 00 00       	call   103030 <memset>
    while (dot[name_len] && dot[name_len] != '.') {
  1009af:	0f b6 0f             	movzbl (%edi),%ecx
    fat_name[11] = '\0';
  1009b2:	c6 45 f3 00          	movb   $0x0,-0xd(%ebp)
    while (dot[name_len] && dot[name_len] != '.') {
  1009b6:	83 c4 0c             	add    $0xc,%esp
  1009b9:	84 c9                	test   %cl,%cl
  1009bb:	74 65                	je     100a22 <cmd_exec+0xb2>
  1009bd:	80 f9 2e             	cmp    $0x2e,%cl
  1009c0:	74 60                	je     100a22 <cmd_exec+0xb2>
  1009c2:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  1009c9:	00 
  1009ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
        name_len++;
  1009d0:	83 c3 01             	add    $0x1,%ebx
    while (dot[name_len] && dot[name_len] != '.') {
  1009d3:	0f b6 0c 1f          	movzbl (%edi,%ebx,1),%ecx
  1009d7:	84 c9                	test   %cl,%cl
  1009d9:	74 05                	je     1009e0 <cmd_exec+0x70>
  1009db:	80 f9 2e             	cmp    $0x2e,%cl
  1009de:	75 f0                	jne    1009d0 <cmd_exec+0x60>
    size_t copy_len = name_len > 8 ? 8 : name_len;
  1009e0:	b8 08 00 00 00       	mov    $0x8,%eax
    for (size_t i = 0; i < copy_len; i++) {
  1009e5:	88 4d db             	mov    %cl,-0x25(%ebp)
    size_t copy_len = name_len > 8 ? 8 : name_len;
  1009e8:	39 c3                	cmp    %eax,%ebx
    for (size_t i = 0; i < copy_len; i++) {
  1009ea:	89 5d d4             	mov    %ebx,-0x2c(%ebp)
    size_t copy_len = name_len > 8 ? 8 : name_len;
  1009ed:	0f 46 c3             	cmovbe %ebx,%eax
    for (size_t i = 0; i < copy_len; i++) {
  1009f0:	31 d2                	xor    %edx,%edx
    size_t copy_len = name_len > 8 ? 8 : name_len;
  1009f2:	89 c6                	mov    %eax,%esi
    for (size_t i = 0; i < copy_len; i++) {
  1009f4:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  1009fb:	00 
  1009fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
        char c = filename[i];
  100a00:	0f b6 04 17          	movzbl (%edi,%edx,1),%eax
        if (c >= 'a' && c <= 'z') {
  100a04:	8d 58 9f             	lea    -0x61(%eax),%ebx
            c = c - 'a' + 'A';
  100a07:	8d 48 e0             	lea    -0x20(%eax),%ecx
  100a0a:	80 fb 1a             	cmp    $0x1a,%bl
  100a0d:	0f 42 c1             	cmovb  %ecx,%eax
        fat_name[i] = c;
  100a10:	88 44 15 e8          	mov    %al,-0x18(%ebp,%edx,1)
    for (size_t i = 0; i < copy_len; i++) {
  100a14:	83 c2 01             	add    $0x1,%edx
  100a17:	39 d6                	cmp    %edx,%esi
  100a19:	75 e5                	jne    100a00 <cmd_exec+0x90>
  100a1b:	0f b6 4d db          	movzbl -0x25(%ebp),%ecx
  100a1f:	8b 5d d4             	mov    -0x2c(%ebp),%ebx
    if (dot[name_len] == '.' && dot[name_len + 1]) {
  100a22:	80 f9 2e             	cmp    $0x2e,%cl
  100a25:	0f 84 95 00 00 00    	je     100ac0 <cmd_exec+0x150>
    vga_writestr("FAT name: [");
  100a2b:	68 d6 41 10 00       	push   $0x1041d6
  100a30:	8d 7d e8             	lea    -0x18(%ebp),%edi
  100a33:	8d 5d f3             	lea    -0xd(%ebp),%ebx
  100a36:	e8 b5 23 00 00       	call   102df0 <vga_writestr>
    for(int i = 0; i < 11; i++) {
  100a3b:	5e                   	pop    %esi
  100a3c:	8d 75 dc             	lea    -0x24(%ebp),%esi
  100a3f:	eb 1c                	jmp    100a5d <cmd_exec+0xed>
  100a41:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
            char c[2] = {fat_name[i], '\0'};
  100a48:	88 45 dc             	mov    %al,-0x24(%ebp)
    for(int i = 0; i < 11; i++) {
  100a4b:	83 c7 01             	add    $0x1,%edi
            char c[2] = {fat_name[i], '\0'};
  100a4e:	c6 45 dd 00          	movb   $0x0,-0x23(%ebp)
            vga_writestr(c);
  100a52:	56                   	push   %esi
  100a53:	e8 98 23 00 00       	call   102df0 <vga_writestr>
  100a58:	5a                   	pop    %edx
    for(int i = 0; i < 11; i++) {
  100a59:	39 fb                	cmp    %edi,%ebx
  100a5b:	74 19                	je     100a76 <cmd_exec+0x106>
        if(fat_name[i] == ' ') {
  100a5d:	0f b6 07             	movzbl (%edi),%eax
  100a60:	3c 20                	cmp    $0x20,%al
  100a62:	75 e4                	jne    100a48 <cmd_exec+0xd8>
            vga_writestr("_");  // Show spaces clearly
  100a64:	68 e2 41 10 00       	push   $0x1041e2
    for(int i = 0; i < 11; i++) {
  100a69:	83 c7 01             	add    $0x1,%edi
            vga_writestr("_");  // Show spaces clearly
  100a6c:	e8 7f 23 00 00       	call   102df0 <vga_writestr>
  100a71:	59                   	pop    %ecx
    for(int i = 0; i < 11; i++) {
  100a72:	39 fb                	cmp    %edi,%ebx
  100a74:	75 e7                	jne    100a5d <cmd_exec+0xed>
    vga_writestr("]\n");
  100a76:	68 e4 41 10 00       	push   $0x1041e4
  100a7b:	e8 70 23 00 00       	call   102df0 <vga_writestr>
    if (!load_program(fat_name, &prog_info)) {
  100a80:	8d 45 e8             	lea    -0x18(%ebp),%eax
  100a83:	56                   	push   %esi
  100a84:	50                   	push   %eax
  100a85:	e8 a6 1f 00 00       	call   102a30 <load_program>
  100a8a:	83 c4 0c             	add    $0xc,%esp
  100a8d:	85 c0                	test   %eax,%eax
  100a8f:	74 6f                	je     100b00 <cmd_exec+0x190>
    vga_writestr("Program loaded successfully. Executing...\n");
  100a91:	68 2c 46 10 00       	push   $0x10462c
  100a96:	e8 55 23 00 00       	call   102df0 <vga_writestr>
    jump_to_program(prog_info.entry_point, prog_info.stack_pointer);
  100a9b:	ff 75 e0             	push   -0x20(%ebp)
  100a9e:	ff 75 dc             	push   -0x24(%ebp)
  100aa1:	e8 1a 20 00 00       	call   102ac0 <jump_to_program>
    vga_writestr("Program execution completed\n");
  100aa6:	68 e7 41 10 00       	push   $0x1041e7
  100aab:	e8 40 23 00 00       	call   102df0 <vga_writestr>
  100ab0:	83 c4 10             	add    $0x10,%esp
}
  100ab3:	8d 65 f4             	lea    -0xc(%ebp),%esp
  100ab6:	5b                   	pop    %ebx
  100ab7:	5e                   	pop    %esi
  100ab8:	5f                   	pop    %edi
  100ab9:	5d                   	pop    %ebp
  100aba:	c3                   	ret
  100abb:	2e 8d 74 26 00       	lea    %cs:0x0(%esi,%eiz,1),%esi
    if (dot[name_len] == '.' && dot[name_len + 1]) {
  100ac0:	8d 4c 1f 01          	lea    0x1(%edi,%ebx,1),%ecx
  100ac4:	80 39 00             	cmpb   $0x0,(%ecx)
  100ac7:	0f 84 5e ff ff ff    	je     100a2b <cmd_exec+0xbb>
        for (size_t i = 0; i < 3 && ext[i]; i++) {
  100acd:	31 d2                	xor    %edx,%edx
            fat_name[8 + i] = c;
  100acf:	8d 7d f0             	lea    -0x10(%ebp),%edi
  100ad2:	89 ce                	mov    %ecx,%esi
        for (size_t i = 0; i < 3 && ext[i]; i++) {
  100ad4:	0f b6 04 16          	movzbl (%esi,%edx,1),%eax
  100ad8:	84 c0                	test   %al,%al
  100ada:	0f 84 4b ff ff ff    	je     100a2b <cmd_exec+0xbb>
            if (c >= 'a' && c <= 'z') {
  100ae0:	8d 48 9f             	lea    -0x61(%eax),%ecx
                c = c - 'a' + 'A';
  100ae3:	8d 58 e0             	lea    -0x20(%eax),%ebx
  100ae6:	80 f9 1a             	cmp    $0x1a,%cl
  100ae9:	0f 42 c3             	cmovb  %ebx,%eax
            fat_name[8 + i] = c;
  100aec:	88 04 17             	mov    %al,(%edi,%edx,1)
        for (size_t i = 0; i < 3 && ext[i]; i++) {
  100aef:	83 c2 01             	add    $0x1,%edx
  100af2:	83 fa 03             	cmp    $0x3,%edx
  100af5:	75 dd                	jne    100ad4 <cmd_exec+0x164>
  100af7:	e9 2f ff ff ff       	jmp    100a2b <cmd_exec+0xbb>
  100afc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
        vga_writestr("Error: Could not load program\n");
  100b00:	68 0c 46 10 00       	push   $0x10460c
  100b05:	e8 e6 22 00 00       	call   102df0 <vga_writestr>
        return;
  100b0a:	58                   	pop    %eax
}
  100b0b:	8d 65 f4             	lea    -0xc(%ebp),%esp
  100b0e:	5b                   	pop    %ebx
  100b0f:	5e                   	pop    %esi
  100b10:	5f                   	pop    %edi
  100b11:	5d                   	pop    %ebp
  100b12:	c3                   	ret
  100b13:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  100b1a:	00 
  100b1b:	2e 8d 74 26 00       	lea    %cs:0x0(%esi,%eiz,1),%esi

00100b20 <shell_process_command>:

void shell_process_command(void) {
  100b20:	55                   	push   %ebp
    cmd_buffer[cmd_index] = '\0';
  100b21:	8b 0d 40 68 10 00    	mov    0x106840,%ecx
void shell_process_command(void) {
  100b27:	89 e5                	mov    %esp,%ebp
  100b29:	53                   	push   %ebx
    cmd_buffer[cmd_index] = '\0';
  100b2a:	c6 81 60 68 10 00 00 	movb   $0x0,0x106860(%ecx)
    char* command = cmd_buffer;
    char* arg = NULL;

    // Split command and argument
    for (size_t i = 0; i < cmd_index; i++) {
  100b31:	85 c9                	test   %ecx,%ecx
  100b33:	74 33                	je     100b68 <shell_process_command+0x48>
  100b35:	31 c0                	xor    %eax,%eax
  100b37:	eb 0b                	jmp    100b44 <shell_process_command+0x24>
  100b39:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
  100b40:	39 c1                	cmp    %eax,%ecx
  100b42:	74 24                	je     100b68 <shell_process_command+0x48>
        if (cmd_buffer[i] == ' ') {
  100b44:	0f b6 90 60 68 10 00 	movzbl 0x106860(%eax),%edx
  100b4b:	89 c3                	mov    %eax,%ebx
            cmd_buffer[i] = '\0';
            arg = &cmd_buffer[i + 1];
  100b4d:	83 c0 01             	add    $0x1,%eax
        if (cmd_buffer[i] == ' ') {
  100b50:	80 fa 20             	cmp    $0x20,%dl
  100b53:	75 eb                	jne    100b40 <shell_process_command+0x20>
            cmd_buffer[i] = '\0';
  100b55:	c6 83 60 68 10 00 00 	movb   $0x0,0x106860(%ebx)
            arg = &cmd_buffer[i + 1];
  100b5c:	8d 98 60 68 10 00    	lea    0x106860(%eax),%ebx
            break;
  100b62:	eb 06                	jmp    100b6a <shell_process_command+0x4a>
  100b64:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    char* arg = NULL;
  100b68:	31 db                	xor    %ebx,%ebx
        }
    }

    // Process commands
    if (strcmp(command, "help") == 0) {
  100b6a:	68 04 42 10 00       	push   $0x104204
  100b6f:	68 60 68 10 00       	push   $0x106860
  100b74:	e8 97 25 00 00       	call   103110 <strcmp>
  100b79:	5a                   	pop    %edx
  100b7a:	59                   	pop    %ecx
  100b7b:	85 c0                	test   %eax,%eax
  100b7d:	0f 85 ad 00 00 00    	jne    100c30 <shell_process_command+0x110>
    vga_writestr("\nAvailable commands:");
  100b83:	68 09 42 10 00       	push   $0x104209
  100b88:	e8 63 22 00 00       	call   102df0 <vga_writestr>
    vga_writestr("\n  help   - Show this help message");
  100b8d:	68 58 46 10 00       	push   $0x104658
  100b92:	e8 59 22 00 00       	call   102df0 <vga_writestr>
    vga_writestr("\n  clear  - Clear the screen");
  100b97:	68 1e 42 10 00       	push   $0x10421e
  100b9c:	e8 4f 22 00 00       	call   102df0 <vga_writestr>
    vga_writestr("\n  about  - Show system information");
  100ba1:	68 7c 46 10 00       	push   $0x10467c
  100ba6:	e8 45 22 00 00       	call   102df0 <vga_writestr>
    vga_writestr("\n  ls     - List files in directory");
  100bab:	68 a0 46 10 00       	push   $0x1046a0
  100bb0:	e8 3b 22 00 00       	call   102df0 <vga_writestr>
    vga_writestr("\n  create - Create a new file");
  100bb5:	68 3b 42 10 00       	push   $0x10423b
  100bba:	e8 31 22 00 00       	call   102df0 <vga_writestr>
    vga_writestr("\n  delete - Delete a file");
  100bbf:	68 59 42 10 00       	push   $0x104259
  100bc4:	e8 27 22 00 00       	call   102df0 <vga_writestr>
    vga_writestr("\n  mkdir  - Create a new directory");
  100bc9:	68 c4 46 10 00       	push   $0x1046c4
  100bce:	e8 1d 22 00 00       	call   102df0 <vga_writestr>
    vga_writestr("\n  writeb - Write binary file (hex format)");
  100bd3:	83 c4 20             	add    $0x20,%esp
  100bd6:	68 e8 46 10 00       	push   $0x1046e8
  100bdb:	e8 10 22 00 00       	call   102df0 <vga_writestr>
    vga_writestr("\n  readb  - Read binary file (hex format)");
  100be0:	68 14 47 10 00       	push   $0x104714
  100be5:	e8 06 22 00 00       	call   102df0 <vga_writestr>
    vga_writestr("\n  cd     - Change directory");
  100bea:	68 73 42 10 00       	push   $0x104273
  100bef:	e8 fc 21 00 00       	call   102df0 <vga_writestr>
    vga_writestr("\n  cat    - Read file content");
  100bf4:	68 90 42 10 00       	push   $0x104290
  100bf9:	e8 f2 21 00 00       	call   102df0 <vga_writestr>
    vga_writestr("\n  exec   - Execute a binary");
  100bfe:	68 ae 42 10 00       	push   $0x1042ae
  100c03:	e8 e8 21 00 00       	call   102df0 <vga_writestr>
    vga_writestr("\n");
  100c08:	68 0a 44 10 00       	push   $0x10440a
  100c0d:	e8 de 21 00 00       	call   102df0 <vga_writestr>
    print_prompt();
  100c12:	e8 e9 fa ff ff       	call   100700 <print_prompt>
}
  100c17:	83 c4 18             	add    $0x18,%esp
    }
    else {
        print_prompt();
    }

    cmd_index = 0;
  100c1a:	c7 05 40 68 10 00 00 	movl   $0x0,0x106840
  100c21:	00 00 00 
}
  100c24:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  100c27:	c9                   	leave
  100c28:	c3                   	ret
  100c29:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    else if (strcmp(command, "clear") == 0) {
  100c30:	68 cb 42 10 00       	push   $0x1042cb
  100c35:	68 60 68 10 00       	push   $0x106860
  100c3a:	e8 d1 24 00 00       	call   103110 <strcmp>
  100c3f:	5a                   	pop    %edx
  100c40:	59                   	pop    %ecx
  100c41:	85 c0                	test   %eax,%eax
  100c43:	75 1b                	jne    100c60 <shell_process_command+0x140>
    vga_clear();
  100c45:	e8 e6 21 00 00       	call   102e30 <vga_clear>
    print_prompt();
  100c4a:	e8 b1 fa ff ff       	call   100700 <print_prompt>
}
  100c4f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    cmd_index = 0;
  100c52:	c7 05 40 68 10 00 00 	movl   $0x0,0x106840
  100c59:	00 00 00 
}
  100c5c:	c9                   	leave
  100c5d:	c3                   	ret
  100c5e:	66 90                	xchg   %ax,%ax
    else if (strcmp(command, "about") == 0) {
  100c60:	68 d1 42 10 00       	push   $0x1042d1
  100c65:	68 60 68 10 00       	push   $0x106860
  100c6a:	e8 a1 24 00 00       	call   103110 <strcmp>
  100c6f:	5a                   	pop    %edx
  100c70:	59                   	pop    %ecx
  100c71:	85 c0                	test   %eax,%eax
  100c73:	74 43                	je     100cb8 <shell_process_command+0x198>
    else if (strcmp(command, "ls") == 0) {
  100c75:	68 e4 42 10 00       	push   $0x1042e4
  100c7a:	68 60 68 10 00       	push   $0x106860
  100c7f:	e8 8c 24 00 00       	call   103110 <strcmp>
  100c84:	5a                   	pop    %edx
  100c85:	59                   	pop    %ecx
  100c86:	85 c0                	test   %eax,%eax
  100c88:	75 53                	jne    100cdd <shell_process_command+0x1bd>
    vga_writestr("\nReading directory...\n");
  100c8a:	68 e7 42 10 00       	push   $0x1042e7
  100c8f:	e8 5c 21 00 00       	call   102df0 <vga_writestr>
    if (!fat32_list_directory(ls_callback)) {
  100c94:	68 40 04 10 00       	push   $0x100440
  100c99:	e8 82 0e 00 00       	call   101b20 <fat32_list_directory>
  100c9e:	5a                   	pop    %edx
  100c9f:	59                   	pop    %ecx
  100ca0:	85 c0                	test   %eax,%eax
  100ca2:	0f 84 c7 00 00 00    	je     100d6f <shell_process_command+0x24f>
        print_prompt();
  100ca8:	e8 53 fa ff ff       	call   100700 <print_prompt>
  100cad:	e9 68 ff ff ff       	jmp    100c1a <shell_process_command+0xfa>
  100cb2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    vga_writestr("\nRingOS v0.1");
  100cb8:	68 d7 42 10 00       	push   $0x1042d7
  100cbd:	e8 2e 21 00 00       	call   102df0 <vga_writestr>
    vga_writestr("\nA minimal operating system with FAT32 support");
  100cc2:	68 40 47 10 00       	push   $0x104740
  100cc7:	e8 24 21 00 00       	call   102df0 <vga_writestr>
}
  100ccc:	5b                   	pop    %ebx
}
  100ccd:	8b 5d fc             	mov    -0x4(%ebp),%ebx
}
  100cd0:	58                   	pop    %eax
    cmd_index = 0;
  100cd1:	c7 05 40 68 10 00 00 	movl   $0x0,0x106840
  100cd8:	00 00 00 
}
  100cdb:	c9                   	leave
  100cdc:	c3                   	ret
    else if (strcmp(command, "create") == 0) {
  100cdd:	68 fe 42 10 00       	push   $0x1042fe
  100ce2:	68 60 68 10 00       	push   $0x106860
  100ce7:	e8 24 24 00 00       	call   103110 <strcmp>
  100cec:	5a                   	pop    %edx
  100ced:	59                   	pop    %ecx
  100cee:	85 c0                	test   %eax,%eax
  100cf0:	74 4f                	je     100d41 <shell_process_command+0x221>
    else if (strcmp(command, "delete") == 0) {
  100cf2:	68 3c 43 10 00       	push   $0x10433c
  100cf7:	68 60 68 10 00       	push   $0x106860
  100cfc:	e8 0f 24 00 00       	call   103110 <strcmp>
  100d01:	5a                   	pop    %edx
  100d02:	59                   	pop    %ecx
  100d03:	85 c0                	test   %eax,%eax
  100d05:	0f 85 94 00 00 00    	jne    100d9f <shell_process_command+0x27f>
    if (!filename || strlen(filename) == 0) {
  100d0b:	85 db                	test   %ebx,%ebx
  100d0d:	0f 84 d3 00 00 00    	je     100de6 <shell_process_command+0x2c6>
  100d13:	53                   	push   %ebx
  100d14:	e8 e7 22 00 00       	call   103000 <strlen>
  100d19:	59                   	pop    %ecx
  100d1a:	85 c0                	test   %eax,%eax
  100d1c:	0f 84 c4 00 00 00    	je     100de6 <shell_process_command+0x2c6>
    if (!fat32_delete_file(filename)) {
  100d22:	53                   	push   %ebx
  100d23:	e8 98 10 00 00       	call   101dc0 <fat32_delete_file>
  100d28:	5a                   	pop    %edx
  100d29:	85 c0                	test   %eax,%eax
  100d2b:	0f 85 29 01 00 00    	jne    100e5a <shell_process_command+0x33a>
        vga_writestr("\nError deleting file. Please try again.\n");
  100d31:	68 e8 47 10 00       	push   $0x1047e8
  100d36:	e8 b5 20 00 00       	call   102df0 <vga_writestr>
  100d3b:	58                   	pop    %eax
  100d3c:	e9 67 ff ff ff       	jmp    100ca8 <shell_process_command+0x188>
    if (!filename || strlen(filename) == 0) {
  100d41:	85 db                	test   %ebx,%ebx
  100d43:	74 3a                	je     100d7f <shell_process_command+0x25f>
  100d45:	53                   	push   %ebx
  100d46:	e8 b5 22 00 00       	call   103000 <strlen>
  100d4b:	59                   	pop    %ecx
  100d4c:	85 c0                	test   %eax,%eax
  100d4e:	74 2f                	je     100d7f <shell_process_command+0x25f>
    if (!fat32_create_file(filename)) {
  100d50:	53                   	push   %ebx
  100d51:	e8 1a 0f 00 00       	call   101c70 <fat32_create_file>
  100d56:	5a                   	pop    %edx
  100d57:	85 c0                	test   %eax,%eax
  100d59:	0f 85 d0 00 00 00    	jne    100e2f <shell_process_command+0x30f>
        vga_writestr("\nError creating file. Please try again.\n");
  100d5f:	68 bc 47 10 00       	push   $0x1047bc
  100d64:	e8 87 20 00 00       	call   102df0 <vga_writestr>
  100d69:	58                   	pop    %eax
  100d6a:	e9 39 ff ff ff       	jmp    100ca8 <shell_process_command+0x188>
        vga_writestr("Error reading directory. Please try again.\n");
  100d6f:	68 70 47 10 00       	push   $0x104770
  100d74:	e8 77 20 00 00       	call   102df0 <vga_writestr>
  100d79:	5b                   	pop    %ebx
    print_prompt();
  100d7a:	e9 29 ff ff ff       	jmp    100ca8 <shell_process_command+0x188>
        vga_writestr("\nError: No filename specified\n");
  100d7f:	68 9c 47 10 00       	push   $0x10479c
  100d84:	e8 67 20 00 00       	call   102df0 <vga_writestr>
        vga_writestr("Usage: create <filename>\n");
  100d89:	68 05 43 10 00       	push   $0x104305
  100d8e:	e8 5d 20 00 00       	call   102df0 <vga_writestr>
        print_prompt();
  100d93:	e8 68 f9 ff ff       	call   100700 <print_prompt>
        return;
  100d98:	5b                   	pop    %ebx
  100d99:	58                   	pop    %eax
  100d9a:	e9 7b fe ff ff       	jmp    100c1a <shell_process_command+0xfa>
    else if (strcmp(command, "mkdir") == 0) {
  100d9f:	68 7a 43 10 00       	push   $0x10437a
  100da4:	68 60 68 10 00       	push   $0x106860
  100da9:	e8 62 23 00 00       	call   103110 <strcmp>
  100dae:	5a                   	pop    %edx
  100daf:	59                   	pop    %ecx
  100db0:	85 c0                	test   %eax,%eax
  100db2:	75 52                	jne    100e06 <shell_process_command+0x2e6>
    if (!dirname || strlen(dirname) == 0) {
  100db4:	85 db                	test   %ebx,%ebx
  100db6:	0f 84 83 00 00 00    	je     100e3f <shell_process_command+0x31f>
  100dbc:	53                   	push   %ebx
  100dbd:	e8 3e 22 00 00       	call   103000 <strlen>
  100dc2:	59                   	pop    %ecx
  100dc3:	85 c0                	test   %eax,%eax
  100dc5:	74 78                	je     100e3f <shell_process_command+0x31f>
    if (fat32_create_directory(dirname)) {
  100dc7:	53                   	push   %ebx
  100dc8:	e8 33 11 00 00       	call   101f00 <fat32_create_directory>
  100dcd:	5a                   	pop    %edx
  100dce:	85 c0                	test   %eax,%eax
  100dd0:	0f 84 0b 01 00 00    	je     100ee1 <shell_process_command+0x3c1>
        vga_writestr("\nDirectory created successfully\n");
  100dd6:	68 3c 48 10 00       	push   $0x10483c
  100ddb:	e8 10 20 00 00       	call   102df0 <vga_writestr>
  100de0:	58                   	pop    %eax
  100de1:	e9 34 fe ff ff       	jmp    100c1a <shell_process_command+0xfa>
        vga_writestr("\nError: No filename specified\n");
  100de6:	68 9c 47 10 00       	push   $0x10479c
  100deb:	e8 00 20 00 00       	call   102df0 <vga_writestr>
        vga_writestr("Usage: delete <filename>\n");
  100df0:	68 43 43 10 00       	push   $0x104343
  100df5:	e8 f6 1f 00 00       	call   102df0 <vga_writestr>
        print_prompt();
  100dfa:	e8 01 f9 ff ff       	call   100700 <print_prompt>
        return;
  100dff:	5b                   	pop    %ebx
  100e00:	58                   	pop    %eax
  100e01:	e9 14 fe ff ff       	jmp    100c1a <shell_process_command+0xfa>
    else if (strcmp(command, "writeb") == 0 && arg) {
  100e06:	68 b3 43 10 00       	push   $0x1043b3
  100e0b:	68 60 68 10 00       	push   $0x106860
  100e10:	e8 fb 22 00 00       	call   103110 <strcmp>
  100e15:	5a                   	pop    %edx
  100e16:	59                   	pop    %ecx
  100e17:	85 c0                	test   %eax,%eax
  100e19:	0f 85 99 00 00 00    	jne    100eb8 <shell_process_command+0x398>
  100e1f:	85 db                	test   %ebx,%ebx
  100e21:	74 47                	je     100e6a <shell_process_command+0x34a>
        cmd_write_binary(arg);
  100e23:	89 d8                	mov    %ebx,%eax
  100e25:	e8 f6 f6 ff ff       	call   100520 <cmd_write_binary>
  100e2a:	e9 eb fd ff ff       	jmp    100c1a <shell_process_command+0xfa>
        vga_writestr("\nFile created successfully.\n");
  100e2f:	68 1f 43 10 00       	push   $0x10431f
  100e34:	e8 b7 1f 00 00       	call   102df0 <vga_writestr>
  100e39:	5b                   	pop    %ebx
  100e3a:	e9 69 fe ff ff       	jmp    100ca8 <shell_process_command+0x188>
        vga_writestr("\nError: No directory name specified\n");
  100e3f:	68 14 48 10 00       	push   $0x104814
  100e44:	e8 a7 1f 00 00       	call   102df0 <vga_writestr>
        vga_writestr("Usage: mkdir <dirname>\n");
  100e49:	68 80 43 10 00       	push   $0x104380
  100e4e:	e8 9d 1f 00 00       	call   102df0 <vga_writestr>
        return;
  100e53:	5b                   	pop    %ebx
  100e54:	58                   	pop    %eax
  100e55:	e9 c0 fd ff ff       	jmp    100c1a <shell_process_command+0xfa>
        vga_writestr("\nFile deleted successfully.\n");
  100e5a:	68 5d 43 10 00       	push   $0x10435d
  100e5f:	e8 8c 1f 00 00       	call   102df0 <vga_writestr>
  100e64:	5b                   	pop    %ebx
  100e65:	e9 3e fe ff ff       	jmp    100ca8 <shell_process_command+0x188>
    else if (strcmp(command, "readb") == 0 && arg) {
  100e6a:	68 ba 43 10 00       	push   $0x1043ba
  100e6f:	68 60 68 10 00       	push   $0x106860
  100e74:	e8 97 22 00 00       	call   103110 <strcmp>
    else if (strcmp(command, "cd") == 0) {
  100e79:	68 c0 43 10 00       	push   $0x1043c0
  100e7e:	68 60 68 10 00       	push   $0x106860
  100e83:	e8 88 22 00 00       	call   103110 <strcmp>
  100e88:	83 c4 10             	add    $0x10,%esp
  100e8b:	85 c0                	test   %eax,%eax
  100e8d:	0f 84 ed 00 00 00    	je     100f80 <shell_process_command+0x460>
    else if (strcmp(command, "cat") == 0) {
  100e93:	68 d8 43 10 00       	push   $0x1043d8
  100e98:	68 60 68 10 00       	push   $0x106860
  100e9d:	e8 6e 22 00 00       	call   103110 <strcmp>
  100ea2:	5a                   	pop    %edx
  100ea3:	59                   	pop    %ecx
  100ea4:	85 c0                	test   %eax,%eax
  100ea6:	0f 85 9a 00 00 00    	jne    100f46 <shell_process_command+0x426>
        cmd_cat(arg);
  100eac:	53                   	push   %ebx
  100ead:	e8 ae f8 ff ff       	call   100760 <cmd_cat>
  100eb2:	5b                   	pop    %ebx
  100eb3:	e9 62 fd ff ff       	jmp    100c1a <shell_process_command+0xfa>
    else if (strcmp(command, "readb") == 0 && arg) {
  100eb8:	68 ba 43 10 00       	push   $0x1043ba
  100ebd:	68 60 68 10 00       	push   $0x106860
  100ec2:	e8 49 22 00 00       	call   103110 <strcmp>
  100ec7:	5a                   	pop    %edx
  100ec8:	59                   	pop    %ecx
  100ec9:	85 c0                	test   %eax,%eax
  100ecb:	75 24                	jne    100ef1 <shell_process_command+0x3d1>
  100ecd:	85 db                	test   %ebx,%ebx
  100ecf:	0f 84 92 00 00 00    	je     100f67 <shell_process_command+0x447>
        cmd_read_binary(arg);
  100ed5:	89 d8                	mov    %ebx,%eax
  100ed7:	e8 a4 f4 ff ff       	call   100380 <cmd_read_binary>
  100edc:	e9 39 fd ff ff       	jmp    100c1a <shell_process_command+0xfa>
        vga_writestr("\nError creating directory\n");
  100ee1:	68 98 43 10 00       	push   $0x104398
  100ee6:	e8 05 1f 00 00       	call   102df0 <vga_writestr>
  100eeb:	5b                   	pop    %ebx
  100eec:	e9 29 fd ff ff       	jmp    100c1a <shell_process_command+0xfa>
    else if (strcmp(command, "cd") == 0) {
  100ef1:	68 c0 43 10 00       	push   $0x1043c0
  100ef6:	68 60 68 10 00       	push   $0x106860
  100efb:	e8 10 22 00 00       	call   103110 <strcmp>
  100f00:	5a                   	pop    %edx
  100f01:	59                   	pop    %ecx
  100f02:	85 c0                	test   %eax,%eax
  100f04:	75 8d                	jne    100e93 <shell_process_command+0x373>
    if (!dirname || strlen(dirname) == 0) {
  100f06:	85 db                	test   %ebx,%ebx
  100f08:	74 76                	je     100f80 <shell_process_command+0x460>
  100f0a:	53                   	push   %ebx
  100f0b:	e8 f0 20 00 00       	call   103000 <strlen>
  100f10:	59                   	pop    %ecx
  100f11:	85 c0                	test   %eax,%eax
  100f13:	74 6b                	je     100f80 <shell_process_command+0x460>
    if (fat32_change_directory(dirname)) {
  100f15:	53                   	push   %ebx
  100f16:	e8 45 08 00 00       	call   101760 <fat32_change_directory>
  100f1b:	5a                   	pop    %edx
  100f1c:	85 c0                	test   %eax,%eax
  100f1e:	0f 85 f6 fc ff ff    	jne    100c1a <shell_process_command+0xfa>
        vga_writestr("\nError: Cannot change to directory '");
  100f24:	68 60 48 10 00       	push   $0x104860
  100f29:	e8 c2 1e 00 00       	call   102df0 <vga_writestr>
        vga_writestr(dirname);
  100f2e:	53                   	push   %ebx
  100f2f:	e8 bc 1e 00 00       	call   102df0 <vga_writestr>
        vga_writestr("'\n");
  100f34:	68 b8 41 10 00       	push   $0x1041b8
  100f39:	e8 b2 1e 00 00       	call   102df0 <vga_writestr>
  100f3e:	83 c4 0c             	add    $0xc,%esp
  100f41:	e9 d4 fc ff ff       	jmp    100c1a <shell_process_command+0xfa>
    else if (strcmp(command, "exec") == 0) {
  100f46:	68 dc 43 10 00       	push   $0x1043dc
  100f4b:	68 60 68 10 00       	push   $0x106860
  100f50:	e8 bb 21 00 00       	call   103110 <strcmp>
  100f55:	5a                   	pop    %edx
  100f56:	59                   	pop    %ecx
  100f57:	85 c0                	test   %eax,%eax
  100f59:	75 4c                	jne    100fa7 <shell_process_command+0x487>
        cmd_exec(arg);
  100f5b:	53                   	push   %ebx
  100f5c:	e8 0f fa ff ff       	call   100970 <cmd_exec>
  100f61:	5b                   	pop    %ebx
  100f62:	e9 b3 fc ff ff       	jmp    100c1a <shell_process_command+0xfa>
    else if (strcmp(command, "cd") == 0) {
  100f67:	68 c0 43 10 00       	push   $0x1043c0
  100f6c:	68 60 68 10 00       	push   $0x106860
  100f71:	e8 9a 21 00 00       	call   103110 <strcmp>
  100f76:	5a                   	pop    %edx
  100f77:	59                   	pop    %ecx
  100f78:	85 c0                	test   %eax,%eax
  100f7a:	0f 85 13 ff ff ff    	jne    100e93 <shell_process_command+0x373>
        vga_writestr("\nCurrent directory: ");
  100f80:	68 c3 43 10 00       	push   $0x1043c3
  100f85:	e8 66 1e 00 00       	call   102df0 <vga_writestr>
        vga_writestr(fat32_get_current_path());
  100f8a:	e8 61 07 00 00       	call   1016f0 <fat32_get_current_path>
  100f8f:	50                   	push   %eax
  100f90:	e8 5b 1e 00 00       	call   102df0 <vga_writestr>
        vga_writestr("\n");
  100f95:	68 0a 44 10 00       	push   $0x10440a
  100f9a:	e8 51 1e 00 00       	call   102df0 <vga_writestr>
        return;
  100f9f:	83 c4 0c             	add    $0xc,%esp
  100fa2:	e9 73 fc ff ff       	jmp    100c1a <shell_process_command+0xfa>
    else if (strcmp(command, "int") == 0) {
  100fa7:	68 e1 43 10 00       	push   $0x1043e1
  100fac:	68 60 68 10 00       	push   $0x106860
  100fb1:	e8 5a 21 00 00       	call   103110 <strcmp>
  100fb6:	5a                   	pop    %edx
  100fb7:	59                   	pop    %ecx
  100fb8:	85 c0                	test   %eax,%eax
  100fba:	74 38                	je     100ff4 <shell_process_command+0x4d4>
    else if (cmd_index > 0) {
  100fbc:	83 3d 40 68 10 00 00 	cmpl   $0x0,0x106840
  100fc3:	0f 84 df fc ff ff    	je     100ca8 <shell_process_command+0x188>
        vga_writestr("\nUnknown command: ");
  100fc9:	68 e5 43 10 00       	push   $0x1043e5
  100fce:	e8 1d 1e 00 00       	call   102df0 <vga_writestr>
        vga_writestr(command);
  100fd3:	68 60 68 10 00       	push   $0x106860
  100fd8:	e8 13 1e 00 00       	call   102df0 <vga_writestr>
        vga_writestr("\nType 'help' for available commands.\n");
  100fdd:	68 88 48 10 00       	push   $0x104888
  100fe2:	e8 09 1e 00 00       	call   102df0 <vga_writestr>
        print_prompt();
  100fe7:	e8 14 f7 ff ff       	call   100700 <print_prompt>
  100fec:	83 c4 0c             	add    $0xc,%esp
  100fef:	e9 26 fc ff ff       	jmp    100c1a <shell_process_command+0xfa>
        asm volatile("int $0x80");
  100ff4:	cd 80                	int    $0x80
  100ff6:	e9 ad fc ff ff       	jmp    100ca8 <shell_process_command+0x188>
  100ffb:	2e 8d 74 26 00       	lea    %cs:0x0(%esi,%eiz,1),%esi

00101000 <shell_handle_keypress>:

void shell_handle_keypress(char c) {
  101000:	55                   	push   %ebp
  101001:	89 e5                	mov    %esp,%ebp
  101003:	8b 45 08             	mov    0x8(%ebp),%eax
    if (c == '\n') {
  101006:	3c 0a                	cmp    $0xa,%al
  101008:	74 36                	je     101040 <shell_handle_keypress+0x40>
        vga_putchar('\n');
        shell_process_command();
    }
    else if (c == '\b' && cmd_index > 0) {
  10100a:	3c 08                	cmp    $0x8,%al
  10100c:	74 0a                	je     101018 <shell_handle_keypress+0x18>
        cmd_index--;
        vga_putchar('\b');
    }
    else if (c && cmd_index < MAX_CMD_LENGTH - 1 && c != '\b') {
  10100e:	84 c0                	test   %al,%al
  101010:	75 3e                	jne    101050 <shell_handle_keypress+0x50>
        cmd_buffer[cmd_index++] = c;
        vga_putchar(c);
    }
}
  101012:	c9                   	leave
  101013:	c3                   	ret
  101014:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    else if (c == '\b' && cmd_index > 0) {
  101018:	a1 40 68 10 00       	mov    0x106840,%eax
  10101d:	85 c0                	test   %eax,%eax
  10101f:	74 f1                	je     101012 <shell_handle_keypress+0x12>
        cmd_index--;
  101021:	83 e8 01             	sub    $0x1,%eax
        vga_putchar('\b');
  101024:	c7 45 08 08 00 00 00 	movl   $0x8,0x8(%ebp)
        cmd_index--;
  10102b:	a3 40 68 10 00       	mov    %eax,0x106840
}
  101030:	c9                   	leave
        vga_putchar('\b');
  101031:	e9 5a 1c 00 00       	jmp    102c90 <vga_putchar>
  101036:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  10103d:	00 
  10103e:	66 90                	xchg   %ax,%ax
        vga_putchar('\n');
  101040:	6a 0a                	push   $0xa
  101042:	e8 49 1c 00 00       	call   102c90 <vga_putchar>
        shell_process_command();
  101047:	58                   	pop    %eax
}
  101048:	c9                   	leave
        shell_process_command();
  101049:	e9 d2 fa ff ff       	jmp    100b20 <shell_process_command>
  10104e:	66 90                	xchg   %ax,%ax
    else if (c && cmd_index < MAX_CMD_LENGTH - 1 && c != '\b') {
  101050:	8b 15 40 68 10 00    	mov    0x106840,%edx
  101056:	81 fa fe 00 00 00    	cmp    $0xfe,%edx
  10105c:	77 b4                	ja     101012 <shell_handle_keypress+0x12>
        cmd_buffer[cmd_index++] = c;
  10105e:	88 82 60 68 10 00    	mov    %al,0x106860(%edx)
  101064:	8d 4a 01             	lea    0x1(%edx),%ecx
        vga_putchar(c);
  101067:	0f be c0             	movsbl %al,%eax
        cmd_buffer[cmd_index++] = c;
  10106a:	89 0d 40 68 10 00    	mov    %ecx,0x106840
        vga_putchar(c);
  101070:	89 45 08             	mov    %eax,0x8(%ebp)
}
  101073:	c9                   	leave
        vga_putchar(c);
  101074:	e9 17 1c 00 00       	jmp    102c90 <vga_putchar>
  101079:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00101080 <shell_init>:

void shell_init(void) {
  101080:	55                   	push   %ebp
    cmd_index = 0;
  101081:	c7 05 40 68 10 00 00 	movl   $0x0,0x106840
  101088:	00 00 00 
void shell_init(void) {
  10108b:	89 e5                	mov    %esp,%ebp
    vga_clear();
  10108d:	e8 9e 1d 00 00       	call   102e30 <vga_clear>
    vga_set_color(VGA_BLUE, VGA_WHITE);
  101092:	6a 0f                	push   $0xf
  101094:	6a 01                	push   $0x1
  101096:	e8 55 1e 00 00       	call   102ef0 <vga_set_color>
    vga_writestr("Welcome to RingOS!\n");
  10109b:	68 f8 43 10 00       	push   $0x1043f8
  1010a0:	e8 4b 1d 00 00       	call   102df0 <vga_writestr>
    vga_set_color(VGA_WHITE, VGA_BLACK);
  1010a5:	6a 00                	push   $0x0
  1010a7:	6a 0f                	push   $0xf
  1010a9:	e8 42 1e 00 00       	call   102ef0 <vga_set_color>
    vga_writestr("Type 'help' for available commands.\n");
  1010ae:	68 b0 48 10 00       	push   $0x1048b0
  1010b3:	e8 38 1d 00 00       	call   102df0 <vga_writestr>
    print_prompt();
  1010b8:	83 c4 18             	add    $0x18,%esp
}
  1010bb:	c9                   	leave
    print_prompt();
  1010bc:	e9 3f f6 ff ff       	jmp    100700 <print_prompt>
  1010c1:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  1010c8:	00 
  1010c9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

001010d0 <shell_run>:

void shell_run(void) {
  1010d0:	55                   	push   %ebp
  1010d1:	89 e5                	mov    %esp,%ebp
  1010d3:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  1010da:	00 
  1010db:	2e 8d 74 26 00       	lea    %cs:0x0(%esi,%eiz,1),%esi
    while (1) {
        char c = keyboard_read();
  1010e0:	e8 eb 17 00 00       	call   1028d0 <keyboard_read>
        if (c) {
  1010e5:	84 c0                	test   %al,%al
  1010e7:	74 f7                	je     1010e0 <shell_run+0x10>
            shell_handle_keypress(c);
  1010e9:	0f be c0             	movsbl %al,%eax
  1010ec:	50                   	push   %eax
  1010ed:	e8 0e ff ff ff       	call   101000 <shell_handle_keypress>
  1010f2:	58                   	pop    %eax
  1010f3:	eb eb                	jmp    1010e0 <shell_run+0x10>
  1010f5:	66 90                	xchg   %ax,%ax
  1010f7:	66 90                	xchg   %ax,%ax
  1010f9:	66 90                	xchg   %ax,%ax
  1010fb:	66 90                	xchg   %ax,%ax
  1010fd:	66 90                	xchg   %ax,%ax
  1010ff:	90                   	nop

00101100 <ata_init>:
        ata_400ns_delay();
    }
    return false;
}

bool ata_init(void) {
  101100:	55                   	push   %ebp
  101101:	89 e5                	mov    %esp,%ebp
  101103:	53                   	push   %ebx
    if (ata_initialized) {
  101104:	8b 1d 60 69 10 00    	mov    0x106960,%ebx
  10110a:	85 db                	test   %ebx,%ebx
  10110c:	74 12                	je     101120 <ata_init+0x20>
        return true;
  10110e:	bb 01 00 00 00       	mov    $0x1,%ebx
        inw(ATA_DATA);
    }

    ata_initialized = true;
    return true;
}
  101113:	89 d8                	mov    %ebx,%eax
  101115:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  101118:	c9                   	leave
  101119:	c3                   	ret
  10111a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    asm volatile("inb %1, %0" : "=a"(ret) : "Nd"(port));
    return ret;
}

static inline void outb(uint16_t port, uint8_t value) {
    asm volatile("outb %0, %1" : : "a"(value), "Nd"(port));
  101120:	b8 a0 ff ff ff       	mov    $0xffffffa0,%eax
  101125:	ba f6 01 00 00       	mov    $0x1f6,%edx
  10112a:	ee                   	out    %al,(%dx)
    asm volatile("inb %1, %0" : "=a"(ret) : "Nd"(port));
  10112b:	ba f7 01 00 00       	mov    $0x1f7,%edx
  101130:	ec                   	in     (%dx),%al
  101131:	ec                   	in     (%dx),%al
  101132:	ec                   	in     (%dx),%al
  101133:	ec                   	in     (%dx),%al
  101134:	b9 9f 86 01 00       	mov    $0x1869f,%ecx
  101139:	eb 0e                	jmp    101149 <ata_init+0x49>
  10113b:	2e 8d 74 26 00       	lea    %cs:0x0(%esi,%eiz,1),%esi
  101140:	ec                   	in     (%dx),%al
  101141:	ec                   	in     (%dx),%al
  101142:	ec                   	in     (%dx),%al
  101143:	ec                   	in     (%dx),%al
    while (--timeout) {
  101144:	83 e9 01             	sub    $0x1,%ecx
  101147:	74 4f                	je     101198 <ata_init+0x98>
  101149:	ec                   	in     (%dx),%al
        if (!(status & ATA_SR_BSY)) {
  10114a:	84 c0                	test   %al,%al
  10114c:	78 f2                	js     101140 <ata_init+0x40>
    asm volatile("outb %0, %1" : : "a"(value), "Nd"(port));
  10114e:	b8 ec ff ff ff       	mov    $0xffffffec,%eax
  101153:	ee                   	out    %al,(%dx)
    asm volatile("inb %1, %0" : "=a"(ret) : "Nd"(port));
  101154:	ec                   	in     (%dx),%al
  101155:	ec                   	in     (%dx),%al
  101156:	ec                   	in     (%dx),%al
  101157:	ec                   	in     (%dx),%al
  101158:	b9 9f 86 01 00       	mov    $0x1869f,%ecx
  10115d:	ba f7 01 00 00       	mov    $0x1f7,%edx
  101162:	eb 0d                	jmp    101171 <ata_init+0x71>
  101164:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
  101168:	ec                   	in     (%dx),%al
  101169:	ec                   	in     (%dx),%al
  10116a:	ec                   	in     (%dx),%al
  10116b:	ec                   	in     (%dx),%al
    while (--timeout) {
  10116c:	83 e9 01             	sub    $0x1,%ecx
  10116f:	74 39                	je     1011aa <ata_init+0xaa>
  101171:	ec                   	in     (%dx),%al
        if (status & ATA_SR_DRQ) {
  101172:	a8 08                	test   $0x8,%al
  101174:	74 f2                	je     101168 <ata_init+0x68>
  101176:	b9 00 01 00 00       	mov    $0x100,%ecx
}

static inline uint16_t inw(uint16_t port) {
    uint16_t ret;
    asm volatile("inw %1, %0" : "=a"(ret) : "Nd"(port));
  10117b:	ba f0 01 00 00       	mov    $0x1f0,%edx
  101180:	66 ed                	in     (%dx),%ax
  101182:	66 ed                	in     (%dx),%ax
    for (int i = 0; i < 256; i++) {
  101184:	83 e9 02             	sub    $0x2,%ecx
  101187:	75 f7                	jne    101180 <ata_init+0x80>
    ata_initialized = true;
  101189:	c7 05 60 69 10 00 01 	movl   $0x1,0x106960
  101190:	00 00 00 
    return true;
  101193:	e9 76 ff ff ff       	jmp    10110e <ata_init+0xe>
        vga_writestr("ATA Error: Drive busy timeout\n");
  101198:	68 d8 48 10 00       	push   $0x1048d8
  10119d:	e8 4e 1c 00 00       	call   102df0 <vga_writestr>
        return false;
  1011a2:	58                   	pop    %eax
}
  1011a3:	89 d8                	mov    %ebx,%eax
  1011a5:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  1011a8:	c9                   	leave
  1011a9:	c3                   	ret
        vga_writestr("ATA Error: Drive not ready\n");
  1011aa:	68 0c 44 10 00       	push   $0x10440c
  1011af:	e8 3c 1c 00 00       	call   102df0 <vga_writestr>
        return false;
  1011b4:	5a                   	pop    %edx
  1011b5:	e9 59 ff ff ff       	jmp    101113 <ata_init+0x13>
  1011ba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

001011c0 <ata_read_sectors>:

bool ata_read_sectors(uint32_t lba, uint8_t sector_count, void* buffer) {
  1011c0:	55                   	push   %ebp
  1011c1:	89 e5                	mov    %esp,%ebp
  1011c3:	57                   	push   %edi
  1011c4:	56                   	push   %esi
  1011c5:	53                   	push   %ebx
  1011c6:	83 ec 08             	sub    $0x8,%esp
    if (!ata_initialized) {
  1011c9:	a1 60 69 10 00       	mov    0x106960,%eax
bool ata_read_sectors(uint32_t lba, uint8_t sector_count, void* buffer) {
  1011ce:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    if (!ata_initialized) {
  1011d1:	85 c0                	test   %eax,%eax
  1011d3:	0f 84 19 01 00 00    	je     1012f2 <ata_read_sectors+0x132>
        vga_writestr("ATA Error: Drive not initialized\n");
        return false;
    }

    if (!buffer) {
  1011d9:	8b 45 10             	mov    0x10(%ebp),%eax
  1011dc:	89 cf                	mov    %ecx,%edi
  1011de:	be 9f 86 01 00       	mov    $0x1869f,%esi
    asm volatile("inb %1, %0" : "=a"(ret) : "Nd"(port));
  1011e3:	bb f7 01 00 00       	mov    $0x1f7,%ebx
  1011e8:	85 c0                	test   %eax,%eax
  1011ea:	75 19                	jne    101205 <ata_read_sectors+0x45>
  1011ec:	e9 1f 01 00 00       	jmp    101310 <ata_read_sectors+0x150>
  1011f1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
  1011f8:	ec                   	in     (%dx),%al
  1011f9:	ec                   	in     (%dx),%al
  1011fa:	ec                   	in     (%dx),%al
  1011fb:	ec                   	in     (%dx),%al
    while (--timeout) {
  1011fc:	83 ee 01             	sub    $0x1,%esi
  1011ff:	0f 84 fc 00 00 00    	je     101301 <ata_read_sectors+0x141>
  101205:	89 da                	mov    %ebx,%edx
  101207:	ec                   	in     (%dx),%al
        if (!(status & ATA_SR_BSY)) {
  101208:	84 c0                	test   %al,%al
  10120a:	78 ec                	js     1011f8 <ata_read_sectors+0x38>
        vga_writestr("ATA Error: Drive busy before read\n");
        return false;
    }

    // Send drive select and LBA
    outb(ATA_DRIVEHEAD, 0xE0 | ((lba >> 24) & 0x0F));
  10120c:	8b 45 08             	mov    0x8(%ebp),%eax
    asm volatile("outb %0, %1" : : "a"(value), "Nd"(port));
  10120f:	ba f6 01 00 00       	mov    $0x1f6,%edx
  101214:	c1 e8 18             	shr    $0x18,%eax
  101217:	83 e0 0f             	and    $0xf,%eax
  10121a:	83 c8 e0             	or     $0xffffffe0,%eax
  10121d:	ee                   	out    %al,(%dx)
  10121e:	ba f2 01 00 00       	mov    $0x1f2,%edx
  101223:	89 f8                	mov    %edi,%eax
  101225:	ee                   	out    %al,(%dx)
  101226:	ba f3 01 00 00       	mov    $0x1f3,%edx
  10122b:	0f b6 45 08          	movzbl 0x8(%ebp),%eax
  10122f:	ee                   	out    %al,(%dx)
    outb(ATA_SECCOUNT0, sector_count);
    outb(ATA_SECTOR, (uint8_t)lba);
    outb(ATA_LCYL, (uint8_t)(lba >> 8));
  101230:	8b 45 08             	mov    0x8(%ebp),%eax
  101233:	ba f4 01 00 00       	mov    $0x1f4,%edx
  101238:	c1 e8 08             	shr    $0x8,%eax
  10123b:	ee                   	out    %al,(%dx)
    outb(ATA_HCYL, (uint8_t)(lba >> 16));
  10123c:	8b 45 08             	mov    0x8(%ebp),%eax
  10123f:	ba f5 01 00 00       	mov    $0x1f5,%edx
  101244:	c1 e8 10             	shr    $0x10,%eax
  101247:	ee                   	out    %al,(%dx)
  101248:	b8 20 00 00 00       	mov    $0x20,%eax
  10124d:	89 da                	mov    %ebx,%edx
  10124f:	ee                   	out    %al,(%dx)

    // Send read command
    outb(ATA_COMMAND, ATA_CMD_READ_PIO);

    uint16_t* buf = (uint16_t*)buffer;
    for (int s = 0; s < sector_count; s++) {
  101250:	0f b6 c1             	movzbl %cl,%eax
  101253:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
    asm volatile("inb %1, %0" : "=a"(ret) : "Nd"(port));
  10125a:	bf f7 01 00 00       	mov    $0x1f7,%edi
    asm volatile("inw %1, %0" : "=a"(ret) : "Nd"(port));
  10125f:	be f0 01 00 00       	mov    $0x1f0,%esi
  101264:	89 45 ec             	mov    %eax,-0x14(%ebp)
  101267:	8b 45 10             	mov    0x10(%ebp),%eax
  10126a:	8d 98 00 02 00 00    	lea    0x200(%eax),%ebx
  101270:	84 c9                	test   %cl,%cl
  101272:	74 5c                	je     1012d0 <ata_read_sectors+0x110>
  101274:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  10127b:	00 
  10127c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    while (--timeout) {
  101280:	b9 9f 86 01 00       	mov    $0x1869f,%ecx
  101285:	eb 12                	jmp    101299 <ata_read_sectors+0xd9>
  101287:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  10128e:	00 
  10128f:	90                   	nop
    asm volatile("inb %1, %0" : "=a"(ret) : "Nd"(port));
  101290:	ec                   	in     (%dx),%al
  101291:	ec                   	in     (%dx),%al
  101292:	ec                   	in     (%dx),%al
  101293:	ec                   	in     (%dx),%al
  101294:	83 e9 01             	sub    $0x1,%ecx
  101297:	74 44                	je     1012dd <ata_read_sectors+0x11d>
  101299:	89 fa                	mov    %edi,%edx
  10129b:	ec                   	in     (%dx),%al
        if (status & ATA_SR_DRQ) {
  10129c:	a8 08                	test   $0x8,%al
  10129e:	74 f0                	je     101290 <ata_read_sectors+0xd0>
  1012a0:	8d 8b 00 fe ff ff    	lea    -0x200(%ebx),%ecx
  1012a6:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  1012ad:	00 
  1012ae:	66 90                	xchg   %ax,%ax
    asm volatile("inw %1, %0" : "=a"(ret) : "Nd"(port));
  1012b0:	89 f2                	mov    %esi,%edx
  1012b2:	66 ed                	in     (%dx),%ax
            return false;
        }

        // Read sector
        for (int i = 0; i < 256; i++) {
            buf[i + (s * 256)] = inw(ATA_DATA);
  1012b4:	66 89 01             	mov    %ax,(%ecx)
        for (int i = 0; i < 256; i++) {
  1012b7:	83 c1 02             	add    $0x2,%ecx
  1012ba:	39 d9                	cmp    %ebx,%ecx
  1012bc:	75 f2                	jne    1012b0 <ata_read_sectors+0xf0>
    for (int s = 0; s < sector_count; s++) {
  1012be:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
  1012c2:	81 c3 00 02 00 00    	add    $0x200,%ebx
  1012c8:	8b 45 f0             	mov    -0x10(%ebp),%eax
  1012cb:	39 45 ec             	cmp    %eax,-0x14(%ebp)
  1012ce:	75 b0                	jne    101280 <ata_read_sectors+0xc0>
        }
    }

    return true;
}
  1012d0:	8d 65 f4             	lea    -0xc(%ebp),%esp
    return true;
  1012d3:	b8 01 00 00 00       	mov    $0x1,%eax
}
  1012d8:	5b                   	pop    %ebx
  1012d9:	5e                   	pop    %esi
  1012da:	5f                   	pop    %edi
  1012db:	5d                   	pop    %ebp
  1012dc:	c3                   	ret
            vga_writestr("ATA Error: Data not ready\n");
  1012dd:	68 43 44 10 00       	push   $0x104443
  1012e2:	e8 09 1b 00 00       	call   102df0 <vga_writestr>
            return false;
  1012e7:	5a                   	pop    %edx
        return false;
  1012e8:	31 c0                	xor    %eax,%eax
}
  1012ea:	8d 65 f4             	lea    -0xc(%ebp),%esp
  1012ed:	5b                   	pop    %ebx
  1012ee:	5e                   	pop    %esi
  1012ef:	5f                   	pop    %edi
  1012f0:	5d                   	pop    %ebp
  1012f1:	c3                   	ret
        vga_writestr("ATA Error: Drive not initialized\n");
  1012f2:	68 f8 48 10 00       	push   $0x1048f8
  1012f7:	e8 f4 1a 00 00       	call   102df0 <vga_writestr>
        return false;
  1012fc:	58                   	pop    %eax
  1012fd:	31 c0                	xor    %eax,%eax
  1012ff:	eb e9                	jmp    1012ea <ata_read_sectors+0x12a>
        vga_writestr("ATA Error: Drive busy before read\n");
  101301:	68 1c 49 10 00       	push   $0x10491c
  101306:	e8 e5 1a 00 00       	call   102df0 <vga_writestr>
        return false;
  10130b:	58                   	pop    %eax
        return false;
  10130c:	31 c0                	xor    %eax,%eax
  10130e:	eb da                	jmp    1012ea <ata_read_sectors+0x12a>
        vga_writestr("ATA Error: Invalid buffer\n");
  101310:	68 28 44 10 00       	push   $0x104428
  101315:	e8 d6 1a 00 00       	call   102df0 <vga_writestr>
        return false;
  10131a:	59                   	pop    %ecx
        return false;
  10131b:	31 c0                	xor    %eax,%eax
  10131d:	eb cb                	jmp    1012ea <ata_read_sectors+0x12a>
  10131f:	90                   	nop

00101320 <ata_write_sectors>:

bool ata_write_sectors(uint32_t lba, uint8_t sector_count, const void* buffer) {
  101320:	55                   	push   %ebp
  101321:	89 e5                	mov    %esp,%ebp
  101323:	57                   	push   %edi
  101324:	56                   	push   %esi
  101325:	53                   	push   %ebx
  101326:	83 ec 04             	sub    $0x4,%esp
    if (!ata_initialized) {
  101329:	a1 60 69 10 00       	mov    0x106960,%eax
bool ata_write_sectors(uint32_t lba, uint8_t sector_count, const void* buffer) {
  10132e:	8b 75 0c             	mov    0xc(%ebp),%esi
    if (!ata_initialized) {
  101331:	85 c0                	test   %eax,%eax
  101333:	0f 84 12 01 00 00    	je     10144b <ata_write_sectors+0x12b>
        vga_writestr("ATA Error: Drive not initialized\n");
        return false;
    }

    if (!buffer) {
  101339:	8b 45 10             	mov    0x10(%ebp),%eax
  10133c:	89 f7                	mov    %esi,%edi
  10133e:	bb 9f 86 01 00       	mov    $0x1869f,%ebx
    asm volatile("inb %1, %0" : "=a"(ret) : "Nd"(port));
  101343:	b9 f7 01 00 00       	mov    $0x1f7,%ecx
  101348:	85 c0                	test   %eax,%eax
  10134a:	75 19                	jne    101365 <ata_write_sectors+0x45>
  10134c:	e9 29 01 00 00       	jmp    10147a <ata_write_sectors+0x15a>
  101351:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
  101358:	ec                   	in     (%dx),%al
  101359:	ec                   	in     (%dx),%al
  10135a:	ec                   	in     (%dx),%al
  10135b:	ec                   	in     (%dx),%al
    while (--timeout) {
  10135c:	83 eb 01             	sub    $0x1,%ebx
  10135f:	0f 84 22 01 00 00    	je     101487 <ata_write_sectors+0x167>
  101365:	89 ca                	mov    %ecx,%edx
  101367:	ec                   	in     (%dx),%al
        if (!(status & ATA_SR_BSY)) {
  101368:	84 c0                	test   %al,%al
  10136a:	78 ec                	js     101358 <ata_write_sectors+0x38>
        vga_writestr("ATA Error: Drive busy before write\n");
        return false;
    }

    // Send drive select and LBA
    outb(ATA_DRIVEHEAD, 0xE0 | ((lba >> 24) & 0x0F));
  10136c:	8b 45 08             	mov    0x8(%ebp),%eax
    asm volatile("outb %0, %1" : : "a"(value), "Nd"(port));
  10136f:	ba f6 01 00 00       	mov    $0x1f6,%edx
  101374:	c1 e8 18             	shr    $0x18,%eax
  101377:	83 e0 0f             	and    $0xf,%eax
  10137a:	83 c8 e0             	or     $0xffffffe0,%eax
  10137d:	ee                   	out    %al,(%dx)
  10137e:	ba f2 01 00 00       	mov    $0x1f2,%edx
  101383:	89 f8                	mov    %edi,%eax
  101385:	ee                   	out    %al,(%dx)
  101386:	ba f3 01 00 00       	mov    $0x1f3,%edx
  10138b:	0f b6 45 08          	movzbl 0x8(%ebp),%eax
  10138f:	ee                   	out    %al,(%dx)
    outb(ATA_SECCOUNT0, sector_count);
    outb(ATA_SECTOR, (uint8_t)lba);
    outb(ATA_LCYL, (uint8_t)(lba >> 8));
  101390:	8b 45 08             	mov    0x8(%ebp),%eax
  101393:	ba f4 01 00 00       	mov    $0x1f4,%edx
  101398:	c1 e8 08             	shr    $0x8,%eax
  10139b:	ee                   	out    %al,(%dx)
    outb(ATA_HCYL, (uint8_t)(lba >> 16));
  10139c:	8b 45 08             	mov    0x8(%ebp),%eax
  10139f:	ba f5 01 00 00       	mov    $0x1f5,%edx
  1013a4:	c1 e8 10             	shr    $0x10,%eax
  1013a7:	ee                   	out    %al,(%dx)
  1013a8:	b8 30 00 00 00       	mov    $0x30,%eax
  1013ad:	89 ca                	mov    %ecx,%edx
  1013af:	ee                   	out    %al,(%dx)

    // Send write command
    outb(ATA_COMMAND, ATA_CMD_WRITE_PIO);

    const uint16_t* buf = (const uint16_t*)buffer;
    for (int s = 0; s < sector_count; s++) {
  1013b0:	89 f0                	mov    %esi,%eax
  1013b2:	31 ff                	xor    %edi,%edi
    asm volatile("inb %1, %0" : "=a"(ret) : "Nd"(port));
  1013b4:	b9 f7 01 00 00       	mov    $0x1f7,%ecx
  1013b9:	0f b6 c0             	movzbl %al,%eax
  1013bc:	89 45 f0             	mov    %eax,-0x10(%ebp)
  1013bf:	8b 45 10             	mov    0x10(%ebp),%eax
  1013c2:	8d 98 00 02 00 00    	lea    0x200(%eax),%ebx
  1013c8:	89 f0                	mov    %esi,%eax
  1013ca:	84 c0                	test   %al,%al
  1013cc:	74 70                	je     10143e <ata_write_sectors+0x11e>
  1013ce:	66 90                	xchg   %ax,%ax
    while (--timeout) {
  1013d0:	be 9f 86 01 00       	mov    $0x1869f,%esi
  1013d5:	eb 12                	jmp    1013e9 <ata_write_sectors+0xc9>
  1013d7:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  1013de:	00 
  1013df:	90                   	nop
  1013e0:	ec                   	in     (%dx),%al
  1013e1:	ec                   	in     (%dx),%al
  1013e2:	ec                   	in     (%dx),%al
  1013e3:	ec                   	in     (%dx),%al
  1013e4:	83 ee 01             	sub    $0x1,%esi
  1013e7:	74 77                	je     101460 <ata_write_sectors+0x140>
  1013e9:	89 ca                	mov    %ecx,%edx
  1013eb:	ec                   	in     (%dx),%al
        if (status & ATA_SR_DRQ) {
  1013ec:	a8 08                	test   $0x8,%al
  1013ee:	74 f0                	je     1013e0 <ata_write_sectors+0xc0>
  1013f0:	8d b3 00 fe ff ff    	lea    -0x200(%ebx),%esi
  1013f6:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  1013fd:	00 
  1013fe:	66 90                	xchg   %ax,%ax
    return ret;
}

static inline void outw(uint16_t port, uint16_t value) {
    asm volatile("outw %0, %1" : : "a"(value), "Nd"(port));
  101400:	0f b7 06             	movzwl (%esi),%eax
  101403:	ba f0 01 00 00       	mov    $0x1f0,%edx
  101408:	66 ef                	out    %ax,(%dx)
            vga_writestr("ATA Error: Drive not ready for write\n");
            return false;
        }

        // Write sector
        for (int i = 0; i < 256; i++) {
  10140a:	83 c6 02             	add    $0x2,%esi
  10140d:	39 f3                	cmp    %esi,%ebx
  10140f:	75 ef                	jne    101400 <ata_write_sectors+0xe0>
    asm volatile("outb %0, %1" : : "a"(value), "Nd"(port));
  101411:	b8 e7 ff ff ff       	mov    $0xffffffe7,%eax
  101416:	89 ca                	mov    %ecx,%edx
  101418:	ee                   	out    %al,(%dx)
  101419:	be 9f 86 01 00       	mov    $0x1869f,%esi
  10141e:	eb 09                	jmp    101429 <ata_write_sectors+0x109>
    asm volatile("inb %1, %0" : "=a"(ret) : "Nd"(port));
  101420:	ec                   	in     (%dx),%al
  101421:	ec                   	in     (%dx),%al
  101422:	ec                   	in     (%dx),%al
  101423:	ec                   	in     (%dx),%al
    while (--timeout) {
  101424:	83 ee 01             	sub    $0x1,%esi
  101427:	74 44                	je     10146d <ata_write_sectors+0x14d>
  101429:	89 ca                	mov    %ecx,%edx
  10142b:	ec                   	in     (%dx),%al
        if (!(status & ATA_SR_BSY)) {
  10142c:	84 c0                	test   %al,%al
  10142e:	78 f0                	js     101420 <ata_write_sectors+0x100>
    for (int s = 0; s < sector_count; s++) {
  101430:	83 c7 01             	add    $0x1,%edi
  101433:	81 c3 00 02 00 00    	add    $0x200,%ebx
  101439:	39 7d f0             	cmp    %edi,-0x10(%ebp)
  10143c:	75 92                	jne    1013d0 <ata_write_sectors+0xb0>
            return false;
        }
    }

    return true;
  10143e:	8d 65 f4             	lea    -0xc(%ebp),%esp
    return true;
  101441:	b8 01 00 00 00       	mov    $0x1,%eax
  101446:	5b                   	pop    %ebx
  101447:	5e                   	pop    %esi
  101448:	5f                   	pop    %edi
  101449:	5d                   	pop    %ebp
  10144a:	c3                   	ret
        vga_writestr("ATA Error: Drive not initialized\n");
  10144b:	68 f8 48 10 00       	push   $0x1048f8
  101450:	e8 9b 19 00 00       	call   102df0 <vga_writestr>
        return false;
  101455:	58                   	pop    %eax
  101456:	8d 65 f4             	lea    -0xc(%ebp),%esp
        return false;
  101459:	31 c0                	xor    %eax,%eax
  10145b:	5b                   	pop    %ebx
  10145c:	5e                   	pop    %esi
  10145d:	5f                   	pop    %edi
  10145e:	5d                   	pop    %ebp
  10145f:	c3                   	ret
            vga_writestr("ATA Error: Drive not ready for write\n");
  101460:	68 40 49 10 00       	push   $0x104940
  101465:	e8 86 19 00 00       	call   102df0 <vga_writestr>
            return false;
  10146a:	59                   	pop    %ecx
  10146b:	eb e9                	jmp    101456 <ata_write_sectors+0x136>
            vga_writestr("ATA Error: Cache flush failed\n");
  10146d:	68 68 49 10 00       	push   $0x104968
  101472:	e8 79 19 00 00       	call   102df0 <vga_writestr>
            return false;
  101477:	5a                   	pop    %edx
  101478:	eb dc                	jmp    101456 <ata_write_sectors+0x136>
        vga_writestr("ATA Error: Invalid buffer\n");
  10147a:	68 28 44 10 00       	push   $0x104428
  10147f:	e8 6c 19 00 00       	call   102df0 <vga_writestr>
        return false;
  101484:	5b                   	pop    %ebx
  101485:	eb cf                	jmp    101456 <ata_write_sectors+0x136>
        vga_writestr("ATA Error: Drive busy before write\n");
  101487:	68 88 49 10 00       	push   $0x104988
  10148c:	e8 5f 19 00 00       	call   102df0 <vga_writestr>
        return false;
  101491:	58                   	pop    %eax
  101492:	eb c2                	jmp    101456 <ata_write_sectors+0x136>
  101494:	66 90                	xchg   %ax,%ax
  101496:	66 90                	xchg   %ax,%ax
  101498:	66 90                	xchg   %ax,%ax
  10149a:	66 90                	xchg   %ax,%ax
  10149c:	66 90                	xchg   %ax,%ax
  10149e:	66 90                	xchg   %ax,%ax
  1014a0:	66 90                	xchg   %ax,%ax
  1014a2:	66 90                	xchg   %ax,%ax
  1014a4:	66 90                	xchg   %ax,%ax
  1014a6:	66 90                	xchg   %ax,%ax
  1014a8:	66 90                	xchg   %ax,%ax
  1014aa:	66 90                	xchg   %ax,%ax
  1014ac:	66 90                	xchg   %ax,%ax
  1014ae:	66 90                	xchg   %ax,%ax
  1014b0:	66 90                	xchg   %ax,%ax
  1014b2:	66 90                	xchg   %ax,%ax
  1014b4:	66 90                	xchg   %ax,%ax
  1014b6:	66 90                	xchg   %ax,%ax
  1014b8:	66 90                	xchg   %ax,%ax
  1014ba:	66 90                	xchg   %ax,%ax
  1014bc:	66 90                	xchg   %ax,%ax
  1014be:	66 90                	xchg   %ax,%ax

001014c0 <update_path>:
        if (c1 != c2) return false;
    }
    return true;
}

static void update_path(void) {
  1014c0:	55                   	push   %ebp
  1014c1:	89 e5                	mov    %esp,%ebp
  1014c3:	57                   	push   %edi
  1014c4:	56                   	push   %esi
  1014c5:	53                   	push   %ebx
    // Start with root
    current_directory.path[0] = '/';
  1014c6:	bb 2f 00 00 00       	mov    $0x2f,%ebx
static void update_path(void) {
  1014cb:	83 ec 0c             	sub    $0xc,%esp
    current_directory.path[1] = '\0';

    // Build path from parent directories
    for (int i = 0; i < directory_depth; i++) {
  1014ce:	8b 35 80 69 10 00    	mov    0x106980,%esi
    current_directory.path[0] = '/';
  1014d4:	66 89 1d b0 7a 10 00 	mov    %bx,0x107ab0
    for (int i = 0; i < directory_depth; i++) {
  1014db:	85 f6                	test   %esi,%esi
  1014dd:	7e 7c                	jle    10155b <update_path+0x9b>
  1014df:	31 f6                	xor    %esi,%esi
  1014e1:	31 db                	xor    %ebx,%ebx
  1014e3:	8d 7d e8             	lea    -0x18(%ebp),%edi
  1014e6:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  1014ed:	00 
  1014ee:	66 90                	xchg   %ax,%ax
        // Don't add another slash if we're already at root
        if (strcmp(current_directory.path, "/") != 0) {
  1014f0:	68 5e 44 10 00       	push   $0x10445e
  1014f5:	68 b0 7a 10 00       	push   $0x107ab0
  1014fa:	e8 11 1c 00 00       	call   103110 <strcmp>
  1014ff:	5a                   	pop    %edx
  101500:	59                   	pop    %ecx
  101501:	85 c0                	test   %eax,%eax
  101503:	75 7b                	jne    101580 <update_path+0xc0>
    for (int i = 0; i < directory_depth; i++) {
  101505:	31 c0                	xor    %eax,%eax
  101507:	eb 17                	jmp    101520 <update_path+0x60>
  101509:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  101510:	00 
  101511:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  101518:	00 
  101519:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
        }
        
        // Add current directory name, trimming any spaces
        char trimmed_name[12];
        int j;
        for (j = 0; j < 11 && parent_directories[i].name[j] != ' '; j++) {
  101520:	0f b6 94 06 a4 69 10 	movzbl 0x1069a4(%esi,%eax,1),%edx
  101527:	00 
  101528:	80 fa 20             	cmp    $0x20,%dl
  10152b:	74 0b                	je     101538 <update_path+0x78>
            trimmed_name[j] = parent_directories[i].name[j];
  10152d:	88 14 07             	mov    %dl,(%edi,%eax,1)
        for (j = 0; j < 11 && parent_directories[i].name[j] != ' '; j++) {
  101530:	83 c0 01             	add    $0x1,%eax
  101533:	83 f8 0b             	cmp    $0xb,%eax
  101536:	75 e8                	jne    101520 <update_path+0x60>
        }
        trimmed_name[j] = '\0';
  101538:	c6 44 05 e8 00       	movb   $0x0,-0x18(%ebp,%eax,1)
    for (int i = 0; i < directory_depth; i++) {
  10153d:	83 c3 01             	add    $0x1,%ebx
  101540:	81 c6 10 01 00 00    	add    $0x110,%esi
        strcat(current_directory.path, trimmed_name);
  101546:	57                   	push   %edi
  101547:	68 b0 7a 10 00       	push   $0x107ab0
  10154c:	e8 4f 1c 00 00       	call   1031a0 <strcat>
    for (int i = 0; i < directory_depth; i++) {
  101551:	58                   	pop    %eax
  101552:	5a                   	pop    %edx
  101553:	39 1d 80 69 10 00    	cmp    %ebx,0x106980
  101559:	7f 95                	jg     1014f0 <update_path+0x30>
    }

    // Add current directory to path (if not root)
    if (strcmp(current_directory.name, "/") != 0) {
  10155b:	68 5e 44 10 00       	push   $0x10445e
  101560:	68 a4 7a 10 00       	push   $0x107aa4
  101565:	e8 a6 1b 00 00       	call   103110 <strcmp>
  10156a:	5a                   	pop    %edx
  10156b:	59                   	pop    %ecx
  10156c:	85 c0                	test   %eax,%eax
  10156e:	75 26                	jne    101596 <update_path+0xd6>
            trimmed_name[j] = current_directory.name[j];
        }
        trimmed_name[j] = '\0';
        strcat(current_directory.path, trimmed_name);
    }
}
  101570:	8d 65 f4             	lea    -0xc(%ebp),%esp
  101573:	5b                   	pop    %ebx
  101574:	5e                   	pop    %esi
  101575:	5f                   	pop    %edi
  101576:	5d                   	pop    %ebp
  101577:	c3                   	ret
  101578:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  10157f:	00 
            strcat(current_directory.path, "/");
  101580:	68 5e 44 10 00       	push   $0x10445e
  101585:	68 b0 7a 10 00       	push   $0x107ab0
  10158a:	e8 11 1c 00 00       	call   1031a0 <strcat>
  10158f:	59                   	pop    %ecx
  101590:	58                   	pop    %eax
  101591:	e9 6f ff ff ff       	jmp    101505 <update_path+0x45>
        if (strcmp(current_directory.path, "/") != 0) {
  101596:	68 5e 44 10 00       	push   $0x10445e
  10159b:	68 b0 7a 10 00       	push   $0x107ab0
  1015a0:	e8 6b 1b 00 00       	call   103110 <strcmp>
  1015a5:	5e                   	pop    %esi
  1015a6:	5f                   	pop    %edi
  1015a7:	85 c0                	test   %eax,%eax
  1015a9:	75 46                	jne    1015f1 <update_path+0x131>
    for (int i = 0; i < directory_depth; i++) {
  1015ab:	31 c0                	xor    %eax,%eax
  1015ad:	8d 7d e8             	lea    -0x18(%ebp),%edi
  1015b0:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  1015b7:	00 
  1015b8:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  1015bf:	00 
        for (j = 0; j < 11 && current_directory.name[j] != ' '; j++) {
  1015c0:	0f b6 90 a4 7a 10 00 	movzbl 0x107aa4(%eax),%edx
  1015c7:	80 fa 20             	cmp    $0x20,%dl
  1015ca:	74 0b                	je     1015d7 <update_path+0x117>
            trimmed_name[j] = current_directory.name[j];
  1015cc:	88 14 07             	mov    %dl,(%edi,%eax,1)
        for (j = 0; j < 11 && current_directory.name[j] != ' '; j++) {
  1015cf:	83 c0 01             	add    $0x1,%eax
  1015d2:	83 f8 0b             	cmp    $0xb,%eax
  1015d5:	75 e9                	jne    1015c0 <update_path+0x100>
        trimmed_name[j] = '\0';
  1015d7:	c6 44 05 e8 00       	movb   $0x0,-0x18(%ebp,%eax,1)
        strcat(current_directory.path, trimmed_name);
  1015dc:	57                   	push   %edi
  1015dd:	68 b0 7a 10 00       	push   $0x107ab0
  1015e2:	e8 b9 1b 00 00       	call   1031a0 <strcat>
  1015e7:	58                   	pop    %eax
  1015e8:	5a                   	pop    %edx
}
  1015e9:	8d 65 f4             	lea    -0xc(%ebp),%esp
  1015ec:	5b                   	pop    %ebx
  1015ed:	5e                   	pop    %esi
  1015ee:	5f                   	pop    %edi
  1015ef:	5d                   	pop    %ebp
  1015f0:	c3                   	ret
            strcat(current_directory.path, "/");
  1015f1:	68 5e 44 10 00       	push   $0x10445e
  1015f6:	68 b0 7a 10 00       	push   $0x107ab0
  1015fb:	e8 a0 1b 00 00       	call   1031a0 <strcat>
  101600:	59                   	pop    %ecx
  101601:	5b                   	pop    %ebx
  101602:	eb a7                	jmp    1015ab <update_path+0xeb>
  101604:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  10160b:	00 
  10160c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00101610 <fat32_init>:

bool fat32_init(void) {
  101610:	55                   	push   %ebp
  101611:	89 e5                	mov    %esp,%ebp
    if (!ata_read_sectors(0, 1, &boot_sector)) {
  101613:	68 c0 7b 10 00       	push   $0x107bc0
  101618:	6a 01                	push   $0x1
  10161a:	6a 00                	push   $0x0
  10161c:	e8 9f fb ff ff       	call   1011c0 <ata_read_sectors>
  101621:	83 c4 0c             	add    $0xc,%esp
  101624:	85 c0                	test   %eax,%eax
  101626:	0f 84 9c 00 00 00    	je     1016c8 <fat32_init+0xb8>
        vga_writestr("Error: Failed to initialize filesystem\n");
        return false;
    }

    if (boot_sector.bytes_per_sector != 512) {
  10162c:	66 81 3d cb 7b 10 00 	cmpw   $0x200,0x107bcb
  101633:	00 02 
  101635:	74 19                	je     101650 <fat32_init+0x40>
        vga_writestr("Error: Invalid filesystem\n");
  101637:	68 60 44 10 00       	push   $0x104460
  10163c:	e8 af 17 00 00       	call   102df0 <vga_writestr>
        return false;
  101641:	58                   	pop    %eax
        return false;
  101642:	31 c0                	xor    %eax,%eax
    strcpy(current_directory.path, "/");
    directory_depth = 0;

    is_initialized = true;
    return true;
}
  101644:	c9                   	leave
  101645:	c3                   	ret
  101646:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  10164d:	00 
  10164e:	66 90                	xchg   %ax,%ax
    sectors_per_cluster = boot_sector.sectors_per_cluster;
  101650:	0f b6 05 cd 7b 10 00 	movzbl 0x107bcd,%eax
    fat_begin_lba = boot_sector.reserved_sectors;
  101657:	0f b7 15 ce 7b 10 00 	movzwl 0x107bce,%edx
    strcpy(current_directory.name, "/");
  10165e:	68 5e 44 10 00       	push   $0x10445e
  101663:	68 a4 7a 10 00       	push   $0x107aa4
    sectors_per_cluster = boot_sector.sectors_per_cluster;
  101668:	a3 b0 7b 10 00       	mov    %eax,0x107bb0
    cluster_begin_lba = fat_begin_lba + (boot_sector.num_fats * boot_sector.fat_size_32);
  10166d:	0f b6 05 d0 7b 10 00 	movzbl 0x107bd0,%eax
  101674:	0f af 05 e4 7b 10 00 	imul   0x107be4,%eax
    fat_begin_lba = boot_sector.reserved_sectors;
  10167b:	89 15 b8 7b 10 00    	mov    %edx,0x107bb8
    cluster_begin_lba = fat_begin_lba + (boot_sector.num_fats * boot_sector.fat_size_32);
  101681:	01 d0                	add    %edx,%eax
  101683:	a3 b4 7b 10 00       	mov    %eax,0x107bb4
    current_directory.cluster = boot_sector.root_cluster;
  101688:	a1 ec 7b 10 00       	mov    0x107bec,%eax
  10168d:	a3 a0 7a 10 00       	mov    %eax,0x107aa0
    strcpy(current_directory.name, "/");
  101692:	e8 d9 1a 00 00       	call   103170 <strcpy>
    strcpy(current_directory.path, "/");
  101697:	68 5e 44 10 00       	push   $0x10445e
  10169c:	68 b0 7a 10 00       	push   $0x107ab0
  1016a1:	e8 ca 1a 00 00       	call   103170 <strcpy>
    return true;
  1016a6:	83 c4 10             	add    $0x10,%esp
  1016a9:	b8 01 00 00 00       	mov    $0x1,%eax
    directory_depth = 0;
  1016ae:	c7 05 80 69 10 00 00 	movl   $0x0,0x106980
  1016b5:	00 00 00 
    is_initialized = true;
  1016b8:	c7 05 1c 7c 10 00 01 	movl   $0x1,0x107c1c
  1016bf:	00 00 00 
}
  1016c2:	c9                   	leave
  1016c3:	c3                   	ret
  1016c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
        vga_writestr("Error: Failed to initialize filesystem\n");
  1016c8:	68 ac 49 10 00       	push   $0x1049ac
  1016cd:	e8 1e 17 00 00       	call   102df0 <vga_writestr>
        return false;
  1016d2:	5a                   	pop    %edx
  1016d3:	31 c0                	xor    %eax,%eax
  1016d5:	e9 6a ff ff ff       	jmp    101644 <fat32_init+0x34>
  1016da:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

001016e0 <fat32_get_current_directory>:


uint32_t fat32_get_current_directory(void) {
    return current_directory.cluster;
}
  1016e0:	a1 a0 7a 10 00       	mov    0x107aa0,%eax
  1016e5:	c3                   	ret
  1016e6:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  1016ed:	00 
  1016ee:	66 90                	xchg   %ax,%ax

001016f0 <fat32_get_current_path>:

const char* fat32_get_current_path(void) {
    return current_directory.path;
}
  1016f0:	b8 b0 7a 10 00       	mov    $0x107ab0,%eax
  1016f5:	c3                   	ret
  1016f6:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  1016fd:	00 
  1016fe:	66 90                	xchg   %ax,%ax

00101700 <fat32_get_next_cluster>:

static uint32_t cluster_to_lba(uint32_t cluster) {
    return cluster_begin_lba + ((cluster - 2) * sectors_per_cluster);
}

uint32_t fat32_get_next_cluster(uint32_t cluster) {
  101700:	55                   	push   %ebp
  101701:	89 e5                	mov    %esp,%ebp
  101703:	53                   	push   %ebx
  101704:	81 ec 00 02 00 00    	sub    $0x200,%esp
    uint32_t fat_sector = fat_begin_lba + ((cluster * 4) / 512);
  10170a:	8b 45 08             	mov    0x8(%ebp),%eax
  10170d:	8d 1c 85 00 00 00 00 	lea    0x0(,%eax,4),%ebx
    uint32_t offset = (cluster * 4) % 512;
    uint32_t buffer[128];

    if (!ata_read_sectors(fat_sector, 1, buffer)) {
  101714:	8d 85 fc fd ff ff    	lea    -0x204(%ebp),%eax
  10171a:	50                   	push   %eax
    uint32_t fat_sector = fat_begin_lba + ((cluster * 4) / 512);
  10171b:	89 d8                	mov    %ebx,%eax
  10171d:	c1 e8 09             	shr    $0x9,%eax
  101720:	03 05 b8 7b 10 00    	add    0x107bb8,%eax
    if (!ata_read_sectors(fat_sector, 1, buffer)) {
  101726:	6a 01                	push   $0x1
  101728:	50                   	push   %eax
  101729:	e8 92 fa ff ff       	call   1011c0 <ata_read_sectors>
  10172e:	83 c4 0c             	add    $0xc,%esp
  101731:	89 c2                	mov    %eax,%edx
  101733:	b8 f7 ff ff 0f       	mov    $0xffffff7,%eax
  101738:	85 d2                	test   %edx,%edx
  10173a:	74 12                	je     10174e <fat32_get_next_cluster+0x4e>
        return 0x0FFFFFF7;
    }

    return buffer[offset/4] & 0x0FFFFFFF;
  10173c:	81 e3 fc 01 00 00    	and    $0x1fc,%ebx
  101742:	8b 84 2b fc fd ff ff 	mov    -0x204(%ebx,%ebp,1),%eax
  101749:	25 ff ff ff 0f       	and    $0xfffffff,%eax
}
  10174e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  101751:	c9                   	leave
  101752:	c3                   	ret
  101753:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  10175a:	00 
  10175b:	2e 8d 74 26 00       	lea    %cs:0x0(%esi,%eiz,1),%esi

00101760 <fat32_change_directory>:

bool fat32_change_directory(const char* dirname) {
  101760:	55                   	push   %ebp
  101761:	89 e5                	mov    %esp,%ebp
  101763:	57                   	push   %edi
  101764:	56                   	push   %esi
  101765:	53                   	push   %ebx
  101766:	81 ec 20 04 00 00    	sub    $0x420,%esp
    if (!is_initialized) return false;
  10176c:	8b 3d 1c 7c 10 00    	mov    0x107c1c,%edi
bool fat32_change_directory(const char* dirname) {
  101772:	8b 5d 08             	mov    0x8(%ebp),%ebx
    if (!is_initialized) return false;
  101775:	85 ff                	test   %edi,%edi
  101777:	75 0f                	jne    101788 <fat32_change_directory+0x28>
            return false;
        }
    }

    return false;
}
  101779:	8d 65 f4             	lea    -0xc(%ebp),%esp
    if (!is_initialized) return false;
  10177c:	31 c0                	xor    %eax,%eax
}
  10177e:	5b                   	pop    %ebx
  10177f:	5e                   	pop    %esi
  101780:	5f                   	pop    %edi
  101781:	5d                   	pop    %ebp
  101782:	c3                   	ret
  101783:	2e 8d 74 26 00       	lea    %cs:0x0(%esi,%eiz,1),%esi
    if (strcmp(dirname, "/") == 0) {
  101788:	68 5e 44 10 00       	push   $0x10445e
  10178d:	53                   	push   %ebx
  10178e:	e8 7d 19 00 00       	call   103110 <strcmp>
  101793:	59                   	pop    %ecx
  101794:	5e                   	pop    %esi
  101795:	85 c0                	test   %eax,%eax
  101797:	74 4f                	je     1017e8 <fat32_change_directory+0x88>
    if (strcmp(dirname, "..") == 0) {
  101799:	68 7b 44 10 00       	push   $0x10447b
  10179e:	53                   	push   %ebx
  10179f:	e8 6c 19 00 00       	call   103110 <strcmp>
  1017a4:	5e                   	pop    %esi
  1017a5:	5f                   	pop    %edi
  1017a6:	85 c0                	test   %eax,%eax
  1017a8:	75 6e                	jne    101818 <fat32_change_directory+0xb8>
        if (directory_depth > 0) {
  1017aa:	a1 80 69 10 00       	mov    0x106980,%eax
  1017af:	85 c0                	test   %eax,%eax
  1017b1:	7e c6                	jle    101779 <fat32_change_directory+0x19>
            directory_depth--;
  1017b3:	83 e8 01             	sub    $0x1,%eax
            current_directory = parent_directories[directory_depth];
  1017b6:	bf a0 7a 10 00       	mov    $0x107aa0,%edi
  1017bb:	b9 44 00 00 00       	mov    $0x44,%ecx
            directory_depth--;
  1017c0:	a3 80 69 10 00       	mov    %eax,0x106980
            current_directory = parent_directories[directory_depth];
  1017c5:	69 c0 10 01 00 00    	imul   $0x110,%eax,%eax
  1017cb:	8d b0 a0 69 10 00    	lea    0x1069a0(%eax),%esi
  1017d1:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
            update_path();
  1017d3:	e8 e8 fc ff ff       	call   1014c0 <update_path>
}
  1017d8:	8d 65 f4             	lea    -0xc(%ebp),%esp
        return true;
  1017db:	b8 01 00 00 00       	mov    $0x1,%eax
}
  1017e0:	5b                   	pop    %ebx
  1017e1:	5e                   	pop    %esi
  1017e2:	5f                   	pop    %edi
  1017e3:	5d                   	pop    %ebp
  1017e4:	c3                   	ret
  1017e5:	8d 76 00             	lea    0x0(%esi),%esi
        current_directory.cluster = boot_sector.root_cluster;
  1017e8:	a1 ec 7b 10 00       	mov    0x107bec,%eax
  1017ed:	a3 a0 7a 10 00       	mov    %eax,0x107aa0
        strcpy(current_directory.name, "/");
  1017f2:	68 5e 44 10 00       	push   $0x10445e
  1017f7:	68 a4 7a 10 00       	push   $0x107aa4
  1017fc:	e8 6f 19 00 00       	call   103170 <strcpy>
        directory_depth = 0;
  101801:	c7 05 80 69 10 00 00 	movl   $0x0,0x106980
  101808:	00 00 00 
        update_path();
  10180b:	e8 b0 fc ff ff       	call   1014c0 <update_path>
        return true;
  101810:	58                   	pop    %eax
  101811:	5a                   	pop    %edx
  101812:	eb c4                	jmp    1017d8 <fat32_change_directory+0x78>
  101814:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    if (strcmp(dirname, ".") == 0) {
  101818:	68 7c 44 10 00       	push   $0x10447c
  10181d:	53                   	push   %ebx
  10181e:	e8 ed 18 00 00       	call   103110 <strcmp>
  101823:	5a                   	pop    %edx
  101824:	59                   	pop    %ecx
  101825:	85 c0                	test   %eax,%eax
  101827:	74 af                	je     1017d8 <fat32_change_directory+0x78>
    memset(fat_name, ' ', 11);
  101829:	8d bd e9 fb ff ff    	lea    -0x417(%ebp),%edi
  10182f:	6a 0b                	push   $0xb
  101831:	6a 20                	push   $0x20
  101833:	57                   	push   %edi
  101834:	e8 f7 17 00 00       	call   103030 <memset>
    while (*dot && *dot != '.' && name_len < 8) {
  101839:	0f b6 03             	movzbl (%ebx),%eax
  10183c:	83 c4 0c             	add    $0xc,%esp
  10183f:	84 c0                	test   %al,%al
  101841:	74 71                	je     1018b4 <fat32_change_directory+0x154>
  101843:	3c 2e                	cmp    $0x2e,%al
  101845:	0f 84 85 02 00 00    	je     101ad0 <fat32_change_directory+0x370>
    size_t name_len = 0;
  10184b:	89 5d 08             	mov    %ebx,0x8(%ebp)
  10184e:	31 d2                	xor    %edx,%edx
  101850:	eb 33                	jmp    101885 <fat32_change_directory+0x125>
  101852:	eb 2c                	jmp    101880 <fat32_change_directory+0x120>
  101854:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  10185b:	00 
  10185c:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  101863:	00 
  101864:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  10186b:	00 
  10186c:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  101873:	00 
  101874:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  10187b:	00 
  10187c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    while (*dot && *dot != '.' && name_len < 8) {
  101880:	83 fa 08             	cmp    $0x8,%edx
  101883:	74 2c                	je     1018b1 <fat32_change_directory+0x151>
        fat_name[name_len] = (*dot >= 'a' && *dot <= 'z') ? 
  101885:	8d 70 9f             	lea    -0x61(%eax),%esi
                            (*dot - 'a' + 'A') : *dot;
  101888:	8d 48 e0             	lea    -0x20(%eax),%ecx
  10188b:	89 f3                	mov    %esi,%ebx
  10188d:	80 fb 1a             	cmp    $0x1a,%bl
  101890:	0f 42 c1             	cmovb  %ecx,%eax
        dot++;
  101893:	83 45 08 01          	addl   $0x1,0x8(%ebp)
        fat_name[name_len] = (*dot >= 'a' && *dot <= 'z') ? 
  101897:	88 04 17             	mov    %al,(%edi,%edx,1)
    while (*dot && *dot != '.' && name_len < 8) {
  10189a:	8b 45 08             	mov    0x8(%ebp),%eax
        name_len++;
  10189d:	83 c2 01             	add    $0x1,%edx
    while (*dot && *dot != '.' && name_len < 8) {
  1018a0:	0f b6 00             	movzbl (%eax),%eax
  1018a3:	84 c0                	test   %al,%al
  1018a5:	0f 95 c3             	setne  %bl
  1018a8:	3c 2e                	cmp    $0x2e,%al
  1018aa:	0f 95 c1             	setne  %cl
  1018ad:	84 cb                	test   %cl,%bl
  1018af:	75 cf                	jne    101880 <fat32_change_directory+0x120>
  1018b1:	8b 5d 08             	mov    0x8(%ebp),%ebx
    if (*dot == '.' && dot[1]) {
  1018b4:	3c 2e                	cmp    $0x2e,%al
  1018b6:	0f 84 14 02 00 00    	je     101ad0 <fat32_change_directory+0x370>
    uint32_t current_cluster = current_directory.cluster;
  1018bc:	a1 a0 7a 10 00       	mov    0x107aa0,%eax
    while (current_cluster < 0x0FFFFFF8) {
  1018c1:	3d f7 ff ff 0f       	cmp    $0xffffff7,%eax
  1018c6:	0f 87 ad fe ff ff    	ja     101779 <fat32_change_directory+0x19>
    return cluster_begin_lba + ((cluster - 2) * sectors_per_cluster);
  1018cc:	8b 0d b0 7b 10 00    	mov    0x107bb0,%ecx
  1018d2:	8d 50 fe             	lea    -0x2(%eax),%edx
        for (uint32_t i = 0; i < sectors_per_cluster; i++) {
  1018d5:	31 db                	xor    %ebx,%ebx
    return cluster_begin_lba + ((cluster - 2) * sectors_per_cluster);
  1018d7:	0f af d1             	imul   %ecx,%edx
  1018da:	03 15 b4 7b 10 00    	add    0x107bb4,%edx
  1018e0:	89 d6                	mov    %edx,%esi
        for (uint32_t i = 0; i < sectors_per_cluster; i++) {
  1018e2:	85 c9                	test   %ecx,%ecx
  1018e4:	0f 84 97 01 00 00    	je     101a81 <fat32_change_directory+0x321>
  1018ea:	89 85 d4 fb ff ff    	mov    %eax,-0x42c(%ebp)
            if (!ata_read_sectors(current_sector + i, 1, buffer)) {
  1018f0:	8d 85 f4 fd ff ff    	lea    -0x20c(%ebp),%eax
  1018f6:	50                   	push   %eax
  1018f7:	8d 04 1e             	lea    (%esi,%ebx,1),%eax
  1018fa:	6a 01                	push   $0x1
  1018fc:	50                   	push   %eax
  1018fd:	e8 be f8 ff ff       	call   1011c0 <ata_read_sectors>
  101902:	83 c4 0c             	add    $0xc,%esp
  101905:	85 c0                	test   %eax,%eax
  101907:	0f 84 6c fe ff ff    	je     101779 <fat32_change_directory+0x19>
  10190d:	8d 85 f4 fd ff ff    	lea    -0x20c(%ebp),%eax
  101913:	89 9d dc fb ff ff    	mov    %ebx,-0x424(%ebp)
  101919:	89 85 e4 fb ff ff    	mov    %eax,-0x41c(%ebp)
  10191f:	89 b5 d8 fb ff ff    	mov    %esi,-0x428(%ebp)
  101925:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  10192c:	00 
  10192d:	8d 76 00             	lea    0x0(%esi),%esi
                if (entry[j].name[0] == 0x00) {
  101930:	8b b5 e4 fb ff ff    	mov    -0x41c(%ebp),%esi
  101936:	0f b6 06             	movzbl (%esi),%eax
  101939:	84 c0                	test   %al,%al
  10193b:	0f 84 38 fe ff ff    	je     101779 <fat32_change_directory+0x19>
                if (entry[j].name[0] == 0xE5 || entry[j].attributes == 0x08) {
  101941:	3c e5                	cmp    $0xe5,%al
  101943:	0f 84 ff 00 00 00    	je     101a48 <fat32_change_directory+0x2e8>
  101949:	0f b6 46 0b          	movzbl 0xb(%esi),%eax
  10194d:	3c 08                	cmp    $0x8,%al
  10194f:	0f 84 f3 00 00 00    	je     101a48 <fat32_change_directory+0x2e8>
                if (!(entry[j].attributes & 0x10)) {
  101955:	a8 10                	test   $0x10,%al
  101957:	0f 84 eb 00 00 00    	je     101a48 <fat32_change_directory+0x2e8>
    for (i = 0; i < 11; i++) {
  10195d:	31 d2                	xor    %edx,%edx
  10195f:	90                   	nop
        if (dir_name[i] == ' ') {
  101960:	8b 85 e4 fb ff ff    	mov    -0x41c(%ebp),%eax
        char c1 = fat_name[i];
  101966:	0f b6 0c 17          	movzbl (%edi,%edx,1),%ecx
        if (dir_name[i] == ' ') {
  10196a:	0f b6 04 10          	movzbl (%eax,%edx,1),%eax
  10196e:	3c 20                	cmp    $0x20,%al
  101970:	0f 84 ba 00 00 00    	je     101a30 <fat32_change_directory+0x2d0>
        if (c1 >= 'a' && c1 <= 'z') c1 = c1 - 'a' + 'A';
  101976:	8d 71 9f             	lea    -0x61(%ecx),%esi
  101979:	8d 59 e0             	lea    -0x20(%ecx),%ebx
  10197c:	88 9d e3 fb ff ff    	mov    %bl,-0x41d(%ebp)
  101982:	89 f3                	mov    %esi,%ebx
        if (c2 >= 'a' && c2 <= 'z') c2 = c2 - 'a' + 'A';
  101984:	8d 70 9f             	lea    -0x61(%eax),%esi
        if (c1 >= 'a' && c1 <= 'z') c1 = c1 - 'a' + 'A';
  101987:	80 fb 1a             	cmp    $0x1a,%bl
  10198a:	0f b6 9d e3 fb ff ff 	movzbl -0x41d(%ebp),%ebx
  101991:	0f 42 cb             	cmovb  %ebx,%ecx
        if (c2 >= 'a' && c2 <= 'z') c2 = c2 - 'a' + 'A';
  101994:	8d 58 e0             	lea    -0x20(%eax),%ebx
  101997:	88 9d e3 fb ff ff    	mov    %bl,-0x41d(%ebp)
  10199d:	89 f3                	mov    %esi,%ebx
  10199f:	80 fb 1a             	cmp    $0x1a,%bl
  1019a2:	0f b6 9d e3 fb ff ff 	movzbl -0x41d(%ebp),%ebx
  1019a9:	0f 42 c3             	cmovb  %ebx,%eax
        if (c1 != c2) return false;
  1019ac:	38 c1                	cmp    %al,%cl
  1019ae:	0f 85 94 00 00 00    	jne    101a48 <fat32_change_directory+0x2e8>
    for (i = 0; i < 11; i++) {
  1019b4:	83 c2 01             	add    $0x1,%edx
  1019b7:	83 fa 0b             	cmp    $0xb,%edx
  1019ba:	75 a4                	jne    101960 <fat32_change_directory+0x200>
                    if (directory_depth < 16) {
  1019bc:	a1 80 69 10 00       	mov    0x106980,%eax
  1019c1:	83 f8 0f             	cmp    $0xf,%eax
  1019c4:	7f 22                	jg     1019e8 <fat32_change_directory+0x288>
                        parent_directories[directory_depth++] = current_directory;
  1019c6:	8d 50 01             	lea    0x1(%eax),%edx
  1019c9:	be a0 7a 10 00       	mov    $0x107aa0,%esi
  1019ce:	b9 44 00 00 00       	mov    $0x44,%ecx
  1019d3:	69 c0 10 01 00 00    	imul   $0x110,%eax,%eax
  1019d9:	89 15 80 69 10 00    	mov    %edx,0x106980
  1019df:	05 a0 69 10 00       	add    $0x1069a0,%eax
  1019e4:	89 c7                	mov    %eax,%edi
  1019e6:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
                    uint32_t new_cluster = ((uint32_t)entry[j].first_cluster_high << 16) |
  1019e8:	8b bd e4 fb ff ff    	mov    -0x41c(%ebp),%edi
  1019ee:	0f b7 47 14          	movzwl 0x14(%edi),%eax
                                          entry[j].first_cluster_low;
  1019f2:	0f b7 57 1a          	movzwl 0x1a(%edi),%edx
                    uint32_t new_cluster = ((uint32_t)entry[j].first_cluster_high << 16) |
  1019f6:	c1 e0 10             	shl    $0x10,%eax
  1019f9:	09 d0                	or     %edx,%eax
  1019fb:	a3 a0 7a 10 00       	mov    %eax,0x107aa0
                    memcpy(current_directory.name, entry[j].name, 11);
  101a00:	6a 0b                	push   $0xb
  101a02:	57                   	push   %edi
  101a03:	68 a4 7a 10 00       	push   $0x107aa4
  101a08:	e8 73 16 00 00       	call   103080 <memcpy>
                    current_directory.name[11] = '\0';
  101a0d:	c6 05 af 7a 10 00 00 	movb   $0x0,0x107aaf
                    update_path();
  101a14:	e8 a7 fa ff ff       	call   1014c0 <update_path>
                    return true;
  101a19:	83 c4 0c             	add    $0xc,%esp
  101a1c:	e9 b7 fd ff ff       	jmp    1017d8 <fat32_change_directory+0x78>
  101a21:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  101a28:	00 
  101a29:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
            while (i < 11 && fat_name[i] == ' ') i++;
  101a30:	80 3c 17 20          	cmpb   $0x20,(%edi,%edx,1)
  101a34:	75 12                	jne    101a48 <fat32_change_directory+0x2e8>
  101a36:	83 c2 01             	add    $0x1,%edx
  101a39:	83 fa 0b             	cmp    $0xb,%edx
  101a3c:	75 f2                	jne    101a30 <fat32_change_directory+0x2d0>
  101a3e:	e9 79 ff ff ff       	jmp    1019bc <fat32_change_directory+0x25c>
  101a43:	2e 8d 74 26 00       	lea    %cs:0x0(%esi,%eiz,1),%esi
            for (uint32_t j = 0; j < (SECTOR_SIZE / sizeof(fat32_dir_entry_t)); j++) {
  101a48:	83 85 e4 fb ff ff 20 	addl   $0x20,-0x41c(%ebp)
  101a4f:	8b 85 e4 fb ff ff    	mov    -0x41c(%ebp),%eax
  101a55:	8d 4d f4             	lea    -0xc(%ebp),%ecx
  101a58:	39 c1                	cmp    %eax,%ecx
  101a5a:	0f 85 d0 fe ff ff    	jne    101930 <fat32_change_directory+0x1d0>
        for (uint32_t i = 0; i < sectors_per_cluster; i++) {
  101a60:	8b 9d dc fb ff ff    	mov    -0x424(%ebp),%ebx
  101a66:	8b b5 d8 fb ff ff    	mov    -0x428(%ebp),%esi
  101a6c:	83 c3 01             	add    $0x1,%ebx
  101a6f:	3b 1d b0 7b 10 00    	cmp    0x107bb0,%ebx
  101a75:	0f 82 75 fe ff ff    	jb     1018f0 <fat32_change_directory+0x190>
  101a7b:	8b 85 d4 fb ff ff    	mov    -0x42c(%ebp),%eax
    uint32_t fat_sector = fat_begin_lba + ((cluster * 4) / 512);
  101a81:	8d 1c 85 00 00 00 00 	lea    0x0(,%eax,4),%ebx
    if (!ata_read_sectors(fat_sector, 1, buffer)) {
  101a88:	8d 85 f4 fb ff ff    	lea    -0x40c(%ebp),%eax
  101a8e:	50                   	push   %eax
    uint32_t fat_sector = fat_begin_lba + ((cluster * 4) / 512);
  101a8f:	89 d8                	mov    %ebx,%eax
    if (!ata_read_sectors(fat_sector, 1, buffer)) {
  101a91:	6a 01                	push   $0x1
    uint32_t fat_sector = fat_begin_lba + ((cluster * 4) / 512);
  101a93:	c1 e8 09             	shr    $0x9,%eax
  101a96:	03 05 b8 7b 10 00    	add    0x107bb8,%eax
    if (!ata_read_sectors(fat_sector, 1, buffer)) {
  101a9c:	50                   	push   %eax
  101a9d:	e8 1e f7 ff ff       	call   1011c0 <ata_read_sectors>
  101aa2:	83 c4 0c             	add    $0xc,%esp
  101aa5:	85 c0                	test   %eax,%eax
  101aa7:	74 63                	je     101b0c <fat32_change_directory+0x3ac>
    return buffer[offset/4] & 0x0FFFFFFF;
  101aa9:	81 e3 fc 01 00 00    	and    $0x1fc,%ebx
  101aaf:	8b 84 2b f4 fb ff ff 	mov    -0x40c(%ebx,%ebp,1),%eax
        if (current_cluster == 0) {
  101ab6:	25 ff ff ff 0f       	and    $0xfffffff,%eax
  101abb:	0f 85 00 fe ff ff    	jne    1018c1 <fat32_change_directory+0x161>
  101ac1:	e9 b3 fc ff ff       	jmp    101779 <fat32_change_directory+0x19>
  101ac6:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  101acd:	00 
  101ace:	66 90                	xchg   %ax,%ax
    if (*dot == '.' && dot[1]) {
  101ad0:	0f b6 43 01          	movzbl 0x1(%ebx),%eax
  101ad4:	84 c0                	test   %al,%al
  101ad6:	0f 84 e0 fd ff ff    	je     1018bc <fat32_change_directory+0x15c>
        size_t ext_pos = 8;
  101adc:	ba 08 00 00 00       	mov    $0x8,%edx
  101ae1:	89 de                	mov    %ebx,%esi
            fat_name[ext_pos] = (*dot >= 'a' && *dot <= 'z') ? 
  101ae3:	8d 58 9f             	lea    -0x61(%eax),%ebx
                               (*dot - 'a' + 'A') : *dot;
  101ae6:	8d 48 e0             	lea    -0x20(%eax),%ecx
  101ae9:	80 fb 1a             	cmp    $0x1a,%bl
  101aec:	0f 42 c1             	cmovb  %ecx,%eax
            fat_name[ext_pos] = (*dot >= 'a' && *dot <= 'z') ? 
  101aef:	88 04 17             	mov    %al,(%edi,%edx,1)
            ext_pos++;
  101af2:	83 c2 01             	add    $0x1,%edx
        while (*dot && ext_pos < 11) {
  101af5:	0f b6 44 16 f9       	movzbl -0x7(%esi,%edx,1),%eax
  101afa:	84 c0                	test   %al,%al
  101afc:	0f 84 ba fd ff ff    	je     1018bc <fat32_change_directory+0x15c>
  101b02:	83 fa 0b             	cmp    $0xb,%edx
  101b05:	75 dc                	jne    101ae3 <fat32_change_directory+0x383>
  101b07:	e9 b0 fd ff ff       	jmp    1018bc <fat32_change_directory+0x15c>
        current_cluster = fat32_get_next_cluster(current_cluster);
  101b0c:	b8 f7 ff ff 0f       	mov    $0xffffff7,%eax
  101b11:	e9 b6 fd ff ff       	jmp    1018cc <fat32_change_directory+0x16c>
  101b16:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  101b1d:	00 
  101b1e:	66 90                	xchg   %ax,%ax

00101b20 <fat32_list_directory>:

bool fat32_list_directory(void (*callback)(const char* name, uint32_t size, uint8_t attr)) {
  101b20:	55                   	push   %ebp
  101b21:	89 e5                	mov    %esp,%ebp
  101b23:	57                   	push   %edi
  101b24:	56                   	push   %esi
  101b25:	53                   	push   %ebx
  101b26:	81 ec 08 04 00 00    	sub    $0x408,%esp
    if (!is_initialized) return false;
  101b2c:	8b 15 1c 7c 10 00    	mov    0x107c1c,%edx
bool fat32_list_directory(void (*callback)(const char* name, uint32_t size, uint8_t attr)) {
  101b32:	8b 7d 08             	mov    0x8(%ebp),%edi

    uint32_t current_cluster = current_directory.cluster;
  101b35:	a1 a0 7a 10 00       	mov    0x107aa0,%eax
    if (!is_initialized) return false;
  101b3a:	85 d2                	test   %edx,%edx
  101b3c:	0f 84 df 00 00 00    	je     101c21 <fat32_list_directory+0x101>
    uint8_t buffer[512];
    fat32_dir_entry_t* entry;

    while (current_cluster < 0x0FFFFFF8) {
  101b42:	3d f7 ff ff 0f       	cmp    $0xffffff7,%eax
  101b47:	0f 87 e3 00 00 00    	ja     101c30 <fat32_list_directory+0x110>
  101b4d:	89 c2                	mov    %eax,%edx
    return cluster_begin_lba + ((cluster - 2) * sectors_per_cluster);
  101b4f:	8b 0d b0 7b 10 00    	mov    0x107bb0,%ecx
  101b55:	8d 42 fe             	lea    -0x2(%edx),%eax
  101b58:	0f af c1             	imul   %ecx,%eax
  101b5b:	03 05 b4 7b 10 00    	add    0x107bb4,%eax
  101b61:	89 85 f0 fb ff ff    	mov    %eax,-0x410(%ebp)
        uint32_t current_sector = cluster_to_lba(current_cluster);
        
        for (uint32_t i = 0; i < sectors_per_cluster; i++) {
  101b67:	85 c9                	test   %ecx,%ecx
  101b69:	74 76                	je     101be1 <fat32_list_directory+0xc1>
  101b6b:	89 95 ec fb ff ff    	mov    %edx,-0x414(%ebp)
  101b71:	31 db                	xor    %ebx,%ebx
            if (!ata_read_sectors(current_sector + i, 1, buffer)) {
  101b73:	8d 85 f4 fd ff ff    	lea    -0x20c(%ebp),%eax
  101b79:	50                   	push   %eax
  101b7a:	8b 85 f0 fb ff ff    	mov    -0x410(%ebp),%eax
  101b80:	6a 01                	push   $0x1
  101b82:	01 d8                	add    %ebx,%eax
  101b84:	50                   	push   %eax
  101b85:	e8 36 f6 ff ff       	call   1011c0 <ata_read_sectors>
  101b8a:	83 c4 0c             	add    $0xc,%esp
  101b8d:	85 c0                	test   %eax,%eax
  101b8f:	0f 84 8c 00 00 00    	je     101c21 <fat32_list_directory+0x101>
  101b95:	8d b5 f4 fd ff ff    	lea    -0x20c(%ebp),%esi
  101b9b:	2e 8d 74 26 00       	lea    %cs:0x0(%esi,%eiz,1),%esi
            }

            entry = (fat32_dir_entry_t*)buffer;
            for (uint32_t j = 0; j < (SECTOR_SIZE / sizeof(fat32_dir_entry_t)); j++) {
                // Check for end of directory
                if (entry[j].name[0] == 0x00) {
  101ba0:	0f b6 06             	movzbl (%esi),%eax
  101ba3:	84 c0                	test   %al,%al
  101ba5:	0f 84 85 00 00 00    	je     101c30 <fat32_list_directory+0x110>
                    return true;
                }

                // Skip deleted entries, volume labels, and special entries (. and ..)
                if (entry[j].name[0] == 0xE5 || 
  101bab:	3c e5                	cmp    $0xe5,%al
  101bad:	74 17                	je     101bc6 <fat32_list_directory+0xa6>
                    entry[j].attributes == 0x08 ||
  101baf:	0f b6 56 0b          	movzbl 0xb(%esi),%edx
  101bb3:	3c 2e                	cmp    $0x2e,%al
  101bb5:	74 0f                	je     101bc6 <fat32_list_directory+0xa6>
  101bb7:	80 fa 08             	cmp    $0x8,%dl
  101bba:	74 0a                	je     101bc6 <fat32_list_directory+0xa6>
                    entry[j].name[0] == '.') {
                    continue;
                }

                callback((char*)entry[j].name, entry[j].file_size, entry[j].attributes);
  101bbc:	52                   	push   %edx
  101bbd:	ff 76 1c             	push   0x1c(%esi)
  101bc0:	56                   	push   %esi
  101bc1:	ff d7                	call   *%edi
  101bc3:	83 c4 0c             	add    $0xc,%esp
            for (uint32_t j = 0; j < (SECTOR_SIZE / sizeof(fat32_dir_entry_t)); j++) {
  101bc6:	83 c6 20             	add    $0x20,%esi
  101bc9:	8d 45 f4             	lea    -0xc(%ebp),%eax
  101bcc:	39 c6                	cmp    %eax,%esi
  101bce:	75 d0                	jne    101ba0 <fat32_list_directory+0x80>
        for (uint32_t i = 0; i < sectors_per_cluster; i++) {
  101bd0:	83 c3 01             	add    $0x1,%ebx
  101bd3:	3b 1d b0 7b 10 00    	cmp    0x107bb0,%ebx
  101bd9:	72 98                	jb     101b73 <fat32_list_directory+0x53>
  101bdb:	8b 95 ec fb ff ff    	mov    -0x414(%ebp),%edx
    uint32_t fat_sector = fat_begin_lba + ((cluster * 4) / 512);
  101be1:	8d 1c 95 00 00 00 00 	lea    0x0(,%edx,4),%ebx
    if (!ata_read_sectors(fat_sector, 1, buffer)) {
  101be8:	8d 85 f4 fb ff ff    	lea    -0x40c(%ebp),%eax
  101bee:	50                   	push   %eax
    uint32_t fat_sector = fat_begin_lba + ((cluster * 4) / 512);
  101bef:	89 d8                	mov    %ebx,%eax
    if (!ata_read_sectors(fat_sector, 1, buffer)) {
  101bf1:	6a 01                	push   $0x1
    uint32_t fat_sector = fat_begin_lba + ((cluster * 4) / 512);
  101bf3:	c1 e8 09             	shr    $0x9,%eax
  101bf6:	03 05 b8 7b 10 00    	add    0x107bb8,%eax
    if (!ata_read_sectors(fat_sector, 1, buffer)) {
  101bfc:	50                   	push   %eax
  101bfd:	e8 be f5 ff ff       	call   1011c0 <ata_read_sectors>
  101c02:	83 c4 0c             	add    $0xc,%esp
  101c05:	85 c0                	test   %eax,%eax
  101c07:	74 34                	je     101c3d <fat32_list_directory+0x11d>
    return buffer[offset/4] & 0x0FFFFFFF;
  101c09:	81 e3 fc 01 00 00    	and    $0x1fc,%ebx
  101c0f:	8b 84 2b f4 fb ff ff 	mov    -0x40c(%ebx,%ebp,1),%eax
            }
        }

        current_cluster = fat32_get_next_cluster(current_cluster);
        if (current_cluster == 0) {
  101c16:	25 ff ff ff 0f       	and    $0xfffffff,%eax
  101c1b:	0f 85 21 ff ff ff    	jne    101b42 <fat32_list_directory+0x22>
            return false;
        }
    }

    return true;
}
  101c21:	8d 65 f4             	lea    -0xc(%ebp),%esp
    if (!is_initialized) return false;
  101c24:	31 c0                	xor    %eax,%eax
}
  101c26:	5b                   	pop    %ebx
  101c27:	5e                   	pop    %esi
  101c28:	5f                   	pop    %edi
  101c29:	5d                   	pop    %ebp
  101c2a:	c3                   	ret
  101c2b:	2e 8d 74 26 00       	lea    %cs:0x0(%esi,%eiz,1),%esi
  101c30:	8d 65 f4             	lea    -0xc(%ebp),%esp
                    return true;
  101c33:	b8 01 00 00 00       	mov    $0x1,%eax
}
  101c38:	5b                   	pop    %ebx
  101c39:	5e                   	pop    %esi
  101c3a:	5f                   	pop    %edi
  101c3b:	5d                   	pop    %ebp
  101c3c:	c3                   	ret
        current_cluster = fat32_get_next_cluster(current_cluster);
  101c3d:	ba f7 ff ff 0f       	mov    $0xffffff7,%edx
  101c42:	e9 08 ff ff ff       	jmp    101b4f <fat32_list_directory+0x2f>
  101c47:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  101c4e:	00 
  101c4f:	90                   	nop

00101c50 <fat32_is_directory>:

bool fat32_is_directory(const fat32_dir_entry_t* entry) {
  101c50:	55                   	push   %ebp
  101c51:	89 e5                	mov    %esp,%ebp
    return (entry->attributes & ATTR_DIRECTORY) != 0;
  101c53:	8b 45 08             	mov    0x8(%ebp),%eax
}
  101c56:	5d                   	pop    %ebp
    return (entry->attributes & ATTR_DIRECTORY) != 0;
  101c57:	0f b6 40 0b          	movzbl 0xb(%eax),%eax
  101c5b:	c0 e8 04             	shr    $0x4,%al
  101c5e:	83 e0 01             	and    $0x1,%eax
}
  101c61:	c3                   	ret
  101c62:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  101c69:	00 
  101c6a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00101c70 <fat32_create_file>:

bool fat32_create_file(const char* name) {
    if (!is_initialized) return false;
  101c70:	a1 1c 7c 10 00       	mov    0x107c1c,%eax
  101c75:	85 c0                	test   %eax,%eax
  101c77:	0f 84 33 01 00 00    	je     101db0 <fat32_create_file+0x140>

    uint32_t current_cluster = current_directory.cluster;
  101c7d:	a1 a0 7a 10 00       	mov    0x107aa0,%eax
    uint8_t buffer[512];
    fat32_dir_entry_t* entry;

    while (current_cluster < 0x0FFFFFF8) {
  101c82:	3d f7 ff ff 0f       	cmp    $0xffffff7,%eax
  101c87:	0f 87 23 01 00 00    	ja     101db0 <fat32_create_file+0x140>
bool fat32_create_file(const char* name) {
  101c8d:	55                   	push   %ebp
  101c8e:	89 e5                	mov    %esp,%ebp
  101c90:	57                   	push   %edi
  101c91:	56                   	push   %esi
  101c92:	53                   	push   %ebx
  101c93:	81 ec 0c 04 00 00    	sub    $0x40c,%esp
    return cluster_begin_lba + ((cluster - 2) * sectors_per_cluster);
  101c99:	8b 15 b0 7b 10 00    	mov    0x107bb0,%edx
  101c9f:	8d 48 fe             	lea    -0x2(%eax),%ecx
  101ca2:	0f af ca             	imul   %edx,%ecx
  101ca5:	03 0d b4 7b 10 00    	add    0x107bb4,%ecx
        uint32_t current_sector = cluster_to_lba(current_cluster);

        for (uint32_t i = 0; i < sectors_per_cluster; i++) {
  101cab:	85 d2                	test   %edx,%edx
  101cad:	74 67                	je     101d16 <fat32_create_file+0xa6>
  101caf:	89 85 e8 fb ff ff    	mov    %eax,-0x418(%ebp)
  101cb5:	31 ff                	xor    %edi,%edi
  101cb7:	8d b5 f4 fd ff ff    	lea    -0x20c(%ebp),%esi
  101cbd:	89 8d ec fb ff ff    	mov    %ecx,-0x414(%ebp)
            if (!ata_read_sectors(current_sector + i, 1, buffer)) {
  101cc3:	8b 85 ec fb ff ff    	mov    -0x414(%ebp),%eax
  101cc9:	56                   	push   %esi
  101cca:	6a 01                	push   $0x1
  101ccc:	8d 14 38             	lea    (%eax,%edi,1),%edx
  101ccf:	52                   	push   %edx
  101cd0:	89 95 f0 fb ff ff    	mov    %edx,-0x410(%ebp)
  101cd6:	e8 e5 f4 ff ff       	call   1011c0 <ata_read_sectors>
  101cdb:	83 c4 0c             	add    $0xc,%esp
  101cde:	85 c0                	test   %eax,%eax
  101ce0:	74 79                	je     101d5b <fat32_create_file+0xeb>
  101ce2:	8b 95 f0 fb ff ff    	mov    -0x410(%ebp),%edx
  101ce8:	89 f3                	mov    %esi,%ebx
  101cea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
                return false;
            }

            entry = (fat32_dir_entry_t*)buffer;
            for (uint32_t j = 0; j < 16; j++) {
                if (entry[j].name[0] == 0x00 || entry[j].name[0] == 0xE5) {
  101cf0:	0f b6 03             	movzbl (%ebx),%eax
  101cf3:	84 c0                	test   %al,%al
  101cf5:	74 71                	je     101d68 <fat32_create_file+0xf8>
  101cf7:	3c e5                	cmp    $0xe5,%al
  101cf9:	74 6d                	je     101d68 <fat32_create_file+0xf8>
            for (uint32_t j = 0; j < 16; j++) {
  101cfb:	83 c3 20             	add    $0x20,%ebx
  101cfe:	8d 45 f4             	lea    -0xc(%ebp),%eax
  101d01:	39 d8                	cmp    %ebx,%eax
  101d03:	75 eb                	jne    101cf0 <fat32_create_file+0x80>
        for (uint32_t i = 0; i < sectors_per_cluster; i++) {
  101d05:	83 c7 01             	add    $0x1,%edi
  101d08:	3b 3d b0 7b 10 00    	cmp    0x107bb0,%edi
  101d0e:	72 b3                	jb     101cc3 <fat32_create_file+0x53>
  101d10:	8b 85 e8 fb ff ff    	mov    -0x418(%ebp),%eax
    uint32_t fat_sector = fat_begin_lba + ((cluster * 4) / 512);
  101d16:	8d 1c 85 00 00 00 00 	lea    0x0(,%eax,4),%ebx
    if (!ata_read_sectors(fat_sector, 1, buffer)) {
  101d1d:	8d 85 f4 fb ff ff    	lea    -0x40c(%ebp),%eax
  101d23:	50                   	push   %eax
    uint32_t fat_sector = fat_begin_lba + ((cluster * 4) / 512);
  101d24:	89 d8                	mov    %ebx,%eax
    if (!ata_read_sectors(fat_sector, 1, buffer)) {
  101d26:	6a 01                	push   $0x1
    uint32_t fat_sector = fat_begin_lba + ((cluster * 4) / 512);
  101d28:	c1 e8 09             	shr    $0x9,%eax
  101d2b:	03 05 b8 7b 10 00    	add    0x107bb8,%eax
    if (!ata_read_sectors(fat_sector, 1, buffer)) {
  101d31:	50                   	push   %eax
  101d32:	e8 89 f4 ff ff       	call   1011c0 <ata_read_sectors>
  101d37:	83 c4 0c             	add    $0xc,%esp
  101d3a:	85 c0                	test   %eax,%eax
  101d3c:	74 75                	je     101db3 <fat32_create_file+0x143>
    return buffer[offset/4] & 0x0FFFFFFF;
  101d3e:	81 e3 fc 01 00 00    	and    $0x1fc,%ebx
  101d44:	8b 84 2b f4 fb ff ff 	mov    -0x40c(%ebx,%ebp,1),%eax
  101d4b:	25 ff ff ff 0f       	and    $0xfffffff,%eax
    while (current_cluster < 0x0FFFFFF8) {
  101d50:	3d f7 ff ff 0f       	cmp    $0xffffff7,%eax
  101d55:	0f 86 3e ff ff ff    	jbe    101c99 <fat32_create_file+0x29>
            }
        }
        current_cluster = fat32_get_next_cluster(current_cluster);
    }
    return false;
}
  101d5b:	8d 65 f4             	lea    -0xc(%ebp),%esp
    if (!is_initialized) return false;
  101d5e:	31 c0                	xor    %eax,%eax
}
  101d60:	5b                   	pop    %ebx
  101d61:	5e                   	pop    %esi
  101d62:	5f                   	pop    %edi
  101d63:	5d                   	pop    %ebp
  101d64:	c3                   	ret
  101d65:	8d 76 00             	lea    0x0(%esi),%esi
                    memset(&entry[j], 0, sizeof(fat32_dir_entry_t));
  101d68:	6a 20                	push   $0x20
  101d6a:	89 d7                	mov    %edx,%edi
  101d6c:	6a 00                	push   $0x0
  101d6e:	53                   	push   %ebx
  101d6f:	e8 bc 12 00 00       	call   103030 <memset>
                    memcpy(entry[j].name, name, 11);
  101d74:	6a 0b                	push   $0xb
  101d76:	ff 75 08             	push   0x8(%ebp)
  101d79:	53                   	push   %ebx
  101d7a:	e8 01 13 00 00       	call   103080 <memcpy>
                    entry[j].attributes = 0x20;
  101d7f:	c6 43 0b 20          	movb   $0x20,0xb(%ebx)
                    entry[j].file_size = 0;
  101d83:	c7 43 1c 00 00 00 00 	movl   $0x0,0x1c(%ebx)
                    if (!ata_write_sectors(current_sector + i, 1, buffer)) {
  101d8a:	56                   	push   %esi
  101d8b:	6a 01                	push   $0x1
  101d8d:	57                   	push   %edi
  101d8e:	e8 8d f5 ff ff       	call   101320 <ata_write_sectors>
  101d93:	83 c4 24             	add    $0x24,%esp
  101d96:	85 c0                	test   %eax,%eax
  101d98:	0f 95 c0             	setne  %al
}
  101d9b:	8d 65 f4             	lea    -0xc(%ebp),%esp
  101d9e:	5b                   	pop    %ebx
                    if (!ata_write_sectors(current_sector + i, 1, buffer)) {
  101d9f:	0f b6 c0             	movzbl %al,%eax
}
  101da2:	5e                   	pop    %esi
  101da3:	5f                   	pop    %edi
  101da4:	5d                   	pop    %ebp
  101da5:	c3                   	ret
  101da6:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  101dad:	00 
  101dae:	66 90                	xchg   %ax,%ax
    if (!is_initialized) return false;
  101db0:	31 c0                	xor    %eax,%eax
}
  101db2:	c3                   	ret
        return 0x0FFFFFF7;
  101db3:	b8 f7 ff ff 0f       	mov    $0xffffff7,%eax
  101db8:	e9 dc fe ff ff       	jmp    101c99 <fat32_create_file+0x29>
  101dbd:	8d 76 00             	lea    0x0(%esi),%esi

00101dc0 <fat32_delete_file>:

bool fat32_delete_file(const char* name) {
  101dc0:	55                   	push   %ebp
  101dc1:	89 e5                	mov    %esp,%ebp
  101dc3:	57                   	push   %edi
  101dc4:	56                   	push   %esi
  101dc5:	53                   	push   %ebx
  101dc6:	81 ec 0c 04 00 00    	sub    $0x40c,%esp
    if (!is_initialized) return false;
  101dcc:	a1 1c 7c 10 00       	mov    0x107c1c,%eax
bool fat32_delete_file(const char* name) {
  101dd1:	8b 5d 08             	mov    0x8(%ebp),%ebx
    if (!is_initialized) return false;
  101dd4:	85 c0                	test   %eax,%eax
  101dd6:	0f 84 df 00 00 00    	je     101ebb <fat32_delete_file+0xfb>

    uint32_t current_cluster = current_directory.cluster;
  101ddc:	a1 a0 7a 10 00       	mov    0x107aa0,%eax
    uint8_t buffer[512];
    fat32_dir_entry_t* entry;

    while (current_cluster < 0x0FFFFFF8) {
  101de1:	3d f7 ff ff 0f       	cmp    $0xffffff7,%eax
  101de6:	0f 87 cf 00 00 00    	ja     101ebb <fat32_delete_file+0xfb>
    return cluster_begin_lba + ((cluster - 2) * sectors_per_cluster);
  101dec:	8b 15 b0 7b 10 00    	mov    0x107bb0,%edx
  101df2:	8d 48 fe             	lea    -0x2(%eax),%ecx
  101df5:	0f af ca             	imul   %edx,%ecx
  101df8:	03 0d b4 7b 10 00    	add    0x107bb4,%ecx
        uint32_t current_sector = cluster_to_lba(current_cluster);

        for (uint32_t i = 0; i < sectors_per_cluster; i++) {
  101dfe:	85 d2                	test   %edx,%edx
  101e00:	74 74                	je     101e76 <fat32_delete_file+0xb6>
  101e02:	89 85 e8 fb ff ff    	mov    %eax,-0x418(%ebp)
  101e08:	31 f6                	xor    %esi,%esi
  101e0a:	89 8d f0 fb ff ff    	mov    %ecx,-0x410(%ebp)
            if (!ata_read_sectors(current_sector + i, 1, buffer)) {
  101e10:	8b 85 f0 fb ff ff    	mov    -0x410(%ebp),%eax
  101e16:	8d 95 f4 fd ff ff    	lea    -0x20c(%ebp),%edx
  101e1c:	01 f0                	add    %esi,%eax
  101e1e:	89 85 ec fb ff ff    	mov    %eax,-0x414(%ebp)
  101e24:	52                   	push   %edx
  101e25:	6a 01                	push   $0x1
  101e27:	50                   	push   %eax
  101e28:	e8 93 f3 ff ff       	call   1011c0 <ata_read_sectors>
  101e2d:	83 c4 0c             	add    $0xc,%esp
  101e30:	85 c0                	test   %eax,%eax
  101e32:	0f 84 83 00 00 00    	je     101ebb <fat32_delete_file+0xfb>
  101e38:	8d bd f4 fd ff ff    	lea    -0x20c(%ebp),%edi
  101e3e:	66 90                	xchg   %ax,%ax
                return false;
            }

            entry = (fat32_dir_entry_t*)buffer;
            for (uint32_t j = 0; j < 16; j++) {
                if (entry[j].name[0] != 0x00 && entry[j].name[0] != 0xE5) {
  101e40:	0f b6 07             	movzbl (%edi),%eax
  101e43:	84 c0                	test   %al,%al
  101e45:	74 14                	je     101e5b <fat32_delete_file+0x9b>
  101e47:	3c e5                	cmp    $0xe5,%al
  101e49:	74 10                	je     101e5b <fat32_delete_file+0x9b>
                    if (memcmp(entry[j].name, name, 11) == 0) {
  101e4b:	6a 0b                	push   $0xb
  101e4d:	53                   	push   %ebx
  101e4e:	57                   	push   %edi
  101e4f:	e8 5c 12 00 00       	call   1030b0 <memcmp>
  101e54:	83 c4 0c             	add    $0xc,%esp
  101e57:	85 c0                	test   %eax,%eax
  101e59:	74 6d                	je     101ec8 <fat32_delete_file+0x108>
            for (uint32_t j = 0; j < 16; j++) {
  101e5b:	83 c7 20             	add    $0x20,%edi
  101e5e:	8d 45 f4             	lea    -0xc(%ebp),%eax
  101e61:	39 f8                	cmp    %edi,%eax
  101e63:	75 db                	jne    101e40 <fat32_delete_file+0x80>
        for (uint32_t i = 0; i < sectors_per_cluster; i++) {
  101e65:	83 c6 01             	add    $0x1,%esi
  101e68:	3b 35 b0 7b 10 00    	cmp    0x107bb0,%esi
  101e6e:	72 a0                	jb     101e10 <fat32_delete_file+0x50>
  101e70:	8b 85 e8 fb ff ff    	mov    -0x418(%ebp),%eax
    uint32_t fat_sector = fat_begin_lba + ((cluster * 4) / 512);
  101e76:	8d 34 85 00 00 00 00 	lea    0x0(,%eax,4),%esi
    if (!ata_read_sectors(fat_sector, 1, buffer)) {
  101e7d:	8d 85 f4 fb ff ff    	lea    -0x40c(%ebp),%eax
  101e83:	50                   	push   %eax
    uint32_t fat_sector = fat_begin_lba + ((cluster * 4) / 512);
  101e84:	89 f0                	mov    %esi,%eax
    if (!ata_read_sectors(fat_sector, 1, buffer)) {
  101e86:	6a 01                	push   $0x1
    uint32_t fat_sector = fat_begin_lba + ((cluster * 4) / 512);
  101e88:	c1 e8 09             	shr    $0x9,%eax
  101e8b:	03 05 b8 7b 10 00    	add    0x107bb8,%eax
    if (!ata_read_sectors(fat_sector, 1, buffer)) {
  101e91:	50                   	push   %eax
  101e92:	e8 29 f3 ff ff       	call   1011c0 <ata_read_sectors>
  101e97:	83 c4 0c             	add    $0xc,%esp
  101e9a:	85 c0                	test   %eax,%eax
  101e9c:	74 54                	je     101ef2 <fat32_delete_file+0x132>
    return buffer[offset/4] & 0x0FFFFFFF;
  101e9e:	81 e6 fc 01 00 00    	and    $0x1fc,%esi
  101ea4:	8b 84 2e f4 fb ff ff 	mov    -0x40c(%esi,%ebp,1),%eax
  101eab:	25 ff ff ff 0f       	and    $0xfffffff,%eax
    while (current_cluster < 0x0FFFFFF8) {
  101eb0:	3d f7 ff ff 0f       	cmp    $0xffffff7,%eax
  101eb5:	0f 86 31 ff ff ff    	jbe    101dec <fat32_delete_file+0x2c>
            }
        }
        current_cluster = fat32_get_next_cluster(current_cluster);
    }
    return false;
}
  101ebb:	8d 65 f4             	lea    -0xc(%ebp),%esp
    if (!is_initialized) return false;
  101ebe:	31 c0                	xor    %eax,%eax
}
  101ec0:	5b                   	pop    %ebx
  101ec1:	5e                   	pop    %esi
  101ec2:	5f                   	pop    %edi
  101ec3:	5d                   	pop    %ebp
  101ec4:	c3                   	ret
  101ec5:	8d 76 00             	lea    0x0(%esi),%esi
                        if (!ata_write_sectors(current_sector + i, 1, buffer)) {
  101ec8:	8d 85 f4 fd ff ff    	lea    -0x20c(%ebp),%eax
                        entry[j].name[0] = 0xE5;
  101ece:	c6 07 e5             	movb   $0xe5,(%edi)
                        if (!ata_write_sectors(current_sector + i, 1, buffer)) {
  101ed1:	50                   	push   %eax
  101ed2:	6a 01                	push   $0x1
  101ed4:	ff b5 ec fb ff ff    	push   -0x414(%ebp)
  101eda:	e8 41 f4 ff ff       	call   101320 <ata_write_sectors>
  101edf:	83 c4 0c             	add    $0xc,%esp
  101ee2:	85 c0                	test   %eax,%eax
  101ee4:	0f 95 c0             	setne  %al
}
  101ee7:	8d 65 f4             	lea    -0xc(%ebp),%esp
  101eea:	5b                   	pop    %ebx
                        if (!ata_write_sectors(current_sector + i, 1, buffer)) {
  101eeb:	0f b6 c0             	movzbl %al,%eax
}
  101eee:	5e                   	pop    %esi
  101eef:	5f                   	pop    %edi
  101ef0:	5d                   	pop    %ebp
  101ef1:	c3                   	ret
        return 0x0FFFFFF7;
  101ef2:	b8 f7 ff ff 0f       	mov    $0xffffff7,%eax
  101ef7:	e9 f0 fe ff ff       	jmp    101dec <fat32_delete_file+0x2c>
  101efc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00101f00 <fat32_create_directory>:

bool fat32_create_directory(const char* name) {
    if (!is_initialized) return false;
  101f00:	a1 1c 7c 10 00       	mov    0x107c1c,%eax
  101f05:	85 c0                	test   %eax,%eax
  101f07:	0f 84 33 01 00 00    	je     102040 <fat32_create_directory+0x140>

    uint32_t current_cluster = current_directory.cluster;
  101f0d:	a1 a0 7a 10 00       	mov    0x107aa0,%eax
    uint8_t buffer[512];
    fat32_dir_entry_t* entry;

    while (current_cluster < 0x0FFFFFF8) {
  101f12:	3d f7 ff ff 0f       	cmp    $0xffffff7,%eax
  101f17:	0f 87 23 01 00 00    	ja     102040 <fat32_create_directory+0x140>
bool fat32_create_directory(const char* name) {
  101f1d:	55                   	push   %ebp
  101f1e:	89 e5                	mov    %esp,%ebp
  101f20:	57                   	push   %edi
  101f21:	56                   	push   %esi
  101f22:	53                   	push   %ebx
  101f23:	81 ec 0c 04 00 00    	sub    $0x40c,%esp
    return cluster_begin_lba + ((cluster - 2) * sectors_per_cluster);
  101f29:	8b 15 b0 7b 10 00    	mov    0x107bb0,%edx
  101f2f:	8d 48 fe             	lea    -0x2(%eax),%ecx
  101f32:	0f af ca             	imul   %edx,%ecx
  101f35:	03 0d b4 7b 10 00    	add    0x107bb4,%ecx
        uint32_t current_sector = cluster_to_lba(current_cluster);

        for (uint32_t i = 0; i < sectors_per_cluster; i++) {
  101f3b:	85 d2                	test   %edx,%edx
  101f3d:	74 67                	je     101fa6 <fat32_create_directory+0xa6>
  101f3f:	89 85 e8 fb ff ff    	mov    %eax,-0x418(%ebp)
  101f45:	31 ff                	xor    %edi,%edi
  101f47:	8d b5 f4 fd ff ff    	lea    -0x20c(%ebp),%esi
  101f4d:	89 8d ec fb ff ff    	mov    %ecx,-0x414(%ebp)
            if (!ata_read_sectors(current_sector + i, 1, buffer)) {
  101f53:	8b 85 ec fb ff ff    	mov    -0x414(%ebp),%eax
  101f59:	56                   	push   %esi
  101f5a:	6a 01                	push   $0x1
  101f5c:	8d 14 38             	lea    (%eax,%edi,1),%edx
  101f5f:	52                   	push   %edx
  101f60:	89 95 f0 fb ff ff    	mov    %edx,-0x410(%ebp)
  101f66:	e8 55 f2 ff ff       	call   1011c0 <ata_read_sectors>
  101f6b:	83 c4 0c             	add    $0xc,%esp
  101f6e:	85 c0                	test   %eax,%eax
  101f70:	74 79                	je     101feb <fat32_create_directory+0xeb>
  101f72:	8b 95 f0 fb ff ff    	mov    -0x410(%ebp),%edx
  101f78:	89 f3                	mov    %esi,%ebx
  101f7a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
                return false;
            }

            entry = (fat32_dir_entry_t*)buffer;
            for (uint32_t j = 0; j < 16; j++) {
                if (entry[j].name[0] == 0x00 || entry[j].name[0] == 0xE5) {
  101f80:	0f b6 03             	movzbl (%ebx),%eax
  101f83:	84 c0                	test   %al,%al
  101f85:	74 71                	je     101ff8 <fat32_create_directory+0xf8>
  101f87:	3c e5                	cmp    $0xe5,%al
  101f89:	74 6d                	je     101ff8 <fat32_create_directory+0xf8>
            for (uint32_t j = 0; j < 16; j++) {
  101f8b:	83 c3 20             	add    $0x20,%ebx
  101f8e:	8d 45 f4             	lea    -0xc(%ebp),%eax
  101f91:	39 d8                	cmp    %ebx,%eax
  101f93:	75 eb                	jne    101f80 <fat32_create_directory+0x80>
        for (uint32_t i = 0; i < sectors_per_cluster; i++) {
  101f95:	83 c7 01             	add    $0x1,%edi
  101f98:	3b 3d b0 7b 10 00    	cmp    0x107bb0,%edi
  101f9e:	72 b3                	jb     101f53 <fat32_create_directory+0x53>
  101fa0:	8b 85 e8 fb ff ff    	mov    -0x418(%ebp),%eax
    uint32_t fat_sector = fat_begin_lba + ((cluster * 4) / 512);
  101fa6:	8d 1c 85 00 00 00 00 	lea    0x0(,%eax,4),%ebx
    if (!ata_read_sectors(fat_sector, 1, buffer)) {
  101fad:	8d 85 f4 fb ff ff    	lea    -0x40c(%ebp),%eax
  101fb3:	50                   	push   %eax
    uint32_t fat_sector = fat_begin_lba + ((cluster * 4) / 512);
  101fb4:	89 d8                	mov    %ebx,%eax
    if (!ata_read_sectors(fat_sector, 1, buffer)) {
  101fb6:	6a 01                	push   $0x1
    uint32_t fat_sector = fat_begin_lba + ((cluster * 4) / 512);
  101fb8:	c1 e8 09             	shr    $0x9,%eax
  101fbb:	03 05 b8 7b 10 00    	add    0x107bb8,%eax
    if (!ata_read_sectors(fat_sector, 1, buffer)) {
  101fc1:	50                   	push   %eax
  101fc2:	e8 f9 f1 ff ff       	call   1011c0 <ata_read_sectors>
  101fc7:	83 c4 0c             	add    $0xc,%esp
  101fca:	85 c0                	test   %eax,%eax
  101fcc:	74 75                	je     102043 <fat32_create_directory+0x143>
    return buffer[offset/4] & 0x0FFFFFFF;
  101fce:	81 e3 fc 01 00 00    	and    $0x1fc,%ebx
  101fd4:	8b 84 2b f4 fb ff ff 	mov    -0x40c(%ebx,%ebp,1),%eax
  101fdb:	25 ff ff ff 0f       	and    $0xfffffff,%eax
    while (current_cluster < 0x0FFFFFF8) {
  101fe0:	3d f7 ff ff 0f       	cmp    $0xffffff7,%eax
  101fe5:	0f 86 3e ff ff ff    	jbe    101f29 <fat32_create_directory+0x29>
            }
        }
        current_cluster = fat32_get_next_cluster(current_cluster);
    }
    return false;
}
  101feb:	8d 65 f4             	lea    -0xc(%ebp),%esp
    if (!is_initialized) return false;
  101fee:	31 c0                	xor    %eax,%eax
}
  101ff0:	5b                   	pop    %ebx
  101ff1:	5e                   	pop    %esi
  101ff2:	5f                   	pop    %edi
  101ff3:	5d                   	pop    %ebp
  101ff4:	c3                   	ret
  101ff5:	8d 76 00             	lea    0x0(%esi),%esi
                    memset(&entry[j], 0, sizeof(fat32_dir_entry_t));
  101ff8:	6a 20                	push   $0x20
  101ffa:	89 d7                	mov    %edx,%edi
  101ffc:	6a 00                	push   $0x0
  101ffe:	53                   	push   %ebx
  101fff:	e8 2c 10 00 00       	call   103030 <memset>
                    memcpy(entry[j].name, name, 11);
  102004:	6a 0b                	push   $0xb
  102006:	ff 75 08             	push   0x8(%ebp)
  102009:	53                   	push   %ebx
  10200a:	e8 71 10 00 00       	call   103080 <memcpy>
                    entry[j].attributes = ATTR_DIRECTORY;
  10200f:	c6 43 0b 10          	movb   $0x10,0xb(%ebx)
                    entry[j].file_size = 0;
  102013:	c7 43 1c 00 00 00 00 	movl   $0x0,0x1c(%ebx)
                    if (!ata_write_sectors(current_sector + i, 1, buffer)) {
  10201a:	56                   	push   %esi
  10201b:	6a 01                	push   $0x1
  10201d:	57                   	push   %edi
  10201e:	e8 fd f2 ff ff       	call   101320 <ata_write_sectors>
  102023:	83 c4 24             	add    $0x24,%esp
  102026:	85 c0                	test   %eax,%eax
  102028:	0f 95 c0             	setne  %al
}
  10202b:	8d 65 f4             	lea    -0xc(%ebp),%esp
  10202e:	5b                   	pop    %ebx
                    if (!ata_write_sectors(current_sector + i, 1, buffer)) {
  10202f:	0f b6 c0             	movzbl %al,%eax
}
  102032:	5e                   	pop    %esi
  102033:	5f                   	pop    %edi
  102034:	5d                   	pop    %ebp
  102035:	c3                   	ret
  102036:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  10203d:	00 
  10203e:	66 90                	xchg   %ax,%ax
    if (!is_initialized) return false;
  102040:	31 c0                	xor    %eax,%eax
}
  102042:	c3                   	ret
        return 0x0FFFFFF7;
  102043:	b8 f7 ff ff 0f       	mov    $0xffffff7,%eax
  102048:	e9 dc fe ff ff       	jmp    101f29 <fat32_create_directory+0x29>
  10204d:	8d 76 00             	lea    0x0(%esi),%esi

00102050 <fat32_write_fat_entry>:
        }
    }
    return 0;  // No free clusters
}

bool fat32_write_fat_entry(uint32_t cluster, uint32_t value) {
  102050:	55                   	push   %ebp
  102051:	89 e5                	mov    %esp,%ebp
  102053:	57                   	push   %edi
  102054:	56                   	push   %esi
    uint32_t fat_sector = fat_begin_lba + ((cluster * 4) / 512);
    uint32_t offset = (cluster * 4) % 512;
    uint32_t buffer[128];

    if (!ata_read_sectors(fat_sector, 1, buffer)) {
  102055:	8d b5 f4 fd ff ff    	lea    -0x20c(%ebp),%esi
bool fat32_write_fat_entry(uint32_t cluster, uint32_t value) {
  10205b:	53                   	push   %ebx
  10205c:	81 ec 00 02 00 00    	sub    $0x200,%esp
    uint32_t fat_sector = fat_begin_lba + ((cluster * 4) / 512);
  102062:	8b 45 08             	mov    0x8(%ebp),%eax
  102065:	8d 3c 85 00 00 00 00 	lea    0x0(,%eax,4),%edi
  10206c:	89 fb                	mov    %edi,%ebx
  10206e:	c1 eb 09             	shr    $0x9,%ebx
  102071:	03 1d b8 7b 10 00    	add    0x107bb8,%ebx
    if (!ata_read_sectors(fat_sector, 1, buffer)) {
  102077:	56                   	push   %esi
  102078:	6a 01                	push   $0x1
  10207a:	53                   	push   %ebx
  10207b:	e8 40 f1 ff ff       	call   1011c0 <ata_read_sectors>
  102080:	83 c4 0c             	add    $0xc,%esp
  102083:	85 c0                	test   %eax,%eax
  102085:	74 49                	je     1020d0 <fat32_write_fat_entry+0x80>
        return false;
    }

    buffer[offset/4] = value;
  102087:	8b 45 0c             	mov    0xc(%ebp),%eax
  10208a:	81 e7 fc 01 00 00    	and    $0x1fc,%edi
  102090:	89 84 2f f4 fd ff ff 	mov    %eax,-0x20c(%edi,%ebp,1)

    // Write to all FATs
    for (uint32_t fat = 0; fat < boot_sector.num_fats; fat++) {
  102097:	31 ff                	xor    %edi,%edi
  102099:	80 3d d0 7b 10 00 00 	cmpb   $0x0,0x107bd0
  1020a0:	75 14                	jne    1020b6 <fat32_write_fat_entry+0x66>
  1020a2:	eb 3c                	jmp    1020e0 <fat32_write_fat_entry+0x90>
  1020a4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
  1020a8:	0f b6 05 d0 7b 10 00 	movzbl 0x107bd0,%eax
  1020af:	83 c7 01             	add    $0x1,%edi
  1020b2:	39 c7                	cmp    %eax,%edi
  1020b4:	73 2a                	jae    1020e0 <fat32_write_fat_entry+0x90>
        uint32_t current_fat_sector = fat_sector + (fat * boot_sector.fat_size_32);
        if (!ata_write_sectors(current_fat_sector, 1, buffer)) {
  1020b6:	56                   	push   %esi
  1020b7:	6a 01                	push   $0x1
        uint32_t current_fat_sector = fat_sector + (fat * boot_sector.fat_size_32);
  1020b9:	a1 e4 7b 10 00       	mov    0x107be4,%eax
  1020be:	0f af c7             	imul   %edi,%eax
  1020c1:	01 d8                	add    %ebx,%eax
        if (!ata_write_sectors(current_fat_sector, 1, buffer)) {
  1020c3:	50                   	push   %eax
  1020c4:	e8 57 f2 ff ff       	call   101320 <ata_write_sectors>
  1020c9:	83 c4 0c             	add    $0xc,%esp
  1020cc:	85 c0                	test   %eax,%eax
  1020ce:	75 d8                	jne    1020a8 <fat32_write_fat_entry+0x58>
            return false;
        }
    }

    return true;
}
  1020d0:	8d 65 f4             	lea    -0xc(%ebp),%esp
        return false;
  1020d3:	31 c0                	xor    %eax,%eax
}
  1020d5:	5b                   	pop    %ebx
  1020d6:	5e                   	pop    %esi
  1020d7:	5f                   	pop    %edi
  1020d8:	5d                   	pop    %ebp
  1020d9:	c3                   	ret
  1020da:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
  1020e0:	8d 65 f4             	lea    -0xc(%ebp),%esp
    return true;
  1020e3:	b8 01 00 00 00       	mov    $0x1,%eax
}
  1020e8:	5b                   	pop    %ebx
  1020e9:	5e                   	pop    %esi
  1020ea:	5f                   	pop    %edi
  1020eb:	5d                   	pop    %ebp
  1020ec:	c3                   	ret
  1020ed:	8d 76 00             	lea    0x0(%esi),%esi

001020f0 <fat32_allocate_cluster>:
uint32_t fat32_allocate_cluster(void) {
  1020f0:	55                   	push   %ebp
  1020f1:	89 e5                	mov    %esp,%ebp
  1020f3:	57                   	push   %edi
  1020f4:	56                   	push   %esi
  1020f5:	53                   	push   %ebx
  1020f6:	81 ec 00 02 00 00    	sub    $0x200,%esp
    for (uint32_t fat_sector = 0; fat_sector < boot_sector.fat_size_32; fat_sector++) {
  1020fc:	a1 e4 7b 10 00       	mov    0x107be4,%eax
  102101:	85 c0                	test   %eax,%eax
  102103:	0f 84 7e 00 00 00    	je     102187 <fat32_allocate_cluster+0x97>
  102109:	31 f6                	xor    %esi,%esi
        if (!ata_read_sectors(fat_begin_lba + fat_sector, 1, buffer)) {
  10210b:	8d 85 f4 fd ff ff    	lea    -0x20c(%ebp),%eax
  102111:	50                   	push   %eax
  102112:	6a 01                	push   $0x1
  102114:	a1 b8 7b 10 00       	mov    0x107bb8,%eax
  102119:	01 f0                	add    %esi,%eax
  10211b:	50                   	push   %eax
  10211c:	e8 9f f0 ff ff       	call   1011c0 <ata_read_sectors>
  102121:	83 c4 0c             	add    $0xc,%esp
  102124:	85 c0                	test   %eax,%eax
  102126:	74 5f                	je     102187 <fat32_allocate_cluster+0x97>
  102128:	89 f7                	mov    %esi,%edi
  10212a:	8d 9d f4 fd ff ff    	lea    -0x20c(%ebp),%ebx
  102130:	c1 e7 07             	shl    $0x7,%edi
  102133:	eb 18                	jmp    10214d <fat32_allocate_cluster+0x5d>
  102135:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  10213c:	00 
  10213d:	8d 76 00             	lea    0x0(%esi),%esi
        for (uint32_t i = 0; i < 128; i++) {
  102140:	83 c3 04             	add    $0x4,%ebx
  102143:	8d 45 f4             	lea    -0xc(%ebp),%eax
  102146:	83 c7 01             	add    $0x1,%edi
  102149:	39 c3                	cmp    %eax,%ebx
  10214b:	74 2b                	je     102178 <fat32_allocate_cluster+0x88>
            if (buffer[i] == 0) {
  10214d:	8b 03                	mov    (%ebx),%eax
  10214f:	85 c0                	test   %eax,%eax
  102151:	75 ed                	jne    102140 <fat32_allocate_cluster+0x50>
                if (cluster >= 2) {  // Clusters 0 and 1 are reserved
  102153:	83 ff 01             	cmp    $0x1,%edi
  102156:	76 e8                	jbe    102140 <fat32_allocate_cluster+0x50>
                    if (fat32_write_fat_entry(cluster, 0x0FFFFFF8)) {
  102158:	68 f8 ff ff 0f       	push   $0xffffff8
  10215d:	57                   	push   %edi
  10215e:	e8 ed fe ff ff       	call   102050 <fat32_write_fat_entry>
  102163:	5a                   	pop    %edx
  102164:	59                   	pop    %ecx
  102165:	85 c0                	test   %eax,%eax
  102167:	74 d7                	je     102140 <fat32_allocate_cluster+0x50>
}
  102169:	8d 65 f4             	lea    -0xc(%ebp),%esp
  10216c:	89 f8                	mov    %edi,%eax
  10216e:	5b                   	pop    %ebx
  10216f:	5e                   	pop    %esi
  102170:	5f                   	pop    %edi
  102171:	5d                   	pop    %ebp
  102172:	c3                   	ret
  102173:	2e 8d 74 26 00       	lea    %cs:0x0(%esi,%eiz,1),%esi
    for (uint32_t fat_sector = 0; fat_sector < boot_sector.fat_size_32; fat_sector++) {
  102178:	83 c6 01             	add    $0x1,%esi
  10217b:	3b 35 e4 7b 10 00    	cmp    0x107be4,%esi
  102181:	0f 82 84 ff ff ff    	jb     10210b <fat32_allocate_cluster+0x1b>
}
  102187:	8d 65 f4             	lea    -0xc(%ebp),%esp
            return 0;
  10218a:	31 ff                	xor    %edi,%edi
}
  10218c:	5b                   	pop    %ebx
  10218d:	89 f8                	mov    %edi,%eax
  10218f:	5e                   	pop    %esi
  102190:	5f                   	pop    %edi
  102191:	5d                   	pop    %ebp
  102192:	c3                   	ret
  102193:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  10219a:	00 
  10219b:	2e 8d 74 26 00       	lea    %cs:0x0(%esi,%eiz,1),%esi

001021a0 <fat32_write_file>:

bool fat32_write_file(const char* name, const void* data, uint32_t size) {
    if (!is_initialized || !data) return false;
  1021a0:	a1 1c 7c 10 00       	mov    0x107c1c,%eax
  1021a5:	85 c0                	test   %eax,%eax
  1021a7:	0f 84 cf 01 00 00    	je     10237c <fat32_write_file+0x1dc>
bool fat32_write_file(const char* name, const void* data, uint32_t size) {
  1021ad:	55                   	push   %ebp
  1021ae:	89 e5                	mov    %esp,%ebp
  1021b0:	57                   	push   %edi
  1021b1:	56                   	push   %esi
  1021b2:	53                   	push   %ebx
  1021b3:	81 ec 08 04 00 00    	sub    $0x408,%esp
    if (!is_initialized || !data) return false;
  1021b9:	8b 5d 0c             	mov    0xc(%ebp),%ebx
  1021bc:	85 db                	test   %ebx,%ebx
  1021be:	0f 84 dc 00 00 00    	je     1022a0 <fat32_write_file+0x100>

    // First, create the file entry
    uint32_t current_cluster = current_directory.cluster;
  1021c4:	a1 a0 7a 10 00       	mov    0x107aa0,%eax
    uint32_t entry_sector = 0;
    uint32_t entry_offset = 0;
    bool found_slot = false;

    // Find a free directory entry
    while (current_cluster < 0x0FFFFFF8 && !found_slot) {
  1021c9:	3d f7 ff ff 0f       	cmp    $0xffffff7,%eax
  1021ce:	0f 87 cc 00 00 00    	ja     1022a0 <fat32_write_file+0x100>
    return cluster_begin_lba + ((cluster - 2) * sectors_per_cluster);
  1021d4:	8b 15 b0 7b 10 00    	mov    0x107bb0,%edx
  1021da:	8d 48 fe             	lea    -0x2(%eax),%ecx
  1021dd:	0f af ca             	imul   %edx,%ecx
  1021e0:	03 0d b4 7b 10 00    	add    0x107bb4,%ecx
        uint32_t current_sector = cluster_to_lba(current_cluster);

        for (uint32_t i = 0; i < sectors_per_cluster && !found_slot; i++) {
  1021e6:	85 d2                	test   %edx,%edx
  1021e8:	74 6c                	je     102256 <fat32_write_file+0xb6>
  1021ea:	89 8d f0 fb ff ff    	mov    %ecx,-0x410(%ebp)
  1021f0:	31 ff                	xor    %edi,%edi
  1021f2:	89 85 ec fb ff ff    	mov    %eax,-0x414(%ebp)
  1021f8:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  1021ff:	00 
            if (!ata_read_sectors(current_sector + i, 1, dir_buffer)) {
  102200:	8b 85 f0 fb ff ff    	mov    -0x410(%ebp),%eax
  102206:	8d 34 38             	lea    (%eax,%edi,1),%esi
  102209:	8d 85 f4 fd ff ff    	lea    -0x20c(%ebp),%eax
  10220f:	50                   	push   %eax
  102210:	6a 01                	push   $0x1
  102212:	56                   	push   %esi
  102213:	e8 a8 ef ff ff       	call   1011c0 <ata_read_sectors>
  102218:	83 c4 0c             	add    $0xc,%esp
  10221b:	85 c0                	test   %eax,%eax
  10221d:	0f 84 7d 00 00 00    	je     1022a0 <fat32_write_file+0x100>
  102223:	8d 9d f4 fd ff ff    	lea    -0x20c(%ebp),%ebx
  102229:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
                return false;
            }

            entry = (fat32_dir_entry_t*)dir_buffer;
            for (uint32_t j = 0; j < 16; j++) {
                if (entry[j].name[0] == 0x00 || entry[j].name[0] == 0xE5) {
  102230:	0f b6 03             	movzbl (%ebx),%eax
  102233:	84 c0                	test   %al,%al
  102235:	74 79                	je     1022b0 <fat32_write_file+0x110>
  102237:	3c e5                	cmp    $0xe5,%al
  102239:	74 75                	je     1022b0 <fat32_write_file+0x110>
            for (uint32_t j = 0; j < 16; j++) {
  10223b:	83 c3 20             	add    $0x20,%ebx
  10223e:	8d 45 f4             	lea    -0xc(%ebp),%eax
  102241:	39 d8                	cmp    %ebx,%eax
  102243:	75 eb                	jne    102230 <fat32_write_file+0x90>
        for (uint32_t i = 0; i < sectors_per_cluster && !found_slot; i++) {
  102245:	83 c7 01             	add    $0x1,%edi
  102248:	3b 3d b0 7b 10 00    	cmp    0x107bb0,%edi
  10224e:	72 b0                	jb     102200 <fat32_write_file+0x60>
  102250:	8b 85 ec fb ff ff    	mov    -0x414(%ebp),%eax
    uint32_t fat_sector = fat_begin_lba + ((cluster * 4) / 512);
  102256:	8d 1c 85 00 00 00 00 	lea    0x0(,%eax,4),%ebx
    if (!ata_read_sectors(fat_sector, 1, buffer)) {
  10225d:	8d 85 f4 fb ff ff    	lea    -0x40c(%ebp),%eax
  102263:	50                   	push   %eax
    uint32_t fat_sector = fat_begin_lba + ((cluster * 4) / 512);
  102264:	89 d8                	mov    %ebx,%eax
    if (!ata_read_sectors(fat_sector, 1, buffer)) {
  102266:	6a 01                	push   $0x1
    uint32_t fat_sector = fat_begin_lba + ((cluster * 4) / 512);
  102268:	c1 e8 09             	shr    $0x9,%eax
  10226b:	03 05 b8 7b 10 00    	add    0x107bb8,%eax
    if (!ata_read_sectors(fat_sector, 1, buffer)) {
  102271:	50                   	push   %eax
  102272:	e8 49 ef ff ff       	call   1011c0 <ata_read_sectors>
  102277:	83 c4 0c             	add    $0xc,%esp
  10227a:	85 c0                	test   %eax,%eax
  10227c:	0f 84 fd 00 00 00    	je     10237f <fat32_write_file+0x1df>
    return buffer[offset/4] & 0x0FFFFFFF;
  102282:	89 d8                	mov    %ebx,%eax
  102284:	25 fc 01 00 00       	and    $0x1fc,%eax
  102289:	8b 84 28 f4 fb ff ff 	mov    -0x40c(%eax,%ebp,1),%eax
  102290:	25 ff ff ff 0f       	and    $0xfffffff,%eax
    while (current_cluster < 0x0FFFFFF8 && !found_slot) {
  102295:	3d f7 ff ff 0f       	cmp    $0xffffff7,%eax
  10229a:	0f 86 34 ff ff ff    	jbe    1021d4 <fat32_write_file+0x34>
            current_data_cluster = next_cluster;
        }
    }

    return true;
}
  1022a0:	8d 65 f4             	lea    -0xc(%ebp),%esp
    if (!is_initialized || !data) return false;
  1022a3:	31 c0                	xor    %eax,%eax
}
  1022a5:	5b                   	pop    %ebx
  1022a6:	5e                   	pop    %esi
  1022a7:	5f                   	pop    %edi
  1022a8:	5d                   	pop    %ebp
  1022a9:	c3                   	ret
  1022aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    uint32_t first_cluster = fat32_allocate_cluster();
  1022b0:	e8 3b fe ff ff       	call   1020f0 <fat32_allocate_cluster>
  1022b5:	89 f7                	mov    %esi,%edi
  1022b7:	89 c2                	mov    %eax,%edx
    if (!first_cluster) return false;
  1022b9:	85 c0                	test   %eax,%eax
  1022bb:	74 e3                	je     1022a0 <fat32_write_file+0x100>
  1022bd:	89 95 f0 fb ff ff    	mov    %edx,-0x410(%ebp)
    memset(entry, 0, sizeof(fat32_dir_entry_t));
  1022c3:	6a 20                	push   $0x20
  1022c5:	6a 00                	push   $0x0
  1022c7:	53                   	push   %ebx
  1022c8:	e8 63 0d 00 00       	call   103030 <memset>
    memcpy(entry->name, name, 11);
  1022cd:	6a 0b                	push   $0xb
  1022cf:	ff 75 08             	push   0x8(%ebp)
  1022d2:	53                   	push   %ebx
  1022d3:	e8 a8 0d 00 00       	call   103080 <memcpy>
    entry->first_cluster_high = (uint16_t)(first_cluster >> 16);
  1022d8:	8b 95 f0 fb ff ff    	mov    -0x410(%ebp),%edx
    entry->attributes = 0x20;  // Archive bit
  1022de:	c6 43 0b 20          	movb   $0x20,0xb(%ebx)
    entry->first_cluster_high = (uint16_t)(first_cluster >> 16);
  1022e2:	89 d0                	mov    %edx,%eax
    entry->first_cluster_low = (uint16_t)(first_cluster & 0xFFFF);
  1022e4:	66 89 53 1a          	mov    %dx,0x1a(%ebx)
    entry->first_cluster_high = (uint16_t)(first_cluster >> 16);
  1022e8:	c1 e8 10             	shr    $0x10,%eax
  1022eb:	66 89 43 14          	mov    %ax,0x14(%ebx)
    entry->file_size = size;
  1022ef:	8b 45 10             	mov    0x10(%ebp),%eax
  1022f2:	89 43 1c             	mov    %eax,0x1c(%ebx)
    if (!ata_write_sectors(entry_sector, 1, dir_buffer)) {
  1022f5:	8d 85 f4 fd ff ff    	lea    -0x20c(%ebp),%eax
  1022fb:	50                   	push   %eax
  1022fc:	6a 01                	push   $0x1
  1022fe:	57                   	push   %edi
  1022ff:	e8 1c f0 ff ff       	call   101320 <ata_write_sectors>
  102304:	83 c4 24             	add    $0x24,%esp
  102307:	85 c0                	test   %eax,%eax
  102309:	74 95                	je     1022a0 <fat32_write_file+0x100>
    while (bytes_written < size) {
  10230b:	8b 45 10             	mov    0x10(%ebp),%eax
    uint32_t bytes_written = 0;
  10230e:	31 ff                	xor    %edi,%edi
    while (bytes_written < size) {
  102310:	8b 95 f0 fb ff ff    	mov    -0x410(%ebp),%edx
  102316:	85 c0                	test   %eax,%eax
  102318:	8d b0 ff 01 00 00    	lea    0x1ff(%eax),%esi
  10231e:	74 4f                	je     10236f <fat32_write_file+0x1cf>
  102320:	89 b5 f0 fb ff ff    	mov    %esi,-0x410(%ebp)
  102326:	89 d6                	mov    %edx,%esi
        uint32_t sectors_to_write = (bytes_to_write + 511) / 512;
  102328:	8b 9d f0 fb ff ff    	mov    -0x410(%ebp),%ebx
    return cluster_begin_lba + ((cluster - 2) * sectors_per_cluster);
  10232e:	8b 0d b0 7b 10 00    	mov    0x107bb0,%ecx
        if (!ata_write_sectors(data_sector, sectors_to_write, (uint8_t*)data + bytes_written)) {
  102334:	8b 45 0c             	mov    0xc(%ebp),%eax
        uint32_t sectors_to_write = (bytes_to_write + 511) / 512;
  102337:	29 fb                	sub    %edi,%ebx
  102339:	c1 eb 09             	shr    $0x9,%ebx
        if (sectors_to_write > sectors_per_cluster) {
  10233c:	39 cb                	cmp    %ecx,%ebx
  10233e:	0f 47 d9             	cmova  %ecx,%ebx
        if (!ata_write_sectors(data_sector, sectors_to_write, (uint8_t*)data + bytes_written)) {
  102341:	01 f8                	add    %edi,%eax
  102343:	50                   	push   %eax
  102344:	0f b6 c3             	movzbl %bl,%eax
  102347:	50                   	push   %eax
    return cluster_begin_lba + ((cluster - 2) * sectors_per_cluster);
  102348:	8d 46 fe             	lea    -0x2(%esi),%eax
  10234b:	0f af c1             	imul   %ecx,%eax
  10234e:	03 05 b4 7b 10 00    	add    0x107bb4,%eax
        if (!ata_write_sectors(data_sector, sectors_to_write, (uint8_t*)data + bytes_written)) {
  102354:	50                   	push   %eax
  102355:	e8 c6 ef ff ff       	call   101320 <ata_write_sectors>
  10235a:	83 c4 0c             	add    $0xc,%esp
  10235d:	85 c0                	test   %eax,%eax
  10235f:	0f 84 3b ff ff ff    	je     1022a0 <fat32_write_file+0x100>
        bytes_written += sectors_to_write * 512;
  102365:	c1 e3 09             	shl    $0x9,%ebx
  102368:	01 df                	add    %ebx,%edi
        if (bytes_written < size) {
  10236a:	3b 7d 10             	cmp    0x10(%ebp),%edi
  10236d:	72 1a                	jb     102389 <fat32_write_file+0x1e9>
}
  10236f:	8d 65 f4             	lea    -0xc(%ebp),%esp
    return true;
  102372:	b8 01 00 00 00       	mov    $0x1,%eax
}
  102377:	5b                   	pop    %ebx
  102378:	5e                   	pop    %esi
  102379:	5f                   	pop    %edi
  10237a:	5d                   	pop    %ebp
  10237b:	c3                   	ret
    if (!is_initialized || !data) return false;
  10237c:	31 c0                	xor    %eax,%eax
}
  10237e:	c3                   	ret
        return 0x0FFFFFF7;
  10237f:	b8 f7 ff ff 0f       	mov    $0xffffff7,%eax
  102384:	e9 4b fe ff ff       	jmp    1021d4 <fat32_write_file+0x34>
            uint32_t next_cluster = fat32_allocate_cluster();
  102389:	e8 62 fd ff ff       	call   1020f0 <fat32_allocate_cluster>
  10238e:	89 c3                	mov    %eax,%ebx
            if (!next_cluster) return false;
  102390:	85 c0                	test   %eax,%eax
  102392:	0f 84 08 ff ff ff    	je     1022a0 <fat32_write_file+0x100>
            if (!fat32_write_fat_entry(current_data_cluster, next_cluster)) {
  102398:	50                   	push   %eax
  102399:	56                   	push   %esi
  10239a:	e8 b1 fc ff ff       	call   102050 <fat32_write_fat_entry>
  10239f:	5a                   	pop    %edx
  1023a0:	59                   	pop    %ecx
  1023a1:	85 c0                	test   %eax,%eax
  1023a3:	0f 84 f7 fe ff ff    	je     1022a0 <fat32_write_file+0x100>
  1023a9:	89 de                	mov    %ebx,%esi
  1023ab:	e9 78 ff ff ff       	jmp    102328 <fat32_write_file+0x188>

001023b0 <fat32_read_file>:

bool fat32_read_file(const char* name, void* buffer, uint32_t* size) {
  1023b0:	55                   	push   %ebp
  1023b1:	89 e5                	mov    %esp,%ebp
  1023b3:	57                   	push   %edi
  1023b4:	56                   	push   %esi
  1023b5:	53                   	push   %ebx
  1023b6:	81 ec 38 04 00 00    	sub    $0x438,%esp
    if (!is_initialized || !buffer || !size) {
  1023bc:	a1 1c 7c 10 00       	mov    0x107c1c,%eax
bool fat32_read_file(const char* name, void* buffer, uint32_t* size) {
  1023c1:	8b 5d 10             	mov    0x10(%ebp),%ebx
    if (!is_initialized || !buffer || !size) {
  1023c4:	85 c0                	test   %eax,%eax
  1023c6:	0f 84 b8 03 00 00    	je     102784 <fat32_read_file+0x3d4>
  1023cc:	8b 45 0c             	mov    0xc(%ebp),%eax
  1023cf:	85 c0                	test   %eax,%eax
  1023d1:	0f 84 ad 03 00 00    	je     102784 <fat32_read_file+0x3d4>
  1023d7:	85 db                	test   %ebx,%ebx
  1023d9:	0f 84 a5 03 00 00    	je     102784 <fat32_read_file+0x3d4>
        if (debug) vga_writestr("[FAT32] Invalid parameters\n");
        return false;
    }

    uint32_t current_cluster = current_directory.cluster;
  1023df:	8b 15 a0 7a 10 00    	mov    0x107aa0,%edx
    uint8_t dir_buffer[512];
    fat32_dir_entry_t* entry = NULL;
    bool found = false;

    // Find the file entry
    while (current_cluster < 0x0FFFFFF8 && !found) {
  1023e5:	81 fa f7 ff ff 0f    	cmp    $0xffffff7,%edx
  1023eb:	0f 87 93 03 00 00    	ja     102784 <fat32_read_file+0x3d4>
    return cluster_begin_lba + ((cluster - 2) * sectors_per_cluster);
  1023f1:	a1 b0 7b 10 00       	mov    0x107bb0,%eax
  1023f6:	8d 4a fe             	lea    -0x2(%edx),%ecx
        uint32_t current_sector = cluster_to_lba(current_cluster);
        
        for (uint32_t i = 0; i < sectors_per_cluster && !found; i++) {
  1023f9:	31 f6                	xor    %esi,%esi
    return cluster_begin_lba + ((cluster - 2) * sectors_per_cluster);
  1023fb:	0f af c8             	imul   %eax,%ecx
  1023fe:	03 0d b4 7b 10 00    	add    0x107bb4,%ecx
  102404:	89 8d c8 fb ff ff    	mov    %ecx,-0x438(%ebp)
        for (uint32_t i = 0; i < sectors_per_cluster && !found; i++) {
  10240a:	85 c0                	test   %eax,%eax
  10240c:	0f 84 a7 03 00 00    	je     1027b9 <fat32_read_file+0x409>
  102412:	89 95 c4 fb ff ff    	mov    %edx,-0x43c(%ebp)
  102418:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  10241f:	00 
            if (!ata_read_sectors(current_sector + i, 1, dir_buffer)) {
  102420:	8d 85 f4 fd ff ff    	lea    -0x20c(%ebp),%eax
  102426:	50                   	push   %eax
  102427:	8b 85 c8 fb ff ff    	mov    -0x438(%ebp),%eax
  10242d:	6a 01                	push   $0x1
  10242f:	01 f0                	add    %esi,%eax
  102431:	50                   	push   %eax
  102432:	e8 89 ed ff ff       	call   1011c0 <ata_read_sectors>
  102437:	83 c4 0c             	add    $0xc,%esp
  10243a:	85 c0                	test   %eax,%eax
  10243c:	0f 84 42 03 00 00    	je     102784 <fat32_read_file+0x3d4>
  102442:	89 b5 cc fb ff ff    	mov    %esi,-0x434(%ebp)
  102448:	8d bd f4 fd ff ff    	lea    -0x20c(%ebp),%edi
  10244e:	66 90                	xchg   %ax,%ax
                return false;
            }

            entry = (fat32_dir_entry_t*)dir_buffer;
            for (uint32_t j = 0; j < 16; j++) {
                if (entry[j].name[0] != 0x00 && entry[j].name[0] != 0xE5) {
  102450:	0f b6 07             	movzbl (%edi),%eax
  102453:	84 c0                	test   %al,%al
  102455:	0f 84 35 03 00 00    	je     102790 <fat32_read_file+0x3e0>
  10245b:	3c e5                	cmp    $0xe5,%al
  10245d:	0f 84 2d 03 00 00    	je     102790 <fat32_read_file+0x3e0>
  102463:	31 d2                	xor    %edx,%edx
  102465:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  10246c:	00 
  10246d:	8d 76 00             	lea    0x0(%esi),%esi
    while (dst < 8 && entry_name[src] && entry_name[src] != '.') {
  102470:	0f b6 04 17          	movzbl (%edi,%edx,1),%eax
  102474:	84 c0                	test   %al,%al
  102476:	0f 84 94 03 00 00    	je     102810 <fat32_read_file+0x460>
  10247c:	3c 2e                	cmp    $0x2e,%al
  10247e:	0f 84 8c 03 00 00    	je     102810 <fat32_read_file+0x460>
        if (c >= 'a' && c <= 'z') {
  102484:	8d 58 9f             	lea    -0x61(%eax),%ebx
        char c = entry_name[src++];
  102487:	83 c2 01             	add    $0x1,%edx
            c = c - 'a' + 'A';
  10248a:	8d 48 e0             	lea    -0x20(%eax),%ecx
  10248d:	80 fb 1a             	cmp    $0x1a,%bl
  102490:	0f 42 c1             	cmovb  %ecx,%eax
        normalized[dst++] = c;
  102493:	88 84 15 f3 fb ff ff 	mov    %al,-0x40d(%ebp,%edx,1)
    while (dst < 8 && entry_name[src] && entry_name[src] != '.') {
  10249a:	83 fa 08             	cmp    $0x8,%edx
  10249d:	75 d1                	jne    102470 <fat32_read_file+0xc0>
    if (entry_name[src] == '.') {
  10249f:	0f b6 47 08          	movzbl 0x8(%edi),%eax
    while (dst < 8) {
  1024a3:	8d 8d f4 fb ff ff    	lea    -0x40c(%ebp),%ecx
        src++;
  1024a9:	3c 2e                	cmp    $0x2e,%al
  1024ab:	89 bd d0 fb ff ff    	mov    %edi,-0x430(%ebp)
  1024b1:	0f 94 c0             	sete   %al
  1024b4:	0f b6 c0             	movzbl %al,%eax
  1024b7:	01 c2                	add    %eax,%edx
    while (dst < 11 && entry_name[src]) {
  1024b9:	b8 08 00 00 00       	mov    $0x8,%eax
  1024be:	8d 34 17             	lea    (%edi,%edx,1),%esi
  1024c1:	89 cf                	mov    %ecx,%edi
  1024c3:	0f b6 54 06 f8       	movzbl -0x8(%esi,%eax,1),%edx
  1024c8:	84 d2                	test   %dl,%dl
  1024ca:	0f 84 88 03 00 00    	je     102858 <fat32_read_file+0x4a8>
        if (c >= 'a' && c <= 'z') {
  1024d0:	8d 4a 9f             	lea    -0x61(%edx),%ecx
            c = c - 'a' + 'A';
  1024d3:	8d 5a e0             	lea    -0x20(%edx),%ebx
  1024d6:	80 f9 1a             	cmp    $0x1a,%cl
  1024d9:	0f 42 d3             	cmovb  %ebx,%edx
        normalized[dst++] = c;
  1024dc:	83 c0 01             	add    $0x1,%eax
  1024df:	88 94 05 f3 fb ff ff 	mov    %dl,-0x40d(%ebp,%eax,1)
    while (dst < 11 && entry_name[src]) {
  1024e6:	83 f8 0b             	cmp    $0xb,%eax
  1024e9:	75 d8                	jne    1024c3 <fat32_read_file+0x113>
  1024eb:	89 f9                	mov    %edi,%ecx
  1024ed:	8b bd d0 fb ff ff    	mov    -0x430(%ebp),%edi
    for (int i = 0; i < 11; i++) {
  1024f3:	8b 55 08             	mov    0x8(%ebp),%edx
  1024f6:	31 c0                	xor    %eax,%eax
  1024f8:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  1024ff:	00 
        if (normalized[i] != fat_name[i]) {
  102500:	0f b6 1c 02          	movzbl (%edx,%eax,1),%ebx
  102504:	38 1c 01             	cmp    %bl,(%ecx,%eax,1)
  102507:	0f 85 83 02 00 00    	jne    102790 <fat32_read_file+0x3e0>
    for (int i = 0; i < 11; i++) {
  10250d:	83 c0 01             	add    $0x1,%eax
  102510:	83 f8 0b             	cmp    $0xb,%eax
  102513:	75 eb                	jne    102500 <fat32_read_file+0x150>
  102515:	89 8d d0 fb ff ff    	mov    %ecx,-0x430(%ebp)
        if (debug) vga_writestr("[FAT32] File not found\n");
        return false;
    }

    // Display file information
    vga_writestr("[FAT32] File found! Size: ");
  10251b:	8b 5d 10             	mov    0x10(%ebp),%ebx
    char size_str[32];
    uint32_t_to_str(entry->file_size, size_str);
  10251e:	8d b5 d4 fb ff ff    	lea    -0x42c(%ebp),%esi
    vga_writestr("[FAT32] File found! Size: ");
  102524:	68 f0 44 10 00       	push   $0x1044f0
  102529:	e8 c2 08 00 00       	call   102df0 <vga_writestr>
    uint32_t_to_str(entry->file_size, size_str);
  10252e:	56                   	push   %esi
  10252f:	ff 77 1c             	push   0x1c(%edi)
  102532:	e8 09 0a 00 00       	call   102f40 <uint32_t_to_str>
    vga_writestr(size_str);
  102537:	56                   	push   %esi
  102538:	e8 b3 08 00 00       	call   102df0 <vga_writestr>
    vga_writestr(" bytes\n");
  10253d:	68 e8 44 10 00       	push   $0x1044e8
  102542:	e8 a9 08 00 00       	call   102df0 <vga_writestr>

    vga_writestr("[FAT32] First cluster: 0x");
  102547:	68 0b 45 10 00       	push   $0x10450b
  10254c:	e8 9f 08 00 00       	call   102df0 <vga_writestr>
    uint32_t first_cluster = ((uint32_t)entry->first_cluster_high << 16) | entry->first_cluster_low;
  102551:	0f b7 47 14          	movzwl 0x14(%edi),%eax
  102555:	0f b7 57 1a          	movzwl 0x1a(%edi),%edx
  102559:	83 c4 18             	add    $0x18,%esp
  10255c:	b9 1c 00 00 00       	mov    $0x1c,%ecx
  102561:	c1 e0 10             	shl    $0x10,%eax
  102564:	09 c2                	or     %eax,%edx
    for (int i = 7; i >= 0; i--) {
        char hex = "0123456789ABCDEF"[(first_cluster >> (i * 4)) & 0xF];
  102566:	89 d0                	mov    %edx,%eax
  102568:	89 95 c8 fb ff ff    	mov    %edx,-0x438(%ebp)
  10256e:	d3 e8                	shr    %cl,%eax
  102570:	89 8d cc fb ff ff    	mov    %ecx,-0x434(%ebp)
  102576:	83 e0 0f             	and    $0xf,%eax
        char str[2] = {hex, 0};
  102579:	c6 85 f5 fb ff ff 00 	movb   $0x0,-0x40b(%ebp)
  102580:	0f b6 80 43 41 10 00 	movzbl 0x104143(%eax),%eax
  102587:	88 85 f4 fb ff ff    	mov    %al,-0x40c(%ebp)
        vga_writestr(str);
  10258d:	ff b5 d0 fb ff ff    	push   -0x430(%ebp)
  102593:	e8 58 08 00 00       	call   102df0 <vga_writestr>
    for (int i = 7; i >= 0; i--) {
  102598:	8b 8d cc fb ff ff    	mov    -0x434(%ebp),%ecx
  10259e:	8b 95 c8 fb ff ff    	mov    -0x438(%ebp),%edx
  1025a4:	58                   	pop    %eax
  1025a5:	83 e9 04             	sub    $0x4,%ecx
  1025a8:	83 f9 fc             	cmp    $0xfffffffc,%ecx
  1025ab:	75 b9                	jne    102566 <fat32_read_file+0x1b6>
    }
    vga_writestr("\n");
  1025ad:	89 95 cc fb ff ff    	mov    %edx,-0x434(%ebp)
  1025b3:	68 0a 44 10 00       	push   $0x10440a
  1025b8:	e8 33 08 00 00       	call   102df0 <vga_writestr>

    // Check buffer size
    if (*size < entry->file_size) {
  1025bd:	8b 47 1c             	mov    0x1c(%edi),%eax
  1025c0:	39 03                	cmp    %eax,(%ebx)
  1025c2:	5a                   	pop    %edx
  1025c3:	8b 95 cc fb ff ff    	mov    -0x434(%ebp),%edx
  1025c9:	0f 82 c1 02 00 00    	jb     102890 <fat32_read_file+0x4e0>
    // Read file data
    *size = entry->file_size;
    uint32_t bytes_read = 0;
    uint32_t current_data_cluster = first_cluster;

    while (bytes_read < entry->file_size && current_data_cluster < 0x0FFFFFF8) {
  1025cf:	85 c0                	test   %eax,%eax
    *size = entry->file_size;
  1025d1:	89 03                	mov    %eax,(%ebx)
    uint32_t bytes_read = 0;
  1025d3:	c7 85 cc fb ff ff 00 	movl   $0x0,-0x434(%ebp)
  1025da:	00 00 00 
    while (bytes_read < entry->file_size && current_data_cluster < 0x0FFFFFF8) {
  1025dd:	0f 95 c1             	setne  %cl
  1025e0:	81 fa f7 ff ff 0f    	cmp    $0xffffff7,%edx
  1025e6:	0f 96 c0             	setbe  %al
  1025e9:	20 c1                	and    %al,%cl
  1025eb:	88 8d c4 fb ff ff    	mov    %cl,-0x43c(%ebp)
  1025f1:	0f 84 52 01 00 00    	je     102749 <fat32_read_file+0x399>
    uint32_t bytes_read = 0;
  1025f7:	89 bd c8 fb ff ff    	mov    %edi,-0x438(%ebp)
    return cluster_begin_lba + ((cluster - 2) * sectors_per_cluster);
  1025fd:	89 95 c0 fb ff ff    	mov    %edx,-0x440(%ebp)
  102603:	8d 5a fe             	lea    -0x2(%edx),%ebx
        uint32_t data_sector = cluster_to_lba(current_data_cluster);
        vga_writestr("[FAT32] Reading sector 0x");
  102606:	bf 1c 00 00 00       	mov    $0x1c,%edi
    return cluster_begin_lba + ((cluster - 2) * sectors_per_cluster);
  10260b:	0f af 1d b0 7b 10 00 	imul   0x107bb0,%ebx
  102612:	03 1d b4 7b 10 00    	add    0x107bb4,%ebx
        vga_writestr("[FAT32] Reading sector 0x");
  102618:	68 98 44 10 00       	push   $0x104498
  10261d:	e8 ce 07 00 00       	call   102df0 <vga_writestr>
  102622:	59                   	pop    %ecx
        for (int i = 7; i >= 0; i--) {
            char hex = "0123456789ABCDEF"[(data_sector >> (i * 4)) & 0xF];
  102623:	89 f9                	mov    %edi,%ecx
  102625:	89 d8                	mov    %ebx,%eax
            char str[2] = {hex, 0};
  102627:	c6 85 f5 fb ff ff 00 	movb   $0x0,-0x40b(%ebp)
        for (int i = 7; i >= 0; i--) {
  10262e:	83 ef 04             	sub    $0x4,%edi
            char hex = "0123456789ABCDEF"[(data_sector >> (i * 4)) & 0xF];
  102631:	d3 e8                	shr    %cl,%eax
  102633:	83 e0 0f             	and    $0xf,%eax
            char str[2] = {hex, 0};
  102636:	0f b6 80 43 41 10 00 	movzbl 0x104143(%eax),%eax
  10263d:	88 85 f4 fb ff ff    	mov    %al,-0x40c(%ebp)
            vga_writestr(str);
  102643:	ff b5 d0 fb ff ff    	push   -0x430(%ebp)
  102649:	e8 a2 07 00 00       	call   102df0 <vga_writestr>
        for (int i = 7; i >= 0; i--) {
  10264e:	5a                   	pop    %edx
  10264f:	83 ff fc             	cmp    $0xfffffffc,%edi
  102652:	75 cf                	jne    102623 <fat32_read_file+0x273>
        }
        vga_writestr("\n");
  102654:	8b 95 c0 fb ff ff    	mov    -0x440(%ebp),%edx
  10265a:	89 95 bc fb ff ff    	mov    %edx,-0x444(%ebp)
  102660:	68 0a 44 10 00       	push   $0x10440a
  102665:	e8 86 07 00 00       	call   102df0 <vga_writestr>

        // Calculate how much to read
        uint32_t bytes_to_read = entry->file_size - bytes_read;
        uint32_t sectors_to_read = (bytes_to_read + 511) / 512;
  10266a:	8b 85 c8 fb ff ff    	mov    -0x438(%ebp),%eax
  102670:	8b bd cc fb ff ff    	mov    -0x434(%ebp),%edi
        if (sectors_to_read > sectors_per_cluster) {
  102676:	8b 0d b0 7b 10 00    	mov    0x107bb0,%ecx
        uint32_t sectors_to_read = (bytes_to_read + 511) / 512;
  10267c:	8b 40 1c             	mov    0x1c(%eax),%eax
  10267f:	89 85 c0 fb ff ff    	mov    %eax,-0x440(%ebp)
  102685:	05 ff 01 00 00       	add    $0x1ff,%eax
  10268a:	29 f8                	sub    %edi,%eax
            sectors_to_read = sectors_per_cluster;
        }

        vga_writestr("[FAT32] Reading ");
  10268c:	68 b2 44 10 00       	push   $0x1044b2
        if (sectors_to_read > sectors_per_cluster) {
  102691:	89 cf                	mov    %ecx,%edi
        uint32_t sectors_to_read = (bytes_to_read + 511) / 512;
  102693:	c1 e8 09             	shr    $0x9,%eax
        if (sectors_to_read > sectors_per_cluster) {
  102696:	39 c8                	cmp    %ecx,%eax
  102698:	0f 46 f8             	cmovbe %eax,%edi
        vga_writestr("[FAT32] Reading ");
  10269b:	e8 50 07 00 00       	call   102df0 <vga_writestr>
        uint32_t_to_str(sectors_to_read, size_str);
  1026a0:	56                   	push   %esi
  1026a1:	57                   	push   %edi
  1026a2:	e8 99 08 00 00       	call   102f40 <uint32_t_to_str>
        vga_writestr(size_str);
  1026a7:	56                   	push   %esi
  1026a8:	e8 43 07 00 00       	call   102df0 <vga_writestr>
        vga_writestr(" sectors\n");
  1026ad:	68 c3 44 10 00       	push   $0x1044c3
  1026b2:	e8 39 07 00 00       	call   102df0 <vga_writestr>

        // Read data
        if (!ata_read_sectors(data_sector, sectors_to_read, (uint8_t*)buffer + bytes_read)) {
  1026b7:	8b 85 cc fb ff ff    	mov    -0x434(%ebp),%eax
  1026bd:	03 45 0c             	add    0xc(%ebp),%eax
  1026c0:	50                   	push   %eax
  1026c1:	89 f8                	mov    %edi,%eax
  1026c3:	0f b6 c0             	movzbl %al,%eax
  1026c6:	50                   	push   %eax
  1026c7:	53                   	push   %ebx
  1026c8:	e8 f3 ea ff ff       	call   1011c0 <ata_read_sectors>
  1026cd:	83 c4 24             	add    $0x24,%esp
  1026d0:	8b 95 bc fb ff ff    	mov    -0x444(%ebp),%edx
  1026d6:	85 c0                	test   %eax,%eax
  1026d8:	0f 84 9b 00 00 00    	je     102779 <fat32_read_file+0x3c9>
            vga_writestr("[FAT32] Failed to read data sectors\n");
            return false;
        }

        bytes_read += sectors_to_read * 512;
  1026de:	89 f8                	mov    %edi,%eax
    uint32_t fat_sector = fat_begin_lba + ((cluster * 4) / 512);
  1026e0:	8d 3c 95 00 00 00 00 	lea    0x0(,%edx,4),%edi
        bytes_read += sectors_to_read * 512;
  1026e7:	c1 e0 09             	shl    $0x9,%eax
  1026ea:	01 85 cc fb ff ff    	add    %eax,-0x434(%ebp)
    uint32_t fat_sector = fat_begin_lba + ((cluster * 4) / 512);
  1026f0:	89 f8                	mov    %edi,%eax
    if (!ata_read_sectors(fat_sector, 1, buffer)) {
  1026f2:	ff b5 d0 fb ff ff    	push   -0x430(%ebp)
    uint32_t fat_sector = fat_begin_lba + ((cluster * 4) / 512);
  1026f8:	c1 e8 09             	shr    $0x9,%eax
    if (!ata_read_sectors(fat_sector, 1, buffer)) {
  1026fb:	6a 01                	push   $0x1
    uint32_t fat_sector = fat_begin_lba + ((cluster * 4) / 512);
  1026fd:	03 05 b8 7b 10 00    	add    0x107bb8,%eax
    if (!ata_read_sectors(fat_sector, 1, buffer)) {
  102703:	50                   	push   %eax
  102704:	e8 b7 ea ff ff       	call   1011c0 <ata_read_sectors>
  102709:	83 c4 0c             	add    $0xc,%esp
  10270c:	85 c0                	test   %eax,%eax
  10270e:	0f 84 6b 01 00 00    	je     10287f <fat32_read_file+0x4cf>
    return buffer[offset/4] & 0x0FFFFFFF;
  102714:	81 e7 fc 01 00 00    	and    $0x1fc,%edi
  10271a:	8b 94 2f f4 fb ff ff 	mov    -0x40c(%edi,%ebp,1),%edx
  102721:	81 e2 ff ff ff 0f    	and    $0xfffffff,%edx
    while (bytes_read < entry->file_size && current_data_cluster < 0x0FFFFFF8) {
  102727:	81 fa f7 ff ff 0f    	cmp    $0xffffff7,%edx
  10272d:	0f 96 c0             	setbe  %al
  102730:	8b 8d c8 fb ff ff    	mov    -0x438(%ebp),%ecx
  102736:	8b bd cc fb ff ff    	mov    -0x434(%ebp),%edi
  10273c:	3b 79 1c             	cmp    0x1c(%ecx),%edi
  10273f:	73 08                	jae    102749 <fat32_read_file+0x399>
  102741:	84 c0                	test   %al,%al
  102743:	0f 85 b4 fe ff ff    	jne    1025fd <fat32_read_file+0x24d>
        current_data_cluster = fat32_get_next_cluster(current_data_cluster);
    }

    vga_writestr("[FAT32] Successfully read ");
  102749:	68 cd 44 10 00       	push   $0x1044cd
  10274e:	e8 9d 06 00 00       	call   102df0 <vga_writestr>
    uint32_t_to_str(bytes_read, size_str);
  102753:	56                   	push   %esi
  102754:	ff b5 cc fb ff ff    	push   -0x434(%ebp)
  10275a:	e8 e1 07 00 00       	call   102f40 <uint32_t_to_str>
    vga_writestr(size_str);
  10275f:	56                   	push   %esi
  102760:	e8 8b 06 00 00       	call   102df0 <vga_writestr>
    vga_writestr(" bytes\n");
  102765:	68 e8 44 10 00       	push   $0x1044e8
  10276a:	e8 81 06 00 00       	call   102df0 <vga_writestr>

    return true;
  10276f:	83 c4 14             	add    $0x14,%esp
  102772:	b8 01 00 00 00       	mov    $0x1,%eax
  102777:	eb 0d                	jmp    102786 <fat32_read_file+0x3d6>
            vga_writestr("[FAT32] Failed to read data sectors\n");
  102779:	68 d4 49 10 00       	push   $0x1049d4
  10277e:	e8 6d 06 00 00       	call   102df0 <vga_writestr>
            return false;
  102783:	58                   	pop    %eax
        return false;
  102784:	31 c0                	xor    %eax,%eax
  102786:	8d 65 f4             	lea    -0xc(%ebp),%esp
  102789:	5b                   	pop    %ebx
  10278a:	5e                   	pop    %esi
  10278b:	5f                   	pop    %edi
  10278c:	5d                   	pop    %ebp
  10278d:	c3                   	ret
  10278e:	66 90                	xchg   %ax,%ax
            for (uint32_t j = 0; j < 16; j++) {
  102790:	83 c7 20             	add    $0x20,%edi
  102793:	8d 45 f4             	lea    -0xc(%ebp),%eax
  102796:	39 f8                	cmp    %edi,%eax
  102798:	0f 85 b2 fc ff ff    	jne    102450 <fat32_read_file+0xa0>
        for (uint32_t i = 0; i < sectors_per_cluster && !found; i++) {
  10279e:	8b b5 cc fb ff ff    	mov    -0x434(%ebp),%esi
  1027a4:	83 c6 01             	add    $0x1,%esi
  1027a7:	3b 35 b0 7b 10 00    	cmp    0x107bb0,%esi
  1027ad:	0f 82 6d fc ff ff    	jb     102420 <fat32_read_file+0x70>
  1027b3:	8b 95 c4 fb ff ff    	mov    -0x43c(%ebp),%edx
    uint32_t fat_sector = fat_begin_lba + ((cluster * 4) / 512);
  1027b9:	8d 34 95 00 00 00 00 	lea    0x0(,%edx,4),%esi
    if (!ata_read_sectors(fat_sector, 1, buffer)) {
  1027c0:	8d 8d f4 fb ff ff    	lea    -0x40c(%ebp),%ecx
    uint32_t fat_sector = fat_begin_lba + ((cluster * 4) / 512);
  1027c6:	89 f0                	mov    %esi,%eax
    if (!ata_read_sectors(fat_sector, 1, buffer)) {
  1027c8:	51                   	push   %ecx
    uint32_t fat_sector = fat_begin_lba + ((cluster * 4) / 512);
  1027c9:	c1 e8 09             	shr    $0x9,%eax
    if (!ata_read_sectors(fat_sector, 1, buffer)) {
  1027cc:	6a 01                	push   $0x1
    uint32_t fat_sector = fat_begin_lba + ((cluster * 4) / 512);
  1027ce:	03 05 b8 7b 10 00    	add    0x107bb8,%eax
    if (!ata_read_sectors(fat_sector, 1, buffer)) {
  1027d4:	50                   	push   %eax
  1027d5:	e8 e6 e9 ff ff       	call   1011c0 <ata_read_sectors>
  1027da:	83 c4 0c             	add    $0xc,%esp
        return 0x0FFFFFF7;
  1027dd:	ba f7 ff ff 0f       	mov    $0xffffff7,%edx
    if (!ata_read_sectors(fat_sector, 1, buffer)) {
  1027e2:	85 c0                	test   %eax,%eax
  1027e4:	0f 84 07 fc ff ff    	je     1023f1 <fat32_read_file+0x41>
    return buffer[offset/4] & 0x0FFFFFFF;
  1027ea:	81 e6 fc 01 00 00    	and    $0x1fc,%esi
  1027f0:	8b 84 2e f4 fb ff ff 	mov    -0x40c(%esi,%ebp,1),%eax
  1027f7:	25 ff ff ff 0f       	and    $0xfffffff,%eax
  1027fc:	89 c2                	mov    %eax,%edx
    while (current_cluster < 0x0FFFFFF8 && !found) {
  1027fe:	3d f7 ff ff 0f       	cmp    $0xffffff7,%eax
  102803:	0f 86 e8 fb ff ff    	jbe    1023f1 <fat32_read_file+0x41>
  102809:	e9 76 ff ff ff       	jmp    102784 <fat32_read_file+0x3d4>
  10280e:	66 90                	xchg   %ax,%ax
    while (dst < 8) {
  102810:	8d 8d f4 fb ff ff    	lea    -0x40c(%ebp),%ecx
  102816:	8d b5 fc fb ff ff    	lea    -0x404(%ebp),%esi
  10281c:	8d 1c 11             	lea    (%ecx,%edx,1),%ebx
  10281f:	f6 c2 01             	test   $0x1,%dl
  102822:	74 1c                	je     102840 <fat32_read_file+0x490>
        normalized[dst++] = ' ';
  102824:	c6 03 20             	movb   $0x20,(%ebx)
    while (dst < 8) {
  102827:	83 c3 01             	add    $0x1,%ebx
  10282a:	39 f3                	cmp    %esi,%ebx
  10282c:	0f 84 77 fc ff ff    	je     1024a9 <fat32_read_file+0xf9>
  102832:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  102839:	00 
  10283a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
        normalized[dst++] = ' ';
  102840:	c6 03 20             	movb   $0x20,(%ebx)
    while (dst < 8) {
  102843:	83 c3 02             	add    $0x2,%ebx
        normalized[dst++] = ' ';
  102846:	c6 43 ff 20          	movb   $0x20,-0x1(%ebx)
    while (dst < 8) {
  10284a:	39 f3                	cmp    %esi,%ebx
  10284c:	75 f2                	jne    102840 <fat32_read_file+0x490>
  10284e:	e9 56 fc ff ff       	jmp    1024a9 <fat32_read_file+0xf9>
  102853:	2e 8d 74 26 00       	lea    %cs:0x0(%esi,%eiz,1),%esi
  102858:	89 f9                	mov    %edi,%ecx
  10285a:	8b bd d0 fb ff ff    	mov    -0x430(%ebp),%edi
    while (dst < 11) {
  102860:	8d 95 ff fb ff ff    	lea    -0x401(%ebp),%edx
  102866:	01 c8                	add    %ecx,%eax
  102868:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  10286f:	00 
        normalized[dst++] = ' ';
  102870:	c6 00 20             	movb   $0x20,(%eax)
    while (dst < 11) {
  102873:	83 c0 01             	add    $0x1,%eax
  102876:	39 c2                	cmp    %eax,%edx
  102878:	75 f6                	jne    102870 <fat32_read_file+0x4c0>
  10287a:	e9 74 fc ff ff       	jmp    1024f3 <fat32_read_file+0x143>
  10287f:	0f b6 85 c4 fb ff ff 	movzbl -0x43c(%ebp),%eax
        return 0x0FFFFFF7;
  102886:	ba f7 ff ff 0f       	mov    $0xffffff7,%edx
  10288b:	e9 a0 fe ff ff       	jmp    102730 <fat32_read_file+0x380>
        vga_writestr("[FAT32] Buffer too small\n");
  102890:	68 7e 44 10 00       	push   $0x10447e
  102895:	e8 56 05 00 00       	call   102df0 <vga_writestr>
        *size = entry->file_size;
  10289a:	8b 47 1c             	mov    0x1c(%edi),%eax
  10289d:	89 03                	mov    %eax,(%ebx)
        return false;
  10289f:	5b                   	pop    %ebx
  1028a0:	e9 df fe ff ff       	jmp    102784 <fat32_read_file+0x3d4>
  1028a5:	66 90                	xchg   %ax,%ax
  1028a7:	66 90                	xchg   %ax,%ax
  1028a9:	66 90                	xchg   %ax,%ax
  1028ab:	66 90                	xchg   %ax,%ax
  1028ad:	66 90                	xchg   %ax,%ax
  1028af:	90                   	nop

001028b0 <keyboard_init>:
  1028b0:	e4 64                	in     $0x64,%al
    '*', 0, ' '
};

void keyboard_init(void) {
    // Wait for keyboard controller to be ready
    while (inb(KEYBOARD_STATUS_PORT) & KEYBOARD_INPUT_FULL);
  1028b2:	a8 02                	test   $0x2,%al
  1028b4:	75 fa                	jne    1028b0 <keyboard_init>
    
    // Reset shift and caps lock state
    shift_pressed = false;
  1028b6:	c7 05 24 7c 10 00 00 	movl   $0x0,0x107c24
  1028bd:	00 00 00 
    caps_lock = false;
  1028c0:	c7 05 20 7c 10 00 00 	movl   $0x0,0x107c20
  1028c7:	00 00 00 
}
  1028ca:	c3                   	ret
  1028cb:	2e 8d 74 26 00       	lea    %cs:0x0(%esi,%eiz,1),%esi

001028d0 <keyboard_read>:
    }

    return c;
}

char keyboard_read(void) {
  1028d0:	55                   	push   %ebp
  1028d1:	89 e5                	mov    %esp,%ebp
  1028d3:	57                   	push   %edi
  1028d4:	56                   	push   %esi
  1028d5:	31 f6                	xor    %esi,%esi
  1028d7:	53                   	push   %ebx
  1028d8:	83 ec 04             	sub    $0x4,%esp
  1028db:	c6 45 f3 00          	movb   $0x0,-0xd(%ebp)
  1028df:	8b 15 20 7c 10 00    	mov    0x107c20,%edx
  1028e5:	8b 0d 24 7c 10 00    	mov    0x107c24,%ecx
  1028eb:	2e 8d 74 26 00       	lea    %cs:0x0(%esi,%eiz,1),%esi
  1028f0:	e4 64                	in     $0x64,%al
    char c;
    do {
        // Wait for keyboard data
        while (!(inb(KEYBOARD_STATUS_PORT) & KEYBOARD_OUTPUT_FULL));
  1028f2:	a8 01                	test   $0x1,%al
  1028f4:	74 fa                	je     1028f0 <keyboard_read+0x20>
  1028f6:	e4 60                	in     $0x60,%al
    if (scancode & 0x80) {
  1028f8:	84 c0                	test   %al,%al
  1028fa:	78 74                	js     102970 <keyboard_read+0xa0>
    switch (scancode) {
  1028fc:	3c 36                	cmp    $0x36,%al
  1028fe:	0f 84 8c 00 00 00    	je     102990 <keyboard_read+0xc0>
  102904:	3c 3a                	cmp    $0x3a,%al
  102906:	0f 84 94 00 00 00    	je     1029a0 <keyboard_read+0xd0>
  10290c:	3c 2a                	cmp    $0x2a,%al
  10290e:	0f 84 7c 00 00 00    	je     102990 <keyboard_read+0xc0>
    if (scancode >= sizeof(scancode_to_ascii)) {
  102914:	3c 39                	cmp    $0x39,%al
  102916:	77 d8                	ja     1028f0 <keyboard_read+0x20>
        c = scancode_to_ascii_shift[scancode];
  102918:	0f b6 c0             	movzbl %al,%eax
    if (shift_pressed) {
  10291b:	85 c9                	test   %ecx,%ecx
  10291d:	0f 84 8f 00 00 00    	je     1029b2 <keyboard_read+0xe2>
        c = scancode_to_ascii_shift[scancode];
  102923:	0f b6 80 40 4a 10 00 	movzbl 0x104a40(%eax),%eax
    if (caps_lock && c >= 'a' && c <= 'z') {
  10292a:	85 d2                	test   %edx,%edx
  10292c:	74 1c                	je     10294a <keyboard_read+0x7a>
  10292e:	8d 78 9f             	lea    -0x61(%eax),%edi
  102931:	89 fb                	mov    %edi,%ebx
  102933:	80 fb 19             	cmp    $0x19,%bl
  102936:	0f 86 82 00 00 00    	jbe    1029be <keyboard_read+0xee>
    } else if (caps_lock && c >= 'A' && c <= 'Z') {
  10293c:	8d 78 bf             	lea    -0x41(%eax),%edi
  10293f:	89 fb                	mov    %edi,%ebx
  102941:	80 fb 19             	cmp    $0x19,%bl
  102944:	0f 86 97 00 00 00    	jbe    1029e1 <keyboard_read+0x111>
        
        // Read scancode and convert to ASCII
        uint8_t scancode = inb(KEYBOARD_DATA_PORT);
        c = handle_scancode(scancode);
    } while (c == 0);  // Keep reading until we get a printable character
  10294a:	84 c0                	test   %al,%al
  10294c:	74 a2                	je     1028f0 <keyboard_read+0x20>
  10294e:	89 f3                	mov    %esi,%ebx
  102950:	84 db                	test   %bl,%bl
  102952:	74 06                	je     10295a <keyboard_read+0x8a>
  102954:	89 15 20 7c 10 00    	mov    %edx,0x107c20
  10295a:	80 7d f3 00          	cmpb   $0x0,-0xd(%ebp)
  10295e:	74 06                	je     102966 <keyboard_read+0x96>
  102960:	89 0d 24 7c 10 00    	mov    %ecx,0x107c24

    return c;
}
  102966:	83 c4 04             	add    $0x4,%esp
  102969:	5b                   	pop    %ebx
  10296a:	5e                   	pop    %esi
  10296b:	5f                   	pop    %edi
  10296c:	5d                   	pop    %ebp
  10296d:	c3                   	ret
  10296e:	66 90                	xchg   %ax,%ax
        scancode &= 0x7F;  // Clear the top bit
  102970:	83 e0 7f             	and    $0x7f,%eax
        if (scancode == KEY_LSHIFT || scancode == KEY_RSHIFT) {
  102973:	3c 2a                	cmp    $0x2a,%al
  102975:	0f 94 c3             	sete   %bl
  102978:	3c 36                	cmp    $0x36,%al
  10297a:	0f 94 c0             	sete   %al
  10297d:	08 d8                	or     %bl,%al
  10297f:	0f 84 6b ff ff ff    	je     1028f0 <keyboard_read+0x20>
  102985:	88 45 f3             	mov    %al,-0xd(%ebp)
            shift_pressed = false;
  102988:	31 c9                	xor    %ecx,%ecx
  10298a:	e9 61 ff ff ff       	jmp    1028f0 <keyboard_read+0x20>
  10298f:	90                   	nop
    switch (scancode) {
  102990:	c6 45 f3 01          	movb   $0x1,-0xd(%ebp)
  102994:	b9 01 00 00 00       	mov    $0x1,%ecx
  102999:	e9 52 ff ff ff       	jmp    1028f0 <keyboard_read+0x20>
  10299e:	66 90                	xchg   %ax,%ax
            caps_lock = !caps_lock;
  1029a0:	85 d2                	test   %edx,%edx
  1029a2:	be 01 00 00 00       	mov    $0x1,%esi
  1029a7:	0f 94 c2             	sete   %dl
  1029aa:	0f b6 d2             	movzbl %dl,%edx
    } while (c == 0);  // Keep reading until we get a printable character
  1029ad:	e9 3e ff ff ff       	jmp    1028f0 <keyboard_read+0x20>
        c = scancode_to_ascii[scancode];
  1029b2:	0f b6 80 80 4a 10 00 	movzbl 0x104a80(%eax),%eax
  1029b9:	e9 6c ff ff ff       	jmp    10292a <keyboard_read+0x5a>
  1029be:	89 f3                	mov    %esi,%ebx
  1029c0:	84 db                	test   %bl,%bl
  1029c2:	74 06                	je     1029ca <keyboard_read+0xfa>
  1029c4:	89 15 20 7c 10 00    	mov    %edx,0x107c20
  1029ca:	80 7d f3 00          	cmpb   $0x0,-0xd(%ebp)
  1029ce:	74 06                	je     1029d6 <keyboard_read+0x106>
  1029d0:	89 0d 24 7c 10 00    	mov    %ecx,0x107c24
}
  1029d6:	83 c4 04             	add    $0x4,%esp
        return c - 'a' + 'A';
  1029d9:	83 e8 20             	sub    $0x20,%eax
}
  1029dc:	5b                   	pop    %ebx
  1029dd:	5e                   	pop    %esi
  1029de:	5f                   	pop    %edi
  1029df:	5d                   	pop    %ebp
  1029e0:	c3                   	ret
  1029e1:	89 f3                	mov    %esi,%ebx
  1029e3:	84 db                	test   %bl,%bl
  1029e5:	74 06                	je     1029ed <keyboard_read+0x11d>
  1029e7:	89 15 20 7c 10 00    	mov    %edx,0x107c20
  1029ed:	80 7d f3 00          	cmpb   $0x0,-0xd(%ebp)
  1029f1:	74 06                	je     1029f9 <keyboard_read+0x129>
  1029f3:	89 0d 24 7c 10 00    	mov    %ecx,0x107c24
  1029f9:	83 c4 04             	add    $0x4,%esp
        return c - 'A' + 'a';
  1029fc:	83 c0 20             	add    $0x20,%eax
}
  1029ff:	5b                   	pop    %ebx
  102a00:	5e                   	pop    %esi
  102a01:	5f                   	pop    %edi
  102a02:	5d                   	pop    %ebp
  102a03:	c3                   	ret
  102a04:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  102a0b:	00 
  102a0c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00102a10 <keyboard_is_shift_pressed>:

bool keyboard_is_shift_pressed(void) {
    return shift_pressed;
}
  102a10:	a1 24 7c 10 00       	mov    0x107c24,%eax
  102a15:	c3                   	ret
  102a16:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  102a1d:	00 
  102a1e:	66 90                	xchg   %ax,%ax

00102a20 <keyboard_is_caps_on>:

bool keyboard_is_caps_on(void) {
    return caps_lock;
  102a20:	a1 20 7c 10 00       	mov    0x107c20,%eax
  102a25:	c3                   	ret
  102a26:	66 90                	xchg   %ax,%ax
  102a28:	66 90                	xchg   %ax,%ax
  102a2a:	66 90                	xchg   %ax,%ax
  102a2c:	66 90                	xchg   %ax,%ax
  102a2e:	66 90                	xchg   %ax,%ax

00102a30 <load_program>:
#include "../include/memory.h"
#include "../include/string.h"
#include "../include/vga.h"
#include "../include/stdint.h"

bool load_program(const char* filename, program_info_t* info) {
  102a30:	55                   	push   %ebp
  102a31:	89 e5                	mov    %esp,%ebp
  102a33:	53                   	push   %ebx
  102a34:	83 ec 04             	sub    $0x4,%esp
  102a37:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    if (!info) return false;
  102a3a:	85 db                	test   %ebx,%ebx
  102a3c:	74 6d                	je     102aab <load_program+0x7b>
    
    // Initialize program info - keep program and stack well separated
    info->loaded = false;
  102a3e:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
    info->entry_point = PROGRAM_LOAD_ADDR + 0x1000;  // Add 4KB offset for safety
  102a45:	c7 03 00 10 10 00    	movl   $0x101000,(%ebx)
    info->stack_pointer = PROGRAM_LOAD_ADDR + STACK_SIZE - 0x1000;  // Leave 4KB safety margin
  102a4b:	c7 43 04 00 70 10 00 	movl   $0x107000,0x4(%ebx)

    vga_writestr("Loading program...\n");
  102a52:	68 25 45 10 00       	push   $0x104525
  102a57:	e8 94 03 00 00       	call   102df0 <vga_writestr>

    // Use a much smaller buffer initially for testing
    uint32_t buffer_size = 4096;  // Start with just 4KB
    
    // Clear only the program area
    memset((void*)info->entry_point, 0, buffer_size);
  102a5c:	68 00 10 00 00       	push   $0x1000
  102a61:	6a 00                	push   $0x0
  102a63:	ff 33                	push   (%ebx)
  102a65:	e8 c6 05 00 00       	call   103030 <memset>

    // Read file with limited size
    uint32_t size = buffer_size;
    if (!fat32_read_file(filename, (void*)info->entry_point, &size)) {
  102a6a:	8d 45 f8             	lea    -0x8(%ebp),%eax
    uint32_t size = buffer_size;
  102a6d:	c7 45 f8 00 10 00 00 	movl   $0x1000,-0x8(%ebp)
    if (!fat32_read_file(filename, (void*)info->entry_point, &size)) {
  102a74:	50                   	push   %eax
  102a75:	ff 33                	push   (%ebx)
  102a77:	ff 75 08             	push   0x8(%ebp)
  102a7a:	e8 31 f9 ff ff       	call   1023b0 <fat32_read_file>
  102a7f:	83 c4 1c             	add    $0x1c,%esp
  102a82:	85 c0                	test   %eax,%eax
  102a84:	74 1a                	je     102aa0 <load_program+0x70>
        vga_writestr("Error: Could not read program file\n");
        return false;
    }

    info->loaded = true;
  102a86:	c7 43 08 01 00 00 00 	movl   $0x1,0x8(%ebx)
    return true;
  102a8d:	b8 01 00 00 00       	mov    $0x1,%eax
}
  102a92:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  102a95:	c9                   	leave
  102a96:	c3                   	ret
  102a97:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  102a9e:	00 
  102a9f:	90                   	nop
        vga_writestr("Error: Could not read program file\n");
  102aa0:	68 fc 49 10 00       	push   $0x1049fc
  102aa5:	e8 46 03 00 00       	call   102df0 <vga_writestr>
        return false;
  102aaa:	58                   	pop    %eax
}
  102aab:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    if (!info) return false;
  102aae:	31 c0                	xor    %eax,%eax
}
  102ab0:	c9                   	leave
  102ab1:	c3                   	ret
  102ab2:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  102ab9:	00 
  102aba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00102ac0 <jump_to_program>:

void jump_to_program(uint32_t entry_point, uint32_t stack_pointer) {
  102ac0:	55                   	push   %ebp
  102ac1:	89 e5                	mov    %esp,%ebp
  102ac3:	57                   	push   %edi
    typedef void (*program_entry)(void);
    program_entry program = (program_entry)entry_point;

    vga_writestr("Jumping to program at 0x");
  102ac4:	bf 1c 00 00 00       	mov    $0x1c,%edi
void jump_to_program(uint32_t entry_point, uint32_t stack_pointer) {
  102ac9:	56                   	push   %esi
  102aca:	8d 75 f2             	lea    -0xe(%ebp),%esi
  102acd:	53                   	push   %ebx
  102ace:	83 ec 08             	sub    $0x8,%esp
  102ad1:	8b 45 0c             	mov    0xc(%ebp),%eax
  102ad4:	8b 5d 08             	mov    0x8(%ebp),%ebx
  102ad7:	89 45 ec             	mov    %eax,-0x14(%ebp)
    vga_writestr("Jumping to program at 0x");
  102ada:	68 39 45 10 00       	push   $0x104539
  102adf:	e8 0c 03 00 00       	call   102df0 <vga_writestr>
  102ae4:	59                   	pop    %ecx
  102ae5:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  102aec:	00 
  102aed:	8d 76 00             	lea    0x0(%esi),%esi
    for (int i = 7; i >= 0; i--) {
        char hex = "0123456789ABCDEF"[(entry_point >> (i * 4)) & 0xF];
  102af0:	89 f9                	mov    %edi,%ecx
  102af2:	89 d8                	mov    %ebx,%eax
        char str[2] = {hex, 0};
  102af4:	c6 45 f3 00          	movb   $0x0,-0xd(%ebp)
    for (int i = 7; i >= 0; i--) {
  102af8:	83 ef 04             	sub    $0x4,%edi
        char hex = "0123456789ABCDEF"[(entry_point >> (i * 4)) & 0xF];
  102afb:	d3 e8                	shr    %cl,%eax
  102afd:	83 e0 0f             	and    $0xf,%eax
        char str[2] = {hex, 0};
  102b00:	0f b6 80 43 41 10 00 	movzbl 0x104143(%eax),%eax
  102b07:	88 45 f2             	mov    %al,-0xe(%ebp)
        vga_writestr(str);
  102b0a:	56                   	push   %esi
  102b0b:	e8 e0 02 00 00       	call   102df0 <vga_writestr>
    for (int i = 7; i >= 0; i--) {
  102b10:	5a                   	pop    %edx
  102b11:	83 ff fc             	cmp    $0xfffffffc,%edi
  102b14:	75 da                	jne    102af0 <jump_to_program+0x30>
    }
    vga_writestr("\n");
  102b16:	68 0a 44 10 00       	push   $0x10440a
  102b1b:	e8 d0 02 00 00       	call   102df0 <vga_writestr>

    // Just switch stack and jump
    asm volatile(
  102b20:	8b 45 ec             	mov    -0x14(%ebp),%eax
  102b23:	89 c4                	mov    %eax,%esp
  102b25:	ff d3                	call   *%ebx
        : "r"(stack_pointer), "r"(entry_point)
        : "memory"
    );

    // We shouldn't get here normally - program should exit via interrupt
    vga_writestr("Program returned via interrupt\n");
  102b27:	58                   	pop    %eax
  102b28:	c7 45 08 20 4a 10 00 	movl   $0x104a20,0x8(%ebp)
  102b2f:	8d 65 f4             	lea    -0xc(%ebp),%esp
  102b32:	5b                   	pop    %ebx
  102b33:	5e                   	pop    %esi
  102b34:	5f                   	pop    %edi
  102b35:	5d                   	pop    %ebp
    vga_writestr("Program returned via interrupt\n");
  102b36:	e9 b5 02 00 00       	jmp    102df0 <vga_writestr>
  102b3b:	66 90                	xchg   %ax,%ax
  102b3d:	66 90                	xchg   %ax,%ax
  102b3f:	90                   	nop

00102b40 <init_memory>:
// Simple memory allocator
#define HEAP_SIZE 1024*1024  // 1MB heap
static uint8_t heap[HEAP_SIZE];
static size_t heap_ptr = 0;

void init_memory(void) {
  102b40:	55                   	push   %ebp
    heap_ptr = 0;
  102b41:	c7 05 40 7c 10 00 00 	movl   $0x0,0x107c40
  102b48:	00 00 00 
void init_memory(void) {
  102b4b:	89 e5                	mov    %esp,%ebp
    memset(heap, 0, HEAP_SIZE);  // Clear heap on initialization
  102b4d:	68 00 00 10 00       	push   $0x100000
  102b52:	6a 00                	push   $0x0
  102b54:	68 60 7c 10 00       	push   $0x107c60
  102b59:	e8 d2 04 00 00       	call   103030 <memset>
}
  102b5e:	83 c4 0c             	add    $0xc,%esp
  102b61:	c9                   	leave
  102b62:	c3                   	ret
  102b63:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  102b6a:	00 
  102b6b:	2e 8d 74 26 00       	lea    %cs:0x0(%esi,%eiz,1),%esi

00102b70 <kmalloc>:

void* kmalloc(size_t size) {
  102b70:	55                   	push   %ebp
    if (heap_ptr + size > HEAP_SIZE) {
  102b71:	a1 40 7c 10 00       	mov    0x107c40,%eax
void* kmalloc(size_t size) {
  102b76:	89 e5                	mov    %esp,%ebp
    if (heap_ptr + size > HEAP_SIZE) {
  102b78:	8b 55 08             	mov    0x8(%ebp),%edx
  102b7b:	01 c2                	add    %eax,%edx
  102b7d:	81 fa 00 00 10 00    	cmp    $0x100000,%edx
  102b83:	77 1b                	ja     102ba0 <kmalloc+0x30>
    }
    
    void* ptr = &heap[heap_ptr];
    heap_ptr += size;
    // Align to 4 bytes
    heap_ptr = (heap_ptr + 3) & ~3;
  102b85:	83 c2 03             	add    $0x3,%edx
    void* ptr = &heap[heap_ptr];
  102b88:	05 60 7c 10 00       	add    $0x107c60,%eax
    return ptr;
}
  102b8d:	5d                   	pop    %ebp
    heap_ptr = (heap_ptr + 3) & ~3;
  102b8e:	83 e2 fc             	and    $0xfffffffc,%edx
  102b91:	89 15 40 7c 10 00    	mov    %edx,0x107c40
}
  102b97:	c3                   	ret
  102b98:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  102b9f:	00 
        return NULL;  // Out of memory
  102ba0:	31 c0                	xor    %eax,%eax
}
  102ba2:	5d                   	pop    %ebp
  102ba3:	c3                   	ret
  102ba4:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  102bab:	00 
  102bac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00102bb0 <kfree>:

void kfree(void* ptr) {
    // This is a very simple allocator that doesn't actually free memory
    // In a real kernel, you'd want to implement proper memory management
    (void)ptr;
  102bb0:	c3                   	ret
  102bb1:	66 90                	xchg   %ax,%ax
  102bb3:	66 90                	xchg   %ax,%ax
  102bb5:	66 90                	xchg   %ax,%ax
  102bb7:	66 90                	xchg   %ax,%ax
  102bb9:	66 90                	xchg   %ax,%ax
  102bbb:	66 90                	xchg   %ax,%ax
  102bbd:	66 90                	xchg   %ax,%ax
  102bbf:	90                   	nop

00102bc0 <print>:
//
#include "../include/stdterm.h"
#include "../include/vga.h"

void print(const char* str) {
  vga_writestr(str);
  102bc0:	e9 2b 02 00 00       	jmp    102df0 <vga_writestr>
  102bc5:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  102bcc:	00 
  102bcd:	8d 76 00             	lea    0x0(%esi),%esi

00102bd0 <println>:
}

void println(const char* str) {
  102bd0:	55                   	push   %ebp
  102bd1:	89 e5                	mov    %esp,%ebp
  vga_writestr(str);
  102bd3:	ff 75 08             	push   0x8(%ebp)
  102bd6:	e8 15 02 00 00       	call   102df0 <vga_writestr>
  vga_putchar('\n');
  102bdb:	58                   	pop    %eax
  102bdc:	c7 45 08 0a 00 00 00 	movl   $0xa,0x8(%ebp)
}
  102be3:	c9                   	leave
  vga_putchar('\n');
  102be4:	e9 a7 00 00 00       	jmp    102c90 <vga_putchar>
  102be9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00102bf0 <printChar>:

void printChar(char c) {
  102bf0:	55                   	push   %ebp
  102bf1:	89 e5                	mov    %esp,%ebp
  vga_putchar(c);
  102bf3:	0f be 45 08          	movsbl 0x8(%ebp),%eax
  102bf7:	89 45 08             	mov    %eax,0x8(%ebp)
}
  102bfa:	5d                   	pop    %ebp
  vga_putchar(c);
  102bfb:	e9 90 00 00 00       	jmp    102c90 <vga_putchar>

00102c00 <clearScreen>:

void clearScreen() {
  vga_clear();
  102c00:	e9 2b 02 00 00       	jmp    102e30 <vga_clear>
  102c05:	66 90                	xchg   %ax,%ax
  102c07:	66 90                	xchg   %ax,%ax
  102c09:	66 90                	xchg   %ax,%ax
  102c0b:	66 90                	xchg   %ax,%ax
  102c0d:	66 90                	xchg   %ax,%ax
  102c0f:	66 90                	xchg   %ax,%ax
  102c11:	66 90                	xchg   %ax,%ax
  102c13:	66 90                	xchg   %ax,%ax
  102c15:	66 90                	xchg   %ax,%ax
  102c17:	66 90                	xchg   %ax,%ax
  102c19:	66 90                	xchg   %ax,%ax
  102c1b:	66 90                	xchg   %ax,%ax
  102c1d:	66 90                	xchg   %ax,%ax
  102c1f:	90                   	nop

00102c20 <vga_init>:
    return c16 | (color16 << 8);
}

void vga_init(void) {
    // Force black background (0), white foreground (15)
    vga_color = VGA_COLOR(VGA_WHITE, VGA_BLACK);  // 00001111 in binary
  102c20:	c6 05 62 7c 20 00 0f 	movb   $0xf,0x207c62
    cursor_pos = 0;
  102c27:	31 c0                	xor    %eax,%eax
  102c29:	66 a3 60 7c 20 00    	mov    %ax,0x207c60
  102c2f:	b8 00 80 0b 00       	mov    $0xb8000,%eax
  102c34:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  102c3b:	00 
  102c3c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    
    // Fill entire screen with spaces using our color
    for (int i = 0; i < VGA_WIDTH * VGA_HEIGHT; i++) {
        vga_buffer[i] = vga_entry(' ', vga_color);
  102c40:	ba 20 0f 00 00       	mov    $0xf20,%edx
  102c45:	b9 20 0f 00 00       	mov    $0xf20,%ecx
    for (int i = 0; i < VGA_WIDTH * VGA_HEIGHT; i++) {
  102c4a:	83 c0 04             	add    $0x4,%eax
        vga_buffer[i] = vga_entry(' ', vga_color);
  102c4d:	66 89 50 fc          	mov    %dx,-0x4(%eax)
  102c51:	66 89 48 fe          	mov    %cx,-0x2(%eax)
    for (int i = 0; i < VGA_WIDTH * VGA_HEIGHT; i++) {
  102c55:	3d a0 8f 0b 00       	cmp    $0xb8fa0,%eax
  102c5a:	75 e4                	jne    102c40 <vga_init+0x20>
    asm volatile("outb %0, %1" : : "a"(value), "Nd"(port));
  102c5c:	b8 0f 00 00 00       	mov    $0xf,%eax
  102c61:	ba d4 03 00 00       	mov    $0x3d4,%edx
  102c66:	ee                   	out    %al,(%dx)
  102c67:	31 c9                	xor    %ecx,%ecx
  102c69:	ba d5 03 00 00       	mov    $0x3d5,%edx
  102c6e:	89 c8                	mov    %ecx,%eax
  102c70:	ee                   	out    %al,(%dx)
  102c71:	b8 0e 00 00 00       	mov    $0xe,%eax
  102c76:	ba d4 03 00 00       	mov    $0x3d4,%edx
  102c7b:	ee                   	out    %al,(%dx)
  102c7c:	ba d5 03 00 00       	mov    $0x3d5,%edx
  102c81:	89 c8                	mov    %ecx,%eax
  102c83:	ee                   	out    %al,(%dx)
    }
    
    // Reset cursor
    vga_set_cursor_pos(0);
}
  102c84:	c3                   	ret
  102c85:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  102c8c:	00 
  102c8d:	8d 76 00             	lea    0x0(%esi),%esi

00102c90 <vga_putchar>:

void vga_putchar(char c) {
  102c90:	55                   	push   %ebp
    if (c == '\n') {
        cursor_pos = (cursor_pos / VGA_WIDTH + 1) * VGA_WIDTH;
  102c91:	0f b7 05 60 7c 20 00 	movzwl 0x207c60,%eax
void vga_putchar(char c) {
  102c98:	89 e5                	mov    %esp,%ebp
  102c9a:	56                   	push   %esi
  102c9b:	8b 4d 08             	mov    0x8(%ebp),%ecx
  102c9e:	53                   	push   %ebx
    if (c == '\n') {
  102c9f:	80 f9 0a             	cmp    $0xa,%cl
  102ca2:	0f 84 23 01 00 00    	je     102dcb <vga_putchar+0x13b>
    } 
    else if (c == '\b') {
  102ca8:	80 f9 08             	cmp    $0x8,%cl
  102cab:	0f 84 de 00 00 00    	je     102d8f <vga_putchar+0xff>
    return c16 | (color16 << 8);
  102cb1:	0f b6 15 62 7c 20 00 	movzbl 0x207c62,%edx
  102cb8:	66 0f be c9          	movsbw %cl,%cx
            cursor_pos--;
            vga_buffer[cursor_pos] = vga_entry(' ', vga_color);
        }
    } 
    else {
        vga_buffer[cursor_pos] = vga_entry(c, vga_color);
  102cbc:	0f b7 d8             	movzwl %ax,%ebx
        cursor_pos++;
  102cbf:	83 c0 01             	add    $0x1,%eax
  102cc2:	66 a3 60 7c 20 00    	mov    %ax,0x207c60
    return c16 | (color16 << 8);
  102cc8:	c1 e2 08             	shl    $0x8,%edx
  102ccb:	09 ca                	or     %ecx,%edx
  102ccd:	66 89 94 1b 00 80 0b 	mov    %dx,0xb8000(%ebx,%ebx,1)
  102cd4:	00 
    }

    if (cursor_pos >= VGA_WIDTH * VGA_HEIGHT) {
  102cd5:	b9 40 81 0b 00       	mov    $0xb8140,%ecx
  102cda:	66 3d cf 07          	cmp    $0x7cf,%ax
  102cde:	0f 86 e0 00 00 00    	jbe    102dc4 <vga_putchar+0x134>
  102ce4:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  102ceb:	00 
  102cec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
        // Move everything up
        for (int i = 0; i < VGA_HEIGHT - 1; i++) {
            for (int j = 0; j < VGA_WIDTH; j++) {
  102cf0:	8d 81 60 ff ff ff    	lea    -0xa0(%ecx),%eax
  102cf6:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  102cfd:	00 
  102cfe:	66 90                	xchg   %ax,%ax
                vga_buffer[i * VGA_WIDTH + j] = vga_buffer[(i + 1) * VGA_WIDTH + j];
  102d00:	0f b7 10             	movzwl (%eax),%edx
            for (int j = 0; j < VGA_WIDTH; j++) {
  102d03:	83 c0 02             	add    $0x2,%eax
                vga_buffer[i * VGA_WIDTH + j] = vga_buffer[(i + 1) * VGA_WIDTH + j];
  102d06:	66 89 90 5e ff ff ff 	mov    %dx,-0xa2(%eax)
            for (int j = 0; j < VGA_WIDTH; j++) {
  102d0d:	39 c8                	cmp    %ecx,%eax
  102d0f:	75 ef                	jne    102d00 <vga_putchar+0x70>
        for (int i = 0; i < VGA_HEIGHT - 1; i++) {
  102d11:	8d 88 a0 00 00 00    	lea    0xa0(%eax),%ecx
  102d17:	3d a0 8f 0b 00       	cmp    $0xb8fa0,%eax
  102d1c:	75 d2                	jne    102cf0 <vga_putchar+0x60>
    return c16 | (color16 << 8);
  102d1e:	0f b6 15 62 7c 20 00 	movzbl 0x207c62,%edx
  102d25:	b8 00 8f 0b 00       	mov    $0xb8f00,%eax
  102d2a:	c1 e2 08             	shl    $0x8,%edx
  102d2d:	83 ca 20             	or     $0x20,%edx
  102d30:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  102d37:	00 
  102d38:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  102d3f:	00 
            }
        }
        // Clear last line
        for (int i = 0; i < VGA_WIDTH; i++) {
            vga_buffer[(VGA_HEIGHT - 1) * VGA_WIDTH + i] = vga_entry(' ', vga_color);
  102d40:	66 89 10             	mov    %dx,(%eax)
        for (int i = 0; i < VGA_WIDTH; i++) {
  102d43:	83 c0 04             	add    $0x4,%eax
            vga_buffer[(VGA_HEIGHT - 1) * VGA_WIDTH + i] = vga_entry(' ', vga_color);
  102d46:	66 89 50 fe          	mov    %dx,-0x2(%eax)
        for (int i = 0; i < VGA_WIDTH; i++) {
  102d4a:	3d a0 8f 0b 00       	cmp    $0xb8fa0,%eax
  102d4f:	75 ef                	jne    102d40 <vga_putchar+0xb0>
        }
        cursor_pos = (VGA_HEIGHT - 1) * VGA_WIDTH;
  102d51:	b8 80 07 00 00       	mov    $0x780,%eax
  102d56:	b9 07 00 00 00       	mov    $0x7,%ecx
  102d5b:	bb 80 ff ff ff       	mov    $0xffffff80,%ebx
  102d60:	66 a3 60 7c 20 00    	mov    %ax,0x207c60
  102d66:	b8 0f 00 00 00       	mov    $0xf,%eax
  102d6b:	ba d4 03 00 00       	mov    $0x3d4,%edx
  102d70:	ee                   	out    %al,(%dx)
  102d71:	be d5 03 00 00       	mov    $0x3d5,%esi
  102d76:	89 d8                	mov    %ebx,%eax
  102d78:	89 f2                	mov    %esi,%edx
  102d7a:	ee                   	out    %al,(%dx)
  102d7b:	b8 0e 00 00 00       	mov    $0xe,%eax
  102d80:	ba d4 03 00 00       	mov    $0x3d4,%edx
  102d85:	ee                   	out    %al,(%dx)
  102d86:	89 c8                	mov    %ecx,%eax
  102d88:	89 f2                	mov    %esi,%edx
  102d8a:	ee                   	out    %al,(%dx)
    }
    vga_set_cursor_pos(cursor_pos);
}
  102d8b:	5b                   	pop    %ebx
  102d8c:	5e                   	pop    %esi
  102d8d:	5d                   	pop    %ebp
  102d8e:	c3                   	ret
        if (cursor_pos > 0) {
  102d8f:	66 85 c0             	test   %ax,%ax
  102d92:	74 52                	je     102de6 <vga_putchar+0x156>
    return c16 | (color16 << 8);
  102d94:	0f b6 15 62 7c 20 00 	movzbl 0x207c62,%edx
            cursor_pos--;
  102d9b:	83 e8 01             	sub    $0x1,%eax
            vga_buffer[cursor_pos] = vga_entry(' ', vga_color);
  102d9e:	0f b7 c8             	movzwl %ax,%ecx
            cursor_pos--;
  102da1:	66 a3 60 7c 20 00    	mov    %ax,0x207c60
    return c16 | (color16 << 8);
  102da7:	c1 e2 08             	shl    $0x8,%edx
  102daa:	83 ca 20             	or     $0x20,%edx
  102dad:	66 89 94 09 00 80 0b 	mov    %dx,0xb8000(%ecx,%ecx,1)
  102db4:	00 
    if (cursor_pos >= VGA_WIDTH * VGA_HEIGHT) {
  102db5:	b9 40 81 0b 00       	mov    $0xb8140,%ecx
  102dba:	66 3d cf 07          	cmp    $0x7cf,%ax
  102dbe:	0f 87 2c ff ff ff    	ja     102cf0 <vga_putchar+0x60>
}

void vga_set_cursor_pos(uint16_t pos) {
    cursor_pos = pos;
    outb(0x3D4, 0x0F);
    outb(0x3D5, (uint8_t)(pos & 0xFF));
  102dc4:	89 c3                	mov    %eax,%ebx
    outb(0x3D4, 0x0E);
    outb(0x3D5, (uint8_t)((pos >> 8) & 0xFF));
  102dc6:	0f b6 cc             	movzbl %ah,%ecx
  102dc9:	eb 9b                	jmp    102d66 <vga_putchar+0xd6>
        cursor_pos = (cursor_pos / VGA_WIDTH + 1) * VGA_WIDTH;
  102dcb:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax
  102dd1:	c1 e8 16             	shr    $0x16,%eax
  102dd4:	8d 44 80 05          	lea    0x5(%eax,%eax,4),%eax
  102dd8:	c1 e0 04             	shl    $0x4,%eax
  102ddb:	66 a3 60 7c 20 00    	mov    %ax,0x207c60
  102de1:	e9 ef fe ff ff       	jmp    102cd5 <vga_putchar+0x45>
  102de6:	31 c9                	xor    %ecx,%ecx
  102de8:	31 db                	xor    %ebx,%ebx
  102dea:	e9 77 ff ff ff       	jmp    102d66 <vga_putchar+0xd6>
  102def:	90                   	nop

00102df0 <vga_writestr>:
void vga_writestr(const char* str) {
  102df0:	55                   	push   %ebp
  102df1:	89 e5                	mov    %esp,%ebp
  102df3:	53                   	push   %ebx
  102df4:	8b 5d 08             	mov    0x8(%ebp),%ebx
    for (size_t i = 0; str[i] != '\0'; i++) {
  102df7:	0f be 03             	movsbl (%ebx),%eax
  102dfa:	84 c0                	test   %al,%al
  102dfc:	74 24                	je     102e22 <vga_writestr+0x32>
  102dfe:	83 c3 01             	add    $0x1,%ebx
  102e01:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  102e08:	00 
  102e09:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
        vga_putchar(str[i]);
  102e10:	50                   	push   %eax
    for (size_t i = 0; str[i] != '\0'; i++) {
  102e11:	83 c3 01             	add    $0x1,%ebx
        vga_putchar(str[i]);
  102e14:	e8 77 fe ff ff       	call   102c90 <vga_putchar>
    for (size_t i = 0; str[i] != '\0'; i++) {
  102e19:	0f be 43 ff          	movsbl -0x1(%ebx),%eax
  102e1d:	5a                   	pop    %edx
  102e1e:	84 c0                	test   %al,%al
  102e20:	75 ee                	jne    102e10 <vga_writestr+0x20>
}
  102e22:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  102e25:	c9                   	leave
  102e26:	c3                   	ret
  102e27:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  102e2e:	00 
  102e2f:	90                   	nop

00102e30 <vga_clear>:
    return c16 | (color16 << 8);
  102e30:	0f b6 15 62 7c 20 00 	movzbl 0x207c62,%edx
  102e37:	b8 00 80 0b 00       	mov    $0xb8000,%eax
  102e3c:	c1 e2 08             	shl    $0x8,%edx
  102e3f:	83 ca 20             	or     $0x20,%edx
  102e42:	eb 1c                	jmp    102e60 <vga_clear+0x30>
  102e44:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  102e4b:	00 
  102e4c:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  102e53:	00 
  102e54:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  102e5b:	00 
  102e5c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
        vga_buffer[i] = vga_entry(' ', vga_color);
  102e60:	66 89 10             	mov    %dx,(%eax)
    for (int i = 0; i < VGA_WIDTH * VGA_HEIGHT; i++) {
  102e63:	83 c0 04             	add    $0x4,%eax
        vga_buffer[i] = vga_entry(' ', vga_color);
  102e66:	66 89 50 fe          	mov    %dx,-0x2(%eax)
    for (int i = 0; i < VGA_WIDTH * VGA_HEIGHT; i++) {
  102e6a:	3d a0 8f 0b 00       	cmp    $0xb8fa0,%eax
  102e6f:	75 ef                	jne    102e60 <vga_clear+0x30>
    cursor_pos = 0;
  102e71:	31 c0                	xor    %eax,%eax
  102e73:	ba d4 03 00 00       	mov    $0x3d4,%edx
  102e78:	66 a3 60 7c 20 00    	mov    %ax,0x207c60
  102e7e:	b8 0f 00 00 00       	mov    $0xf,%eax
  102e83:	ee                   	out    %al,(%dx)
  102e84:	31 c9                	xor    %ecx,%ecx
  102e86:	ba d5 03 00 00       	mov    $0x3d5,%edx
  102e8b:	89 c8                	mov    %ecx,%eax
  102e8d:	ee                   	out    %al,(%dx)
  102e8e:	b8 0e 00 00 00       	mov    $0xe,%eax
  102e93:	ba d4 03 00 00       	mov    $0x3d4,%edx
  102e98:	ee                   	out    %al,(%dx)
  102e99:	ba d5 03 00 00       	mov    $0x3d5,%edx
  102e9e:	89 c8                	mov    %ecx,%eax
  102ea0:	ee                   	out    %al,(%dx)
}
  102ea1:	c3                   	ret
  102ea2:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  102ea9:	00 
  102eaa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00102eb0 <vga_set_cursor_pos>:
void vga_set_cursor_pos(uint16_t pos) {
  102eb0:	55                   	push   %ebp
  102eb1:	b8 0f 00 00 00       	mov    $0xf,%eax
  102eb6:	ba d4 03 00 00       	mov    $0x3d4,%edx
  102ebb:	89 e5                	mov    %esp,%ebp
  102ebd:	56                   	push   %esi
  102ebe:	8b 4d 08             	mov    0x8(%ebp),%ecx
  102ec1:	53                   	push   %ebx
    cursor_pos = pos;
  102ec2:	66 89 0d 60 7c 20 00 	mov    %cx,0x207c60
  102ec9:	ee                   	out    %al,(%dx)
  102eca:	bb d5 03 00 00       	mov    $0x3d5,%ebx
  102ecf:	89 c8                	mov    %ecx,%eax
  102ed1:	89 da                	mov    %ebx,%edx
  102ed3:	ee                   	out    %al,(%dx)
  102ed4:	b8 0e 00 00 00       	mov    $0xe,%eax
  102ed9:	ba d4 03 00 00       	mov    $0x3d4,%edx
  102ede:	ee                   	out    %al,(%dx)
    outb(0x3D5, (uint8_t)((pos >> 8) & 0xFF));
  102edf:	89 c8                	mov    %ecx,%eax
  102ee1:	89 da                	mov    %ebx,%edx
  102ee3:	66 c1 e8 08          	shr    $0x8,%ax
  102ee7:	ee                   	out    %al,(%dx)
}
  102ee8:	5b                   	pop    %ebx
  102ee9:	5e                   	pop    %esi
  102eea:	5d                   	pop    %ebp
  102eeb:	c3                   	ret
  102eec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00102ef0 <vga_set_color>:

void vga_set_color(uint8_t fg, uint8_t bg) {
  102ef0:	55                   	push   %ebp
  102ef1:	89 e5                	mov    %esp,%ebp
    vga_color = (bg << 4) | (fg & 0x0F);
  102ef3:	0f b6 45 08          	movzbl 0x8(%ebp),%eax
  102ef7:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx
  102efb:	5d                   	pop    %ebp
    vga_color = (bg << 4) | (fg & 0x0F);
  102efc:	83 e0 0f             	and    $0xf,%eax
  102eff:	c1 e2 04             	shl    $0x4,%edx
  102f02:	09 d0                	or     %edx,%eax
  102f04:	a2 62 7c 20 00       	mov    %al,0x207c62
  102f09:	c3                   	ret
  102f0a:	66 90                	xchg   %ax,%ax
  102f0c:	66 90                	xchg   %ax,%ax
  102f0e:	66 90                	xchg   %ax,%ax
  102f10:	66 90                	xchg   %ax,%ax
  102f12:	66 90                	xchg   %ax,%ax
  102f14:	66 90                	xchg   %ax,%ax
  102f16:	66 90                	xchg   %ax,%ax
  102f18:	66 90                	xchg   %ax,%ax
  102f1a:	66 90                	xchg   %ax,%ax
  102f1c:	66 90                	xchg   %ax,%ax
  102f1e:	66 90                	xchg   %ax,%ax
  102f20:	66 90                	xchg   %ax,%ax
  102f22:	66 90                	xchg   %ax,%ax
  102f24:	66 90                	xchg   %ax,%ax
  102f26:	66 90                	xchg   %ax,%ax
  102f28:	66 90                	xchg   %ax,%ax
  102f2a:	66 90                	xchg   %ax,%ax
  102f2c:	66 90                	xchg   %ax,%ax
  102f2e:	66 90                	xchg   %ax,%ax
  102f30:	66 90                	xchg   %ax,%ax
  102f32:	66 90                	xchg   %ax,%ax
  102f34:	66 90                	xchg   %ax,%ax
  102f36:	66 90                	xchg   %ax,%ax
  102f38:	66 90                	xchg   %ax,%ax
  102f3a:	66 90                	xchg   %ax,%ax
  102f3c:	66 90                	xchg   %ax,%ax
  102f3e:	66 90                	xchg   %ax,%ax

00102f40 <uint32_t_to_str>:
#include "../include/stdint.h"

void uint32_t_to_str(uint32_t num, char* str) {
  102f40:	55                   	push   %ebp
  102f41:	89 e5                	mov    %esp,%ebp
  102f43:	57                   	push   %edi
  102f44:	56                   	push   %esi
  102f45:	53                   	push   %ebx
  102f46:	83 ec 10             	sub    $0x10,%esp
  102f49:	8b 4d 08             	mov    0x8(%ebp),%ecx
  102f4c:	8b 7d 0c             	mov    0xc(%ebp),%edi
    if (num == 0) {
  102f4f:	85 c9                	test   %ecx,%ecx
  102f51:	0f 84 89 00 00 00    	je     102fe0 <uint32_t_to_str+0xa0>

    int i = 0;
    char rev[11];

    while (num > 0) {
        rev[i++] = '0' + (num % 10);
  102f57:	89 7d 0c             	mov    %edi,0xc(%ebp)
    int i = 0;
  102f5a:	31 f6                	xor    %esi,%esi
  102f5c:	8d 5d e9             	lea    -0x17(%ebp),%ebx
  102f5f:	eb 1f                	jmp    102f80 <uint32_t_to_str+0x40>
  102f61:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  102f68:	00 
  102f69:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  102f70:	00 
  102f71:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  102f78:	00 
  102f79:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
        rev[i++] = '0' + (num % 10);
  102f80:	b8 cd cc cc cc       	mov    $0xcccccccd,%eax
  102f85:	89 75 e4             	mov    %esi,-0x1c(%ebp)
  102f88:	83 c6 01             	add    $0x1,%esi
  102f8b:	f7 e1                	mul    %ecx
  102f8d:	89 c8                	mov    %ecx,%eax
  102f8f:	c1 ea 03             	shr    $0x3,%edx
  102f92:	8d 3c 92             	lea    (%edx,%edx,4),%edi
  102f95:	01 ff                	add    %edi,%edi
  102f97:	29 f8                	sub    %edi,%eax
  102f99:	83 c0 30             	add    $0x30,%eax
  102f9c:	88 44 35 e8          	mov    %al,-0x18(%ebp,%esi,1)
        num /= 10;
  102fa0:	89 c8                	mov    %ecx,%eax
  102fa2:	89 d1                	mov    %edx,%ecx
    while (num > 0) {
  102fa4:	83 f8 09             	cmp    $0x9,%eax
  102fa7:	77 d7                	ja     102f80 <uint32_t_to_str+0x40>
  102fa9:	8b 7d 0c             	mov    0xc(%ebp),%edi
  102fac:	8b 55 e4             	mov    -0x1c(%ebp),%edx
  102faf:	89 f9                	mov    %edi,%ecx
  102fb1:	01 da                	add    %ebx,%edx
  102fb3:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  102fba:	00 
  102fbb:	2e 8d 74 26 00       	lea    %cs:0x0(%esi,%eiz,1),%esi
    }

    int j;
    for (j = 0; j < i; j++) {
        str[j] = rev[i - 1 - j];
  102fc0:	0f b6 02             	movzbl (%edx),%eax
    for (j = 0; j < i; j++) {
  102fc3:	83 c1 01             	add    $0x1,%ecx
        str[j] = rev[i - 1 - j];
  102fc6:	88 41 ff             	mov    %al,-0x1(%ecx)
    for (j = 0; j < i; j++) {
  102fc9:	89 d0                	mov    %edx,%eax
  102fcb:	83 ea 01             	sub    $0x1,%edx
  102fce:	39 d8                	cmp    %ebx,%eax
  102fd0:	75 ee                	jne    102fc0 <uint32_t_to_str+0x80>
    }
    str[j] = '\0';
  102fd2:	c6 04 37 00          	movb   $0x0,(%edi,%esi,1)
  102fd6:	83 c4 10             	add    $0x10,%esp
  102fd9:	5b                   	pop    %ebx
  102fda:	5e                   	pop    %esi
  102fdb:	5f                   	pop    %edi
  102fdc:	5d                   	pop    %ebp
  102fdd:	c3                   	ret
  102fde:	66 90                	xchg   %ax,%ax
        str[0] = '0';
  102fe0:	b8 30 00 00 00       	mov    $0x30,%eax
  102fe5:	66 89 07             	mov    %ax,(%edi)
  102fe8:	83 c4 10             	add    $0x10,%esp
  102feb:	5b                   	pop    %ebx
  102fec:	5e                   	pop    %esi
  102fed:	5f                   	pop    %edi
  102fee:	5d                   	pop    %ebp
  102fef:	c3                   	ret
  102ff0:	66 90                	xchg   %ax,%ax
  102ff2:	66 90                	xchg   %ax,%ax
  102ff4:	66 90                	xchg   %ax,%ax
  102ff6:	66 90                	xchg   %ax,%ax
  102ff8:	66 90                	xchg   %ax,%ax
  102ffa:	66 90                	xchg   %ax,%ax
  102ffc:	66 90                	xchg   %ax,%ax
  102ffe:	66 90                	xchg   %ax,%ax

00103000 <strlen>:
#include "../include/string.h"

size_t strlen(const char* str) {
  103000:	55                   	push   %ebp
  103001:	89 e5                	mov    %esp,%ebp
  103003:	8b 55 08             	mov    0x8(%ebp),%edx
    const char* s = str;
    while (*s) s++;
  103006:	80 3a 00             	cmpb   $0x0,(%edx)
  103009:	74 15                	je     103020 <strlen+0x20>
    const char* s = str;
  10300b:	89 d0                	mov    %edx,%eax
  10300d:	8d 76 00             	lea    0x0(%esi),%esi
    while (*s) s++;
  103010:	83 c0 01             	add    $0x1,%eax
  103013:	80 38 00             	cmpb   $0x0,(%eax)
  103016:	75 f8                	jne    103010 <strlen+0x10>
    return s - str;
  103018:	29 d0                	sub    %edx,%eax
}
  10301a:	5d                   	pop    %ebp
  10301b:	c3                   	ret
  10301c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    while (*s) s++;
  103020:	31 c0                	xor    %eax,%eax
}
  103022:	5d                   	pop    %ebp
  103023:	c3                   	ret
  103024:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  10302b:	00 
  10302c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00103030 <memset>:

void* memset(void* ptr, int value, size_t num) {
  103030:	55                   	push   %ebp
  103031:	89 e5                	mov    %esp,%ebp
  103033:	57                   	push   %edi
  103034:	8b 7d 08             	mov    0x8(%ebp),%edi
    uint8_t* p = (uint8_t*)ptr;
    while (num--) *p++ = (uint8_t)value;
  103037:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx
void* memset(void* ptr, int value, size_t num) {
  10303b:	56                   	push   %esi
  10303c:	8b 75 10             	mov    0x10(%ebp),%esi
  10303f:	53                   	push   %ebx
  103040:	8d 0c 37             	lea    (%edi,%esi,1),%ecx
    while (num--) *p++ = (uint8_t)value;
  103043:	85 f6                	test   %esi,%esi
  103045:	74 25                	je     10306c <memset+0x3c>
  103047:	89 ce                	mov    %ecx,%esi
  103049:	89 f8                	mov    %edi,%eax
  10304b:	29 fe                	sub    %edi,%esi
  10304d:	83 e6 01             	and    $0x1,%esi
  103050:	74 0e                	je     103060 <memset+0x30>
  103052:	0f b6 5d 0c          	movzbl 0xc(%ebp),%ebx
  103056:	8d 47 01             	lea    0x1(%edi),%eax
  103059:	88 58 ff             	mov    %bl,-0x1(%eax)
  10305c:	39 c1                	cmp    %eax,%ecx
  10305e:	74 0c                	je     10306c <memset+0x3c>
  103060:	88 10                	mov    %dl,(%eax)
  103062:	83 c0 02             	add    $0x2,%eax
  103065:	88 50 ff             	mov    %dl,-0x1(%eax)
  103068:	39 c1                	cmp    %eax,%ecx
  10306a:	75 f4                	jne    103060 <memset+0x30>
    return ptr;
}
  10306c:	5b                   	pop    %ebx
  10306d:	89 f8                	mov    %edi,%eax
  10306f:	5e                   	pop    %esi
  103070:	5f                   	pop    %edi
  103071:	5d                   	pop    %ebp
  103072:	c3                   	ret
  103073:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  10307a:	00 
  10307b:	2e 8d 74 26 00       	lea    %cs:0x0(%esi,%eiz,1),%esi

00103080 <memcpy>:

void* memcpy(void* dest, const void* src, size_t num) {
  103080:	55                   	push   %ebp
  103081:	89 e5                	mov    %esp,%ebp
  103083:	57                   	push   %edi
  103084:	8b 45 10             	mov    0x10(%ebp),%eax
  103087:	8b 55 08             	mov    0x8(%ebp),%edx
  10308a:	56                   	push   %esi
  10308b:	8b 75 0c             	mov    0xc(%ebp),%esi
    uint8_t* d = (uint8_t*)dest;
    const uint8_t* s = (const uint8_t*)src;
    while (num--) *d++ = *s++;
  10308e:	85 c0                	test   %eax,%eax
  103090:	74 13                	je     1030a5 <memcpy+0x25>
  103092:	01 d0                	add    %edx,%eax
    uint8_t* d = (uint8_t*)dest;
  103094:	89 d7                	mov    %edx,%edi
  103096:	66 90                	xchg   %ax,%ax
  103098:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  10309f:	00 
    while (num--) *d++ = *s++;
  1030a0:	a4                   	movsb  %ds:(%esi),%es:(%edi)
  1030a1:	39 f8                	cmp    %edi,%eax
  1030a3:	75 fb                	jne    1030a0 <memcpy+0x20>
    return dest;
}
  1030a5:	5e                   	pop    %esi
  1030a6:	89 d0                	mov    %edx,%eax
  1030a8:	5f                   	pop    %edi
  1030a9:	5d                   	pop    %ebp
  1030aa:	c3                   	ret
  1030ab:	2e 8d 74 26 00       	lea    %cs:0x0(%esi,%eiz,1),%esi

001030b0 <memcmp>:

int memcmp(const void* s1, const void* s2, size_t n) {
  1030b0:	55                   	push   %ebp
  1030b1:	89 e5                	mov    %esp,%ebp
  1030b3:	56                   	push   %esi
  1030b4:	8b 75 10             	mov    0x10(%ebp),%esi
  1030b7:	8b 45 08             	mov    0x8(%ebp),%eax
  1030ba:	53                   	push   %ebx
  1030bb:	8b 55 0c             	mov    0xc(%ebp),%edx
    const uint8_t* p1 = s1;
    const uint8_t* p2 = s2;
    while (n--) {
  1030be:	85 f6                	test   %esi,%esi
  1030c0:	74 3e                	je     103100 <memcmp+0x50>
  1030c2:	01 c6                	add    %eax,%esi
  1030c4:	eb 24                	jmp    1030ea <memcmp+0x3a>
  1030c6:	eb 18                	jmp    1030e0 <memcmp+0x30>
  1030c8:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  1030cf:	00 
  1030d0:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  1030d7:	00 
  1030d8:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  1030df:	00 
        if (*p1 != *p2) {
            return *p1 - *p2;
        }
        p1++;
  1030e0:	83 c0 01             	add    $0x1,%eax
        p2++;
  1030e3:	83 c2 01             	add    $0x1,%edx
    while (n--) {
  1030e6:	39 f0                	cmp    %esi,%eax
  1030e8:	74 16                	je     103100 <memcmp+0x50>
        if (*p1 != *p2) {
  1030ea:	0f b6 08             	movzbl (%eax),%ecx
  1030ed:	0f b6 1a             	movzbl (%edx),%ebx
  1030f0:	38 d9                	cmp    %bl,%cl
  1030f2:	74 ec                	je     1030e0 <memcmp+0x30>
            return *p1 - *p2;
  1030f4:	0f b6 c1             	movzbl %cl,%eax
  1030f7:	29 d8                	sub    %ebx,%eax
    }
    return 0;
}
  1030f9:	5b                   	pop    %ebx
  1030fa:	5e                   	pop    %esi
  1030fb:	5d                   	pop    %ebp
  1030fc:	c3                   	ret
  1030fd:	8d 76 00             	lea    0x0(%esi),%esi
  103100:	5b                   	pop    %ebx
    return 0;
  103101:	31 c0                	xor    %eax,%eax
}
  103103:	5e                   	pop    %esi
  103104:	5d                   	pop    %ebp
  103105:	c3                   	ret
  103106:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  10310d:	00 
  10310e:	66 90                	xchg   %ax,%ax

00103110 <strcmp>:

int strcmp(const char* s1, const char* s2) {
  103110:	55                   	push   %ebp
  103111:	89 e5                	mov    %esp,%ebp
  103113:	8b 4d 08             	mov    0x8(%ebp),%ecx
  103116:	8b 55 0c             	mov    0xc(%ebp),%edx
    while (*s1 && (*s1 == *s2)) {
  103119:	0f b6 01             	movzbl (%ecx),%eax
  10311c:	84 c0                	test   %al,%al
  10311e:	75 2e                	jne    10314e <strcmp+0x3e>
  103120:	eb 3e                	jmp    103160 <strcmp+0x50>
  103122:	eb 1c                	jmp    103140 <strcmp+0x30>
  103124:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  10312b:	00 
  10312c:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  103133:	00 
  103134:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  10313b:	00 
  10313c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
  103140:	0f b6 41 01          	movzbl 0x1(%ecx),%eax
        s1++;
  103144:	83 c1 01             	add    $0x1,%ecx
        s2++;
  103147:	83 c2 01             	add    $0x1,%edx
    while (*s1 && (*s1 == *s2)) {
  10314a:	84 c0                	test   %al,%al
  10314c:	74 12                	je     103160 <strcmp+0x50>
  10314e:	38 02                	cmp    %al,(%edx)
  103150:	74 ee                	je     103140 <strcmp+0x30>
    }
    return *(const unsigned char*)s1 - *(const unsigned char*)s2;
  103152:	0f b6 12             	movzbl (%edx),%edx
}
  103155:	5d                   	pop    %ebp
    return *(const unsigned char*)s1 - *(const unsigned char*)s2;
  103156:	29 d0                	sub    %edx,%eax
}
  103158:	c3                   	ret
  103159:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    return *(const unsigned char*)s1 - *(const unsigned char*)s2;
  103160:	0f b6 12             	movzbl (%edx),%edx
  103163:	31 c0                	xor    %eax,%eax
}
  103165:	5d                   	pop    %ebp
    return *(const unsigned char*)s1 - *(const unsigned char*)s2;
  103166:	29 d0                	sub    %edx,%eax
}
  103168:	c3                   	ret
  103169:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00103170 <strcpy>:

char* strcpy(char* dest, const char* src) {
  103170:	55                   	push   %ebp
    char* d = dest;
    while ((*d++ = *src++));
  103171:	31 c0                	xor    %eax,%eax
char* strcpy(char* dest, const char* src) {
  103173:	89 e5                	mov    %esp,%ebp
  103175:	53                   	push   %ebx
  103176:	8b 4d 08             	mov    0x8(%ebp),%ecx
  103179:	8b 5d 0c             	mov    0xc(%ebp),%ebx
  10317c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    while ((*d++ = *src++));
  103180:	0f b6 14 03          	movzbl (%ebx,%eax,1),%edx
  103184:	88 14 01             	mov    %dl,(%ecx,%eax,1)
  103187:	83 c0 01             	add    $0x1,%eax
  10318a:	84 d2                	test   %dl,%dl
  10318c:	75 f2                	jne    103180 <strcpy+0x10>
    return dest;
}
  10318e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  103191:	89 c8                	mov    %ecx,%eax
  103193:	c9                   	leave
  103194:	c3                   	ret
  103195:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  10319c:	00 
  10319d:	8d 76 00             	lea    0x0(%esi),%esi

001031a0 <strcat>:

char* strcat(char* dest, const char* src) {
  1031a0:	55                   	push   %ebp
  1031a1:	89 e5                	mov    %esp,%ebp
  1031a3:	56                   	push   %esi
  1031a4:	8b 75 08             	mov    0x8(%ebp),%esi
  1031a7:	53                   	push   %ebx
  1031a8:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    while (*s) s++;
  1031ab:	80 3e 00             	cmpb   $0x0,(%esi)
    const char* s = str;
  1031ae:	89 f2                	mov    %esi,%edx
    while (*s) s++;
  1031b0:	74 16                	je     1031c8 <strcat+0x28>
  1031b2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
  1031b8:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  1031bf:	00 
  1031c0:	83 c2 01             	add    $0x1,%edx
  1031c3:	80 3a 00             	cmpb   $0x0,(%edx)
  1031c6:	75 f8                	jne    1031c0 <strcat+0x20>
    const char* s = str;
  1031c8:	31 c0                	xor    %eax,%eax
  1031ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    char* d = dest + strlen(dest);
    while ((*d++ = *src++));
  1031d0:	0f b6 0c 03          	movzbl (%ebx,%eax,1),%ecx
  1031d4:	88 0c 02             	mov    %cl,(%edx,%eax,1)
  1031d7:	83 c0 01             	add    $0x1,%eax
  1031da:	84 c9                	test   %cl,%cl
  1031dc:	75 f2                	jne    1031d0 <strcat+0x30>
    return dest;
}
  1031de:	89 f0                	mov    %esi,%eax
  1031e0:	5b                   	pop    %ebx
  1031e1:	5e                   	pop    %esi
  1031e2:	5d                   	pop    %ebp
  1031e3:	c3                   	ret
  1031e4:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  1031eb:	00 
  1031ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

001031f0 <strncat>:

char* strncat(char* dest, const char* src, size_t n) {
  1031f0:	55                   	push   %ebp
  1031f1:	89 e5                	mov    %esp,%ebp
  1031f3:	56                   	push   %esi
  1031f4:	8b 75 08             	mov    0x8(%ebp),%esi
  1031f7:	8b 55 0c             	mov    0xc(%ebp),%edx
  1031fa:	53                   	push   %ebx
  1031fb:	8b 5d 10             	mov    0x10(%ebp),%ebx
    while (*s) s++;
  1031fe:	80 3e 00             	cmpb   $0x0,(%esi)
    const char* s = str;
  103201:	89 f0                	mov    %esi,%eax
    while (*s) s++;
  103203:	74 13                	je     103218 <strncat+0x28>
  103205:	8d 76 00             	lea    0x0(%esi),%esi
  103208:	2e 8d b4 26 00 00 00 	lea    %cs:0x0(%esi,%eiz,1),%esi
  10320f:	00 
  103210:	83 c0 01             	add    $0x1,%eax
  103213:	80 38 00             	cmpb   $0x0,(%eax)
  103216:	75 f8                	jne    103210 <strncat+0x20>
    char* d = dest + strlen(dest);
    while (n-- && (*src)) {
  103218:	85 db                	test   %ebx,%ebx
  10321a:	74 18                	je     103234 <strncat+0x44>
  10321c:	01 d3                	add    %edx,%ebx
  10321e:	eb 0d                	jmp    10322d <strncat+0x3d>
        *d++ = *src++;
  103220:	83 c2 01             	add    $0x1,%edx
  103223:	83 c0 01             	add    $0x1,%eax
  103226:	88 48 ff             	mov    %cl,-0x1(%eax)
    while (n-- && (*src)) {
  103229:	39 da                	cmp    %ebx,%edx
  10322b:	74 07                	je     103234 <strncat+0x44>
  10322d:	0f b6 0a             	movzbl (%edx),%ecx
  103230:	84 c9                	test   %cl,%cl
  103232:	75 ec                	jne    103220 <strncat+0x30>
    }
    *d = '\0';
  103234:	c6 00 00             	movb   $0x0,(%eax)
    return dest;
  103237:	89 f0                	mov    %esi,%eax
  103239:	5b                   	pop    %ebx
  10323a:	5e                   	pop    %esi
  10323b:	5d                   	pop    %ebp
  10323c:	c3                   	ret
  10323d:	66 90                	xchg   %ax,%ax
  10323f:	90                   	nop

00103240 <_start>:
  103240:	bc 70 bc 20 00       	mov    $0x20bc70,%esp
  103245:	6a 00                	push   $0x0
  103247:	9d                   	popf
  103248:	bf 00 80 0b 00       	mov    $0xb8000,%edi
  10324d:	66 b8 20 0f          	mov    $0xf20,%ax
  103251:	b9 d0 07 00 00       	mov    $0x7d0,%ecx
  103256:	f3 66 ab             	rep stos %ax,%es:(%edi)
  103259:	66 ba d4 03          	mov    $0x3d4,%dx
  10325d:	b0 0f                	mov    $0xf,%al
  10325f:	ee                   	out    %al,(%dx)
  103260:	66 42                	inc    %dx
  103262:	30 c0                	xor    %al,%al
  103264:	ee                   	out    %al,(%dx)
  103265:	66 4a                	dec    %dx
  103267:	b0 0e                	mov    $0xe,%al
  103269:	ee                   	out    %al,(%dx)
  10326a:	66 42                	inc    %dx
  10326c:	30 c0                	xor    %al,%al
  10326e:	ee                   	out    %al,(%dx)
  10326f:	e8 ec cf ff ff       	call   100260 <kernel_main>
  103274:	fa                   	cli

00103275 <_start.hang>:
  103275:	f4                   	hlt
  103276:	eb fd                	jmp    103275 <_start.hang>

00103278 <isr0>:
  103278:	6a 00                	push   $0x0
  10327a:	6a 00                	push   $0x0
  10327c:	60                   	pusha
  10327d:	1e                   	push   %ds
  10327e:	06                   	push   %es
  10327f:	0f a0                	push   %fs
  103281:	0f a8                	push   %gs
  103283:	66 b8 10 00          	mov    $0x10,%ax
  103287:	8e d8                	mov    %eax,%ds
  103289:	8e c0                	mov    %eax,%es
  10328b:	8e e0                	mov    %eax,%fs
  10328d:	8e e8                	mov    %eax,%gs
  10328f:	54                   	push   %esp
  103290:	fc                   	cld
  103291:	e8 6a cf ff ff       	call   100200 <isr_handler>
  103296:	83 c4 04             	add    $0x4,%esp
  103299:	0f a9                	pop    %gs
  10329b:	0f a1                	pop    %fs
  10329d:	07                   	pop    %es
  10329e:	1f                   	pop    %ds
  10329f:	61                   	popa
  1032a0:	83 c4 08             	add    $0x8,%esp
  1032a3:	cf                   	iret

001032a4 <isr80>:
  1032a4:	6a 00                	push   $0x0
  1032a6:	68 80 00 00 00       	push   $0x80
  1032ab:	60                   	pusha
  1032ac:	1e                   	push   %ds
  1032ad:	06                   	push   %es
  1032ae:	0f a0                	push   %fs
  1032b0:	0f a8                	push   %gs
  1032b2:	66 b8 10 00          	mov    $0x10,%ax
  1032b6:	8e d8                	mov    %eax,%ds
  1032b8:	8e c0                	mov    %eax,%es
  1032ba:	8e e0                	mov    %eax,%fs
  1032bc:	8e e8                	mov    %eax,%gs
  1032be:	54                   	push   %esp
  1032bf:	fc                   	cld
  1032c0:	e8 3b cf ff ff       	call   100200 <isr_handler>
  1032c5:	83 c4 04             	add    $0x4,%esp
  1032c8:	0f a9                	pop    %gs
  1032ca:	0f a1                	pop    %fs
  1032cc:	07                   	pop    %es
  1032cd:	1f                   	pop    %ds
  1032ce:	61                   	popa
  1032cf:	83 c4 08             	add    $0x8,%esp
  1032d2:	cf                   	iret

001032d3 <gdt_flush>:
  1032d3:	8b 44 24 04          	mov    0x4(%esp),%eax
  1032d7:	0f 01 10             	lgdtl  (%eax)
  1032da:	66 b8 10 00          	mov    $0x10,%ax
  1032de:	8e d8                	mov    %eax,%ds
  1032e0:	8e c0                	mov    %eax,%es
  1032e2:	8e e0                	mov    %eax,%fs
  1032e4:	8e e8                	mov    %eax,%gs
  1032e6:	8e d0                	mov    %eax,%ss
  1032e8:	ea ef 32 10 00 08 00 	ljmp   $0x8,$0x1032ef

001032ef <gdt_flush.flush>:
  1032ef:	c3                   	ret

001032f0 <idt_flush>:
  1032f0:	8b 44 24 04          	mov    0x4(%esp),%eax
  1032f4:	0f 01 18             	lidtl  (%eax)
  1032f7:	c3                   	ret

Disassembly of section .rodata:

00104000 <scancode_to_ascii_shift-0xa40>:
  104000:	00 00                	add    %al,(%eax)
  104002:	44                   	inc    %esp
  104003:	69 76 69 64 65 2d 62 	imul   $0x622d6564,0x69(%esi),%esi
  10400a:	79 2d                	jns    104039 <idt_flush+0xd49>
  10400c:	7a 65                	jp     104073 <idt_flush+0xd83>
  10400e:	72 6f                	jb     10407f <idt_flush+0xd8f>
  104010:	20 65 78             	and    %ah,0x78(%ebp)
  104013:	63 65 70             	arpl   %esp,0x70(%ebp)
  104016:	74 69                	je     104081 <idt_flush+0xd91>
  104018:	6f                   	outsl  %ds:(%esi),(%dx)
  104019:	6e                   	outsb  %ds:(%esi),(%dx)
  10401a:	21 0a                	and    %ecx,(%edx)
  10401c:	00 53 79             	add    %dl,0x79(%ebx)
  10401f:	73 63                	jae    104084 <idt_flush+0xd94>
  104021:	61                   	popa
  104022:	6c                   	insb   (%dx),%es:(%edi)
  104023:	6c                   	insb   (%dx),%es:(%edi)
  104024:	20 69 6e             	and    %ch,0x6e(%ecx)
  104027:	74 65                	je     10408e <idt_flush+0xd9e>
  104029:	72 72                	jb     10409d <idt_flush+0xdad>
  10402b:	75 70                	jne    10409d <idt_flush+0xdad>
  10402d:	74 21                	je     104050 <idt_flush+0xd60>
  10402f:	0a 00                	or     (%eax),%al
  104031:	55                   	push   %ebp
  104032:	6e                   	outsb  %ds:(%esi),(%dx)
  104033:	68 61 6e 64 6c       	push   $0x6c646e61
  104038:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%ecx)
  10403d:	74 65                	je     1040a4 <idt_flush+0xdb4>
  10403f:	72 72                	jb     1040b3 <idt_flush+0xdc3>
  104041:	75 70                	jne    1040b3 <idt_flush+0xdc3>
  104043:	74 3a                	je     10407f <idt_flush+0xd8f>
  104045:	20 00                	and    %al,(%eax)
  104047:	47                   	inc    %edi
  104048:	44                   	inc    %esp
  104049:	54                   	push   %esp
  10404a:	20 69 6e             	and    %ch,0x6e(%ecx)
  10404d:	69 74 20 73 74 61 72 	imul   $0x74726174,0x73(%eax,%eiz,1),%esi
  104054:	74 
  104055:	69 6e 67 2e 2e 2e 0a 	imul   $0xa2e2e2e,0x67(%esi),%ebp
  10405c:	00 47 44             	add    %al,0x44(%edi)
  10405f:	54                   	push   %esp
  104060:	20 69 6e             	and    %ch,0x6e(%ecx)
  104063:	69 74 20 64 6f 6e 65 	imul   $0x2e656e6f,0x64(%eax,%eiz,1),%esi
  10406a:	2e 
  10406b:	0a 00                	or     (%eax),%al
  10406d:	49                   	dec    %ecx
  10406e:	44                   	inc    %esp
  10406f:	54                   	push   %esp
  104070:	20 69 6e             	and    %ch,0x6e(%ecx)
  104073:	69 74 20 73 74 61 72 	imul   $0x74726174,0x73(%eax,%eiz,1),%esi
  10407a:	74 
  10407b:	69 6e 67 2e 2e 2e 0a 	imul   $0xa2e2e2e,0x67(%esi),%ebp
  104082:	00 49 44             	add    %cl,0x44(%ecx)
  104085:	54                   	push   %esp
  104086:	20 69 6e             	and    %ch,0x6e(%ecx)
  104089:	69 74 20 64 6f 6e 65 	imul   $0x2e656e6f,0x64(%eax,%eiz,1),%esi
  104090:	2e 
  104091:	0a 00                	or     (%eax),%al
  104093:	49                   	dec    %ecx
  104094:	6e                   	outsb  %ds:(%esi),(%dx)
  104095:	69 74 69 61 6c 69 7a 	imul   $0x697a696c,0x61(%ecx,%ebp,2),%esi
  10409c:	69 
  10409d:	6e                   	outsb  %ds:(%esi),(%dx)
  10409e:	67 20 68 61          	and    %ch,0x61(%bx,%si)
  1040a2:	72 64                	jb     104108 <idt_flush+0xe18>
  1040a4:	77 61                	ja     104107 <idt_flush+0xe17>
  1040a6:	72 65                	jb     10410d <idt_flush+0xe1d>
  1040a8:	2e 2e 2e 0a 00       	cs cs or %cs:(%eax),%al
  1040ad:	49                   	dec    %ecx
  1040ae:	6e                   	outsb  %ds:(%esi),(%dx)
  1040af:	69 74 69 61 6c 69 7a 	imul   $0x697a696c,0x61(%ecx,%ebp,2),%esi
  1040b6:	69 
  1040b7:	6e                   	outsb  %ds:(%esi),(%dx)
  1040b8:	67 20 41 54          	and    %al,0x54(%bx,%di)
  1040bc:	41                   	inc    %ecx
  1040bd:	20 64 72 69          	and    %ah,0x69(%edx,%esi,2)
  1040c1:	76 65                	jbe    104128 <idt_flush+0xe38>
  1040c3:	2e 2e 2e 20 00       	cs cs and %al,%cs:(%eax)
  1040c8:	4f                   	dec    %edi
  1040c9:	4b                   	dec    %ebx
  1040ca:	0a 00                	or     (%eax),%al
  1040cc:	49                   	dec    %ecx
  1040cd:	6e                   	outsb  %ds:(%esi),(%dx)
  1040ce:	69 74 69 61 6c 69 7a 	imul   $0x697a696c,0x61(%ecx,%ebp,2),%esi
  1040d5:	69 
  1040d6:	6e                   	outsb  %ds:(%esi),(%dx)
  1040d7:	67 20 66 69          	and    %ah,0x69(%bp)
  1040db:	6c                   	insb   (%dx),%es:(%edi)
  1040dc:	65 73 79             	gs jae 104158 <idt_flush+0xe68>
  1040df:	73 74                	jae    104155 <idt_flush+0xe65>
  1040e1:	65 6d                	gs insl (%dx),%es:(%edi)
  1040e3:	2e 2e 2e 20 00       	cs cs and %al,%cs:(%eax)
  1040e8:	46                   	inc    %esi
  1040e9:	61                   	popa
  1040ea:	69 6c 65 64 2c 20 72 	imul   $0x6572202c,0x64(%ebp,%eiz,2),%ebp
  1040f1:	65 
  1040f2:	74 72                	je     104166 <idt_flush+0xe76>
  1040f4:	79 69                	jns    10415f <idt_flush+0xe6f>
  1040f6:	6e                   	outsb  %ds:(%esi),(%dx)
  1040f7:	67 2e 2e 2e 0a 00    	cs cs or %cs:(%bx,%si),%al
  1040fd:	53                   	push   %ebx
  1040fe:	79 73                	jns    104173 <idt_flush+0xe83>
  104100:	74 65                	je     104167 <idt_flush+0xe77>
  104102:	6d                   	insl   (%dx),%es:(%edi)
  104103:	20 68 61             	and    %ch,0x61(%eax)
  104106:	6c                   	insb   (%dx),%es:(%edi)
  104107:	74 65                	je     10416e <idt_flush+0xe7e>
  104109:	64 2e 0a 00          	fs or  %cs:(%eax),%al
  10410d:	46                   	inc    %esi
  10410e:	61                   	popa
  10410f:	69 6c 65 64 21 0a 00 	imul   $0xa000a21,0x64(%ebp,%eiz,2),%ebp
  104116:	0a 
  104117:	43                   	inc    %ebx
  104118:	6f                   	outsl  %ds:(%esi),(%dx)
  104119:	6e                   	outsb  %ds:(%esi),(%dx)
  10411a:	74 65                	je     104181 <idt_flush+0xe91>
  10411c:	6e                   	outsb  %ds:(%esi),(%dx)
  10411d:	74 20                	je     10413f <idt_flush+0xe4f>
  10411f:	28 68 65             	sub    %ch,0x65(%eax)
  104122:	78 29                	js     10414d <idt_flush+0xe5d>
  104124:	3a 20                	cmp    (%eax),%ah
  104126:	00 0a                	add    %cl,(%edx)
  104128:	45                   	inc    %ebp
  104129:	72 72                	jb     10419d <idt_flush+0xead>
  10412b:	6f                   	outsl  %ds:(%esi),(%dx)
  10412c:	72 20                	jb     10414e <idt_flush+0xe5e>
  10412e:	72 65                	jb     104195 <idt_flush+0xea5>
  104130:	61                   	popa
  104131:	64 69 6e 67 20 62 69 	imul   $0x6e696220,%fs:0x67(%esi),%ebp
  104138:	6e 
  104139:	61                   	popa
  10413a:	72 79                	jb     1041b5 <idt_flush+0xec5>
  10413c:	20 66 69             	and    %ah,0x69(%esi)
  10413f:	6c                   	insb   (%dx),%es:(%edi)
  104140:	65 0a 00             	or     %gs:(%eax),%al
  104143:	30 31                	xor    %dh,(%ecx)
  104145:	32 33                	xor    (%ebx),%dh
  104147:	34 35                	xor    $0x35,%al
  104149:	36 37                	ss aaa
  10414b:	38 39                	cmp    %bh,(%ecx)
  10414d:	41                   	inc    %ecx
  10414e:	42                   	inc    %edx
  10414f:	43                   	inc    %ebx
  104150:	44                   	inc    %esp
  104151:	45                   	inc    %ebp
  104152:	46                   	inc    %esi
  104153:	00 20                	add    %ah,(%eax)
  104155:	20 20                	and    %ah,(%eax)
  104157:	20 00                	and    %al,(%eax)
  104159:	20 62 79             	and    %ah,0x79(%edx)
  10415c:	74 65                	je     1041c3 <idt_flush+0xed3>
  10415e:	73 00                	jae    104160 <idt_flush+0xe70>
  104160:	20 3c 44             	and    %bh,(%esp,%eax,2)
  104163:	49                   	dec    %ecx
  104164:	52                   	push   %edx
  104165:	3e 00 0a             	add    %cl,%ds:(%edx)
  104168:	45                   	inc    %ebp
  104169:	72 72                	jb     1041dd <idt_flush+0xeed>
  10416b:	6f                   	outsl  %ds:(%esi),(%dx)
  10416c:	72 20                	jb     10418e <idt_flush+0xe9e>
  10416e:	77 72                	ja     1041e2 <idt_flush+0xef2>
  104170:	69 74 69 6e 67 20 62 	imul   $0x69622067,0x6e(%ecx,%ebp,2),%esi
  104177:	69 
  104178:	6e                   	outsb  %ds:(%esi),(%dx)
  104179:	61                   	popa
  10417a:	72 79                	jb     1041f5 <idt_flush+0xf05>
  10417c:	20 66 69             	and    %ah,0x69(%esi)
  10417f:	6c                   	insb   (%dx),%es:(%edi)
  104180:	65 0a 00             	or     %gs:(%eax),%al
  104183:	75 73                	jne    1041f8 <idt_flush+0xf08>
  104185:	65 72 00             	gs jb  104188 <idt_flush+0xe98>
  104188:	40                   	inc    %eax
  104189:	00 3e                	add    %bh,(%esi)
  10418b:	20 00                	and    %al,(%eax)
  10418d:	55                   	push   %ebp
  10418e:	73 61                	jae    1041f1 <idt_flush+0xf01>
  104190:	67 65 3a 20          	cmp    %gs:(%bx,%si),%ah
  104194:	63 61 74             	arpl   %esp,0x74(%ecx)
  104197:	20 3c 66             	and    %bh,(%esi,%eiz,2)
  10419a:	69 6c 65 6e 61 6d 65 	imul   $0x3e656d61,0x6e(%ebp,%eiz,2),%ebp
  1041a1:	3e 
  1041a2:	0a 00                	or     (%eax),%al
  1041a4:	4c                   	dec    %esp
  1041a5:	6f                   	outsl  %ds:(%esi),(%dx)
  1041a6:	6f                   	outsl  %ds:(%esi),(%dx)
  1041a7:	6b 69 6e 67          	imul   $0x67,0x6e(%ecx),%ebp
  1041ab:	20 66 6f             	and    %ah,0x6f(%esi)
  1041ae:	72 20                	jb     1041d0 <idt_flush+0xee0>
  1041b0:	66 69 6c 65 3a 20 27 	imul   $0x2720,0x3a(%ebp,%eiz,2),%bp
  1041b7:	00 27                	add    %ah,(%edi)
  1041b9:	0a 00                	or     (%eax),%al
  1041bb:	29 0a                	sub    %ecx,(%edx)
  1041bd:	00 55 73             	add    %dl,0x73(%ebp)
  1041c0:	61                   	popa
  1041c1:	67 65 3a 20          	cmp    %gs:(%bx,%si),%ah
  1041c5:	65 78 65             	gs js  10422d <idt_flush+0xf3d>
  1041c8:	63 20                	arpl   %esp,(%eax)
  1041ca:	3c 66                	cmp    $0x66,%al
  1041cc:	69 6c 65 6e 61 6d 65 	imul   $0x3e656d61,0x6e(%ebp,%eiz,2),%ebp
  1041d3:	3e 
  1041d4:	0a 00                	or     (%eax),%al
  1041d6:	46                   	inc    %esi
  1041d7:	41                   	inc    %ecx
  1041d8:	54                   	push   %esp
  1041d9:	20 6e 61             	and    %ch,0x61(%esi)
  1041dc:	6d                   	insl   (%dx),%es:(%edi)
  1041dd:	65 3a 20             	cmp    %gs:(%eax),%ah
  1041e0:	5b                   	pop    %ebx
  1041e1:	00 5f 00             	add    %bl,0x0(%edi)
  1041e4:	5d                   	pop    %ebp
  1041e5:	0a 00                	or     (%eax),%al
  1041e7:	50                   	push   %eax
  1041e8:	72 6f                	jb     104259 <idt_flush+0xf69>
  1041ea:	67 72 61             	addr16 jb 10424e <idt_flush+0xf5e>
  1041ed:	6d                   	insl   (%dx),%es:(%edi)
  1041ee:	20 65 78             	and    %ah,0x78(%ebp)
  1041f1:	65 63 75 74          	arpl   %esi,%gs:0x74(%ebp)
  1041f5:	69 6f 6e 20 63 6f 6d 	imul   $0x6d6f6320,0x6e(%edi),%ebp
  1041fc:	70 6c                	jo     10426a <idt_flush+0xf7a>
  1041fe:	65 74 65             	gs je  104266 <idt_flush+0xf76>
  104201:	64 0a 00             	or     %fs:(%eax),%al
  104204:	68 65 6c 70 00       	push   $0x706c65
  104209:	0a 41 76             	or     0x76(%ecx),%al
  10420c:	61                   	popa
  10420d:	69 6c 61 62 6c 65 20 	imul   $0x6320656c,0x62(%ecx,%eiz,2),%ebp
  104214:	63 
  104215:	6f                   	outsl  %ds:(%esi),(%dx)
  104216:	6d                   	insl   (%dx),%es:(%edi)
  104217:	6d                   	insl   (%dx),%es:(%edi)
  104218:	61                   	popa
  104219:	6e                   	outsb  %ds:(%esi),(%dx)
  10421a:	64 73 3a             	fs jae 104257 <idt_flush+0xf67>
  10421d:	00 0a                	add    %cl,(%edx)
  10421f:	20 20                	and    %ah,(%eax)
  104221:	63 6c 65 61          	arpl   %ebp,0x61(%ebp,%eiz,2)
  104225:	72 20                	jb     104247 <idt_flush+0xf57>
  104227:	20 2d 20 43 6c 65    	and    %ch,0x656c4320
  10422d:	61                   	popa
  10422e:	72 20                	jb     104250 <idt_flush+0xf60>
  104230:	74 68                	je     10429a <idt_flush+0xfaa>
  104232:	65 20 73 63          	and    %dh,%gs:0x63(%ebx)
  104236:	72 65                	jb     10429d <idt_flush+0xfad>
  104238:	65 6e                	outsb  %gs:(%esi),(%dx)
  10423a:	00 0a                	add    %cl,(%edx)
  10423c:	20 20                	and    %ah,(%eax)
  10423e:	63 72 65             	arpl   %esi,0x65(%edx)
  104241:	61                   	popa
  104242:	74 65                	je     1042a9 <idt_flush+0xfb9>
  104244:	20 2d 20 43 72 65    	and    %ch,0x65724320
  10424a:	61                   	popa
  10424b:	74 65                	je     1042b2 <idt_flush+0xfc2>
  10424d:	20 61 20             	and    %ah,0x20(%ecx)
  104250:	6e                   	outsb  %ds:(%esi),(%dx)
  104251:	65 77 20             	gs ja  104274 <idt_flush+0xf84>
  104254:	66 69 6c 65 00 0a 20 	imul   $0x200a,0x0(%ebp,%eiz,2),%bp
  10425b:	20 64 65 6c          	and    %ah,0x6c(%ebp,%eiz,2)
  10425f:	65 74 65             	gs je  1042c7 <idt_flush+0xfd7>
  104262:	20 2d 20 44 65 6c    	and    %ch,0x6c654420
  104268:	65 74 65             	gs je  1042d0 <idt_flush+0xfe0>
  10426b:	20 61 20             	and    %ah,0x20(%ecx)
  10426e:	66 69 6c 65 00 0a 20 	imul   $0x200a,0x0(%ebp,%eiz,2),%bp
  104275:	20 63 64             	and    %ah,0x64(%ebx)
  104278:	20 20                	and    %ah,(%eax)
  10427a:	20 20                	and    %ah,(%eax)
  10427c:	20 2d 20 43 68 61    	and    %ch,0x61684320
  104282:	6e                   	outsb  %ds:(%esi),(%dx)
  104283:	67 65 20 64 69       	and    %ah,%gs:0x69(%si)
  104288:	72 65                	jb     1042ef <idt_flush+0xfff>
  10428a:	63 74 6f 72          	arpl   %esi,0x72(%edi,%ebp,2)
  10428e:	79 00                	jns    104290 <idt_flush+0xfa0>
  104290:	0a 20                	or     (%eax),%ah
  104292:	20 63 61             	and    %ah,0x61(%ebx)
  104295:	74 20                	je     1042b7 <idt_flush+0xfc7>
  104297:	20 20                	and    %ah,(%eax)
  104299:	20 2d 20 52 65 61    	and    %ch,0x61655220
  10429f:	64 20 66 69          	and    %ah,%fs:0x69(%esi)
  1042a3:	6c                   	insb   (%dx),%es:(%edi)
  1042a4:	65 20 63 6f          	and    %ah,%gs:0x6f(%ebx)
  1042a8:	6e                   	outsb  %ds:(%esi),(%dx)
  1042a9:	74 65                	je     104310 <idt_flush+0x1020>
  1042ab:	6e                   	outsb  %ds:(%esi),(%dx)
  1042ac:	74 00                	je     1042ae <idt_flush+0xfbe>
  1042ae:	0a 20                	or     (%eax),%ah
  1042b0:	20 65 78             	and    %ah,0x78(%ebp)
  1042b3:	65 63 20             	arpl   %esp,%gs:(%eax)
  1042b6:	20 20                	and    %ah,(%eax)
  1042b8:	2d 20 45 78 65       	sub    $0x65784520,%eax
  1042bd:	63 75 74             	arpl   %esi,0x74(%ebp)
  1042c0:	65 20 61 20          	and    %ah,%gs:0x20(%ecx)
  1042c4:	62 69 6e             	bound  %ebp,0x6e(%ecx)
  1042c7:	61                   	popa
  1042c8:	72 79                	jb     104343 <idt_flush+0x1053>
  1042ca:	00 63 6c             	add    %ah,0x6c(%ebx)
  1042cd:	65 61                	gs popa
  1042cf:	72 00                	jb     1042d1 <idt_flush+0xfe1>
  1042d1:	61                   	popa
  1042d2:	62 6f 75             	bound  %ebp,0x75(%edi)
  1042d5:	74 00                	je     1042d7 <idt_flush+0xfe7>
  1042d7:	0a 52 69             	or     0x69(%edx),%dl
  1042da:	6e                   	outsb  %ds:(%esi),(%dx)
  1042db:	67 4f                	addr16 dec %edi
  1042dd:	53                   	push   %ebx
  1042de:	20 76 30             	and    %dh,0x30(%esi)
  1042e1:	2e 31 00             	xor    %eax,%cs:(%eax)
  1042e4:	6c                   	insb   (%dx),%es:(%edi)
  1042e5:	73 00                	jae    1042e7 <idt_flush+0xff7>
  1042e7:	0a 52 65             	or     0x65(%edx),%dl
  1042ea:	61                   	popa
  1042eb:	64 69 6e 67 20 64 69 	imul   $0x72696420,%fs:0x67(%esi),%ebp
  1042f2:	72 
  1042f3:	65 63 74 6f 72       	arpl   %esi,%gs:0x72(%edi,%ebp,2)
  1042f8:	79 2e                	jns    104328 <idt_flush+0x1038>
  1042fa:	2e 2e 0a 00          	cs or  %cs:(%eax),%al
  1042fe:	63 72 65             	arpl   %esi,0x65(%edx)
  104301:	61                   	popa
  104302:	74 65                	je     104369 <idt_flush+0x1079>
  104304:	00 55 73             	add    %dl,0x73(%ebp)
  104307:	61                   	popa
  104308:	67 65 3a 20          	cmp    %gs:(%bx,%si),%ah
  10430c:	63 72 65             	arpl   %esi,0x65(%edx)
  10430f:	61                   	popa
  104310:	74 65                	je     104377 <idt_flush+0x1087>
  104312:	20 3c 66             	and    %bh,(%esi,%eiz,2)
  104315:	69 6c 65 6e 61 6d 65 	imul   $0x3e656d61,0x6e(%ebp,%eiz,2),%ebp
  10431c:	3e 
  10431d:	0a 00                	or     (%eax),%al
  10431f:	0a 46 69             	or     0x69(%esi),%al
  104322:	6c                   	insb   (%dx),%es:(%edi)
  104323:	65 20 63 72          	and    %ah,%gs:0x72(%ebx)
  104327:	65 61                	gs popa
  104329:	74 65                	je     104390 <idt_flush+0x10a0>
  10432b:	64 20 73 75          	and    %dh,%fs:0x75(%ebx)
  10432f:	63 63 65             	arpl   %esp,0x65(%ebx)
  104332:	73 73                	jae    1043a7 <idt_flush+0x10b7>
  104334:	66 75 6c             	data16 jne 1043a3 <idt_flush+0x10b3>
  104337:	6c                   	insb   (%dx),%es:(%edi)
  104338:	79 2e                	jns    104368 <idt_flush+0x1078>
  10433a:	0a 00                	or     (%eax),%al
  10433c:	64 65 6c             	fs gs insb (%dx),%es:(%edi)
  10433f:	65 74 65             	gs je  1043a7 <idt_flush+0x10b7>
  104342:	00 55 73             	add    %dl,0x73(%ebp)
  104345:	61                   	popa
  104346:	67 65 3a 20          	cmp    %gs:(%bx,%si),%ah
  10434a:	64 65 6c             	fs gs insb (%dx),%es:(%edi)
  10434d:	65 74 65             	gs je  1043b5 <idt_flush+0x10c5>
  104350:	20 3c 66             	and    %bh,(%esi,%eiz,2)
  104353:	69 6c 65 6e 61 6d 65 	imul   $0x3e656d61,0x6e(%ebp,%eiz,2),%ebp
  10435a:	3e 
  10435b:	0a 00                	or     (%eax),%al
  10435d:	0a 46 69             	or     0x69(%esi),%al
  104360:	6c                   	insb   (%dx),%es:(%edi)
  104361:	65 20 64 65 6c       	and    %ah,%gs:0x6c(%ebp,%eiz,2)
  104366:	65 74 65             	gs je  1043ce <idt_flush+0x10de>
  104369:	64 20 73 75          	and    %dh,%fs:0x75(%ebx)
  10436d:	63 63 65             	arpl   %esp,0x65(%ebx)
  104370:	73 73                	jae    1043e5 <idt_flush+0x10f5>
  104372:	66 75 6c             	data16 jne 1043e1 <idt_flush+0x10f1>
  104375:	6c                   	insb   (%dx),%es:(%edi)
  104376:	79 2e                	jns    1043a6 <idt_flush+0x10b6>
  104378:	0a 00                	or     (%eax),%al
  10437a:	6d                   	insl   (%dx),%es:(%edi)
  10437b:	6b 64 69 72 00       	imul   $0x0,0x72(%ecx,%ebp,2),%esp
  104380:	55                   	push   %ebp
  104381:	73 61                	jae    1043e4 <idt_flush+0x10f4>
  104383:	67 65 3a 20          	cmp    %gs:(%bx,%si),%ah
  104387:	6d                   	insl   (%dx),%es:(%edi)
  104388:	6b 64 69 72 20       	imul   $0x20,0x72(%ecx,%ebp,2),%esp
  10438d:	3c 64                	cmp    $0x64,%al
  10438f:	69 72 6e 61 6d 65 3e 	imul   $0x3e656d61,0x6e(%edx),%esi
  104396:	0a 00                	or     (%eax),%al
  104398:	0a 45 72             	or     0x72(%ebp),%al
  10439b:	72 6f                	jb     10440c <idt_flush+0x111c>
  10439d:	72 20                	jb     1043bf <idt_flush+0x10cf>
  10439f:	63 72 65             	arpl   %esi,0x65(%edx)
  1043a2:	61                   	popa
  1043a3:	74 69                	je     10440e <idt_flush+0x111e>
  1043a5:	6e                   	outsb  %ds:(%esi),(%dx)
  1043a6:	67 20 64 69          	and    %ah,0x69(%si)
  1043aa:	72 65                	jb     104411 <idt_flush+0x1121>
  1043ac:	63 74 6f 72          	arpl   %esi,0x72(%edi,%ebp,2)
  1043b0:	79 0a                	jns    1043bc <idt_flush+0x10cc>
  1043b2:	00 77 72             	add    %dh,0x72(%edi)
  1043b5:	69 74 65 62 00 72 65 	imul   $0x61657200,0x62(%ebp,%eiz,2),%esi
  1043bc:	61 
  1043bd:	64 62 00             	bound  %eax,%fs:(%eax)
  1043c0:	63 64 00 0a          	arpl   %esp,0xa(%eax,%eax,1)
  1043c4:	43                   	inc    %ebx
  1043c5:	75 72                	jne    104439 <idt_flush+0x1149>
  1043c7:	72 65                	jb     10442e <idt_flush+0x113e>
  1043c9:	6e                   	outsb  %ds:(%esi),(%dx)
  1043ca:	74 20                	je     1043ec <idt_flush+0x10fc>
  1043cc:	64 69 72 65 63 74 6f 	imul   $0x726f7463,%fs:0x65(%edx),%esi
  1043d3:	72 
  1043d4:	79 3a                	jns    104410 <idt_flush+0x1120>
  1043d6:	20 00                	and    %al,(%eax)
  1043d8:	63 61 74             	arpl   %esp,0x74(%ecx)
  1043db:	00 65 78             	add    %ah,0x78(%ebp)
  1043de:	65 63 00             	arpl   %eax,%gs:(%eax)
  1043e1:	69 6e 74 00 0a 55 6e 	imul   $0x6e550a00,0x74(%esi),%ebp
  1043e8:	6b 6e 6f 77          	imul   $0x77,0x6f(%esi),%ebp
  1043ec:	6e                   	outsb  %ds:(%esi),(%dx)
  1043ed:	20 63 6f             	and    %ah,0x6f(%ebx)
  1043f0:	6d                   	insl   (%dx),%es:(%edi)
  1043f1:	6d                   	insl   (%dx),%es:(%edi)
  1043f2:	61                   	popa
  1043f3:	6e                   	outsb  %ds:(%esi),(%dx)
  1043f4:	64 3a 20             	cmp    %fs:(%eax),%ah
  1043f7:	00 57 65             	add    %dl,0x65(%edi)
  1043fa:	6c                   	insb   (%dx),%es:(%edi)
  1043fb:	63 6f 6d             	arpl   %ebp,0x6d(%edi)
  1043fe:	65 20 74 6f 20       	and    %dh,%gs:0x20(%edi,%ebp,2)
  104403:	52                   	push   %edx
  104404:	69 6e 67 4f 53 21 0a 	imul   $0xa21534f,0x67(%esi),%ebp
  10440b:	00 41 54             	add    %al,0x54(%ecx)
  10440e:	41                   	inc    %ecx
  10440f:	20 45 72             	and    %al,0x72(%ebp)
  104412:	72 6f                	jb     104483 <idt_flush+0x1193>
  104414:	72 3a                	jb     104450 <idt_flush+0x1160>
  104416:	20 44 72 69          	and    %al,0x69(%edx,%esi,2)
  10441a:	76 65                	jbe    104481 <idt_flush+0x1191>
  10441c:	20 6e 6f             	and    %ch,0x6f(%esi)
  10441f:	74 20                	je     104441 <idt_flush+0x1151>
  104421:	72 65                	jb     104488 <idt_flush+0x1198>
  104423:	61                   	popa
  104424:	64 79 0a             	fs jns 104431 <idt_flush+0x1141>
  104427:	00 41 54             	add    %al,0x54(%ecx)
  10442a:	41                   	inc    %ecx
  10442b:	20 45 72             	and    %al,0x72(%ebp)
  10442e:	72 6f                	jb     10449f <idt_flush+0x11af>
  104430:	72 3a                	jb     10446c <idt_flush+0x117c>
  104432:	20 49 6e             	and    %cl,0x6e(%ecx)
  104435:	76 61                	jbe    104498 <idt_flush+0x11a8>
  104437:	6c                   	insb   (%dx),%es:(%edi)
  104438:	69 64 20 62 75 66 66 	imul   $0x65666675,0x62(%eax,%eiz,1),%esp
  10443f:	65 
  104440:	72 0a                	jb     10444c <idt_flush+0x115c>
  104442:	00 41 54             	add    %al,0x54(%ecx)
  104445:	41                   	inc    %ecx
  104446:	20 45 72             	and    %al,0x72(%ebp)
  104449:	72 6f                	jb     1044ba <idt_flush+0x11ca>
  10444b:	72 3a                	jb     104487 <idt_flush+0x1197>
  10444d:	20 44 61 74          	and    %al,0x74(%ecx,%eiz,2)
  104451:	61                   	popa
  104452:	20 6e 6f             	and    %ch,0x6f(%esi)
  104455:	74 20                	je     104477 <idt_flush+0x1187>
  104457:	72 65                	jb     1044be <idt_flush+0x11ce>
  104459:	61                   	popa
  10445a:	64 79 0a             	fs jns 104467 <idt_flush+0x1177>
  10445d:	00 2f                	add    %ch,(%edi)
  10445f:	00 45 72             	add    %al,0x72(%ebp)
  104462:	72 6f                	jb     1044d3 <idt_flush+0x11e3>
  104464:	72 3a                	jb     1044a0 <idt_flush+0x11b0>
  104466:	20 49 6e             	and    %cl,0x6e(%ecx)
  104469:	76 61                	jbe    1044cc <idt_flush+0x11dc>
  10446b:	6c                   	insb   (%dx),%es:(%edi)
  10446c:	69 64 20 66 69 6c 65 	imul   $0x73656c69,0x66(%eax,%eiz,1),%esp
  104473:	73 
  104474:	79 73                	jns    1044e9 <idt_flush+0x11f9>
  104476:	74 65                	je     1044dd <idt_flush+0x11ed>
  104478:	6d                   	insl   (%dx),%es:(%edi)
  104479:	0a 00                	or     (%eax),%al
  10447b:	2e 2e 00 5b 46       	cs add %bl,%cs:0x46(%ebx)
  104480:	41                   	inc    %ecx
  104481:	54                   	push   %esp
  104482:	33 32                	xor    (%edx),%esi
  104484:	5d                   	pop    %ebp
  104485:	20 42 75             	and    %al,0x75(%edx)
  104488:	66 66 65 72 20       	data16 data16 gs jb 1044ad <idt_flush+0x11bd>
  10448d:	74 6f                	je     1044fe <idt_flush+0x120e>
  10448f:	6f                   	outsl  %ds:(%esi),(%dx)
  104490:	20 73 6d             	and    %dh,0x6d(%ebx)
  104493:	61                   	popa
  104494:	6c                   	insb   (%dx),%es:(%edi)
  104495:	6c                   	insb   (%dx),%es:(%edi)
  104496:	0a 00                	or     (%eax),%al
  104498:	5b                   	pop    %ebx
  104499:	46                   	inc    %esi
  10449a:	41                   	inc    %ecx
  10449b:	54                   	push   %esp
  10449c:	33 32                	xor    (%edx),%esi
  10449e:	5d                   	pop    %ebp
  10449f:	20 52 65             	and    %dl,0x65(%edx)
  1044a2:	61                   	popa
  1044a3:	64 69 6e 67 20 73 65 	imul   $0x63657320,%fs:0x67(%esi),%ebp
  1044aa:	63 
  1044ab:	74 6f                	je     10451c <idt_flush+0x122c>
  1044ad:	72 20                	jb     1044cf <idt_flush+0x11df>
  1044af:	30 78 00             	xor    %bh,0x0(%eax)
  1044b2:	5b                   	pop    %ebx
  1044b3:	46                   	inc    %esi
  1044b4:	41                   	inc    %ecx
  1044b5:	54                   	push   %esp
  1044b6:	33 32                	xor    (%edx),%esi
  1044b8:	5d                   	pop    %ebp
  1044b9:	20 52 65             	and    %dl,0x65(%edx)
  1044bc:	61                   	popa
  1044bd:	64 69 6e 67 20 00 20 	imul   $0x73200020,%fs:0x67(%esi),%ebp
  1044c4:	73 
  1044c5:	65 63 74 6f 72       	arpl   %esi,%gs:0x72(%edi,%ebp,2)
  1044ca:	73 0a                	jae    1044d6 <idt_flush+0x11e6>
  1044cc:	00 5b 46             	add    %bl,0x46(%ebx)
  1044cf:	41                   	inc    %ecx
  1044d0:	54                   	push   %esp
  1044d1:	33 32                	xor    (%edx),%esi
  1044d3:	5d                   	pop    %ebp
  1044d4:	20 53 75             	and    %dl,0x75(%ebx)
  1044d7:	63 63 65             	arpl   %esp,0x65(%ebx)
  1044da:	73 73                	jae    10454f <idt_flush+0x125f>
  1044dc:	66 75 6c             	data16 jne 10454b <idt_flush+0x125b>
  1044df:	6c                   	insb   (%dx),%es:(%edi)
  1044e0:	79 20                	jns    104502 <idt_flush+0x1212>
  1044e2:	72 65                	jb     104549 <idt_flush+0x1259>
  1044e4:	61                   	popa
  1044e5:	64 20 00             	and    %al,%fs:(%eax)
  1044e8:	20 62 79             	and    %ah,0x79(%edx)
  1044eb:	74 65                	je     104552 <idt_flush+0x1262>
  1044ed:	73 0a                	jae    1044f9 <idt_flush+0x1209>
  1044ef:	00 5b 46             	add    %bl,0x46(%ebx)
  1044f2:	41                   	inc    %ecx
  1044f3:	54                   	push   %esp
  1044f4:	33 32                	xor    (%edx),%esi
  1044f6:	5d                   	pop    %ebp
  1044f7:	20 46 69             	and    %al,0x69(%esi)
  1044fa:	6c                   	insb   (%dx),%es:(%edi)
  1044fb:	65 20 66 6f          	and    %ah,%gs:0x6f(%esi)
  1044ff:	75 6e                	jne    10456f <idt_flush+0x127f>
  104501:	64 21 20             	and    %esp,%fs:(%eax)
  104504:	53                   	push   %ebx
  104505:	69 7a 65 3a 20 00 5b 	imul   $0x5b00203a,0x65(%edx),%edi
  10450c:	46                   	inc    %esi
  10450d:	41                   	inc    %ecx
  10450e:	54                   	push   %esp
  10450f:	33 32                	xor    (%edx),%esi
  104511:	5d                   	pop    %ebp
  104512:	20 46 69             	and    %al,0x69(%esi)
  104515:	72 73                	jb     10458a <idt_flush+0x129a>
  104517:	74 20                	je     104539 <idt_flush+0x1249>
  104519:	63 6c 75 73          	arpl   %ebp,0x73(%ebp,%esi,2)
  10451d:	74 65                	je     104584 <idt_flush+0x1294>
  10451f:	72 3a                	jb     10455b <idt_flush+0x126b>
  104521:	20 30                	and    %dh,(%eax)
  104523:	78 00                	js     104525 <idt_flush+0x1235>
  104525:	4c                   	dec    %esp
  104526:	6f                   	outsl  %ds:(%esi),(%dx)
  104527:	61                   	popa
  104528:	64 69 6e 67 20 70 72 	imul   $0x6f727020,%fs:0x67(%esi),%ebp
  10452f:	6f 
  104530:	67 72 61             	addr16 jb 104594 <idt_flush+0x12a4>
  104533:	6d                   	insl   (%dx),%es:(%edi)
  104534:	2e 2e 2e 0a 00       	cs cs or %cs:(%eax),%al
  104539:	4a                   	dec    %edx
  10453a:	75 6d                	jne    1045a9 <idt_flush+0x12b9>
  10453c:	70 69                	jo     1045a7 <idt_flush+0x12b7>
  10453e:	6e                   	outsb  %ds:(%esi),(%dx)
  10453f:	67 20 74 6f          	and    %dh,0x6f(%si)
  104543:	20 70 72             	and    %dh,0x72(%eax)
  104546:	6f                   	outsl  %ds:(%esi),(%dx)
  104547:	67 72 61             	addr16 jb 1045ab <idt_flush+0x12bb>
  10454a:	6d                   	insl   (%dx),%es:(%edi)
  10454b:	20 61 74             	and    %ah,0x74(%ecx)
  10454e:	20 30                	and    %dh,(%eax)
  104550:	78 00                	js     104552 <idt_flush+0x1262>
  104552:	00 00                	add    %al,(%eax)
  104554:	0a 46 41             	or     0x41(%esi),%al
  104557:	54                   	push   %esp
  104558:	41                   	inc    %ecx
  104559:	4c                   	dec    %esp
  10455a:	3a 20                	cmp    (%eax),%ah
  10455c:	43                   	inc    %ebx
  10455d:	6f                   	outsl  %ds:(%esi),(%dx)
  10455e:	75 6c                	jne    1045cc <idt_flush+0x12dc>
  104560:	64 20 6e 6f          	and    %ch,%fs:0x6f(%esi)
  104564:	74 20                	je     104586 <idt_flush+0x1296>
  104566:	69 6e 69 74 69 61 6c 	imul   $0x6c616974,0x69(%esi),%ebp
  10456d:	69 7a 65 20 41 54 41 	imul   $0x41544120,0x65(%edx),%edi
  104574:	20 64 72 69          	and    %ah,0x69(%edx,%esi,2)
  104578:	76 65                	jbe    1045df <idt_flush+0x12ef>
  10457a:	21 0a                	and    %ecx,(%edx)
  10457c:	00 00                	add    %al,(%eax)
  10457e:	00 00                	add    %al,(%eax)
  104580:	57                   	push   %edi
  104581:	41                   	inc    %ecx
  104582:	52                   	push   %edx
  104583:	4e                   	dec    %esi
  104584:	49                   	dec    %ecx
  104585:	4e                   	dec    %esi
  104586:	47                   	inc    %edi
  104587:	3a 20                	cmp    (%eax),%ah
  104589:	46                   	inc    %esi
  10458a:	69 6c 65 73 79 73 74 	imul   $0x65747379,0x73(%ebp,%eiz,2),%ebp
  104591:	65 
  104592:	6d                   	insl   (%dx),%es:(%edi)
  104593:	20 63 6f             	and    %ah,0x6f(%ebx)
  104596:	6d                   	insl   (%dx),%es:(%edi)
  104597:	6d                   	insl   (%dx),%es:(%edi)
  104598:	61                   	popa
  104599:	6e                   	outsb  %ds:(%esi),(%dx)
  10459a:	64 73 20             	fs jae 1045bd <idt_flush+0x12cd>
  10459d:	77 69                	ja     104608 <idt_flush+0x1318>
  10459f:	6c                   	insb   (%dx),%es:(%edi)
  1045a0:	6c                   	insb   (%dx),%es:(%edi)
  1045a1:	20 62 65             	and    %ah,0x65(%edx)
  1045a4:	20 75 6e             	and    %dh,0x6e(%ebp)
  1045a7:	61                   	popa
  1045a8:	76 61                	jbe    10460b <idt_flush+0x131b>
  1045aa:	69 6c 61 62 6c 65 2e 	imul   $0xa2e656c,0x62(%ecx,%eiz,2),%ebp
  1045b1:	0a 
  1045b2:	00 00                	add    %al,(%eax)
  1045b4:	0a 42 69             	or     0x69(%edx),%al
  1045b7:	6e                   	outsb  %ds:(%esi),(%dx)
  1045b8:	61                   	popa
  1045b9:	72 79                	jb     104634 <idt_flush+0x1344>
  1045bb:	20 66 69             	and    %ah,0x69(%esi)
  1045be:	6c                   	insb   (%dx),%es:(%edi)
  1045bf:	65 20 77 72          	and    %dh,%gs:0x72(%edi)
  1045c3:	69 74 74 65 6e 20 73 	imul   $0x7573206e,0x65(%esp,%esi,2),%esi
  1045ca:	75 
  1045cb:	63 63 65             	arpl   %esp,0x65(%ebx)
  1045ce:	73 73                	jae    104643 <idt_flush+0x1353>
  1045d0:	66 75 6c             	data16 jne 10463f <idt_flush+0x134f>
  1045d3:	6c                   	insb   (%dx),%es:(%edi)
  1045d4:	79 0a                	jns    1045e0 <idt_flush+0x12f0>
  1045d6:	00 00                	add    %al,(%eax)
  1045d8:	45                   	inc    %ebp
  1045d9:	72 72                	jb     10464d <idt_flush+0x135d>
  1045db:	6f                   	outsl  %ds:(%esi),(%dx)
  1045dc:	72 3a                	jb     104618 <idt_flush+0x1328>
  1045de:	20 46 69             	and    %al,0x69(%esi)
  1045e1:	6c                   	insb   (%dx),%es:(%edi)
  1045e2:	65 20 6e 6f          	and    %ch,%gs:0x6f(%esi)
  1045e6:	74 20                	je     104608 <idt_flush+0x1318>
  1045e8:	66 6f                	outsw  %ds:(%esi),(%dx)
  1045ea:	75 6e                	jne    10465a <idt_flush+0x136a>
  1045ec:	64 20 6f 72          	and    %ch,%fs:0x72(%edi)
  1045f0:	20 65 72             	and    %ah,0x72(%ebp)
  1045f3:	72 6f                	jb     104664 <idt_flush+0x1374>
  1045f5:	72 20                	jb     104617 <idt_flush+0x1327>
  1045f7:	72 65                	jb     10465e <idt_flush+0x136e>
  1045f9:	61                   	popa
  1045fa:	64 69 6e 67 20 66 69 	imul   $0x6c696620,%fs:0x67(%esi),%ebp
  104601:	6c 
  104602:	65 20 28             	and    %ch,%gs:(%eax)
  104605:	73 69                	jae    104670 <idt_flush+0x1380>
  104607:	7a 65                	jp     10466e <idt_flush+0x137e>
  104609:	3d 00 00 45 72       	cmp    $0x72450000,%eax
  10460e:	72 6f                	jb     10467f <idt_flush+0x138f>
  104610:	72 3a                	jb     10464c <idt_flush+0x135c>
  104612:	20 43 6f             	and    %al,0x6f(%ebx)
  104615:	75 6c                	jne    104683 <idt_flush+0x1393>
  104617:	64 20 6e 6f          	and    %ch,%fs:0x6f(%esi)
  10461b:	74 20                	je     10463d <idt_flush+0x134d>
  10461d:	6c                   	insb   (%dx),%es:(%edi)
  10461e:	6f                   	outsl  %ds:(%esi),(%dx)
  10461f:	61                   	popa
  104620:	64 20 70 72          	and    %dh,%fs:0x72(%eax)
  104624:	6f                   	outsl  %ds:(%esi),(%dx)
  104625:	67 72 61             	addr16 jb 104689 <idt_flush+0x1399>
  104628:	6d                   	insl   (%dx),%es:(%edi)
  104629:	0a 00                	or     (%eax),%al
  10462b:	00 50 72             	add    %dl,0x72(%eax)
  10462e:	6f                   	outsl  %ds:(%esi),(%dx)
  10462f:	67 72 61             	addr16 jb 104693 <idt_flush+0x13a3>
  104632:	6d                   	insl   (%dx),%es:(%edi)
  104633:	20 6c 6f 61          	and    %ch,0x61(%edi,%ebp,2)
  104637:	64 65 64 20 73 75    	fs gs and %dh,%fs:0x75(%ebx)
  10463d:	63 63 65             	arpl   %esp,0x65(%ebx)
  104640:	73 73                	jae    1046b5 <idt_flush+0x13c5>
  104642:	66 75 6c             	data16 jne 1046b1 <idt_flush+0x13c1>
  104645:	6c                   	insb   (%dx),%es:(%edi)
  104646:	79 2e                	jns    104676 <idt_flush+0x1386>
  104648:	20 45 78             	and    %al,0x78(%ebp)
  10464b:	65 63 75 74          	arpl   %esi,%gs:0x74(%ebp)
  10464f:	69 6e 67 2e 2e 2e 0a 	imul   $0xa2e2e2e,0x67(%esi),%ebp
  104656:	00 00                	add    %al,(%eax)
  104658:	0a 20                	or     (%eax),%ah
  10465a:	20 68 65             	and    %ch,0x65(%eax)
  10465d:	6c                   	insb   (%dx),%es:(%edi)
  10465e:	70 20                	jo     104680 <idt_flush+0x1390>
  104660:	20 20                	and    %ah,(%eax)
  104662:	2d 20 53 68 6f       	sub    $0x6f685320,%eax
  104667:	77 20                	ja     104689 <idt_flush+0x1399>
  104669:	74 68                	je     1046d3 <idt_flush+0x13e3>
  10466b:	69 73 20 68 65 6c 70 	imul   $0x706c6568,0x20(%ebx),%esi
  104672:	20 6d 65             	and    %ch,0x65(%ebp)
  104675:	73 73                	jae    1046ea <idt_flush+0x13fa>
  104677:	61                   	popa
  104678:	67 65 00 00          	add    %al,%gs:(%bx,%si)
  10467c:	0a 20                	or     (%eax),%ah
  10467e:	20 61 62             	and    %ah,0x62(%ecx)
  104681:	6f                   	outsl  %ds:(%esi),(%dx)
  104682:	75 74                	jne    1046f8 <idt_flush+0x1408>
  104684:	20 20                	and    %ah,(%eax)
  104686:	2d 20 53 68 6f       	sub    $0x6f685320,%eax
  10468b:	77 20                	ja     1046ad <idt_flush+0x13bd>
  10468d:	73 79                	jae    104708 <idt_flush+0x1418>
  10468f:	73 74                	jae    104705 <idt_flush+0x1415>
  104691:	65 6d                	gs insl (%dx),%es:(%edi)
  104693:	20 69 6e             	and    %ch,0x6e(%ecx)
  104696:	66 6f                	outsw  %ds:(%esi),(%dx)
  104698:	72 6d                	jb     104707 <idt_flush+0x1417>
  10469a:	61                   	popa
  10469b:	74 69                	je     104706 <idt_flush+0x1416>
  10469d:	6f                   	outsl  %ds:(%esi),(%dx)
  10469e:	6e                   	outsb  %ds:(%esi),(%dx)
  10469f:	00 0a                	add    %cl,(%edx)
  1046a1:	20 20                	and    %ah,(%eax)
  1046a3:	6c                   	insb   (%dx),%es:(%edi)
  1046a4:	73 20                	jae    1046c6 <idt_flush+0x13d6>
  1046a6:	20 20                	and    %ah,(%eax)
  1046a8:	20 20                	and    %ah,(%eax)
  1046aa:	2d 20 4c 69 73       	sub    $0x73694c20,%eax
  1046af:	74 20                	je     1046d1 <idt_flush+0x13e1>
  1046b1:	66 69 6c 65 73 20 69 	imul   $0x6920,0x73(%ebp,%eiz,2),%bp
  1046b8:	6e                   	outsb  %ds:(%esi),(%dx)
  1046b9:	20 64 69 72          	and    %ah,0x72(%ecx,%ebp,2)
  1046bd:	65 63 74 6f 72       	arpl   %esi,%gs:0x72(%edi,%ebp,2)
  1046c2:	79 00                	jns    1046c4 <idt_flush+0x13d4>
  1046c4:	0a 20                	or     (%eax),%ah
  1046c6:	20 6d 6b             	and    %ch,0x6b(%ebp)
  1046c9:	64 69 72 20 20 2d 20 	imul   $0x43202d20,%fs:0x20(%edx),%esi
  1046d0:	43 
  1046d1:	72 65                	jb     104738 <idt_flush+0x1448>
  1046d3:	61                   	popa
  1046d4:	74 65                	je     10473b <idt_flush+0x144b>
  1046d6:	20 61 20             	and    %ah,0x20(%ecx)
  1046d9:	6e                   	outsb  %ds:(%esi),(%dx)
  1046da:	65 77 20             	gs ja  1046fd <idt_flush+0x140d>
  1046dd:	64 69 72 65 63 74 6f 	imul   $0x726f7463,%fs:0x65(%edx),%esi
  1046e4:	72 
  1046e5:	79 00                	jns    1046e7 <idt_flush+0x13f7>
  1046e7:	00 0a                	add    %cl,(%edx)
  1046e9:	20 20                	and    %ah,(%eax)
  1046eb:	77 72                	ja     10475f <idt_flush+0x146f>
  1046ed:	69 74 65 62 20 2d 20 	imul   $0x57202d20,0x62(%ebp,%eiz,2),%esi
  1046f4:	57 
  1046f5:	72 69                	jb     104760 <idt_flush+0x1470>
  1046f7:	74 65                	je     10475e <idt_flush+0x146e>
  1046f9:	20 62 69             	and    %ah,0x69(%edx)
  1046fc:	6e                   	outsb  %ds:(%esi),(%dx)
  1046fd:	61                   	popa
  1046fe:	72 79                	jb     104779 <idt_flush+0x1489>
  104700:	20 66 69             	and    %ah,0x69(%esi)
  104703:	6c                   	insb   (%dx),%es:(%edi)
  104704:	65 20 28             	and    %ch,%gs:(%eax)
  104707:	68 65 78 20 66       	push   $0x66207865
  10470c:	6f                   	outsl  %ds:(%esi),(%dx)
  10470d:	72 6d                	jb     10477c <idt_flush+0x148c>
  10470f:	61                   	popa
  104710:	74 29                	je     10473b <idt_flush+0x144b>
  104712:	00 00                	add    %al,(%eax)
  104714:	0a 20                	or     (%eax),%ah
  104716:	20 72 65             	and    %dh,0x65(%edx)
  104719:	61                   	popa
  10471a:	64 62 20             	bound  %esp,%fs:(%eax)
  10471d:	20 2d 20 52 65 61    	and    %ch,0x61655220
  104723:	64 20 62 69          	and    %ah,%fs:0x69(%edx)
  104727:	6e                   	outsb  %ds:(%esi),(%dx)
  104728:	61                   	popa
  104729:	72 79                	jb     1047a4 <idt_flush+0x14b4>
  10472b:	20 66 69             	and    %ah,0x69(%esi)
  10472e:	6c                   	insb   (%dx),%es:(%edi)
  10472f:	65 20 28             	and    %ch,%gs:(%eax)
  104732:	68 65 78 20 66       	push   $0x66207865
  104737:	6f                   	outsl  %ds:(%esi),(%dx)
  104738:	72 6d                	jb     1047a7 <idt_flush+0x14b7>
  10473a:	61                   	popa
  10473b:	74 29                	je     104766 <idt_flush+0x1476>
  10473d:	00 00                	add    %al,(%eax)
  10473f:	00 0a                	add    %cl,(%edx)
  104741:	41                   	inc    %ecx
  104742:	20 6d 69             	and    %ch,0x69(%ebp)
  104745:	6e                   	outsb  %ds:(%esi),(%dx)
  104746:	69 6d 61 6c 20 6f 70 	imul   $0x706f206c,0x61(%ebp),%ebp
  10474d:	65 72 61             	gs jb  1047b1 <idt_flush+0x14c1>
  104750:	74 69                	je     1047bb <idt_flush+0x14cb>
  104752:	6e                   	outsb  %ds:(%esi),(%dx)
  104753:	67 20 73 79          	and    %dh,0x79(%bp,%di)
  104757:	73 74                	jae    1047cd <idt_flush+0x14dd>
  104759:	65 6d                	gs insl (%dx),%es:(%edi)
  10475b:	20 77 69             	and    %dh,0x69(%edi)
  10475e:	74 68                	je     1047c8 <idt_flush+0x14d8>
  104760:	20 46 41             	and    %al,0x41(%esi)
  104763:	54                   	push   %esp
  104764:	33 32                	xor    (%edx),%esi
  104766:	20 73 75             	and    %dh,0x75(%ebx)
  104769:	70 70                	jo     1047db <idt_flush+0x14eb>
  10476b:	6f                   	outsl  %ds:(%esi),(%dx)
  10476c:	72 74                	jb     1047e2 <idt_flush+0x14f2>
  10476e:	00 00                	add    %al,(%eax)
  104770:	45                   	inc    %ebp
  104771:	72 72                	jb     1047e5 <idt_flush+0x14f5>
  104773:	6f                   	outsl  %ds:(%esi),(%dx)
  104774:	72 20                	jb     104796 <idt_flush+0x14a6>
  104776:	72 65                	jb     1047dd <idt_flush+0x14ed>
  104778:	61                   	popa
  104779:	64 69 6e 67 20 64 69 	imul   $0x72696420,%fs:0x67(%esi),%ebp
  104780:	72 
  104781:	65 63 74 6f 72       	arpl   %esi,%gs:0x72(%edi,%ebp,2)
  104786:	79 2e                	jns    1047b6 <idt_flush+0x14c6>
  104788:	20 50 6c             	and    %dl,0x6c(%eax)
  10478b:	65 61                	gs popa
  10478d:	73 65                	jae    1047f4 <idt_flush+0x1504>
  10478f:	20 74 72 79          	and    %dh,0x79(%edx,%esi,2)
  104793:	20 61 67             	and    %ah,0x67(%ecx)
  104796:	61                   	popa
  104797:	69 6e 2e 0a 00 0a 45 	imul   $0x450a000a,0x2e(%esi),%ebp
  10479e:	72 72                	jb     104812 <idt_flush+0x1522>
  1047a0:	6f                   	outsl  %ds:(%esi),(%dx)
  1047a1:	72 3a                	jb     1047dd <idt_flush+0x14ed>
  1047a3:	20 4e 6f             	and    %cl,0x6f(%esi)
  1047a6:	20 66 69             	and    %ah,0x69(%esi)
  1047a9:	6c                   	insb   (%dx),%es:(%edi)
  1047aa:	65 6e                	outsb  %gs:(%esi),(%dx)
  1047ac:	61                   	popa
  1047ad:	6d                   	insl   (%dx),%es:(%edi)
  1047ae:	65 20 73 70          	and    %dh,%gs:0x70(%ebx)
  1047b2:	65 63 69 66          	arpl   %ebp,%gs:0x66(%ecx)
  1047b6:	69 65 64 0a 00 00 0a 	imul   $0xa00000a,0x64(%ebp),%esp
  1047bd:	45                   	inc    %ebp
  1047be:	72 72                	jb     104832 <idt_flush+0x1542>
  1047c0:	6f                   	outsl  %ds:(%esi),(%dx)
  1047c1:	72 20                	jb     1047e3 <idt_flush+0x14f3>
  1047c3:	63 72 65             	arpl   %esi,0x65(%edx)
  1047c6:	61                   	popa
  1047c7:	74 69                	je     104832 <idt_flush+0x1542>
  1047c9:	6e                   	outsb  %ds:(%esi),(%dx)
  1047ca:	67 20 66 69          	and    %ah,0x69(%bp)
  1047ce:	6c                   	insb   (%dx),%es:(%edi)
  1047cf:	65 2e 20 50 6c       	gs and %dl,%cs:0x6c(%eax)
  1047d4:	65 61                	gs popa
  1047d6:	73 65                	jae    10483d <idt_flush+0x154d>
  1047d8:	20 74 72 79          	and    %dh,0x79(%edx,%esi,2)
  1047dc:	20 61 67             	and    %ah,0x67(%ecx)
  1047df:	61                   	popa
  1047e0:	69 6e 2e 0a 00 00 00 	imul   $0xa,0x2e(%esi),%ebp
  1047e7:	00 0a                	add    %cl,(%edx)
  1047e9:	45                   	inc    %ebp
  1047ea:	72 72                	jb     10485e <idt_flush+0x156e>
  1047ec:	6f                   	outsl  %ds:(%esi),(%dx)
  1047ed:	72 20                	jb     10480f <idt_flush+0x151f>
  1047ef:	64 65 6c             	fs gs insb (%dx),%es:(%edi)
  1047f2:	65 74 69             	gs je  10485e <idt_flush+0x156e>
  1047f5:	6e                   	outsb  %ds:(%esi),(%dx)
  1047f6:	67 20 66 69          	and    %ah,0x69(%bp)
  1047fa:	6c                   	insb   (%dx),%es:(%edi)
  1047fb:	65 2e 20 50 6c       	gs and %dl,%cs:0x6c(%eax)
  104800:	65 61                	gs popa
  104802:	73 65                	jae    104869 <idt_flush+0x1579>
  104804:	20 74 72 79          	and    %dh,0x79(%edx,%esi,2)
  104808:	20 61 67             	and    %ah,0x67(%ecx)
  10480b:	61                   	popa
  10480c:	69 6e 2e 0a 00 00 00 	imul   $0xa,0x2e(%esi),%ebp
  104813:	00 0a                	add    %cl,(%edx)
  104815:	45                   	inc    %ebp
  104816:	72 72                	jb     10488a <idt_flush+0x159a>
  104818:	6f                   	outsl  %ds:(%esi),(%dx)
  104819:	72 3a                	jb     104855 <idt_flush+0x1565>
  10481b:	20 4e 6f             	and    %cl,0x6f(%esi)
  10481e:	20 64 69 72          	and    %ah,0x72(%ecx,%ebp,2)
  104822:	65 63 74 6f 72       	arpl   %esi,%gs:0x72(%edi,%ebp,2)
  104827:	79 20                	jns    104849 <idt_flush+0x1559>
  104829:	6e                   	outsb  %ds:(%esi),(%dx)
  10482a:	61                   	popa
  10482b:	6d                   	insl   (%dx),%es:(%edi)
  10482c:	65 20 73 70          	and    %dh,%gs:0x70(%ebx)
  104830:	65 63 69 66          	arpl   %ebp,%gs:0x66(%ecx)
  104834:	69 65 64 0a 00 00 00 	imul   $0xa,0x64(%ebp),%esp
  10483b:	00 0a                	add    %cl,(%edx)
  10483d:	44                   	inc    %esp
  10483e:	69 72 65 63 74 6f 72 	imul   $0x726f7463,0x65(%edx),%esi
  104845:	79 20                	jns    104867 <idt_flush+0x1577>
  104847:	63 72 65             	arpl   %esi,0x65(%edx)
  10484a:	61                   	popa
  10484b:	74 65                	je     1048b2 <idt_flush+0x15c2>
  10484d:	64 20 73 75          	and    %dh,%fs:0x75(%ebx)
  104851:	63 63 65             	arpl   %esp,0x65(%ebx)
  104854:	73 73                	jae    1048c9 <idt_flush+0x15d9>
  104856:	66 75 6c             	data16 jne 1048c5 <idt_flush+0x15d5>
  104859:	6c                   	insb   (%dx),%es:(%edi)
  10485a:	79 0a                	jns    104866 <idt_flush+0x1576>
  10485c:	00 00                	add    %al,(%eax)
  10485e:	00 00                	add    %al,(%eax)
  104860:	0a 45 72             	or     0x72(%ebp),%al
  104863:	72 6f                	jb     1048d4 <idt_flush+0x15e4>
  104865:	72 3a                	jb     1048a1 <idt_flush+0x15b1>
  104867:	20 43 61             	and    %al,0x61(%ebx)
  10486a:	6e                   	outsb  %ds:(%esi),(%dx)
  10486b:	6e                   	outsb  %ds:(%esi),(%dx)
  10486c:	6f                   	outsl  %ds:(%esi),(%dx)
  10486d:	74 20                	je     10488f <idt_flush+0x159f>
  10486f:	63 68 61             	arpl   %ebp,0x61(%eax)
  104872:	6e                   	outsb  %ds:(%esi),(%dx)
  104873:	67 65 20 74 6f       	and    %dh,%gs:0x6f(%si)
  104878:	20 64 69 72          	and    %ah,0x72(%ecx,%ebp,2)
  10487c:	65 63 74 6f 72       	arpl   %esi,%gs:0x72(%edi,%ebp,2)
  104881:	79 20                	jns    1048a3 <idt_flush+0x15b3>
  104883:	27                   	daa
  104884:	00 00                	add    %al,(%eax)
  104886:	00 00                	add    %al,(%eax)
  104888:	0a 54 79 70          	or     0x70(%ecx,%edi,2),%dl
  10488c:	65 20 27             	and    %ah,%gs:(%edi)
  10488f:	68 65 6c 70 27       	push   $0x27706c65
  104894:	20 66 6f             	and    %ah,0x6f(%esi)
  104897:	72 20                	jb     1048b9 <idt_flush+0x15c9>
  104899:	61                   	popa
  10489a:	76 61                	jbe    1048fd <idt_flush+0x160d>
  10489c:	69 6c 61 62 6c 65 20 	imul   $0x6320656c,0x62(%ecx,%eiz,2),%ebp
  1048a3:	63 
  1048a4:	6f                   	outsl  %ds:(%esi),(%dx)
  1048a5:	6d                   	insl   (%dx),%es:(%edi)
  1048a6:	6d                   	insl   (%dx),%es:(%edi)
  1048a7:	61                   	popa
  1048a8:	6e                   	outsb  %ds:(%esi),(%dx)
  1048a9:	64 73 2e             	fs jae 1048da <idt_flush+0x15ea>
  1048ac:	0a 00                	or     (%eax),%al
  1048ae:	00 00                	add    %al,(%eax)
  1048b0:	54                   	push   %esp
  1048b1:	79 70                	jns    104923 <idt_flush+0x1633>
  1048b3:	65 20 27             	and    %ah,%gs:(%edi)
  1048b6:	68 65 6c 70 27       	push   $0x27706c65
  1048bb:	20 66 6f             	and    %ah,0x6f(%esi)
  1048be:	72 20                	jb     1048e0 <idt_flush+0x15f0>
  1048c0:	61                   	popa
  1048c1:	76 61                	jbe    104924 <idt_flush+0x1634>
  1048c3:	69 6c 61 62 6c 65 20 	imul   $0x6320656c,0x62(%ecx,%eiz,2),%ebp
  1048ca:	63 
  1048cb:	6f                   	outsl  %ds:(%esi),(%dx)
  1048cc:	6d                   	insl   (%dx),%es:(%edi)
  1048cd:	6d                   	insl   (%dx),%es:(%edi)
  1048ce:	61                   	popa
  1048cf:	6e                   	outsb  %ds:(%esi),(%dx)
  1048d0:	64 73 2e             	fs jae 104901 <idt_flush+0x1611>
  1048d3:	0a 00                	or     (%eax),%al
  1048d5:	00 00                	add    %al,(%eax)
  1048d7:	00 41 54             	add    %al,0x54(%ecx)
  1048da:	41                   	inc    %ecx
  1048db:	20 45 72             	and    %al,0x72(%ebp)
  1048de:	72 6f                	jb     10494f <idt_flush+0x165f>
  1048e0:	72 3a                	jb     10491c <idt_flush+0x162c>
  1048e2:	20 44 72 69          	and    %al,0x69(%edx,%esi,2)
  1048e6:	76 65                	jbe    10494d <idt_flush+0x165d>
  1048e8:	20 62 75             	and    %ah,0x75(%edx)
  1048eb:	73 79                	jae    104966 <idt_flush+0x1676>
  1048ed:	20 74 69 6d          	and    %dh,0x6d(%ecx,%ebp,2)
  1048f1:	65 6f                	outsl  %gs:(%esi),(%dx)
  1048f3:	75 74                	jne    104969 <idt_flush+0x1679>
  1048f5:	0a 00                	or     (%eax),%al
  1048f7:	00 41 54             	add    %al,0x54(%ecx)
  1048fa:	41                   	inc    %ecx
  1048fb:	20 45 72             	and    %al,0x72(%ebp)
  1048fe:	72 6f                	jb     10496f <idt_flush+0x167f>
  104900:	72 3a                	jb     10493c <idt_flush+0x164c>
  104902:	20 44 72 69          	and    %al,0x69(%edx,%esi,2)
  104906:	76 65                	jbe    10496d <idt_flush+0x167d>
  104908:	20 6e 6f             	and    %ch,0x6f(%esi)
  10490b:	74 20                	je     10492d <idt_flush+0x163d>
  10490d:	69 6e 69 74 69 61 6c 	imul   $0x6c616974,0x69(%esi),%ebp
  104914:	69 7a 65 64 0a 00 00 	imul   $0xa64,0x65(%edx),%edi
  10491b:	00 41 54             	add    %al,0x54(%ecx)
  10491e:	41                   	inc    %ecx
  10491f:	20 45 72             	and    %al,0x72(%ebp)
  104922:	72 6f                	jb     104993 <idt_flush+0x16a3>
  104924:	72 3a                	jb     104960 <idt_flush+0x1670>
  104926:	20 44 72 69          	and    %al,0x69(%edx,%esi,2)
  10492a:	76 65                	jbe    104991 <idt_flush+0x16a1>
  10492c:	20 62 75             	and    %ah,0x75(%edx)
  10492f:	73 79                	jae    1049aa <idt_flush+0x16ba>
  104931:	20 62 65             	and    %ah,0x65(%edx)
  104934:	66 6f                	outsw  %ds:(%esi),(%dx)
  104936:	72 65                	jb     10499d <idt_flush+0x16ad>
  104938:	20 72 65             	and    %dh,0x65(%edx)
  10493b:	61                   	popa
  10493c:	64 0a 00             	or     %fs:(%eax),%al
  10493f:	00 41 54             	add    %al,0x54(%ecx)
  104942:	41                   	inc    %ecx
  104943:	20 45 72             	and    %al,0x72(%ebp)
  104946:	72 6f                	jb     1049b7 <idt_flush+0x16c7>
  104948:	72 3a                	jb     104984 <idt_flush+0x1694>
  10494a:	20 44 72 69          	and    %al,0x69(%edx,%esi,2)
  10494e:	76 65                	jbe    1049b5 <idt_flush+0x16c5>
  104950:	20 6e 6f             	and    %ch,0x6f(%esi)
  104953:	74 20                	je     104975 <idt_flush+0x1685>
  104955:	72 65                	jb     1049bc <idt_flush+0x16cc>
  104957:	61                   	popa
  104958:	64 79 20             	fs jns 10497b <idt_flush+0x168b>
  10495b:	66 6f                	outsw  %ds:(%esi),(%dx)
  10495d:	72 20                	jb     10497f <idt_flush+0x168f>
  10495f:	77 72                	ja     1049d3 <idt_flush+0x16e3>
  104961:	69 74 65 0a 00 00 00 	imul   $0x41000000,0xa(%ebp,%eiz,2),%esi
  104968:	41 
  104969:	54                   	push   %esp
  10496a:	41                   	inc    %ecx
  10496b:	20 45 72             	and    %al,0x72(%ebp)
  10496e:	72 6f                	jb     1049df <idt_flush+0x16ef>
  104970:	72 3a                	jb     1049ac <idt_flush+0x16bc>
  104972:	20 43 61             	and    %al,0x61(%ebx)
  104975:	63 68 65             	arpl   %ebp,0x65(%eax)
  104978:	20 66 6c             	and    %ah,0x6c(%esi)
  10497b:	75 73                	jne    1049f0 <idt_flush+0x1700>
  10497d:	68 20 66 61 69       	push   $0x69616620
  104982:	6c                   	insb   (%dx),%es:(%edi)
  104983:	65 64 0a 00          	gs or  %fs:(%eax),%al
  104987:	00 41 54             	add    %al,0x54(%ecx)
  10498a:	41                   	inc    %ecx
  10498b:	20 45 72             	and    %al,0x72(%ebp)
  10498e:	72 6f                	jb     1049ff <idt_flush+0x170f>
  104990:	72 3a                	jb     1049cc <idt_flush+0x16dc>
  104992:	20 44 72 69          	and    %al,0x69(%edx,%esi,2)
  104996:	76 65                	jbe    1049fd <idt_flush+0x170d>
  104998:	20 62 75             	and    %ah,0x75(%edx)
  10499b:	73 79                	jae    104a16 <idt_flush+0x1726>
  10499d:	20 62 65             	and    %ah,0x65(%edx)
  1049a0:	66 6f                	outsw  %ds:(%esi),(%dx)
  1049a2:	72 65                	jb     104a09 <idt_flush+0x1719>
  1049a4:	20 77 72             	and    %dh,0x72(%edi)
  1049a7:	69 74 65 0a 00 45 72 	imul   $0x72724500,0xa(%ebp,%eiz,2),%esi
  1049ae:	72 
  1049af:	6f                   	outsl  %ds:(%esi),(%dx)
  1049b0:	72 3a                	jb     1049ec <idt_flush+0x16fc>
  1049b2:	20 46 61             	and    %al,0x61(%esi)
  1049b5:	69 6c 65 64 20 74 6f 	imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
  1049bc:	20 
  1049bd:	69 6e 69 74 69 61 6c 	imul   $0x6c616974,0x69(%esi),%ebp
  1049c4:	69 7a 65 20 66 69 6c 	imul   $0x6c696620,0x65(%edx),%edi
  1049cb:	65 73 79             	gs jae 104a47 <scancode_to_ascii_shift+0x7>
  1049ce:	73 74                	jae    104a44 <scancode_to_ascii_shift+0x4>
  1049d0:	65 6d                	gs insl (%dx),%es:(%edi)
  1049d2:	0a 00                	or     (%eax),%al
  1049d4:	5b                   	pop    %ebx
  1049d5:	46                   	inc    %esi
  1049d6:	41                   	inc    %ecx
  1049d7:	54                   	push   %esp
  1049d8:	33 32                	xor    (%edx),%esi
  1049da:	5d                   	pop    %ebp
  1049db:	20 46 61             	and    %al,0x61(%esi)
  1049de:	69 6c 65 64 20 74 6f 	imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
  1049e5:	20 
  1049e6:	72 65                	jb     104a4d <scancode_to_ascii_shift+0xd>
  1049e8:	61                   	popa
  1049e9:	64 20 64 61 74       	and    %ah,%fs:0x74(%ecx,%eiz,2)
  1049ee:	61                   	popa
  1049ef:	20 73 65             	and    %dh,0x65(%ebx)
  1049f2:	63 74 6f 72          	arpl   %esi,0x72(%edi,%ebp,2)
  1049f6:	73 0a                	jae    104a02 <idt_flush+0x1712>
  1049f8:	00 00                	add    %al,(%eax)
  1049fa:	00 00                	add    %al,(%eax)
  1049fc:	45                   	inc    %ebp
  1049fd:	72 72                	jb     104a71 <scancode_to_ascii_shift+0x31>
  1049ff:	6f                   	outsl  %ds:(%esi),(%dx)
  104a00:	72 3a                	jb     104a3c <idt_flush+0x174c>
  104a02:	20 43 6f             	and    %al,0x6f(%ebx)
  104a05:	75 6c                	jne    104a73 <scancode_to_ascii_shift+0x33>
  104a07:	64 20 6e 6f          	and    %ch,%fs:0x6f(%esi)
  104a0b:	74 20                	je     104a2d <idt_flush+0x173d>
  104a0d:	72 65                	jb     104a74 <scancode_to_ascii_shift+0x34>
  104a0f:	61                   	popa
  104a10:	64 20 70 72          	and    %dh,%fs:0x72(%eax)
  104a14:	6f                   	outsl  %ds:(%esi),(%dx)
  104a15:	67 72 61             	addr16 jb 104a79 <scancode_to_ascii_shift+0x39>
  104a18:	6d                   	insl   (%dx),%es:(%edi)
  104a19:	20 66 69             	and    %ah,0x69(%esi)
  104a1c:	6c                   	insb   (%dx),%es:(%edi)
  104a1d:	65 0a 00             	or     %gs:(%eax),%al
  104a20:	50                   	push   %eax
  104a21:	72 6f                	jb     104a92 <scancode_to_ascii+0x12>
  104a23:	67 72 61             	addr16 jb 104a87 <scancode_to_ascii+0x7>
  104a26:	6d                   	insl   (%dx),%es:(%edi)
  104a27:	20 72 65             	and    %dh,0x65(%edx)
  104a2a:	74 75                	je     104aa1 <scancode_to_ascii+0x21>
  104a2c:	72 6e                	jb     104a9c <scancode_to_ascii+0x1c>
  104a2e:	65 64 20 76 69       	gs and %dh,%fs:0x69(%esi)
  104a33:	61                   	popa
  104a34:	20 69 6e             	and    %ch,0x6e(%ecx)
  104a37:	74 65                	je     104a9e <scancode_to_ascii+0x1e>
  104a39:	72 72                	jb     104aad <scancode_to_ascii+0x2d>
  104a3b:	75 70                	jne    104aad <scancode_to_ascii+0x2d>
  104a3d:	74 0a                	je     104a49 <scancode_to_ascii_shift+0x9>
	...

00104a40 <scancode_to_ascii_shift>:
static const char scancode_to_ascii_shift[] = {
  104a40:	00 00                	add    %al,(%eax)
  104a42:	21 40 23             	and    %eax,0x23(%eax)
  104a45:	24 25                	and    $0x25,%al
  104a47:	5e                   	pop    %esi
  104a48:	26 2a 28             	sub    %es:(%eax),%ch
  104a4b:	29 5f 2b             	sub    %ebx,0x2b(%edi)
  104a4e:	08 09                	or     %cl,(%ecx)
  104a50:	51                   	push   %ecx
  104a51:	57                   	push   %edi
  104a52:	45                   	inc    %ebp
  104a53:	52                   	push   %edx
  104a54:	54                   	push   %esp
  104a55:	59                   	pop    %ecx
  104a56:	55                   	push   %ebp
  104a57:	49                   	dec    %ecx
  104a58:	4f                   	dec    %edi
  104a59:	50                   	push   %eax
  104a5a:	7b 7d                	jnp    104ad9 <scancode_to_ascii+0x59>
  104a5c:	0a 00                	or     (%eax),%al
  104a5e:	41                   	inc    %ecx
  104a5f:	53                   	push   %ebx
  104a60:	44                   	inc    %esp
  104a61:	46                   	inc    %esi
  104a62:	47                   	inc    %edi
  104a63:	48                   	dec    %eax
  104a64:	4a                   	dec    %edx
  104a65:	4b                   	dec    %ebx
  104a66:	4c                   	dec    %esp
  104a67:	3a 22                	cmp    (%edx),%ah
  104a69:	7e 00                	jle    104a6b <scancode_to_ascii_shift+0x2b>
  104a6b:	7c 5a                	jl     104ac7 <scancode_to_ascii+0x47>
  104a6d:	58                   	pop    %eax
  104a6e:	43                   	inc    %ebx
  104a6f:	56                   	push   %esi
  104a70:	42                   	inc    %edx
  104a71:	4e                   	dec    %esi
  104a72:	4d                   	dec    %ebp
  104a73:	3c 3e                	cmp    $0x3e,%al
  104a75:	3f                   	aas
  104a76:	00 2a                	add    %ch,(%edx)
  104a78:	00 20                	add    %ah,(%eax)
  104a7a:	00 00                	add    %al,(%eax)
  104a7c:	00 00                	add    %al,(%eax)
	...

00104a80 <scancode_to_ascii>:
static const char scancode_to_ascii[] = {
  104a80:	00 00                	add    %al,(%eax)
  104a82:	31 32                	xor    %esi,(%edx)
  104a84:	33 34 35 36 37 38 39 	xor    0x39383736(,%esi,1),%esi
  104a8b:	30 2d 3d 08 09 71    	xor    %ch,0x7109083d
  104a91:	77 65                	ja     104af8 <scancode_to_ascii+0x78>
  104a93:	72 74                	jb     104b09 <scancode_to_ascii+0x89>
  104a95:	79 75                	jns    104b0c <scancode_to_ascii+0x8c>
  104a97:	69 6f 70 5b 5d 0a 00 	imul   $0xa5d5b,0x70(%edi),%ebp
  104a9e:	61                   	popa
  104a9f:	73 64                	jae    104b05 <scancode_to_ascii+0x85>
  104aa1:	66 67 68 6a 6b       	addr16 pushw $0x6b6a
  104aa6:	6c                   	insb   (%dx),%es:(%edi)
  104aa7:	3b 27                	cmp    (%edi),%esp
  104aa9:	60                   	pusha
  104aaa:	00 5c 7a 78          	add    %bl,0x78(%edx,%edi,2)
  104aae:	63 76 62             	arpl   %esi,0x62(%esi)
  104ab1:	6e                   	outsb  %ds:(%esi),(%dx)
  104ab2:	6d                   	insl   (%dx),%es:(%edi)
  104ab3:	2c 2e                	sub    $0x2e,%al
  104ab5:	2f                   	das
  104ab6:	00 2a                	add    %ch,(%edx)
  104ab8:	00 20                	add    %ah,(%eax)

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	da 02                	fiaddl (%edx)
       2:	00 00                	add    %al,(%eax)
       4:	05 00 01 04 00       	add    $0x40100,%eax
       9:	00 00                	add    %al,(%eax)
       b:	00 0a                	add    %cl,(%edx)
       d:	30 00                	xor    %al,(%eax)
       f:	00 00                	add    %al,(%eax)
      11:	1d 1b 00 00 00       	sbb    $0x1b,%eax
      16:	00 00                	add    %al,(%eax)
      18:	00 00                	add    %al,(%eax)
      1a:	10 00                	adc    %al,(%eax)
      1c:	10 00                	adc    %al,(%eax)
      1e:	d1 00                	roll   $1,(%eax)
      20:	00 00                	add    %al,(%eax)
      22:	00 00                	add    %al,(%eax)
      24:	00 00                	add    %al,(%eax)
      26:	06                   	push   %es
      27:	a1 00 00 00 04       	mov    0x4000000,%eax
      2c:	17                   	pop    %ss
      2d:	31 00                	xor    %eax,(%eax)
      2f:	00 00                	add    %al,(%eax)
      31:	03 01                	add    (%ecx),%eax
      33:	08 a9 00 00 00 06    	or     %ch,0x6000000(%ecx)
      39:	14 01                	adc    $0x1,%al
      3b:	00 00                	add    %al,(%eax)
      3d:	05 18 43 00 00       	add    $0x4318,%eax
      42:	00 03                	add    %al,(%ebx)
      44:	02 07                	add    (%edi),%al
      46:	f3 00 00             	repz add %al,(%eax)
      49:	00 06                	add    %al,(%esi)
      4b:	b7 00                	mov    $0x0,%bh
      4d:	00 00                	add    %al,(%eax)
      4f:	06                   	push   %es
      50:	16                   	push   %ss
      51:	55                   	push   %ebp
      52:	00 00                	add    %al,(%eax)
      54:	00 03                	add    %al,(%ebx)
      56:	04 07                	add    $0x7,%al
      58:	2f                   	das
      59:	04 00                	add    $0x0,%al
      5b:	00 03                	add    %al,(%ebx)
      5d:	04 07                	add    $0x7,%al
      5f:	2a 04 00             	sub    (%eax,%eax,1),%al
      62:	00 03                	add    %al,(%ebx)
      64:	01 06                	add    %eax,(%esi)
      66:	b2 00                	mov    $0x0,%dl
      68:	00 00                	add    %al,(%eax)
      6a:	03 02                	add    (%edx),%eax
      6c:	05 1d 01 00 00       	add    $0x11d,%eax
      71:	0b 04 05 69 6e 74 00 	or     0x746e69(,%eax,1),%eax
      78:	03 04 05 c0 00 00 00 	add    0xc0(,%eax,1),%eax
      7f:	07                   	pop    %es
      80:	26 00 00             	add    %al,%es:(%eax)
      83:	00 08                	add    %cl,(%eax)
      85:	05 d3 00 00 00       	add    $0xd3,%eax
      8a:	02 c9                	add    %cl,%cl
      8c:	00 00                	add    %al,(%eax)
      8e:	00 06                	add    %al,(%esi)
      90:	0e                   	push   %cs
      91:	38 00                	cmp    %al,(%eax)
      93:	00 00                	add    %al,(%eax)
      95:	00 02                	add    %al,(%edx)
      97:	06                   	push   %es
      98:	01 00                	add    %eax,(%eax)
      9a:	00 07                	add    %al,(%edi)
      9c:	0e                   	push   %cs
      9d:	38 00                	cmp    %al,(%eax)
      9f:	00 00                	add    %al,(%eax)
      a1:	02 02                	add    (%edx),%al
      a3:	dd 00                	fldl   (%eax)
      a5:	00 00                	add    %al,(%eax)
      a7:	08 0d 26 00 00 00    	or     %cl,0x26
      ad:	04 02                	add    $0x2,%al
      af:	15 00 00 00 09       	adc    $0x9000000,%eax
      b4:	0d 26 00 00 00       	or     $0x26,%eax
      b9:	05 02 09 00 00       	add    $0x902,%eax
      be:	00 0a                	add    %cl,(%edx)
      c0:	0d 26 00 00 00       	or     $0x26,%eax
      c5:	06                   	push   %es
      c6:	02 d3                	add    %bl,%dl
      c8:	00 00                	add    %al,(%eax)
      ca:	00 0b                	add    %cl,(%ebx)
      cc:	0d 26 00 00 00       	or     $0x26,%eax
      d1:	07                   	pop    %es
      d2:	00 07                	add    %al,(%edi)
      d4:	27                   	daa
      d5:	01 00                	add    %eax,(%eax)
      d7:	00 06                	add    %al,(%esi)
      d9:	0f                   	maskmovq (bad),%mm0
      da:	f7 00 00 00 02 1c    	testl  $0x1c020000,(%eax)
      e0:	00 00                	add    %al,(%eax)
      e2:	00 10                	add    %dl,(%eax)
      e4:	0e                   	push   %cs
      e5:	38 00                	cmp    %al,(%eax)
      e7:	00 00                	add    %al,(%eax)
      e9:	00 02                	add    %al,(%edx)
      eb:	0f 01 00             	sgdtl  (%eax)
      ee:	00 11                	add    %dl,(%ecx)
      f0:	0e                   	push   %cs
      f1:	4a                   	dec    %edx
      f2:	00 00                	add    %al,(%eax)
      f4:	00 02                	add    %al,(%edx)
      f6:	00 0c 7f             	add    %cl,(%edi,%edi,2)
      f9:	00 00                	add    %al,(%eax)
      fb:	00 07                	add    %al,(%edi)
      fd:	01 00                	add    %eax,(%eax)
      ff:	00 0d 5c 00 00 00    	add    %cl,0x5c
     105:	02 00                	add    (%eax),%al
     107:	08 67 64             	or     %ah,0x64(%edi)
     10a:	74 00                	je     10c <MBOOT_HEADER_FLAGS+0x109>
     10c:	15 12 f7 00 00       	adc    $0xf712,%eax
     111:	00 05 03 08 50 10    	add    %al,0x10500803
     117:	00 08                	add    %cl,(%eax)
     119:	67 70 00             	addr16 jo 11c <MBOOT_HEADER_FLAGS+0x119>
     11c:	16                   	push   %ss
     11d:	10 d3                	adc    %dl,%bl
     11f:	00 00                	add    %al,(%eax)
     121:	00 05 03 00 50 10    	add    %al,0x10500003
     127:	00 0e                	add    %cl,(%esi)
     129:	e9 00 00 00 01       	jmp    100012e <stack_top+0xdf44be>
     12e:	18 0d 3a 01 00 00    	sbb    %cl,0x13a
     134:	0f 4a 00             	cmovp  (%eax),%eax
     137:	00 00                	add    %al,(%eax)
     139:	00 10                	add    %dl,(%eax)
     13b:	00 00                	add    %al,(%eax)
     13d:	00 00                	add    %al,(%eax)
     13f:	01 27                	add    %esp,(%edi)
     141:	06                   	push   %es
     142:	80 00 10             	addb   $0x10,(%eax)
     145:	00 61 00             	add    %ah,0x0(%ecx)
     148:	00 00                	add    %al,(%eax)
     14a:	01 9c 63 02 00 00 11 	add    %ebx,0x11000002(%ebx,%eiz,2)
     151:	63 02                	arpl   %eax,(%edx)
     153:	00 00                	add    %al,(%eax)
     155:	96                   	xchg   %eax,%esi
     156:	00 10                	add    %dl,(%eax)
     158:	00 01                	add    %al,(%ecx)
     15a:	0c 00                	or     $0x0,%al
     15c:	00 00                	add    %al,(%eax)
     15e:	01 2c 05 a7 01 00 00 	add    %ebp,0x1a7(,%eax,1)
     165:	01 70 02             	add    %esi,0x2(%eax)
     168:	00 00                	add    %al,(%eax)
     16a:	0e                   	push   %cs
     16b:	00 00                	add    %al,(%eax)
     16d:	00 0c 00             	add    %cl,(%eax,%eax,1)
     170:	00 00                	add    %al,(%eax)
     172:	01 7c 02 00          	add    %edi,0x0(%edx,%eax,1)
     176:	00 0e                	add    %cl,(%esi)
     178:	00 00                	add    %al,(%eax)
     17a:	00 0c 00             	add    %cl,(%eax,%eax,1)
     17d:	00 00                	add    %al,(%eax)
     17f:	01 86 02 00 00 0e    	add    %eax,0xe000002(%esi)
     185:	00 00                	add    %al,(%eax)
     187:	00 0c 00             	add    %cl,(%eax,%eax,1)
     18a:	00 00                	add    %al,(%eax)
     18c:	01 90 02 00 00 0e    	add    %edx,0xe000002(%eax)
     192:	00 00                	add    %al,(%eax)
     194:	00 0c 00             	add    %cl,(%eax,%eax,1)
     197:	00 00                	add    %al,(%eax)
     199:	01 9a 02 00 00 0e    	add    %ebx,0xe000002(%edx)
     19f:	00 00                	add    %al,(%eax)
     1a1:	00 0c 00             	add    %cl,(%eax,%eax,1)
     1a4:	00 00                	add    %al,(%eax)
     1a6:	00 09                	add    %cl,(%ecx)
     1a8:	63 02                	arpl   %eax,(%edx)
     1aa:	00 00                	add    %al,(%eax)
     1ac:	b1 00                	mov    $0x0,%cl
     1ae:	10 00                	adc    %al,(%eax)
     1b0:	02 b1 00 10 00 14    	add    0x14001000(%ecx),%dh
     1b6:	00 00                	add    %al,(%eax)
     1b8:	00 2f                	add    %ch,(%edi)
     1ba:	00 02                	add    %al,(%edx)
     1bc:	00 00                	add    %al,(%eax)
     1be:	01 70 02             	add    %esi,0x2(%eax)
     1c1:	00 00                	add    %al,(%eax)
     1c3:	19 00                	sbb    %eax,(%eax)
     1c5:	00 00                	add    %al,(%eax)
     1c7:	17                   	pop    %ss
     1c8:	00 00                	add    %al,(%eax)
     1ca:	00 01                	add    %al,(%ecx)
     1cc:	7c 02                	jl     1d0 <MBOOT_HEADER_FLAGS+0x1cd>
     1ce:	00 00                	add    %al,(%eax)
     1d0:	24 00                	and    $0x0,%al
     1d2:	00 00                	add    %al,(%eax)
     1d4:	22 00                	and    (%eax),%al
     1d6:	00 00                	add    %al,(%eax)
     1d8:	01 86 02 00 00 2f    	add    %eax,0x2f000002(%esi)
     1de:	00 00                	add    %al,(%eax)
     1e0:	00 2d 00 00 00 01    	add    %ch,0x1000000
     1e6:	90                   	nop
     1e7:	02 00                	add    (%eax),%al
     1e9:	00 3e                	add    %bh,(%esi)
     1eb:	00 00                	add    %al,(%eax)
     1ed:	00 3c 00             	add    %bh,(%eax,%eax,1)
     1f0:	00 00                	add    %al,(%eax)
     1f2:	01 9a 02 00 00 4a    	add    %ebx,0x4a000002(%edx)
     1f8:	00 00                	add    %al,(%eax)
     1fa:	00 48 00             	add    %cl,0x0(%eax)
     1fd:	00 00                	add    %al,(%eax)
     1ff:	00 09                	add    %cl,(%ecx)
     201:	63 02                	arpl   %eax,(%edx)
     203:	00 00                	add    %al,(%eax)
     205:	c5 00                	lds    (%eax),%eax
     207:	10 00                	adc    %al,(%eax)
     209:	02 c5                	add    %ch,%al
     20b:	00 10                	add    %dl,(%eax)
     20d:	00 14 00             	add    %dl,(%eax,%eax,1)
     210:	00 00                	add    %al,(%eax)
     212:	32 59 02             	xor    0x2(%ecx),%bl
     215:	00 00                	add    %al,(%eax)
     217:	01 70 02             	add    %esi,0x2(%eax)
     21a:	00 00                	add    %al,(%eax)
     21c:	56                   	push   %esi
     21d:	00 00                	add    %al,(%eax)
     21f:	00 54 00 00          	add    %dl,0x0(%eax,%eax,1)
     223:	00 01                	add    %al,(%ecx)
     225:	7c 02                	jl     229 <MBOOT_HEADER_FLAGS+0x226>
     227:	00 00                	add    %al,(%eax)
     229:	61                   	popa
     22a:	00 00                	add    %al,(%eax)
     22c:	00 5f 00             	add    %bl,0x0(%edi)
     22f:	00 00                	add    %al,(%eax)
     231:	01 86 02 00 00 6c    	add    %eax,0x6c000002(%esi)
     237:	00 00                	add    %al,(%eax)
     239:	00 6a 00             	add    %ch,0x0(%edx)
     23c:	00 00                	add    %al,(%eax)
     23e:	01 90 02 00 00 7b    	add    %edx,0x7b000002(%eax)
     244:	00 00                	add    %al,(%eax)
     246:	00 79 00             	add    %bh,0x0(%ecx)
     249:	00 00                	add    %al,(%eax)
     24b:	01 9a 02 00 00 87    	add    %ebx,-0x78fffffe(%edx)
     251:	00 00                	add    %al,(%eax)
     253:	00 85 00 00 00 00    	add    %al,0x0(%ebp)
     259:	12 de                	adc    %dh,%bl
     25b:	00 10                	add    %dl,(%eax)
     25d:	00 28                	add    %ch,(%eax)
     25f:	01 00                	add    %eax,(%eax)
     261:	00 00                	add    %al,(%eax)
     263:	13 22                	adc    (%edx),%esp
     265:	00 00                	add    %al,(%eax)
     267:	00 01                	add    %al,(%ecx)
     269:	1b 06                	sbb    (%esi),%eax
     26b:	01 a5 02 00 00 14    	add    %esp,0x14000002(%ebp)
     271:	6e                   	outsb  %ds:(%esi),(%dx)
     272:	75 6d                	jne    2e1 <MBOOT_HEADER_FLAGS+0x2de>
     274:	00 01                	add    %al,(%ecx)
     276:	1b 18                	sbb    (%eax),%ebx
     278:	71 00                	jno    27a <MBOOT_HEADER_FLAGS+0x277>
     27a:	00 00                	add    %al,(%eax)
     27c:	05 0f 01 00 00       	add    $0x10f,%eax
     281:	26 4a                	es dec %edx
     283:	00 00                	add    %al,(%eax)
     285:	00 05 1c 00 00 00    	add    %al,0x1c
     28b:	35 4a 00 00 00       	xor    $0x4a,%eax
     290:	05 15 00 00 00       	add    $0x15,%eax
     295:	44                   	inc    %esp
     296:	26 00 00             	add    %al,%es:(%eax)
     299:	00 05 09 00 00 00    	add    %al,0x9
     29f:	54                   	push   %esp
     2a0:	26 00 00             	add    %al,%es:(%eax)
     2a3:	00 00                	add    %al,(%eax)
     2a5:	15 63 02 00 00       	adc    $0x263,%eax
     2aa:	10 00                	adc    %al,(%eax)
     2ac:	10 00                	adc    %al,(%eax)
     2ae:	6f                   	outsl  %ds:(%esi),(%dx)
     2af:	00 00                	add    %al,(%eax)
     2b1:	00 01                	add    %al,(%ecx)
     2b3:	9c                   	pushf
     2b4:	04 70                	add    $0x70,%al
     2b6:	02 00                	add    (%eax),%al
     2b8:	00 02                	add    %al,(%edx)
     2ba:	91                   	xchg   %eax,%ecx
     2bb:	00 04 7c             	add    %al,(%esp,%edi,2)
     2be:	02 00                	add    (%eax),%al
     2c0:	00 02                	add    %al,(%edx)
     2c2:	91                   	xchg   %eax,%ecx
     2c3:	04 04                	add    $0x4,%al
     2c5:	86 02                	xchg   %al,(%edx)
     2c7:	00 00                	add    %al,(%eax)
     2c9:	02 91 08 04 90 02    	add    0x2900408(%ecx),%dl
     2cf:	00 00                	add    %al,(%eax)
     2d1:	02 91 0c 04 9a 02    	add    0x29a040c(%ecx),%dl
     2d7:	00 00                	add    %al,(%eax)
     2d9:	02 91 10 00 00 d1    	add    -0x2efffff0(%ecx),%dl
     2df:	02 00                	add    (%eax),%al
     2e1:	00 05 00 01 04 4c    	add    %al,0x4c040100
     2e7:	01 00                	add    %eax,(%eax)
     2e9:	00 0c 30             	add    %cl,(%eax,%esi,1)
     2ec:	00 00                	add    %al,(%eax)
     2ee:	00 1d 37 00 00 00    	add    %bl,0x37
     2f4:	00 00                	add    %al,(%eax)
     2f6:	00 00                	add    %al,(%eax)
     2f8:	f0 00 10             	lock add %dl,(%eax)
     2fb:	00 04 01             	add    %al,(%ecx,%eax,1)
     2fe:	00 00                	add    %al,(%eax)
     300:	23 01                	and    (%ecx),%eax
     302:	00 00                	add    %al,(%eax)
     304:	06                   	push   %es
     305:	a1 00 00 00 04       	mov    0x4000000,%eax
     30a:	17                   	pop    %ss
     30b:	31 00                	xor    %eax,(%eax)
     30d:	00 00                	add    %al,(%eax)
     30f:	02 01                	add    (%ecx),%al
     311:	08 a9 00 00 00 06    	or     %ch,0x6000000(%ecx)
     317:	14 01                	adc    $0x1,%al
     319:	00 00                	add    %al,(%eax)
     31b:	05 18 43 00 00       	add    $0x4318,%eax
     320:	00 02                	add    %al,(%edx)
     322:	02 07                	add    (%edi),%al
     324:	f3 00 00             	repz add %al,(%eax)
     327:	00 06                	add    %al,(%esi)
     329:	b7 00                	mov    $0x0,%bh
     32b:	00 00                	add    %al,(%eax)
     32d:	06                   	push   %es
     32e:	16                   	push   %ss
     32f:	55                   	push   %ebp
     330:	00 00                	add    %al,(%eax)
     332:	00 02                	add    %al,(%edx)
     334:	04 07                	add    $0x7,%al
     336:	2f                   	das
     337:	04 00                	add    $0x0,%al
     339:	00 02                	add    %al,(%edx)
     33b:	04 07                	add    $0x7,%al
     33d:	2a 04 00             	sub    (%eax,%eax,1),%al
     340:	00 02                	add    %al,(%edx)
     342:	01 06                	add    %eax,(%esi)
     344:	b2 00                	mov    $0x0,%dl
     346:	00 00                	add    %al,(%eax)
     348:	02 02                	add    (%edx),%al
     34a:	05 1d 01 00 00       	add    $0x11d,%eax
     34f:	0d 04 05 69 6e       	or     $0x6e690504,%eax
     354:	74 00                	je     356 <MBOOT_HEADER_FLAGS+0x353>
     356:	02 04 05 c0 00 00 00 	add    0xc0(,%eax,1),%al
     35d:	08 56 01             	or     %dl,0x1(%esi)
     360:	00 00                	add    %al,(%eax)
     362:	08 05 c7 00 00 00    	or     %al,0xc7
     368:	03 8b 01 00 00 06    	add    0x6000001(%ebx),%ecx
     36e:	0e                   	push   %cs
     36f:	38 00                	cmp    %al,(%eax)
     371:	00 00                	add    %al,(%eax)
     373:	00 03                	add    %al,(%ebx)
     375:	60                   	pusha
     376:	01 00                	add    %eax,(%eax)
     378:	00 07                	add    %al,(%edi)
     37a:	0e                   	push   %cs
     37b:	38 00                	cmp    %al,(%eax)
     37d:	00 00                	add    %al,(%eax)
     37f:	02 03                	add    (%ebx),%al
     381:	69 01 00 00 08 0d    	imul   $0xd080000,(%ecx),%eax
     387:	26 00 00             	add    %al,%es:(%eax)
     38a:	00 04 03             	add    %al,(%ebx,%eax,1)
     38d:	81 01 00 00 09 0d    	addl   $0xd090000,(%ecx)
     393:	26 00 00             	add    %al,%es:(%eax)
     396:	00 05 03 45 01 00    	add    %al,0x14503
     39c:	00 0a                	add    %cl,(%edx)
     39e:	0e                   	push   %cs
     39f:	38 00                	cmp    %al,(%eax)
     3a1:	00 00                	add    %al,(%eax)
     3a3:	06                   	push   %es
     3a4:	00 08                	add    %cl,(%eax)
     3a6:	74 01                	je     3a9 <MBOOT_HEADER_FLAGS+0x3a6>
     3a8:	00 00                	add    %al,(%eax)
     3aa:	06                   	push   %es
     3ab:	0e                   	push   %cs
     3ac:	eb 00                	jmp    3ae <MBOOT_HEADER_FLAGS+0x3ab>
     3ae:	00 00                	add    %al,(%eax)
     3b0:	03 1c 00             	add    (%eax,%eax,1),%ebx
     3b3:	00 00                	add    %al,(%eax)
     3b5:	0f 0e                	femms
     3b7:	38 00                	cmp    %al,(%eax)
     3b9:	00 00                	add    %al,(%eax)
     3bb:	00 03                	add    %al,(%ebx)
     3bd:	0f 01 00             	sgdtl  (%eax)
     3c0:	00 10                	add    %dl,(%eax)
     3c2:	0e                   	push   %cs
     3c3:	4a                   	dec    %edx
     3c4:	00 00                	add    %al,(%eax)
     3c6:	00 02                	add    %al,(%edx)
     3c8:	00 0e                	add    %cl,(%esi)
     3ca:	7f 00                	jg     3cc <MBOOT_HEADER_FLAGS+0x3c9>
     3cc:	00 00                	add    %al,(%eax)
     3ce:	fb                   	sti
     3cf:	00 00                	add    %al,(%eax)
     3d1:	00 0f                	add    %cl,(%edi)
     3d3:	5c                   	pop    %esp
     3d4:	00 00                	add    %al,(%eax)
     3d6:	00 ff                	add    %bh,%bh
     3d8:	00 10                	add    %dl,(%eax)
     3da:	69 64 74 00 01 14 12 	imul   $0xeb121401,0x0(%esp,%esi,2),%esp
     3e1:	eb 
     3e2:	00 00                	add    %al,(%eax)
     3e4:	00 05 03 40 50 10    	add    %al,0x10504003
     3ea:	00 11                	add    %dl,(%ecx)
     3ec:	7c 01                	jl     3ef <MBOOT_HEADER_FLAGS+0x3ec>
     3ee:	00 00                	add    %al,(%eax)
     3f0:	01 15 10 c7 00 00    	add    %edx,0xc710
     3f6:	00 05 03 20 50 10    	add    %al,0x10502003
     3fc:	00 12                	add    %dl,(%edx)
     3fe:	96                   	xchg   %eax,%esi
     3ff:	01 00                	add    %eax,(%eax)
     401:	00 01                	add    %al,(%ecx)
     403:	17                   	pop    %ss
     404:	0d 31 01 00 00       	or     $0x131,%eax
     409:	13 4a 00             	adc    0x0(%edx),%ecx
     40c:	00 00                	add    %al,(%eax)
     40e:	00 04 6e             	add    %al,(%esi,%ebp,2)
     411:	01 00                	add    %eax,(%eax)
     413:	00 2e                	add    %ch,(%esi)
     415:	3d 01 00 00 05       	cmp    $0x5000001,%eax
     41a:	00 04 51             	add    %al,(%ecx,%edx,2)
     41d:	01 00                	add    %eax,(%eax)
     41f:	00 2d 49 01 00 00    	add    %ch,0x149
     425:	05 00 14 3c 01       	add    $0x13c1400,%eax
     42a:	00 00                	add    %al,(%eax)
     42c:	01 23                	add    %esp,(%ebx)
     42e:	06                   	push   %es
     42f:	30 01                	xor    %al,(%ecx)
     431:	10 00                	adc    %al,(%eax)
     433:	c4 00                	les    (%eax),%eax
     435:	00 00                	add    %al,(%eax)
     437:	01 9c 5f 02 00 00 04 	add    %ebx,0x4000002(%edi,%ebx,2)
     43e:	51                   	push   %ecx
     43f:	01 00                	add    %eax,(%eax)
     441:	00 2d 6b 01 00 00    	add    %ch,0x16b
     447:	05 00 04 6e 01       	add    $0x16e0400,%eax
     44c:	00 00                	add    %al,(%eax)
     44e:	2e 77 01             	ja,pn  452 <MBOOT_HEADER_FLAGS+0x44f>
     451:	00 00                	add    %al,(%eax)
     453:	05 00 15 23 00       	add    $0x231500,%eax
     458:	00 00                	add    %al,(%eax)
     45a:	d5 01                	aad    $0x1
     45c:	00 00                	add    %al,(%eax)
     45e:	16                   	push   %ss
     45f:	69 00 01 28 0e 71    	imul   $0x710e2801,(%eax),%eax
     465:	00 00                	add    %al,(%eax)
     467:	00 9f 00 00 00 9d    	add    %bl,-0x63000000(%edi)
     46d:	00 00                	add    %al,(%eax)
     46f:	00 17                	add    %dl,(%edi)
     471:	5f                   	pop    %edi
     472:	02 00                	add    (%eax),%al
     474:	00 60 01             	add    %ah,0x1(%eax)
     477:	10 00                	adc    %al,(%eax)
     479:	01 60 01             	add    %esp,0x1(%eax)
     47c:	10 00                	adc    %al,(%eax)
     47e:	47                   	inc    %edi
     47f:	00 00                	add    %al,(%eax)
     481:	00 01                	add    %al,(%ecx)
     483:	29 09                	sub    %ecx,(%ecx)
     485:	07                   	pop    %es
     486:	6c                   	insb   (%dx),%es:(%edi)
     487:	02 00                	add    (%eax),%al
     489:	00 01                	add    %al,(%ecx)
     48b:	76 02                	jbe    48f <MBOOT_HEADER_FLAGS+0x48c>
     48d:	00 00                	add    %al,(%eax)
     48f:	a8 00                	test   $0x0,%al
     491:	00 00                	add    %al,(%eax)
     493:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
     494:	00 00                	add    %al,(%eax)
     496:	00 01                	add    %al,(%ecx)
     498:	80 02 00             	addb   $0x0,(%edx)
     49b:	00 b2 00 00 00 b0    	add    %dh,-0x50000000(%edx)
     4a1:	00 00                	add    %al,(%eax)
     4a3:	00 01                	add    %al,(%ecx)
     4a5:	8a 02                	mov    (%edx),%al
     4a7:	00 00                	add    %al,(%eax)
     4a9:	a8 00                	test   $0x0,%al
     4ab:	00 00                	add    %al,(%eax)
     4ad:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
     4ae:	00 00                	add    %al,(%eax)
     4b0:	00 00                	add    %al,(%eax)
     4b2:	00 09                	add    %cl,(%ecx)
     4b4:	5f                   	pop    %edi
     4b5:	02 00                	add    (%eax),%al
     4b7:	00 b0 01 10 00 00    	add    %dh,0x1001(%eax)
     4bd:	2b 00                	sub    (%eax),%eax
     4bf:	00 00                	add    %al,(%eax)
     4c1:	2f                   	das
     4c2:	15 02 00 00 01       	adc    $0x1000002,%eax
     4c7:	6c                   	insb   (%dx),%es:(%edi)
     4c8:	02 00                	add    (%eax),%al
     4ca:	00 bc 00 00 00 ba 00 	add    %bh,0xba0000(%eax,%eax,1)
     4d1:	00 00                	add    %al,(%eax)
     4d3:	07                   	pop    %es
     4d4:	76 02                	jbe    4d8 <MBOOT_HEADER_FLAGS+0x4d5>
     4d6:	00 00                	add    %al,(%eax)
     4d8:	01 80 02 00 00 c7    	add    %eax,-0x38fffffe(%eax)
     4de:	00 00                	add    %al,(%eax)
     4e0:	00 c5                	add    %al,%ch
     4e2:	00 00                	add    %al,(%eax)
     4e4:	00 01                	add    %al,(%ecx)
     4e6:	8a 02                	mov    (%edx),%al
     4e8:	00 00                	add    %al,(%eax)
     4ea:	d2 00                	rolb   %cl,(%eax)
     4ec:	00 00                	add    %al,(%eax)
     4ee:	d0 00                	rolb   $1,(%eax)
     4f0:	00 00                	add    %al,(%eax)
     4f2:	00 09                	add    %cl,(%ecx)
     4f4:	5f                   	pop    %edi
     4f5:	02 00                	add    (%eax),%al
     4f7:	00 e2                	add    %ah,%dl
     4f9:	01 10                	add    %edx,(%eax)
     4fb:	00 03                	add    %al,(%ebx)
     4fd:	3b 00                	cmp    (%eax),%eax
     4ff:	00 00                	add    %al,(%eax)
     501:	30 55 02             	xor    %dl,0x2(%ebp)
     504:	00 00                	add    %al,(%eax)
     506:	01 6c 02 00          	add    %ebp,0x0(%edx,%eax,1)
     50a:	00 de                	add    %bl,%dh
     50c:	00 00                	add    %al,(%eax)
     50e:	00 dc                	add    %bl,%ah
     510:	00 00                	add    %al,(%eax)
     512:	00 07                	add    %al,(%edi)
     514:	76 02                	jbe    518 <MBOOT_HEADER_FLAGS+0x515>
     516:	00 00                	add    %al,(%eax)
     518:	01 80 02 00 00 ea    	add    %eax,-0x15fffffe(%eax)
     51e:	00 00                	add    %al,(%eax)
     520:	00 e8                	add    %ch,%al
     522:	00 00                	add    %al,(%eax)
     524:	00 01                	add    %al,(%ecx)
     526:	8a 02                	mov    (%edx),%al
     528:	00 00                	add    %al,(%eax)
     52a:	f5                   	cmc
     52b:	00 00                	add    %al,(%eax)
     52d:	00 f3                	add    %dh,%bl
     52f:	00 00                	add    %al,(%eax)
     531:	00 00                	add    %al,(%eax)
     533:	18 f1                	sbb    %dh,%cl
     535:	01 10                	add    %edx,(%eax)
     537:	00 1f                	add    %bl,(%edi)
     539:	01 00                	add    %eax,(%eax)
     53b:	00 00                	add    %al,(%eax)
     53d:	19 2f                	sbb    %ebp,(%edi)
     53f:	01 00                	add    %eax,(%eax)
     541:	00 01                	add    %al,(%ecx)
     543:	1a 06                	sbb    (%esi),%al
     545:	01 95 02 00 00 0a    	add    %edx,0xa000002(%ebp)
     54b:	6e                   	outsb  %ds:(%esi),(%dx)
     54c:	75 6d                	jne    5bb <MBOOT_HEADER_FLAGS+0x5b8>
     54e:	00 17                	add    %dl,(%edi)
     550:	71 00                	jno    552 <MBOOT_HEADER_FLAGS+0x54f>
     552:	00 00                	add    %al,(%eax)
     554:	0b 0f                	or     (%edi),%ecx
     556:	01 00                	add    %eax,(%eax)
     558:	00 25 4a 00 00 00    	add    %ah,0x4a
     55e:	0a 73 65             	or     0x65(%ebx),%dh
     561:	6c                   	insb   (%dx),%es:(%edi)
     562:	00 34 38             	add    %dh,(%eax,%edi,1)
     565:	00 00                	add    %al,(%eax)
     567:	00 0b                	add    %cl,(%ebx)
     569:	96                   	xchg   %eax,%esi
     56a:	07                   	pop    %es
     56b:	00 00                	add    %al,(%eax)
     56d:	41                   	inc    %ecx
     56e:	26 00 00             	add    %al,%es:(%eax)
     571:	00 00                	add    %al,(%eax)
     573:	1a 5f 02             	sbb    0x2(%edi),%bl
     576:	00 00                	add    %al,(%eax)
     578:	f0 00 10             	lock add %dl,(%eax)
     57b:	00 3f                	add    %bh,(%edi)
     57d:	00 00                	add    %al,(%eax)
     57f:	00 01                	add    %al,(%ecx)
     581:	9c                   	pushf
     582:	1b 6c 02 00          	sbb    0x0(%edx,%eax,1),%ebp
     586:	00 02                	add    %al,(%edx)
     588:	91                   	xchg   %eax,%ecx
     589:	00 01                	add    %al,(%ecx)
     58b:	76 02                	jbe    58f <MBOOT_HEADER_FLAGS+0x58c>
     58d:	00 00                	add    %al,(%eax)
     58f:	03 01                	add    (%ecx),%eax
     591:	00 00                	add    %al,(%eax)
     593:	ff 00                	incl   (%eax)
     595:	00 00                	add    %al,(%eax)
     597:	01 80 02 00 00 14    	add    %eax,0x14000002(%eax)
     59d:	01 00                	add    %eax,(%eax)
     59f:	00 10                	add    %dl,(%eax)
     5a1:	01 00                	add    %eax,(%eax)
     5a3:	00 01                	add    %al,(%ecx)
     5a5:	8a 02                	mov    (%edx),%al
     5a7:	00 00                	add    %al,(%eax)
     5a9:	25 01 00 00 21       	and    $0x21000001,%eax
     5ae:	01 00                	add    %eax,(%eax)
     5b0:	00 00                	add    %al,(%eax)
     5b2:	00 fe                	add    %bh,%dh
     5b4:	01 00                	add    %eax,(%eax)
     5b6:	00 05 00 01 04 e8    	add    %al,0xe8040100
     5bc:	02 00                	add    (%eax),%al
     5be:	00 0a                	add    %cl,(%edx)
     5c0:	30 00                	xor    %al,(%eax)
     5c2:	00 00                	add    %al,(%eax)
     5c4:	1d 44 00 00 00       	sbb    $0x44,%eax
     5c9:	00 00                	add    %al,(%eax)
     5cb:	00 00                	add    %al,(%eax)
     5cd:	00 02                	add    %al,(%edx)
     5cf:	10 00                	adc    %al,(%eax)
     5d1:	5a                   	pop    %edx
     5d2:	00 00                	add    %al,(%eax)
     5d4:	00 67 02             	add    %ah,0x2(%edi)
     5d7:	00 00                	add    %al,(%eax)
     5d9:	02 01                	add    (%ecx),%al
     5db:	08 a9 00 00 00 02    	or     %ch,0x2000000(%ecx)
     5e1:	02 07                	add    (%edi),%al
     5e3:	f3 00 00             	repz add %al,(%eax)
     5e6:	00 0b                	add    %cl,(%ebx)
     5e8:	b7 00                	mov    $0x0,%bh
     5ea:	00 00                	add    %al,(%eax)
     5ec:	04 06                	add    $0x6,%al
     5ee:	16                   	push   %ss
     5ef:	40                   	inc    %eax
     5f0:	00 00                	add    %al,(%eax)
     5f2:	00 02                	add    %al,(%edx)
     5f4:	04 07                	add    $0x7,%al
     5f6:	2f                   	das
     5f7:	04 00                	add    $0x0,%al
     5f9:	00 02                	add    %al,(%edx)
     5fb:	04 07                	add    $0x7,%al
     5fd:	2a 04 00             	sub    (%eax,%eax,1),%al
     600:	00 02                	add    %al,(%edx)
     602:	01 06                	add    %eax,(%esi)
     604:	b2 00                	mov    $0x0,%dl
     606:	00 00                	add    %al,(%eax)
     608:	0c 4e                	or     $0x4e,%al
     60a:	00 00                	add    %al,(%eax)
     60c:	00 02                	add    %al,(%edx)
     60e:	02 05 1d 01 00 00    	add    0x11d,%al
     614:	0d 04 05 69 6e       	or     $0x6e690504,%eax
     619:	74 00                	je     61b <MBOOT_HEADER_FLAGS+0x618>
     61b:	02 04 05 c0 00 00 00 	add    0xc0(,%eax,1),%al
     622:	0e                   	push   %cs
     623:	dd 01                	fldl   (%ecx)
     625:	00 00                	add    %al,(%eax)
     627:	4c                   	dec    %esp
     628:	02 06                	add    (%esi),%al
     62a:	08 5b 01             	or     %bl,0x1(%ebx)
     62d:	00 00                	add    %al,(%eax)
     62f:	01 67 73             	add    %esp,0x73(%edi)
     632:	00 07                	add    %al,(%edi)
     634:	0e                   	push   %cs
     635:	34 00                	xor    $0x0,%al
     637:	00 00                	add    %al,(%eax)
     639:	00 01                	add    %al,(%ecx)
     63b:	66 73 00             	data16 jae 63e <MBOOT_HEADER_FLAGS+0x63b>
     63e:	07                   	pop    %es
     63f:	12 34 00             	adc    (%eax,%eax,1),%dh
     642:	00 00                	add    %al,(%eax)
     644:	04 01                	add    $0x1,%al
     646:	65 73 00             	gs jae 649 <MBOOT_HEADER_FLAGS+0x646>
     649:	07                   	pop    %es
     64a:	16                   	push   %ss
     64b:	34 00                	xor    $0x0,%al
     64d:	00 00                	add    %al,(%eax)
     64f:	08 01                	or     %al,(%ecx)
     651:	64 73 00             	fs jae 654 <MBOOT_HEADER_FLAGS+0x651>
     654:	07                   	pop    %es
     655:	1a 34 00             	sbb    (%eax,%eax,1),%dh
     658:	00 00                	add    %al,(%eax)
     65a:	0c 01                	or     $0x1,%al
     65c:	65 64 69 00 08 0e 34 	gs imul $0x340e08,%fs:(%eax),%eax
     663:	00 
     664:	00 00                	add    %al,(%eax)
     666:	10 01                	adc    %al,(%ecx)
     668:	65 73 69             	gs jae 6d4 <MBOOT_HEADER_FLAGS+0x6d1>
     66b:	00 08                	add    %cl,(%eax)
     66d:	13 34 00             	adc    (%eax,%eax,1),%esi
     670:	00 00                	add    %al,(%eax)
     672:	14 01                	adc    $0x1,%al
     674:	65 62 70 00          	bound  %esi,%gs:0x0(%eax)
     678:	08 18                	or     %bl,(%eax)
     67a:	34 00                	xor    $0x0,%al
     67c:	00 00                	add    %al,(%eax)
     67e:	18 03                	sbb    %al,(%ebx)
     680:	f9                   	stc
     681:	01 00                	add    %eax,(%eax)
     683:	00 08                	add    %cl,(%eax)
     685:	1d 34 00 00 00       	sbb    $0x34,%eax
     68a:	1c 01                	sbb    $0x1,%al
     68c:	65 62 78 00          	bound  %edi,%gs:0x0(%eax)
     690:	08 2a                	or     %ch,(%edx)
     692:	34 00                	xor    $0x0,%al
     694:	00 00                	add    %al,(%eax)
     696:	20 01                	and    %al,(%ecx)
     698:	65 64 78 00          	gs fs js 69c <MBOOT_HEADER_FLAGS+0x699>
     69c:	08 2f                	or     %ch,(%edi)
     69e:	34 00                	xor    $0x0,%al
     6a0:	00 00                	add    %al,(%eax)
     6a2:	24 01                	and    $0x1,%al
     6a4:	65 63 78 00          	arpl   %edi,%gs:0x0(%eax)
     6a8:	08 34 34             	or     %dh,(%esp,%esi,1)
     6ab:	00 00                	add    %al,(%eax)
     6ad:	00 28                	add    %ch,(%eax)
     6af:	01 65 61             	add    %esp,0x61(%ebp)
     6b2:	78 00                	js     6b4 <MBOOT_HEADER_FLAGS+0x6b1>
     6b4:	08 39                	or     %bh,(%ecx)
     6b6:	34 00                	xor    $0x0,%al
     6b8:	00 00                	add    %al,(%eax)
     6ba:	2c 03                	sub    $0x3,%al
     6bc:	ca 01 00             	lret   $0x1
     6bf:	00 09                	add    %cl,(%ecx)
     6c1:	0e                   	push   %cs
     6c2:	34 00                	xor    $0x0,%al
     6c4:	00 00                	add    %al,(%eax)
     6c6:	30 03                	xor    %al,(%ebx)
     6c8:	f0 01 00             	lock add %eax,(%eax)
     6cb:	00 09                	add    %cl,(%ecx)
     6cd:	16                   	push   %ss
     6ce:	34 00                	xor    $0x0,%al
     6d0:	00 00                	add    %al,(%eax)
     6d2:	34 01                	xor    $0x1,%al
     6d4:	65 69 70 00 0a 0e 34 	imul   $0x340e0a,%gs:0x0(%eax),%esi
     6db:	00 
     6dc:	00 00                	add    %al,(%eax)
     6de:	38 01                	cmp    %al,(%ecx)
     6e0:	63 73 00             	arpl   %esi,0x0(%ebx)
     6e3:	0a 13                	or     (%ebx),%dl
     6e5:	34 00                	xor    $0x0,%al
     6e7:	00 00                	add    %al,(%eax)
     6e9:	3c 03                	cmp    $0x3,%al
     6eb:	e9 01 00 00 0a       	jmp    a0006f1 <stack_top+0x9df4a81>
     6f0:	17                   	pop    %ss
     6f1:	34 00                	xor    $0x0,%al
     6f3:	00 00                	add    %al,(%eax)
     6f5:	40                   	inc    %eax
     6f6:	03 a8 01 00 00 0a    	add    0xa000001(%eax),%ebp
     6fc:	1f                   	pop    %ds
     6fd:	34 00                	xor    $0x0,%al
     6ff:	00 00                	add    %al,(%eax)
     701:	44                   	inc    %esp
     702:	01 73 73             	add    %esi,0x73(%ebx)
     705:	00 0a                	add    %cl,(%edx)
     707:	28 34 00             	sub    %dh,(%eax,%eax,1)
     70a:	00 00                	add    %al,(%eax)
     70c:	48                   	dec    %eax
     70d:	00 05 b0 01 00 00    	add    %al,0x1b0
     713:	0c 6b                	or     $0x6b,%al
     715:	01 00                	add    %eax,(%eax)
     717:	00 06                	add    %al,(%esi)
     719:	4e                   	dec    %esi
     71a:	00 00                	add    %al,(%eax)
     71c:	00 00                	add    %al,(%eax)
     71e:	05 bf 01 00 00       	add    $0x1bf,%eax
     723:	0a 7b 01             	or     0x1(%ebx),%bh
     726:	00 00                	add    %al,(%eax)
     728:	06                   	push   %es
     729:	7b 01                	jnp    72c <MBOOT_HEADER_FLAGS+0x729>
     72b:	00 00                	add    %al,(%eax)
     72d:	00 07                	add    %al,(%edi)
     72f:	55                   	push   %ebp
     730:	00 00                	add    %al,(%eax)
     732:	00 0f                	add    %cl,(%edi)
     734:	d1 01                	roll   $1,(%ecx)
     736:	00 00                	add    %al,(%eax)
     738:	01 04 06             	add    %eax,(%esi,%eax,1)
     73b:	00 02                	add    %al,(%edx)
     73d:	10 00                	adc    %al,(%eax)
     73f:	5a                   	pop    %edx
     740:	00 00                	add    %al,(%eax)
     742:	00 01                	add    %al,(%ecx)
     744:	9c                   	pushf
     745:	fc                   	cld
     746:	01 00                	add    %eax,(%eax)
     748:	00 10                	add    %dl,(%eax)
     74a:	c5 01                	lds    (%ecx),%eax
     74c:	00 00                	add    %al,(%eax)
     74e:	01 04 26             	add    %eax,(%esi,%eiz,1)
     751:	fc                   	cld
     752:	01 00                	add    %eax,(%eax)
     754:	00 48 01             	add    %cl,0x1(%eax)
     757:	00 00                	add    %al,(%eax)
     759:	3e 01 00             	add    %eax,%ds:(%eax)
     75c:	00 08                	add    %cl,(%eax)
     75e:	a0 01 00 00 05       	mov    0x5000001,%al
     763:	34 00                	xor    $0x0,%al
     765:	00 00                	add    %al,(%eax)
     767:	6e                   	outsb  %ds:(%esi),(%dx)
     768:	01 00                	add    %eax,(%eax)
     76a:	00 64 01 00          	add    %ah,0x0(%ecx,%eax,1)
     76e:	00 08                	add    %cl,(%eax)
     770:	ba 01 00 00 06       	mov    $0x6000001,%edx
     775:	34 00                	xor    $0x0,%al
     777:	00 00                	add    %al,(%eax)
     779:	91                   	xchg   %eax,%ecx
     77a:	01 00                	add    %eax,(%eax)
     77c:	00 89 01 00 00 09    	add    %cl,0x9000001(%ecx)
     782:	23 02                	and    (%edx),%eax
     784:	10 00                	adc    %al,(%eax)
     786:	6b 01 00             	imul   $0x0,(%ecx),%eax
     789:	00 04 31             	add    %al,(%ecx,%esi,1)
     78c:	02 10                	add    (%eax),%dl
     78e:	00 6b 01             	add    %ch,0x1(%ebx)
     791:	00 00                	add    %al,(%eax)
     793:	09 3b                	or     %edi,(%ebx)
     795:	02 10                	add    (%eax),%dl
     797:	00 6b 01             	add    %ch,0x1(%ebx)
     79a:	00 00                	add    %al,(%eax)
     79c:	04 4d                	add    $0x4d,%al
     79e:	02 10                	add    (%eax),%dl
     7a0:	00 6b 01             	add    %ch,0x1(%ebx)
     7a3:	00 00                	add    %al,(%eax)
     7a5:	04 5a                	add    $0x5a,%al
     7a7:	02 10                	add    (%eax),%dl
     7a9:	00 5b 01             	add    %bl,0x1(%ebx)
     7ac:	00 00                	add    %al,(%eax)
     7ae:	00 07                	add    %al,(%edi)
     7b0:	6f                   	outsl  %ds:(%esi),(%dx)
     7b1:	00 00                	add    %al,(%eax)
     7b3:	00 00                	add    %al,(%eax)
     7b5:	e1 01                	loope  7b8 <MBOOT_HEADER_FLAGS+0x7b5>
     7b7:	00 00                	add    %al,(%eax)
     7b9:	05 00 01 04 df       	add    $0xdf040100,%eax
     7be:	03 00                	add    (%eax),%eax
     7c0:	00 09                	add    %cl,(%ecx)
     7c2:	30 00                	xor    %al,(%eax)
     7c4:	00 00                	add    %al,(%eax)
     7c6:	1d 61 00 00 00       	sbb    $0x61,%eax
     7cb:	00 00                	add    %al,(%eax)
     7cd:	00 00                	add    %al,(%eax)
     7cf:	52                   	push   %edx
     7d0:	00 00                	add    %al,(%eax)
     7d2:	00 00                	add    %al,(%eax)
     7d4:	00 00                	add    %al,(%eax)
     7d6:	00 1f                	add    %bl,(%edi)
     7d8:	03 00                	add    (%eax),%eax
     7da:	00 02                	add    %al,(%edx)
     7dc:	01 08                	add    %ecx,(%eax)
     7de:	a9 00 00 00 02       	test   $0x2000000,%eax
     7e3:	02 07                	add    (%edi),%al
     7e5:	f3 00 00             	repz add %al,(%eax)
     7e8:	00 02                	add    %al,(%edx)
     7ea:	04 07                	add    $0x7,%al
     7ec:	2f                   	das
     7ed:	04 00                	add    $0x0,%al
     7ef:	00 02                	add    %al,(%edx)
     7f1:	04 07                	add    $0x7,%al
     7f3:	2a 04 00             	sub    (%eax,%eax,1),%al
     7f6:	00 02                	add    %al,(%edx)
     7f8:	01 06                	add    %eax,(%esi)
     7fa:	b2 00                	mov    $0x0,%dl
     7fc:	00 00                	add    %al,(%eax)
     7fe:	0a 42 00             	or     0x0(%edx),%al
     801:	00 00                	add    %al,(%eax)
     803:	02 02                	add    (%edx),%al
     805:	05 1d 01 00 00       	add    $0x11d,%eax
     80a:	0b 04 05 69 6e 74 00 	or     0x746e69(,%eax,1),%eax
     811:	02 04 05 c0 00 00 00 	add    0xc0(,%eax,1),%al
     818:	0c 4e                	or     $0x4e,%al
     81a:	02 00                	add    (%eax),%al
     81c:	00 09                	add    %cl,(%ecx)
     81e:	0f 0d 55 00          	prefetchwt1 0x0(%ebp)
     822:	00 00                	add    %al,(%eax)
     824:	03 68 02             	add    0x2(%eax),%ebp
     827:	00 00                	add    %al,(%eax)
     829:	02 05 03 2a 02 00    	add    0x22a03,%al
     82f:	00 02                	add    %al,(%edx)
     831:	04 04                	add    $0x4,%al
     833:	35 02 00 00 03       	xor    $0x3000002,%eax
     838:	49                   	dec    %ecx
     839:	63 00                	arpl   %eax,(%eax)
     83b:	00 00                	add    %al,(%eax)
     83d:	04 0d                	add    $0xd,%al
     83f:	02 00                	add    (%eax),%al
     841:	00 04 39             	add    %al,(%ecx,%edi,1)
     844:	63 00                	arpl   %eax,(%eax)
     846:	00 00                	add    %al,(%eax)
     848:	05 3c 01 00 00       	add    $0x13c,%eax
     84d:	05 0d a0 00 00       	add    $0xa00d,%eax
     852:	00 06                	add    %al,(%esi)
     854:	00 05 00 00 00 00    	add    %al,0x0
     85a:	06                   	push   %es
     85b:	06                   	push   %es
     85c:	ad                   	lods   %ds:(%esi),%eax
     85d:	00 00                	add    %al,(%eax)
     85f:	00 06                	add    %al,(%esi)
     861:	00 0d 1d 02 00 00    	add    %cl,0x21d
     867:	08 22                	or     %ah,(%edx)
     869:	06                   	push   %es
     86a:	bf 00 00 00 0e       	mov    $0xe000000,%edi
     86f:	bf 00 00 00 00       	mov    $0x0,%edi
     874:	0f 04                	(bad)
     876:	49                   	dec    %ecx
     877:	00 00                	add    %al,(%eax)
     879:	00 03                	add    %al,(%ebx)
     87b:	40                   	inc    %eax
     87c:	02 00                	add    (%eax),%al
     87e:	00 07                	add    %al,(%edi)
     880:	1b 03                	sbb    (%ebx),%eax
     882:	53                   	push   %ebx
     883:	02 00                	add    (%eax),%al
     885:	00 08                	add    %cl,(%eax)
     887:	1e                   	push   %ds
     888:	10 5c 02 00          	adc    %bl,0x0(%edx,%eax,1)
     88c:	00 01                	add    %al,(%ecx)
     88e:	09 06                	or     %eax,(%esi)
     890:	60                   	pusha
     891:	02 10                	add    (%eax),%dl
     893:	00 f9                	add    %bh,%cl
     895:	00 00                	add    %al,(%eax)
     897:	00 01                	add    %al,(%ecx)
     899:	9c                   	pushf
     89a:	07                   	pop    %es
     89b:	05 02 00 00 1a       	add    $0x1a000002,%eax
     8a0:	09 55 00             	or     %edx,0x0(%ebp)
     8a3:	00 00                	add    %al,(%eax)
     8a5:	bd 01 00 00 b9       	mov    $0xb9000001,%ebp
     8aa:	01 00                	add    %eax,(%eax)
     8ac:	00 07                	add    %al,(%edi)
     8ae:	16                   	push   %ss
     8af:	02 00                	add    (%eax),%al
     8b1:	00 1b                	add    %bl,(%ebx)
     8b3:	0a 63 00             	or     0x0(%ebx),%ah
     8b6:	00 00                	add    %al,(%eax)
     8b8:	d7                   	xlat   %ds:(%ebx)
     8b9:	01 00                	add    %eax,(%eax)
     8bb:	00 cf                	add    %cl,%bh
     8bd:	01 00                	add    %eax,(%eax)
     8bf:	00 01                	add    %al,(%ecx)
     8c1:	6e                   	outsb  %ds:(%esi),(%dx)
     8c2:	02 10                	add    (%eax),%dl
     8c4:	00 cc                	add    %cl,%ah
     8c6:	00 00                	add    %al,(%eax)
     8c8:	00 01                	add    %al,(%ecx)
     8ca:	73 02                	jae    8ce <MBOOT_HEADER_FLAGS+0x8cb>
     8cc:	10 00                	adc    %al,(%eax)
     8ce:	c5 00                	lds    (%eax),%eax
     8d0:	00 00                	add    %al,(%eax)
     8d2:	01 7d 02             	add    %edi,0x2(%ebp)
     8d5:	10 00                	adc    %al,(%eax)
     8d7:	ad                   	lods   %ds:(%esi),%eax
     8d8:	00 00                	add    %al,(%eax)
     8da:	00 01                	add    %al,(%ecx)
     8dc:	82 02 10             	addb   $0x10,(%edx)
     8df:	00 a0 00 00 00 01    	add    %ah,0x1000000(%eax)
     8e5:	8c 02                	mov    %es,(%edx)
     8e7:	10 00                	adc    %al,(%eax)
     8e9:	ad                   	lods   %ds:(%esi),%eax
     8ea:	00 00                	add    %al,(%eax)
     8ec:	00 01                	add    %al,(%ecx)
     8ee:	96                   	xchg   %eax,%esi
     8ef:	02 10                	add    (%eax),%dl
     8f1:	00 ad 00 00 00 01    	add    %ch,0x1000000(%ebp)
     8f7:	9b                   	fwait
     8f8:	02 10                	add    (%eax),%dl
     8fa:	00 93 00 00 00 01    	add    %dl,0x1000000(%ebx)
     900:	a5                   	movsl  %ds:(%esi),%es:(%edi)
     901:	02 10                	add    (%eax),%dl
     903:	00 ad 00 00 00 01    	add    %ch,0x1000000(%ebp)
     909:	af                   	scas   %es:(%edi),%eax
     90a:	02 10                	add    (%eax),%dl
     90c:	00 ad 00 00 00 01    	add    %ch,0x1000000(%ebp)
     912:	bc 02 10 00 ad       	mov    $0xad001002,%esp
     917:	00 00                	add    %al,(%eax)
     919:	00 01                	add    %al,(%ecx)
     91b:	c1 02 10             	roll   $0x10,(%edx)
     91e:	00 88 00 00 00 01    	add    %cl,0x1000000(%eax)
     924:	d0 02                	rolb   $1,(%edx)
     926:	10 00                	adc    %al,(%eax)
     928:	ad                   	lods   %ds:(%esi),%eax
     929:	00 00                	add    %al,(%eax)
     92b:	00 01                	add    %al,(%ecx)
     92d:	da 02                	fiaddl (%edx)
     92f:	10 00                	adc    %al,(%eax)
     931:	ad                   	lods   %ds:(%esi),%eax
     932:	00 00                	add    %al,(%eax)
     934:	00 01                	add    %al,(%ecx)
     936:	df 02                	filds  (%edx)
     938:	10 00                	adc    %al,(%eax)
     93a:	7d 00                	jge    93c <MBOOT_HEADER_FLAGS+0x939>
     93c:	00 00                	add    %al,(%eax)
     93e:	01 ef                	add    %ebp,%edi
     940:	02 10                	add    (%eax),%dl
     942:	00 ad 00 00 00 01    	add    %ch,0x1000000(%ebp)
     948:	f9                   	stc
     949:	02 10                	add    (%eax),%dl
     94b:	00 ad 00 00 00 01    	add    %ch,0x1000000(%ebp)
     951:	00 03                	add    %al,(%ebx)
     953:	10 00                	adc    %al,(%eax)
     955:	76 00                	jbe    957 <MBOOT_HEADER_FLAGS+0x954>
     957:	00 00                	add    %al,(%eax)
     959:	08 09                	or     %cl,(%ecx)
     95b:	03 10                	add    (%eax),%edx
     95d:	00 6f 00             	add    %ch,0x0(%edi)
     960:	00 00                	add    %al,(%eax)
     962:	01 1a                	add    %ebx,(%edx)
     964:	03 10                	add    (%eax),%edx
     966:	00 ad 00 00 00 01    	add    %ch,0x1000000(%ebp)
     96c:	2a 03                	sub    (%ebx),%al
     96e:	10 00                	adc    %al,(%eax)
     970:	ad                   	lods   %ds:(%esi),%eax
     971:	00 00                	add    %al,(%eax)
     973:	00 01                	add    %al,(%ecx)
     975:	34 03                	xor    $0x3,%al
     977:	10 00                	adc    %al,(%eax)
     979:	ad                   	lods   %ds:(%esi),%eax
     97a:	00 00                	add    %al,(%eax)
     97c:	00 01                	add    %al,(%ecx)
     97e:	4a                   	dec    %edx
     97f:	03 10                	add    (%eax),%edx
     981:	00 ad 00 00 00 01    	add    %ch,0x1000000(%ebp)
     987:	50                   	push   %eax
     988:	03 10                	add    (%eax),%edx
     98a:	00 76 00             	add    %dh,0x0(%esi)
     98d:	00 00                	add    %al,(%eax)
     98f:	08 59 03             	or     %bl,0x3(%ecx)
     992:	10 00                	adc    %al,(%eax)
     994:	6f                   	outsl  %ds:(%esi),(%dx)
     995:	00 00                	add    %al,(%eax)
     997:	00 00                	add    %al,(%eax)
     999:	00 72 0f             	add    %dh,0xf(%edx)
     99c:	00 00                	add    %al,(%eax)
     99e:	05 00 01 04 ca       	add    $0xca040100,%eax
     9a3:	04 00                	add    $0x0,%al
     9a5:	00 29                	add    %ch,(%ecx)
     9a7:	30 00                	xor    %al,(%eax)
     9a9:	00 00                	add    %al,(%eax)
     9ab:	1d 9c 00 00 00       	sbb    $0x9c,%eax
     9b0:	00 00                	add    %al,(%eax)
     9b2:	00 00                	add    %al,(%eax)
     9b4:	80 03 10             	addb   $0x10,(%ebx)
     9b7:	00 75 0d             	add    %dh,0xd(%ebp)
     9ba:	00 00                	add    %al,(%eax)
     9bc:	1f                   	pop    %ds
     9bd:	04 00                	add    $0x0,%al
     9bf:	00 09                	add    %cl,(%ecx)
     9c1:	08 07                	or     %al,(%edi)
     9c3:	25 04 00 00 09       	and    $0x9000004,%eax
     9c8:	04 07                	add    $0x7,%al
     9ca:	2f                   	das
     9cb:	04 00                	add    $0x0,%al
     9cd:	00 13                	add    %dl,(%ebx)
     9cf:	a1 00 00 00 02       	mov    0x2000000,%eax
     9d4:	04 17                	add    $0x17,%al
     9d6:	40                   	inc    %eax
     9d7:	00 00                	add    %al,(%eax)
     9d9:	00 09                	add    %cl,(%ecx)
     9db:	01 08                	add    %ecx,(%eax)
     9dd:	a9 00 00 00 09       	test   $0x9000000,%eax
     9e2:	02 07                	add    (%edi),%al
     9e4:	f3 00 00             	repz add %al,(%eax)
     9e7:	00 13                	add    %dl,(%ebx)
     9e9:	b7 00                	mov    $0x0,%bh
     9eb:	00 00                	add    %al,(%eax)
     9ed:	02 06                	add    (%esi),%al
     9ef:	16                   	push   %ss
     9f0:	2d 00 00 00 09       	sub    $0x9000000,%eax
     9f5:	04 07                	add    $0x7,%al
     9f7:	2a 04 00             	sub    (%eax,%eax,1),%al
     9fa:	00 09                	add    %cl,(%ecx)
     9fc:	01 06                	add    %eax,(%esi)
     9fe:	b2 00                	mov    $0x0,%dl
     a00:	00 00                	add    %al,(%eax)
     a02:	2a 61 00             	sub    0x0(%ecx),%ah
     a05:	00 00                	add    %al,(%eax)
     a07:	09 02                	or     %eax,(%edx)
     a09:	05 1d 01 00 00       	add    $0x11d,%eax
     a0e:	2b 04 05 69 6e 74 00 	sub    0x746e69(,%eax,1),%eax
     a15:	09 04 05 c0 00 00 00 	or     %eax,0xc0(,%eax,1)
     a1c:	13 b6 02 00 00 02    	adc    0x2000002(%esi),%esi
     a22:	0c 17                	or     $0x17,%al
     a24:	5a                   	pop    %edx
     a25:	00 00                	add    %al,(%eax)
     a27:	00 13                	add    %dl,(%ebx)
     a29:	4e                   	dec    %esi
     a2a:	02 00                	add    (%eax),%al
     a2c:	00 02                	add    %al,(%edx)
     a2e:	0f 0d 74 00 00       	prefetch 0x0(%eax,%eax,1)
     a33:	00 2c 16             	add    %ch,(%esi,%edx,1)
     a36:	05 00 00 07 04       	add    $0x4070000,%eax
     a3b:	2d 00 00 00 07       	sub    $0x7000000,%eax
     a40:	0b 06                	or     (%esi),%eax
     a42:	0d 01 00 00 03       	or     $0x3000001,%eax
     a47:	df 04 00             	filds  (%eax,%eax,1)
     a4a:	00 00                	add    %al,(%eax)
     a4c:	03 6d 05             	add    0x5(%ebp),%ebp
     a4f:	00 00                	add    %al,(%eax)
     a51:	01 03                	add    %eax,(%ebx)
     a53:	da 02                	fiaddl (%edx)
     a55:	00 00                	add    %al,(%eax)
     a57:	02 03                	add    (%ebx),%al
     a59:	a3 03 00 00 03       	mov    %eax,0x3000003
     a5e:	03 0e                	add    (%esi),%ecx
     a60:	05 00 00 04 03       	add    $0x3040000,%eax
     a65:	ce                   	into
     a66:	02 00                	add    (%eax),%al
     a68:	00 05 03 72 02 00    	add    %al,0x27203
     a6e:	00 06                	add    %al,(%esi)
     a70:	03 b2 05 00 00 07    	add    0x7000005(%edx),%esi
     a76:	03 0e                	add    (%esi),%ecx
     a78:	03 00                	add    (%eax),%eax
     a7a:	00 08                	add    %cl,(%eax)
     a7c:	03 3d 03 00 00 09    	add    0x9000003,%edi
     a82:	03 8a 02 00 00 0a    	add    0xa000002(%edx),%ecx
     a88:	03 a1 04 00 00 0b    	add    0xb000004(%ecx),%esp
     a8e:	03 7c 02 00          	add    0x0(%edx,%eax,1),%edi
     a92:	00 0c 03             	add    %cl,(%ebx,%eax,1)
     a95:	79 03                	jns    a9a <MBOOT_HEADER_FLAGS+0xa97>
     a97:	00 00                	add    %al,(%eax)
     a99:	0d 03 88 05 00       	or     $0x58803,%eax
     a9e:	00 0e                	add    %cl,(%esi)
     aa0:	03 87 04 00 00 0f    	add    0xf000004(%edi),%eax
     aa6:	00 06                	add    %al,(%esi)
     aa8:	61                   	popa
     aa9:	00 00                	add    %al,(%eax)
     aab:	00 1d 01 00 00 0b    	add    %bl,0xb000001
     ab1:	5a                   	pop    %edx
     ab2:	00 00                	add    %al,(%eax)
     ab4:	00 0b                	add    %cl,(%ebx)
     ab6:	00 06                	add    %al,(%esi)
     ab8:	61                   	popa
     ab9:	00 00                	add    %al,(%eax)
     abb:	00 2d 01 00 00 0b    	add    %ch,0xb000001
     ac1:	5a                   	pop    %edx
     ac2:	00 00                	add    %al,(%eax)
     ac4:	00 ff                	add    %bh,%bh
     ac6:	00 2d 0c 03 09 09    	add    %ch,0x909030c
     acc:	5b                   	pop    %ebx
     acd:	01 00                	add    %eax,(%eax)
     acf:	00 16                	add    %dl,(%esi)
     ad1:	7b 04                	jnp    ad7 <MBOOT_HEADER_FLAGS+0xad4>
     ad3:	00 00                	add    %al,(%eax)
     ad5:	0a 0e                	or     (%esi),%cl
     ad7:	4e                   	dec    %esi
     ad8:	00 00                	add    %al,(%eax)
     ada:	00 00                	add    %al,(%eax)
     adc:	16                   	push   %ss
     add:	c9                   	leave
     ade:	05 00 00 0b 0e       	add    $0xe0b0000,%eax
     ae3:	4e                   	dec    %esi
     ae4:	00 00                	add    %al,(%eax)
     ae6:	00 04 16             	add    %al,(%esi,%edx,1)
     ae9:	76 05                	jbe    af0 <MBOOT_HEADER_FLAGS+0xaed>
     aeb:	00 00                	add    %al,(%eax)
     aed:	0c 0a                	or     $0xa,%al
     aef:	8e 00                	mov    (%eax),%es
     af1:	00 00                	add    %al,(%eax)
     af3:	08 00                	or     %al,(%eax)
     af5:	13 a2 02 00 00 03    	adc    0x3000002(%edx),%esp
     afb:	0d 03 2d 01 00       	or     $0x12d03,%eax
     b00:	00 07                	add    %al,(%edi)
     b02:	d4 04                	aam    $0x4
     b04:	00 00                	add    %al,(%eax)
     b06:	09 0d 1d 01 00 00    	or     %ecx,0x11d
     b0c:	05 03 60 68 10       	add    $0x10686003,%eax
     b11:	00 07                	add    %al,(%edi)
     b13:	f1                   	int1
     b14:	03 00                	add    (%eax),%eax
     b16:	00 0a                	add    %cl,(%edx)
     b18:	0f 82 00 00 00 05    	jb     5000b1e <stack_top+0x4df4eae>
     b1e:	03 40 68             	add    0x68(%eax),%eax
     b21:	10 00                	adc    %al,(%eax)
     b23:	1d e9 04 00 00       	sbb    $0x4e9,%eax
     b28:	04 1c                	add    $0x1c,%al
     b2a:	06                   	push   %es
     b2b:	61                   	popa
     b2c:	00 00                	add    %al,(%eax)
     b2e:	00 15 e4 02 00 00    	add    %dl,0x2e4
     b34:	07                   	pop    %es
     b35:	20 ab 01 00 00 02    	and    %ch,0x2000001(%ebx)
     b3b:	34 00                	xor    $0x0,%al
     b3d:	00 00                	add    %al,(%eax)
     b3f:	02 34 00             	add    (%eax,%eax,1),%dh
     b42:	00 00                	add    %al,(%eax)
     b44:	00 04 b0             	add    %al,(%eax,%esi,4)
     b47:	04 00                	add    $0x0,%al
     b49:	00 05 57 06 8e 00    	add    %al,0x8e0657
     b4f:	00 00                	add    %al,(%eax)
     b51:	c1 01 00             	roll   $0x0,(%ecx)
     b54:	00 02                	add    %al,(%edx)
     b56:	c1 01 00             	roll   $0x0,(%ecx)
     b59:	00 00                	add    %al,(%eax)
     b5b:	0f 68 00             	punpckhbw (%eax),%mm0
     b5e:	00 00                	add    %al,(%eax)
     b60:	1d fb 03 00 00       	sbb    $0x3fb,%eax
     b65:	05 59 0d c1 01       	add    $0x1c10d59,%eax
     b6a:	00 00                	add    %al,(%eax)
     b6c:	04 8b                	add    $0x8b,%al
     b6e:	03 00                	add    (%eax),%eax
     b70:	00 05 53 06 8e 00    	add    %al,0x8e0653
     b76:	00 00                	add    %al,(%eax)
     b78:	f2 01 00             	repnz add %eax,(%eax)
     b7b:	00 02                	add    %al,(%edx)
     b7d:	c1 01 00             	roll   $0x0,(%ecx)
     b80:	00 02                	add    %al,(%edx)
     b82:	f2 01 00             	repnz add %eax,(%eax)
     b85:	00 02                	add    %al,(%edx)
     b87:	4e                   	dec    %esi
     b88:	00 00                	add    %al,(%eax)
     b8a:	00 00                	add    %al,(%eax)
     b8c:	0f                   	maskmovq (bad),%mm0
     b8d:	f7 01 00 00 2e 04    	testl  $0x42e0000,(%ecx)
     b93:	f7 04 00 00 05 51 06 	testl  $0x6510500,(%eax,%eax,1)
     b9a:	8e 00                	mov    (%eax),%es
     b9c:	00 00                	add    %al,(%eax)
     b9e:	0e                   	push   %cs
     b9f:	02 00                	add    (%eax),%al
     ba1:	00 02                	add    %al,(%edx)
     ba3:	c1 01 00             	roll   $0x0,(%ecx)
     ba6:	00 00                	add    %al,(%eax)
     ba8:	04 25                	add    $0x25,%al
     baa:	03 00                	add    (%eax),%eax
     bac:	00 05 4f 06 8e 00    	add    %al,0x8e064f
     bb2:	00 00                	add    %al,(%eax)
     bb4:	24 02                	and    $0x2,%al
     bb6:	00 00                	add    %al,(%eax)
     bb8:	02 c1                	add    %cl,%al
     bba:	01 00                	add    %eax,(%eax)
     bbc:	00 00                	add    %al,(%eax)
     bbe:	04 45                	add    $0x45,%al
     bc0:	05 00 00 05 4e       	add    $0x4e050000,%eax
     bc5:	06                   	push   %es
     bc6:	8e 00                	mov    (%eax),%es
     bc8:	00 00                	add    %al,(%eax)
     bca:	3a 02                	cmp    (%edx),%al
     bcc:	00 00                	add    %al,(%eax)
     bce:	02 c1                	add    %cl,%al
     bd0:	01 00                	add    %eax,(%eax)
     bd2:	00 00                	add    %al,(%eax)
     bd4:	04 91                	add    $0x91,%al
     bd6:	04 00                	add    $0x0,%al
     bd8:	00 06                	add    %al,(%esi)
     bda:	06                   	push   %es
     bdb:	08 82 00 00 00 50    	or     %al,0x50000000(%edx)
     be1:	02 00                	add    (%eax),%al
     be3:	00 02                	add    %al,(%edx)
     be5:	c1 01 00             	roll   $0x0,(%ecx)
     be8:	00 00                	add    %al,(%eax)
     bea:	15 57 05 00 00       	adc    $0x557,%eax
     bef:	07                   	pop    %es
     bf0:	21 61 02             	and    %esp,0x2(%ecx)
     bf3:	00 00                	add    %al,(%eax)
     bf5:	02 61 00             	add    0x0(%ecx),%ah
     bf8:	00 00                	add    %al,(%eax)
     bfa:	00 04 30             	add    %al,(%eax,%esi,1)
     bfd:	05 00 00 05 50       	add    $0x50050000,%eax
     c02:	06                   	push   %es
     c03:	8e 00                	mov    (%eax),%es
     c05:	00 00                	add    %al,(%eax)
     c07:	77 02                	ja     c0b <MBOOT_HEADER_FLAGS+0xc08>
     c09:	00 00                	add    %al,(%eax)
     c0b:	02 77 02             	add    0x2(%edi),%dh
     c0e:	00 00                	add    %al,(%eax)
     c10:	00 0f                	add    %cl,(%edi)
     c12:	7c 02                	jl     c16 <MBOOT_HEADER_FLAGS+0xc13>
     c14:	00 00                	add    %al,(%eax)
     c16:	2f                   	das
     c17:	91                   	xchg   %eax,%ecx
     c18:	02 00                	add    (%eax),%al
     c1a:	00 02                	add    %al,(%edx)
     c1c:	c1 01 00             	roll   $0x0,(%ecx)
     c1f:	00 02                	add    %al,(%edx)
     c21:	4e                   	dec    %esi
     c22:	00 00                	add    %al,(%eax)
     c24:	00 02                	add    %al,(%edx)
     c26:	34 00                	xor    $0x0,%al
     c28:	00 00                	add    %al,(%eax)
     c2a:	00 30                	add    %dh,(%eax)
     c2c:	63 05 00 00 07 1f    	arpl   %eax,0x1f070000
     c32:	06                   	push   %es
     c33:	04 29                	add    $0x29,%al
     c35:	05 00 00 06 0a       	add    $0xa060000,%eax
     c3a:	05 74 00 00 00       	add    $0x74,%eax
     c3f:	b4 02                	mov    $0x2,%ah
     c41:	00 00                	add    %al,(%eax)
     c43:	02 c1                	add    %cl,%al
     c45:	01 00                	add    %eax,(%eax)
     c47:	00 02                	add    %al,(%edx)
     c49:	c1 01 00             	roll   $0x0,(%ecx)
     c4c:	00 00                	add    %al,(%eax)
     c4e:	15 98 05 00 00       	adc    $0x598,%eax
     c53:	03 10                	add    (%eax),%edx
     c55:	ca 02 00             	lret   $0x2
     c58:	00 02                	add    %al,(%edx)
     c5a:	4e                   	dec    %esi
     c5b:	00 00                	add    %al,(%eax)
     c5d:	00 02                	add    %al,(%edx)
     c5f:	4e                   	dec    %esi
     c60:	00 00                	add    %al,(%eax)
     c62:	00 00                	add    %al,(%eax)
     c64:	04 c7                	add    $0xc7,%al
     c66:	04 00                	add    $0x0,%al
     c68:	00 03                	add    %al,(%ebx)
     c6a:	0f 06                	clts
     c6c:	8e 00                	mov    (%eax),%es
     c6e:	00 00                	add    %al,(%eax)
     c70:	e5 02                	in     $0x2,%eax
     c72:	00 00                	add    %al,(%eax)
     c74:	02 c1                	add    %cl,%al
     c76:	01 00                	add    %eax,(%eax)
     c78:	00 02                	add    %al,(%edx)
     c7a:	e5 02                	in     $0x2,%eax
     c7c:	00 00                	add    %al,(%eax)
     c7e:	00 0f                	add    %cl,(%edi)
     c80:	5b                   	pop    %ebx
     c81:	01 00                	add    %eax,(%eax)
     c83:	00 04 fe             	add    %al,(%esi,%edi,8)
     c86:	02 00                	add    (%eax),%al
     c88:	00 05 54 06 8e 00    	add    %al,0x8e0654
     c8e:	00 00                	add    %al,(%eax)
     c90:	0a 03                	or     (%ebx),%al
     c92:	00 00                	add    %al,(%eax)
     c94:	02 c1                	add    %cl,%al
     c96:	01 00                	add    %eax,(%eax)
     c98:	00 02                	add    %al,(%edx)
     c9a:	0a 03                	or     (%ebx),%al
     c9c:	00 00                	add    %al,(%eax)
     c9e:	02 0c 03             	add    (%ebx,%eax,1),%cl
     ca1:	00 00                	add    %al,(%eax)
     ca3:	00 31                	add    %dh,(%ecx)
     ca5:	04 0f                	add    $0xf,%al
     ca7:	4e                   	dec    %esi
     ca8:	00 00                	add    %al,(%eax)
     caa:	00 04 9c             	add    %al,(%esp,%ebx,4)
     cad:	03 00                	add    (%eax),%eax
     caf:	00 06                	add    %al,(%esi)
     cb1:	07                   	pop    %es
     cb2:	07                   	pop    %es
     cb3:	0a 03                	or     (%ebx),%al
     cb5:	00 00                	add    %al,(%eax)
     cb7:	31 03                	xor    %eax,(%ebx)
     cb9:	00 00                	add    %al,(%eax)
     cbb:	02 0a                	add    (%edx),%cl
     cbd:	03 00                	add    (%eax),%eax
     cbf:	00 02                	add    %al,(%edx)
     cc1:	74 00                	je     cc3 <MBOOT_HEADER_FLAGS+0xcc0>
     cc3:	00 00                	add    %al,(%eax)
     cc5:	02 82 00 00 00 00    	add    0x0(%edx),%al
     ccb:	15 1d 02 00 00       	adc    $0x21d,%eax
     cd0:	07                   	pop    %es
     cd1:	22 42 03             	and    0x3(%edx),%al
     cd4:	00 00                	add    %al,(%eax)
     cd6:	02 c1                	add    %cl,%al
     cd8:	01 00                	add    %eax,(%eax)
     cda:	00 00                	add    %al,(%eax)
     cdc:	17                   	pop    %ss
     cdd:	68 02 00 00 ca       	push   $0xca000002
     ce2:	01 d0                	add    %edx,%eax
     ce4:	10 10                	adc    %dl,(%eax)
     ce6:	00 25 00 00 00 01    	add    %ah,0x1000000
     cec:	9c                   	pushf
     ced:	86 03                	xchg   %al,(%ebx)
     cef:	00 00                	add    %al,(%eax)
     cf1:	18 e0                	sbb    %ah,%al
     cf3:	10 10                	adc    %dl,(%eax)
     cf5:	00 15 00 00 00 0a    	add    %dl,0xa000000
     cfb:	63 00                	arpl   %eax,(%eax)
     cfd:	cc                   	int3
     cfe:	01 0e                	add    %ecx,(%esi)
     d00:	61                   	popa
     d01:	00 00                	add    %al,(%eax)
     d03:	00 02                	add    %al,(%edx)
     d05:	02 00                	add    (%eax),%al
     d07:	00 00                	add    %al,(%eax)
     d09:	02 00                	add    (%eax),%al
     d0b:	00 01                	add    %al,(%ecx)
     d0d:	e5 10                	in     $0x10,%eax
     d0f:	10 00                	adc    %al,(%eax)
     d11:	89 01                	mov    %eax,(%ecx)
     d13:	00 00                	add    %al,(%eax)
     d15:	01 f2                	add    %esi,%edx
     d17:	10 10                	adc    %dl,(%eax)
     d19:	00 d2                	add    %dl,%dl
     d1b:	03 00                	add    (%eax),%eax
     d1d:	00 00                	add    %al,(%eax)
     d1f:	00 17                	add    %dl,(%edi)
     d21:	2a 02                	sub    (%edx),%al
     d23:	00 00                	add    %al,(%eax)
     d25:	c0 01 80             	rolb   $0x80,(%ecx)
     d28:	10 10                	adc    %dl,(%eax)
     d2a:	00 41 00             	add    %al,0x0(%ecx)
     d2d:	00 00                	add    %al,(%eax)
     d2f:	01 9c d2 03 00 00 01 	add    %ebx,0x1000003(%edx,%edx,8)
     d36:	92                   	xchg   %eax,%edx
     d37:	10 10                	adc    %dl,(%eax)
     d39:	00 91 02 00 00 01    	add    %dl,0x1000002(%ecx)
     d3f:	9b                   	fwait
     d40:	10 10                	adc    %dl,(%eax)
     d42:	00 95 01 00 00 01    	add    %dl,0x1000001(%ebp)
     d48:	a5                   	movsl  %ds:(%esi),%es:(%edi)
     d49:	10 10                	adc    %dl,(%eax)
     d4b:	00 31                	add    %dh,(%ecx)
     d4d:	03 00                	add    (%eax),%eax
     d4f:	00 01                	add    %al,(%ecx)
     d51:	ae                   	scas   %es:(%edi),%al
     d52:	10 10                	adc    %dl,(%eax)
     d54:	00 95 01 00 00 01    	add    %dl,0x1000001(%ebp)
     d5a:	b8 10 10 00 31       	mov    $0x31001010,%eax
     d5f:	03 00                	add    (%eax),%eax
     d61:	00 0c c1             	add    %cl,(%ecx,%eax,8)
     d64:	10 10                	adc    %dl,(%eax)
     d66:	00 98 0e 00 00 00    	add    %bl,0xe(%eax)
     d6c:	32 d3                	xor    %bl,%dl
     d6e:	03 00                	add    (%eax),%eax
     d70:	00 01                	add    %al,(%ecx)
     d72:	b1 01                	mov    $0x1,%cl
     d74:	06                   	push   %es
     d75:	01 ec                	add    %ebp,%esp
     d77:	03 00                	add    (%eax),%eax
     d79:	00 33                	add    %dh,(%ebx)
     d7b:	63 00                	arpl   %eax,(%eax)
     d7d:	01 b1 01 21 61 00    	add    %esi,0x612101(%ecx)
     d83:	00 00                	add    %al,(%eax)
     d85:	00 17                	add    %dl,(%edi)
     d87:	48                   	dec    %eax
     d88:	04 00                	add    $0x0,%al
     d8a:	00 64 01 20          	add    %ah,0x20(%ecx,%eax,1)
     d8e:	0b 10                	or     (%eax),%edx
     d90:	00 db                	add    %bl,%bl
     d92:	04 00                	add    $0x0,%al
     d94:	00 01                	add    %al,(%ecx)
     d96:	9c                   	pushf
     d97:	f5                   	cmc
     d98:	07                   	pop    %es
     d99:	00 00                	add    %al,(%eax)
     d9b:	10 56 04             	adc    %dl,0x4(%esi)
     d9e:	00 00                	add    %al,(%eax)
     da0:	66 01 0b             	add    %cx,(%ebx)
     da3:	f5                   	cmc
     da4:	07                   	pop    %es
     da5:	00 00                	add    %al,(%eax)
     da7:	06                   	push   %es
     da8:	03 60 68             	add    0x68(%eax),%esp
     dab:	10 00                	adc    %al,(%eax)
     dad:	9f                   	lahf
     dae:	0a 61 72             	or     0x72(%ecx),%ah
     db1:	67 00 67 01          	add    %ah,0x1(%bx)
     db5:	0b f5                	or     %ebp,%esi
     db7:	07                   	pop    %es
     db8:	00 00                	add    %al,(%eax)
     dba:	2c 02                	sub    $0x2,%al
     dbc:	00 00                	add    %al,(%eax)
     dbe:	0a 02                	or     (%edx),%al
     dc0:	00 00                	add    %al,(%eax)
     dc2:	08 31                	or     %dh,(%ecx)
     dc4:	0b 10                	or     (%eax),%edx
     dc6:	00 37                	add    %dh,(%edi)
     dc8:	00 00                	add    %al,(%eax)
     dca:	00 48 04             	add    %cl,0x4(%eax)
     dcd:	00 00                	add    %al,(%eax)
     dcf:	0a 69 00             	or     0x0(%ecx),%ch
     dd2:	6a 01                	push   $0x1
     dd4:	11 82 00 00 00 b2    	adc    %eax,-0x4e000000(%edx)
     dda:	02 00                	add    (%eax),%al
     ddc:	00 a6 02 00 00 00    	add    %ah,0x2(%esi)
     de2:	1e                   	push   %ds
     de3:	30 0a                	xor    %cl,(%edx)
     de5:	00 00                	add    %al,(%eax)
     de7:	83 0b 10             	orl    $0x10,(%ebx)
     dea:	00 01                	add    %al,(%ecx)
     dec:	83 0b 10             	orl    $0x10,(%ebx)
     def:	00 97 00 00 00 74    	add    %dl,0x74000000(%edi)
     df5:	01 e8                	add    %ebp,%eax
     df7:	04 00                	add    $0x0,%al
     df9:	00 01                	add    %al,(%ecx)
     dfb:	8d 0b                	lea    (%ebx),%ecx
     dfd:	10 00                	adc    %al,(%eax)
     dff:	31 03                	xor    %eax,(%ebx)
     e01:	00 00                	add    %al,(%eax)
     e03:	01 97 0b 10 00 31    	add    %edx,0x3100100b(%edi)
     e09:	03 00                	add    (%eax),%eax
     e0b:	00 01                	add    %al,(%ecx)
     e0d:	a1 0b 10 00 31       	mov    0x3100100b,%eax
     e12:	03 00                	add    (%eax),%eax
     e14:	00 01                	add    %al,(%ecx)
     e16:	ab                   	stos   %eax,%es:(%edi)
     e17:	0b 10                	or     (%eax),%edx
     e19:	00 31                	add    %dh,(%ecx)
     e1b:	03 00                	add    (%eax),%eax
     e1d:	00 01                	add    %al,(%ecx)
     e1f:	b5 0b                	mov    $0xb,%ch
     e21:	10 00                	adc    %al,(%eax)
     e23:	31 03                	xor    %eax,(%ebx)
     e25:	00 00                	add    %al,(%eax)
     e27:	01 bf 0b 10 00 31    	add    %edi,0x3100100b(%edi)
     e2d:	03 00                	add    (%eax),%eax
     e2f:	00 01                	add    %al,(%ecx)
     e31:	c9                   	leave
     e32:	0b 10                	or     (%eax),%edx
     e34:	00 31                	add    %dh,(%ecx)
     e36:	03 00                	add    (%eax),%eax
     e38:	00 01                	add    %al,(%ecx)
     e3a:	d3 0b                	rorl   %cl,(%ebx)
     e3c:	10 00                	adc    %al,(%eax)
     e3e:	31 03                	xor    %eax,(%ebx)
     e40:	00 00                	add    %al,(%eax)
     e42:	01 e0                	add    %esp,%eax
     e44:	0b 10                	or     (%eax),%edx
     e46:	00 31                	add    %dh,(%ecx)
     e48:	03 00                	add    (%eax),%eax
     e4a:	00 01                	add    %al,(%ecx)
     e4c:	ea 0b 10 00 31 03 00 	ljmp   $0x3,$0x3100100b
     e53:	00 01                	add    %al,(%ecx)
     e55:	f4                   	hlt
     e56:	0b 10                	or     (%eax),%edx
     e58:	00 31                	add    %dh,(%ecx)
     e5a:	03 00                	add    (%eax),%eax
     e5c:	00 01                	add    %al,(%ecx)
     e5e:	fe 0b                	decb   (%ebx)
     e60:	10 00                	adc    %al,(%eax)
     e62:	31 03                	xor    %eax,(%ebx)
     e64:	00 00                	add    %al,(%eax)
     e66:	01 08                	add    %ecx,(%eax)
     e68:	0c 10                	or     $0x10,%al
     e6a:	00 31                	add    %dh,(%ecx)
     e6c:	03 00                	add    (%eax),%eax
     e6e:	00 01                	add    %al,(%ecx)
     e70:	12 0c 10             	adc    (%eax,%edx,1),%cl
     e73:	00 31                	add    %dh,(%ecx)
     e75:	03 00                	add    (%eax),%eax
     e77:	00 01                	add    %al,(%ecx)
     e79:	17                   	pop    %ss
     e7a:	0c 10                	or     $0x10,%al
     e7c:	00 98 0e 00 00 00    	add    %bl,0xe(%eax)
     e82:	1e                   	push   %ds
     e83:	22 0a                	and    (%edx),%cl
     e85:	00 00                	add    %al,(%eax)
     e87:	45                   	inc    %ebp
     e88:	0c 10                	or     $0x10,%al
     e8a:	00 01                	add    %al,(%ecx)
     e8c:	45                   	inc    %ebp
     e8d:	0c 10                	or     $0x10,%al
     e8f:	00 0a                	add    %cl,(%edx)
     e91:	00 00                	add    %al,(%eax)
     e93:	00 77 01             	add    %dh,0x1(%edi)
     e96:	13 05 00 00 01 4a    	adc    0x4a010000,%eax
     e9c:	0c 10                	or     $0x10,%al
     e9e:	00 91 02 00 00 01    	add    %dl,0x1000002(%ecx)
     ea4:	4f                   	dec    %edi
     ea5:	0c 10                	or     $0x10,%al
     ea7:	00 98 0e 00 00 00    	add    %bl,0xe(%eax)
     ead:	0d da 0d 00 00       	or     $0xdda,%eax
     eb2:	8a 0c 10             	mov    (%eax,%edx,1),%cl
     eb5:	00 01                	add    %al,(%ecx)
     eb7:	d4 00                	aam    $0x0
     eb9:	00 00                	add    %al,(%eax)
     ebb:	7d 01                	jge    ebe <MBOOT_HEADER_FLAGS+0xebb>
     ebd:	09 44 05 00          	or     %eax,0x0(%ebp,%eax,1)
     ec1:	00 01                	add    %al,(%ecx)
     ec3:	94                   	xchg   %eax,%esp
     ec4:	0c 10                	or     $0x10,%al
     ec6:	00 31                	add    %dh,(%ecx)
     ec8:	03 00                	add    (%eax),%eax
     eca:	00 01                	add    %al,(%ecx)
     ecc:	9e                   	sahf
     ecd:	0c 10                	or     $0x10,%al
     ecf:	00 61 02             	add    %ah,0x2(%ecx)
     ed2:	00 00                	add    %al,(%eax)
     ed4:	01 79 0d             	add    %edi,0xd(%ecx)
     ed7:	10 00                	adc    %al,(%eax)
     ed9:	31 03                	xor    %eax,(%ebx)
     edb:	00 00                	add    %al,(%eax)
     edd:	00 0d 29 0a 00 00    	add    %cl,0xa29
     ee3:	b8 0c 10 00 01       	mov    $0x100100c,%eax
     ee8:	df 00                	filds  (%eax)
     eea:	00 00                	add    %al,(%eax)
     eec:	7a 01                	jp     eef <MBOOT_HEADER_FLAGS+0xeec>
     eee:	09 6c 05 00          	or     %ebp,0x0(%ebp,%eax,1)
     ef2:	00 01                	add    %al,(%ecx)
     ef4:	c2 0c 10             	ret    $0x100c
     ef7:	00 31                	add    %dh,(%ecx)
     ef9:	03 00                	add    (%eax),%eax
     efb:	00 01                	add    %al,(%ecx)
     efd:	cc                   	int3
     efe:	0c 10                	or     $0x10,%al
     f00:	00 31                	add    %dh,(%ecx)
     f02:	03 00                	add    (%eax),%eax
     f04:	00 00                	add    %al,(%eax)
     f06:	0d ae 0d 00 00       	or     $0xdae,%eax
     f0b:	0b 0d 10 00 01 ea    	or     0xea010010,%ecx
     f11:	00 00                	add    %al,(%eax)
     f13:	00 83 01 09 ce 05    	add    %al,0x5ce0901(%ebx)
     f19:	00 00                	add    %al,(%eax)
     f1b:	11 b8 0d 00 00 e8    	adc    %edi,-0x17fffff3(%eax)
     f21:	02 00                	add    (%eax),%al
     f23:	00 e2                	add    %ah,%dl
     f25:	02 00                	add    (%eax),%al
     f27:	00 01                	add    %al,(%ecx)
     f29:	19 0d 10 00 3a 02    	sbb    %ecx,0x23a0010
     f2f:	00 00                	add    %al,(%eax)
     f31:	01 28                	add    %ebp,(%eax)
     f33:	0d 10 00 0e 02       	or     $0x20e0010,%eax
     f38:	00 00                	add    %al,(%eax)
     f3a:	01 3b                	add    %edi,(%ebx)
     f3c:	0d 10 00 31 03       	or     $0x3310010,%eax
     f41:	00 00                	add    %al,(%eax)
     f43:	01 f0                	add    %esi,%eax
     f45:	0d 10 00 31 03       	or     $0x3310010,%eax
     f4a:	00 00                	add    %al,(%eax)
     f4c:	01 fa                	add    %edi,%edx
     f4e:	0d 10 00 31 03       	or     $0x3310010,%eax
     f53:	00 00                	add    %al,(%eax)
     f55:	01 ff                	add    %edi,%edi
     f57:	0d 10 00 98 0e       	or     $0xe980010,%eax
     f5c:	00 00                	add    %al,(%eax)
     f5e:	01 64 0e 10          	add    %esp,0x10(%esi,%ecx,1)
     f62:	00 31                	add    %dh,(%ecx)
     f64:	03 00                	add    (%eax),%eax
     f66:	00 00                	add    %al,(%eax)
     f68:	0d c4 0d 00 00       	or     $0xdc4,%eax
     f6d:	41                   	inc    %ecx
     f6e:	0d 10 00 02 fa       	or     $0xfa020010,%eax
     f73:	00 00                	add    %al,(%eax)
     f75:	00 80 01 09 30 06    	add    %al,0x6300901(%eax)
     f7b:	00 00                	add    %al,(%eax)
     f7d:	11 ce                	adc    %ecx,%esi
     f7f:	0d 00 00 04 03       	or     $0x3040000,%eax
     f84:	00 00                	add    %al,(%eax)
     f86:	fe 02                	incb   (%edx)
     f88:	00 00                	add    %al,(%eax)
     f8a:	01 4b 0d             	add    %ecx,0xd(%ebx)
     f8d:	10 00                	adc    %al,(%eax)
     f8f:	3a 02                	cmp    (%edx),%al
     f91:	00 00                	add    %al,(%eax)
     f93:	01 56 0d             	add    %edx,0xd(%esi)
     f96:	10 00                	adc    %al,(%eax)
     f98:	24 02                	and    $0x2,%al
     f9a:	00 00                	add    %al,(%eax)
     f9c:	01 69 0d             	add    %ebp,0xd(%ecx)
     f9f:	10 00                	adc    %al,(%eax)
     fa1:	31 03                	xor    %eax,(%ebx)
     fa3:	00 00                	add    %al,(%eax)
     fa5:	01 89 0d 10 00 31    	add    %ecx,0x3100100d(%ecx)
     fab:	03 00                	add    (%eax),%eax
     fad:	00 01                	add    %al,(%ecx)
     faf:	93                   	xchg   %eax,%ebx
     fb0:	0d 10 00 31 03       	or     $0x3310010,%eax
     fb5:	00 00                	add    %al,(%eax)
     fb7:	01 98 0d 10 00 98    	add    %ebx,-0x67ffeff3(%eax)
     fbd:	0e                   	push   %cs
     fbe:	00 00                	add    %al,(%eax)
     fc0:	01 39                	add    %edi,(%ecx)
     fc2:	0e                   	push   %cs
     fc3:	10 00                	adc    %al,(%eax)
     fc5:	31 03                	xor    %eax,(%ebx)
     fc7:	00 00                	add    %al,(%eax)
     fc9:	00 0d 06 0a 00 00    	add    %cl,0xa06
     fcf:	b4 0d                	mov    $0xd,%ah
     fd1:	10 00                	adc    %al,(%eax)
     fd3:	01 0a                	add    %ecx,(%edx)
     fd5:	01 00                	add    %eax,(%eax)
     fd7:	00 86 01 09 89 06    	add    %al,0x6890901(%esi)
     fdd:	00 00                	add    %al,(%eax)
     fdf:	11 14 0a             	adc    %edx,(%edx,%ecx,1)
     fe2:	00 00                	add    %al,(%eax)
     fe4:	20 03                	and    %al,(%ebx)
     fe6:	00 00                	add    %al,(%eax)
     fe8:	1a 03                	sbb    (%ebx),%al
     fea:	00 00                	add    %al,(%eax)
     fec:	01 c2                	add    %eax,%edx
     fee:	0d 10 00 3a 02       	or     $0x23a0010,%eax
     ff3:	00 00                	add    %al,(%eax)
     ff5:	01 cd                	add    %ecx,%ebp
     ff7:	0d 10 00 f8 01       	or     $0x1f80010,%eax
     ffc:	00 00                	add    %al,(%eax)
     ffe:	01 e0                	add    %esp,%eax
    1000:	0d 10 00 31 03       	or     $0x3310010,%eax
    1005:	00 00                	add    %al,(%eax)
    1007:	01 49 0e             	add    %ecx,0xe(%ecx)
    100a:	10 00                	adc    %al,(%eax)
    100c:	31 03                	xor    %eax,(%ebx)
    100e:	00 00                	add    %al,(%eax)
    1010:	01 53 0e             	add    %edx,0xe(%ebx)
    1013:	10 00                	adc    %al,(%eax)
    1015:	31 03                	xor    %eax,(%ebx)
    1017:	00 00                	add    %al,(%eax)
    1019:	01 eb                	add    %ebp,%ebx
    101b:	0e                   	push   %cs
    101c:	10 00                	adc    %al,(%eax)
    101e:	31 03                	xor    %eax,(%ebx)
    1020:	00 00                	add    %al,(%eax)
    1022:	00 0d 98 0d 00 00    	add    %cl,0xd98
    1028:	06                   	push   %es
    1029:	0f 10 00             	movups (%eax),%xmm0
    102c:	01 1a                	add    %ebx,(%edx)
    102e:	01 00                	add    %eax,(%eax)
    1030:	00 8f 01 09 fd 06    	add    %cl,0x6fd0901(%edi)
    1036:	00 00                	add    %al,(%eax)
    1038:	11 a2 0d 00 00 38    	adc    %esp,0x3800000d(%edx)
    103e:	03 00                	add    (%eax),%eax
    1040:	00 36                	add    %dh,(%esi)
    1042:	03 00                	add    (%eax),%eax
    1044:	00 01                	add    %al,(%ecx)
    1046:	10 0f                	adc    %cl,(%edi)
    1048:	10 00                	adc    %al,(%eax)
    104a:	3a 02                	cmp    (%edx),%al
    104c:	00 00                	add    %al,(%eax)
    104e:	01 1b                	add    %ebx,(%ebx)
    1050:	0f 10 00             	movups (%eax),%xmm0
    1053:	ab                   	stos   %eax,%es:(%edi)
    1054:	01 00                	add    %eax,(%eax)
    1056:	00 01                	add    %al,(%ecx)
    1058:	2e 0f 10 00          	movups %cs:(%eax),%xmm0
    105c:	31 03                	xor    %eax,(%ebx)
    105e:	00 00                	add    %al,(%eax)
    1060:	01 34 0f             	add    %esi,(%edi,%ecx,1)
    1063:	10 00                	adc    %al,(%eax)
    1065:	31 03                	xor    %eax,(%ebx)
    1067:	00 00                	add    %al,(%eax)
    1069:	01 3e                	add    %edi,(%esi)
    106b:	0f 10 00             	movups (%eax),%xmm0
    106e:	31 03                	xor    %eax,(%ebx)
    1070:	00 00                	add    %al,(%eax)
    1072:	01 8a 0f 10 00 31    	add    %ecx,0x3100100f(%edx)
    1078:	03 00                	add    (%eax),%eax
    107a:	00 01                	add    %al,(%ecx)
    107c:	8f                   	(bad)
    107d:	0f 10 00             	movups (%eax),%xmm0
    1080:	c6 01 00             	movb   $0x0,(%ecx)
    1083:	00 01                	add    %al,(%ecx)
    1085:	95                   	xchg   %eax,%ebp
    1086:	0f 10 00             	movups (%eax),%xmm0
    1089:	31 03                	xor    %eax,(%ebx)
    108b:	00 00                	add    %al,(%eax)
    108d:	01 9f 0f 10 00 31    	add    %ebx,0x3100100f(%edi)
    1093:	03 00                	add    (%eax),%eax
    1095:	00 00                	add    %al,(%eax)
    1097:	01 79 0b             	add    %edi,0xb(%ecx)
    109a:	10 00                	adc    %al,(%eax)
    109c:	99                   	cltd
    109d:	02 00                	add    (%eax),%al
    109f:	00 01                	add    %al,(%ecx)
    10a1:	3f                   	aas
    10a2:	0c 10                	or     $0x10,%al
    10a4:	00 99 02 00 00 01    	add    %bl,0x1000002(%ecx)
    10aa:	6f                   	outsl  %ds:(%esi),(%dx)
    10ab:	0c 10                	or     $0x10,%al
    10ad:	00 99 02 00 00 01    	add    %bl,0x1000002(%ecx)
    10b3:	84 0c 10             	test   %cl,(%eax,%edx,1)
    10b6:	00 99 02 00 00 01    	add    %bl,0x1000002(%ecx)
    10bc:	ad                   	lods   %ds:(%esi),%eax
    10bd:	0c 10                	or     $0x10,%al
    10bf:	00 98 0e 00 00 01    	add    %bl,0x100000e(%eax)
    10c5:	ec                   	in     (%dx),%al
    10c6:	0c 10                	or     $0x10,%al
    10c8:	00 99 02 00 00 01    	add    %bl,0x1000002(%ecx)
    10ce:	01 0d 10 00 99 02    	add    %ecx,0x2990010
    10d4:	00 00                	add    %al,(%eax)
    10d6:	01 ae 0d 10 00 99    	add    %ebp,-0x66ffeff3(%esi)
    10dc:	02 00                	add    (%eax),%al
    10de:	00 01                	add    %al,(%ecx)
    10e0:	15 0e 10 00 99       	adc    $0x9900100e,%eax
    10e5:	02 00                	add    (%eax),%al
    10e7:	00 1f                	add    %bl,(%edi)
    10e9:	2a 0e                	sub    (%esi),%cl
    10eb:	10 00                	adc    %al,(%eax)
    10ed:	c7                   	(bad)
    10ee:	08 00                	or     %al,(%eax)
    10f0:	00 62 07             	add    %ah,0x7(%edx)
    10f3:	00 00                	add    %al,(%eax)
    10f5:	20 01                	and    %al,(%ecx)
    10f7:	50                   	push   %eax
    10f8:	02 73 00             	add    0x0(%ebx),%dh
    10fb:	00 01                	add    %al,(%ecx)
    10fd:	79 0e                	jns    110d <MBOOT_HEADER_FLAGS+0x110a>
    10ff:	10 00                	adc    %al,(%eax)
    1101:	99                   	cltd
    1102:	02 00                	add    (%eax),%al
    1104:	00 01                	add    %al,(%ecx)
    1106:	88 0e                	mov    %cl,(%esi)
    1108:	10 00                	adc    %al,(%eax)
    110a:	99                   	cltd
    110b:	02 00                	add    (%eax),%al
    110d:	00 01                	add    %al,(%ecx)
    110f:	a2 0e 10 00 99       	mov    %al,0x9900100e
    1114:	02 00                	add    (%eax),%al
    1116:	00 01                	add    %al,(%ecx)
    1118:	b2 0e                	mov    $0xe,%dl
    111a:	10 00                	adc    %al,(%eax)
    111c:	dd 0b                	fisttpll (%ebx)
    111e:	00 00                	add    %al,(%eax)
    1120:	01 c7                	add    %eax,%edi
    1122:	0e                   	push   %cs
    1123:	10 00                	adc    %al,(%eax)
    1125:	99                   	cltd
    1126:	02 00                	add    (%eax),%al
    1128:	00 1f                	add    %bl,(%edi)
    112a:	dc 0e                	fmull  (%esi)
    112c:	10 00                	adc    %al,(%eax)
    112e:	fa                   	cli
    112f:	07                   	pop    %es
    1130:	00 00                	add    %al,(%eax)
    1132:	a3 07 00 00 20       	mov    %eax,0x20000007
    1137:	01 50 02             	add    %edx,0x2(%eax)
    113a:	73 00                	jae    113c <MBOOT_HEADER_FLAGS+0x1139>
    113c:	00 01                	add    %al,(%ecx)
    113e:	00 0f                	add    %cl,(%edi)
    1140:	10 00                	adc    %al,(%eax)
    1142:	99                   	cltd
    1143:	02 00                	add    (%eax),%al
    1145:	00 01                	add    %al,(%ecx)
    1147:	55                   	push   %ebp
    1148:	0f 10 00             	movups (%eax),%xmm0
    114b:	99                   	cltd
    114c:	02 00                	add    (%eax),%al
    114e:	00 01                	add    %al,(%ecx)
    1150:	61                   	popa
    1151:	0f 10 00             	movups (%eax),%xmm0
    1154:	36 0a 00             	or     %ss:(%eax),%al
    1157:	00 01                	add    %al,(%ecx)
    1159:	76 0f                	jbe    116a <MBOOT_HEADER_FLAGS+0x1167>
    115b:	10 00                	adc    %al,(%eax)
    115d:	99                   	cltd
    115e:	02 00                	add    (%eax),%al
    1160:	00 01                	add    %al,(%ecx)
    1162:	b6 0f                	mov    $0xf,%dh
    1164:	10 00                	adc    %al,(%eax)
    1166:	99                   	cltd
    1167:	02 00                	add    (%eax),%al
    1169:	00 01                	add    %al,(%ecx)
    116b:	d3 0f                	rorl   %cl,(%edi)
    116d:	10 00                	adc    %al,(%eax)
    116f:	31 03                	xor    %eax,(%ebx)
    1171:	00 00                	add    %al,(%eax)
    1173:	01 dd                	add    %ebx,%ebp
    1175:	0f 10 00             	movups (%eax),%xmm0
    1178:	31 03                	xor    %eax,(%ebx)
    117a:	00 00                	add    %al,(%eax)
    117c:	01 e7                	add    %esp,%edi
    117e:	0f 10 00             	movups (%eax),%xmm0
    1181:	31 03                	xor    %eax,(%ebx)
    1183:	00 00                	add    %al,(%eax)
    1185:	01 ec                	add    %ebp,%esp
    1187:	0f 10 00             	movups (%eax),%xmm0
    118a:	98                   	cwtl
    118b:	0e                   	push   %cs
    118c:	00 00                	add    %al,(%eax)
    118e:	00 0f                	add    %cl,(%edi)
    1190:	61                   	popa
    1191:	00 00                	add    %al,(%eax)
    1193:	00 21                	add    %ah,(%ecx)
    1195:	b9 03 00 00 51       	mov    $0x51000003,%ecx
    119a:	01 80 03 10 00 bb    	add    %eax,-0x44ffeffd(%eax)
    11a0:	00 00                	add    %al,(%eax)
    11a2:	00 01                	add    %al,(%ecx)
    11a4:	9c                   	pushf
    11a5:	a8 08                	test   $0x8,%al
    11a7:	00 00                	add    %al,(%eax)
    11a9:	22 a8 08 00 00 51    	and    0x51000008(%eax),%ch
    11af:	01 29                	add    %ebp,(%ecx)
    11b1:	c1 01 00             	roll   $0x0,(%ecx)
    11b4:	00 44 03 00          	add    %al,0x0(%ebx,%eax,1)
    11b8:	00 40 03             	add    %al,0x3(%eax)
    11bb:	00 00                	add    %al,(%eax)
    11bd:	10 d7                	adc    %dl,%bh
    11bf:	0b 00                	or     (%eax),%eax
    11c1:	00 52 01             	add    %dl,0x1(%edx)
    11c4:	0d a8 08 00 00       	or     $0x8a8,%eax
    11c9:	03 91 ec 5f 10 62    	add    0x62105fec(%ecx),%edx
    11cf:	09 00                	or     %eax,(%eax)
    11d1:	00 53 01             	add    %dl,0x1(%ebx)
    11d4:	0e                   	push   %cs
    11d5:	4e                   	dec    %esi
    11d6:	00 00                	add    %al,(%eax)
    11d8:	00 03                	add    %al,(%ebx)
    11da:	91                   	xchg   %eax,%ecx
    11db:	e8 5f 08 bb 03       	call   3bb1a3f <stack_top+0x39a5dcf>
    11e0:	10 00                	adc    %al,(%eax)
    11e2:	57                   	push   %edi
    11e3:	00 00                	add    %al,(%eax)
    11e5:	00 83 08 00 00 0a    	add    %al,0xa000008(%ebx)
    11eb:	69 00 57 01 17 4e    	imul   $0x4e170157,(%eax),%eax
    11f1:	00 00                	add    %al,(%eax)
    11f3:	00 61 03             	add    %ah,0x3(%ecx)
    11f6:	00 00                	add    %al,(%eax)
    11f8:	59                   	pop    %ecx
    11f9:	03 00                	add    (%eax),%eax
    11fb:	00 12                	add    %dl,(%edx)
    11fd:	66 00 00             	data16 add %al,(%eax)
    1200:	00 34 68             	add    %dh,(%eax,%ebp,2)
    1203:	65 78 00             	gs js  1206 <MBOOT_HEADER_FLAGS+0x1203>
    1206:	01 58 01             	add    %ebx,0x1(%eax)
    1209:	12 b7 08 00 00 03    	adc    0x3000008(%edi),%dh
    120f:	91                   	xchg   %eax,%ecx
    1210:	e4 5f                	in     $0x5f,%al
    1212:	01 09                	add    %ecx,(%ecx)
    1214:	04 10                	add    $0x10,%al
    1216:	00 31                	add    %dh,(%ecx)
    1218:	03 00                	add    (%eax),%eax
    121a:	00 00                	add    %al,(%eax)
    121c:	00 01                	add    %al,(%ecx)
    121e:	aa                   	stos   %al,%es:(%edi)
    121f:	03 10                	add    (%eax),%edx
    1221:	00 ea                	add    %ch,%dl
    1223:	02 00                	add    (%eax),%al
    1225:	00 01                	add    %al,(%ecx)
    1227:	bb 03 10 00 31       	mov    $0x31001003,%ebx
    122c:	03 00                	add    (%eax),%eax
    122e:	00 01                	add    %al,(%ecx)
    1230:	1c 04                	sbb    $0x4,%al
    1232:	10 00                	adc    %al,(%eax)
    1234:	31 03                	xor    %eax,(%ebx)
    1236:	00 00                	add    %al,(%eax)
    1238:	01 32                	add    %esi,(%edx)
    123a:	04 10                	add    $0x10,%al
    123c:	00 31                	add    %dh,(%ecx)
    123e:	03 00                	add    (%eax),%eax
    1240:	00 00                	add    %al,(%eax)
    1242:	06                   	push   %es
    1243:	34 00                	xor    $0x0,%al
    1245:	00 00                	add    %al,(%eax)
    1247:	b7 08                	mov    $0x8,%bh
    1249:	00 00                	add    %al,(%eax)
    124b:	23 5a 00             	and    0x0(%edx),%ebx
    124e:	00 00                	add    %al,(%eax)
    1250:	00 06                	add    %al,(%esi)
    1252:	61                   	popa
    1253:	00 00                	add    %al,(%eax)
    1255:	00 c7                	add    %al,%bh
    1257:	08 00                	or     %al,(%eax)
    1259:	00 0b                	add    %cl,(%ebx)
    125b:	5a                   	pop    %edx
    125c:	00 00                	add    %al,(%eax)
    125e:	00 02                	add    %al,(%edx)
    1260:	00 21                	add    %ah,(%ecx)
    1262:	57                   	push   %edi
    1263:	03 00                	add    (%eax),%eax
    1265:	00 25 01 20 05 10    	add    %ah,0x10052001
    126b:	00 d2                	add    %dl,%dl
    126d:	01 00                	add    %eax,(%eax)
    126f:	00 01                	add    %al,(%ecx)
    1271:	9c                   	pushf
    1272:	f6 09 00             	testb  $0x0,(%ecx)
    1275:	00 22                	add    %ah,(%edx)
    1277:	3c 04                	cmp    $0x4,%al
    1279:	00 00                	add    %al,(%eax)
    127b:	25 01 2a c1 01       	and    $0x1c12a01,%eax
    1280:	00 00                	add    %al,(%eax)
    1282:	84 03                	test   %al,(%ebx)
    1284:	00 00                	add    %al,(%eax)
    1286:	7c 03                	jl     128b <MBOOT_HEADER_FLAGS+0x1288>
    1288:	00 00                	add    %al,(%eax)
    128a:	10 a8 08 00 00 27    	adc    %ch,0x27000008(%eax)
    1290:	01 0a                	add    %ecx,(%edx)
    1292:	0d 01 00 00 03       	or     $0x3000001,%eax
    1297:	91                   	xchg   %eax,%ecx
    1298:	e0 7c                	loopne 1316 <MBOOT_HEADER_FLAGS+0x1313>
    129a:	10 6a 04             	adc    %ch,0x4(%edx)
    129d:	00 00                	add    %al,(%eax)
    129f:	28 01                	sub    %al,(%ecx)
    12a1:	0a 1d 01 00 00 03    	or     0x3000001,%bl
    12a7:	91                   	xchg   %eax,%ecx
    12a8:	ec                   	in     (%dx),%al
    12a9:	7d 10                	jge    12bb <MBOOT_HEADER_FLAGS+0x12b8>
    12ab:	c2 03 00             	ret    $0x3
    12ae:	00 29                	add    %ch,(%ecx)
    12b0:	01 0d f6 09 00 00    	add    %ecx,0x9f6
    12b6:	03 91 ec 7c 19 5e    	add    0x5e197cec(%ecx),%edx
    12bc:	04 00                	add    $0x0,%al
    12be:	00 2a                	add    %ch,(%edx)
    12c0:	01 0e                	add    %ecx,(%esi)
    12c2:	4e                   	dec    %esi
    12c3:	00 00                	add    %al,(%eax)
    12c5:	00 ba 03 00 00 aa    	add    %bh,-0x55fffffd(%edx)
    12cb:	03 00                	add    (%eax),%eax
    12cd:	00 0a                	add    %cl,(%edx)
    12cf:	69 00 2d 01 09 74    	imul   $0x7409012d,(%eax),%eax
    12d5:	00 00                	add    %al,(%eax)
    12d7:	00 41 04             	add    %al,0x4(%ecx)
    12da:	00 00                	add    %al,(%eax)
    12dc:	2d 04 00 00 0a       	sub    $0xa000004,%eax
    12e1:	6a 00                	push   $0x0
    12e3:	36 01 09             	add    %ecx,%ss:(%ecx)
    12e6:	74 00                	je     12e8 <MBOOT_HEADER_FLAGS+0x12e5>
    12e8:	00 00                	add    %al,(%eax)
    12ea:	a8 04                	test   $0x4,%al
    12ec:	00 00                	add    %al,(%eax)
    12ee:	a4                   	movsb  %ds:(%esi),%es:(%edi)
    12ef:	04 00                	add    $0x0,%al
    12f1:	00 19                	add    %bl,(%ecx)
    12f3:	c1 05 00 00 3d 01 0c 	roll   $0xc,0x13d0000
    12fa:	82 00 00             	addb   $0x0,(%eax)
    12fd:	00 bc 04 00 00 b8 04 	add    %bh,0x4b80000(%esp,%eax,1)
    1304:	00 00                	add    %al,(%eax)
    1306:	08 ef                	or     %ch,%bh
    1308:	05 10 00 a5 00       	add    $0xa50010,%eax
    130d:	00 00                	add    %al,(%eax)
    130f:	d1 09                	rorl   $1,(%ecx)
    1311:	00 00                	add    %al,(%eax)
    1313:	0a 69 64             	or     0x64(%ecx),%ch
    1316:	78 00                	js     1318 <MBOOT_HEADER_FLAGS+0x1315>
    1318:	3e 01 11             	add    %edx,%ds:(%ecx)
    131b:	82 00 00             	addb   $0x0,(%eax)
    131e:	00 d5                	add    %dl,%ch
    1320:	04 00                	add    $0x0,%al
    1322:	00 cd                	add    %cl,%ch
    1324:	04 00                	add    $0x0,%al
    1326:	00 12                	add    %dl,(%edx)
    1328:	6e                   	outsb  %ds:(%esi),(%dx)
    1329:	00 00                	add    %al,(%eax)
    132b:	00 19                	add    %bl,(%ecx)
    132d:	37                   	aaa
    132e:	03 00                	add    (%eax),%eax
    1330:	00 3f                	add    %bh,(%edi)
    1332:	01 11                	add    %edx,(%ecx)
    1334:	34 00                	xor    $0x0,%al
    1336:	00 00                	add    %al,(%eax)
    1338:	03 05 00 00 f5 04    	add    0x4f50000,%eax
    133e:	00 00                	add    %al,(%eax)
    1340:	12 7e 00             	adc    0x0(%esi),%bh
    1343:	00 00                	add    %al,(%eax)
    1345:	0a 6b 00             	or     0x0(%ebx),%ch
    1348:	40                   	inc    %eax
    1349:	01 12                	add    %edx,(%edx)
    134b:	74 00                	je     134d <MBOOT_HEADER_FLAGS+0x134a>
    134d:	00 00                	add    %al,(%eax)
    134f:	45                   	inc    %ebp
    1350:	05 00 00 3d 05       	add    $0x53d0000,%eax
    1355:	00 00                	add    %al,(%eax)
    1357:	12 8e 00 00 00 35    	adc    0x35000000(%esi),%cl
    135d:	63 00                	arpl   %eax,(%eax)
    135f:	01 42 01             	add    %eax,0x1(%edx)
    1362:	12 61 00             	adc    0x0(%ecx),%ah
    1365:	00 00                	add    %al,(%eax)
    1367:	00 00                	add    %al,(%eax)
    1369:	00 00                	add    %al,(%eax)
    136b:	01 e9                	add    %ebp,%ecx
    136d:	05 10 00 3a 02       	add    $0x23a0010,%eax
    1372:	00 00                	add    %al,(%eax)
    1374:	01 a7 06 10 00 d2    	add    %esp,-0x2dffeffa(%edi)
    137a:	01 00                	add    %eax,(%eax)
    137c:	00 01                	add    %al,(%ecx)
    137e:	b8 06 10 00 31       	mov    $0x31001006,%eax
    1383:	03 00                	add    (%eax),%eax
    1385:	00 01                	add    %al,(%ecx)
    1387:	d2 06                	rolb   %cl,(%esi)
    1389:	10 00                	adc    %al,(%eax)
    138b:	31 03                	xor    %eax,(%ebx)
    138d:	00 00                	add    %al,(%eax)
    138f:	00 06                	add    %al,(%esi)
    1391:	34 00                	xor    $0x0,%al
    1393:	00 00                	add    %al,(%eax)
    1395:	06                   	push   %es
    1396:	0a 00                	or     (%eax),%al
    1398:	00 0b                	add    %cl,(%ebx)
    139a:	5a                   	pop    %edx
    139b:	00 00                	add    %al,(%eax)
    139d:	00 7f 00             	add    %bh,0x0(%edi)
    13a0:	36 bd 02 00 00 01    	ss mov $0x1000002,%ebp
    13a6:	17                   	pop    %ss
    13a7:	01 0d 01 22 0a 00    	add    %ecx,0xa2201
    13ad:	00 37                	add    %dh,(%edi)
    13af:	68 03 00 00 01       	push   $0x1000003
    13b4:	17                   	pop    %ss
    13b5:	01 23                	add    %esp,(%ebx)
    13b7:	c1 01 00             	roll   $0x0,(%ecx)
    13ba:	00 00                	add    %al,(%eax)
    13bc:	24 a8                	and    $0xa8,%al
    13be:	05 00 00 12 01       	add    $0x1120000,%eax
    13c3:	24 1b                	and    $0x1b,%al
    13c5:	04 00                	add    $0x0,%al
    13c7:	00 0d 01 25 12 04    	add    %cl,0x4122501
    13cd:	00 00                	add    %al,(%eax)
    13cf:	fb                   	sti
    13d0:	26 1c 03             	es sbb $0x3,%al
    13d3:	00 00                	add    %al,(%eax)
    13d5:	b9 70 09 10 00       	mov    $0x100970,%ecx
    13da:	a3 01 00 00 01       	mov    %eax,0x1000001
    13df:	9c                   	pushf
    13e0:	cd 0b                	int    $0xb
    13e2:	00 00                	add    %al,(%eax)
    13e4:	14 a8                	adc    $0xa8,%al
    13e6:	08 00                	or     %al,(%eax)
    13e8:	00 b9 1b c1 01 00    	add    %bh,0x1c11b(%ecx)
    13ee:	00 67 05             	add    %ah,0x5(%edi)
    13f1:	00 00                	add    %al,(%eax)
    13f3:	63 05 00 00 07 98    	arpl   %eax,0x98070000
    13f9:	04 00                	add    $0x0,%al
    13fb:	00 c0                	add    %al,%al
    13fd:	0a 0d 01 00 00 02    	or     0x2000001,%cl
    1403:	91                   	xchg   %eax,%ecx
    1404:	60                   	pusha
    1405:	05 64 6f 74 00       	add    $0x746f64,%eax
    140a:	c5 11                	lds    (%ecx),%edx
    140c:	c1 01 00             	roll   $0x0,(%ecx)
    140f:	00 80 05 00 00 78    	add    %al,0x78000005(%eax)
    1415:	05 00 00 0e 70       	add    $0x700e0000,%eax
    141a:	03 00                	add    (%eax),%eax
    141c:	00 c6                	add    %al,%dh
    141e:	0c 82                	or     $0x82,%al
    1420:	00 00                	add    %al,(%eax)
    1422:	00 a5 05 00 00 9f    	add    %ah,-0x60fffffb(%ebp)
    1428:	05 00 00 0e 72       	add    $0x720e0000,%eax
    142d:	04 00                	add    $0x0,%al
    142f:	00 cc                	add    %cl,%ah
    1431:	0c 82                	or     $0x82,%al
    1433:	00 00                	add    %al,(%eax)
    1435:	00 c1                	add    %al,%cl
    1437:	05 00 00 bd 05       	add    $0x5bd0000,%eax
    143c:	00 00                	add    %al,(%eax)
    143e:	07                   	pop    %es
    143f:	c9                   	leave
    1440:	03 00                	add    (%eax),%eax
    1442:	00 f0                	add    %dh,%al
    1444:	14 5b                	adc    $0x5b,%al
    1446:	01 00                	add    %eax,(%eax)
    1448:	00 02                	add    %al,(%edx)
    144a:	91                   	xchg   %eax,%ecx
    144b:	54                   	push   %esp
    144c:	27                   	daa
    144d:	a9 00 00 00 e8       	test   $0xe8000000,%eax
    1452:	0a 00                	or     (%eax),%al
    1454:	00 05 69 00 cd 11    	add    %al,0x11cd0069
    145a:	82 00 00             	addb   $0x0,(%eax)
    145d:	00 d4                	add    %dl,%ah
    145f:	05 00 00 d0 05       	add    $0x5d00000,%eax
    1464:	00 00                	add    %al,(%eax)
    1466:	18 00                	sbb    %al,(%eax)
    1468:	0a 10                	or     (%eax),%dl
    146a:	00 14 00             	add    %dl,(%eax,%eax,1)
    146d:	00 00                	add    %al,(%eax)
    146f:	05 63 00 cf 0e       	add    $0xecf0063,%eax
    1474:	61                   	popa
    1475:	00 00                	add    %al,(%eax)
    1477:	00 e6                	add    %ah,%dh
    1479:	05 00 00 e4 05       	add    $0x5e40000,%eax
    147e:	00 00                	add    %al,(%eax)
    1480:	00 00                	add    %al,(%eax)
    1482:	08 cd                	or     %cl,%ch
    1484:	0a 10                	or     (%eax),%dl
    1486:	00 33                	add    %dh,(%ebx)
    1488:	00 00                	add    %al,(%eax)
    148a:	00 34 0b             	add    %dh,(%ebx,%ecx,1)
    148d:	00 00                	add    %al,(%eax)
    148f:	38 65 78             	cmp    %ah,0x78(%ebp)
    1492:	74 00                	je     1494 <MBOOT_HEADER_FLAGS+0x1491>
    1494:	01 d9                	add    %ebx,%ecx
    1496:	15 c1 01 00 00       	adc    $0x1c1,%eax
    149b:	18 cd                	sbb    %cl,%ch
    149d:	0a 10                	or     (%eax),%dl
    149f:	00 33                	add    %dh,(%ebx)
    14a1:	00 00                	add    %al,(%eax)
    14a3:	00 05 69 00 da 15    	add    %al,0x15da0069
    14a9:	82 00 00             	addb   $0x0,(%eax)
    14ac:	00 f0                	add    %dh,%al
    14ae:	05 00 00 ee 05       	add    $0x5ee0000,%eax
    14b3:	00 00                	add    %al,(%eax)
    14b5:	12 c9                	adc    %cl,%cl
    14b7:	00 00                	add    %al,(%eax)
    14b9:	00 05 63 00 dc 12    	add    %al,0x12dc0063
    14bf:	61                   	popa
    14c0:	00 00                	add    %al,(%eax)
    14c2:	00 fa                	add    %bh,%dl
    14c4:	05 00 00 f8 05       	add    $0x5f80000,%eax
    14c9:	00 00                	add    %al,(%eax)
    14cb:	00 00                	add    %al,(%eax)
    14cd:	00 08                	add    %cl,(%eax)
    14cf:	3b 0a                	cmp    (%edx),%ecx
    14d1:	10 00                	adc    %al,(%eax)
    14d3:	3b 00                	cmp    (%eax),%eax
    14d5:	00 00                	add    %al,(%eax)
    14d7:	7b 0b                	jnp    14e4 <MBOOT_HEADER_FLAGS+0x14e1>
    14d9:	00 00                	add    %al,(%eax)
    14db:	05 69 00 e6 0d       	add    $0xde60069,%eax
    14e0:	74 00                	je     14e2 <MBOOT_HEADER_FLAGS+0x14df>
    14e2:	00 00                	add    %al,(%eax)
    14e4:	0c 06                	or     $0x6,%al
    14e6:	00 00                	add    %al,(%eax)
    14e8:	02 06                	add    (%esi),%al
    14ea:	00 00                	add    %al,(%eax)
    14ec:	27                   	daa
    14ed:	be 00 00 00 71       	mov    $0x71000000,%esi
    14f2:	0b 00                	or     (%eax),%eax
    14f4:	00 1a                	add    %bl,(%edx)
    14f6:	63 00                	arpl   %eax,(%eax)
    14f8:	ea 12 cd 0b 00 00 02 	ljmp   $0x200,$0xbcd12
    14ff:	91                   	xchg   %eax,%ecx
    1500:	54                   	push   %esp
    1501:	01 58 0a             	add    %ebx,0xa(%eax)
    1504:	10 00                	adc    %al,(%eax)
    1506:	31 03                	xor    %eax,(%ebx)
    1508:	00 00                	add    %al,(%eax)
    150a:	00 01                	add    %al,(%ecx)
    150c:	71 0a                	jno    1518 <MBOOT_HEADER_FLAGS+0x1515>
    150e:	10 00                	adc    %al,(%eax)
    1510:	31 03                	xor    %eax,(%ebx)
    1512:	00 00                	add    %al,(%eax)
    1514:	00 0c 98             	add    %cl,(%eax,%ebx,4)
    1517:	09 10                	or     %edx,(%eax)
    1519:	00 31                	add    %dh,(%ecx)
    151b:	03 00                	add    (%eax),%eax
    151d:	00 01                	add    %al,(%ecx)
    151f:	af                   	scas   %es:(%edi),%eax
    1520:	09 10                	or     %edx,(%eax)
    1522:	00 11                	add    %dl,(%ecx)
    1524:	03 00                	add    (%eax),%eax
    1526:	00 01                	add    %al,(%ecx)
    1528:	3b 0a                	cmp    (%edx),%ecx
    152a:	10 00                	adc    %al,(%eax)
    152c:	31 03                	xor    %eax,(%ebx)
    152e:	00 00                	add    %al,(%eax)
    1530:	01 80 0a 10 00 31    	add    %eax,0x3100100a(%eax)
    1536:	03 00                	add    (%eax),%eax
    1538:	00 01                	add    %al,(%ecx)
    153a:	8a 0a                	mov    (%edx),%cl
    153c:	10 00                	adc    %al,(%eax)
    153e:	ca 02 00             	lret   $0x2
    1541:	00 01                	add    %al,(%ecx)
    1543:	9b                   	fwait
    1544:	0a 10                	or     (%eax),%dl
    1546:	00 31                	add    %dh,(%ecx)
    1548:	03 00                	add    (%eax),%eax
    154a:	00 01                	add    %al,(%ecx)
    154c:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
    154d:	0a 10                	or     (%eax),%dl
    154f:	00 b4 02 00 00 01 b0 	add    %dh,-0x4fff0000(%edx,%eax,1)
    1556:	0a 10                	or     (%eax),%dl
    1558:	00 31                	add    %dh,(%ecx)
    155a:	03 00                	add    (%eax),%eax
    155c:	00 01                	add    %al,(%ecx)
    155e:	0a 0b                	or     (%ebx),%cl
    1560:	10 00                	adc    %al,(%eax)
    1562:	31 03                	xor    %eax,(%ebx)
    1564:	00 00                	add    %al,(%eax)
    1566:	00 06                	add    %al,(%esi)
    1568:	61                   	popa
    1569:	00 00                	add    %al,(%eax)
    156b:	00 dd                	add    %bl,%ch
    156d:	0b 00                	or     (%eax),%eax
    156f:	00 0b                	add    %cl,(%ebx)
    1571:	5a                   	pop    %edx
    1572:	00 00                	add    %al,(%eax)
    1574:	00 01                	add    %al,(%ecx)
    1576:	00 26                	add    %ah,(%esi)
    1578:	9a 02 00 00 70 60 07 	lcall  $0x760,$0x70000002
    157f:	10 00                	adc    %al,(%eax)
    1581:	0d 02 00 00 01       	or     $0x1000002,%eax
    1586:	9c                   	pushf
    1587:	69 0d 00 00 14 a8 08 	imul   $0x70000008,0xa8140000,%ecx
    158e:	00 00 70 
    1591:	1a c1                	sbb    %cl,%al
    1593:	01 00                	add    %eax,(%eax)
    1595:	00 51 06             	add    %dl,0x6(%ecx)
    1598:	00 00                	add    %al,(%eax)
    159a:	4d                   	dec    %ebp
    159b:	06                   	push   %es
    159c:	00 00                	add    %al,(%eax)
    159e:	07                   	pop    %es
    159f:	98                   	cwtl
    15a0:	04 00                	add    $0x0,%al
    15a2:	00 77 0a             	add    %dh,0xa(%edi)
    15a5:	69 0d 00 00 02 91 51 	imul   $0x6f640551,0x91020000,%ecx
    15ac:	05 64 6f 
    15af:	74 00                	je     15b1 <MBOOT_HEADER_FLAGS+0x15ae>
    15b1:	7b 11                	jnp    15c4 <MBOOT_HEADER_FLAGS+0x15c1>
    15b3:	c1 01 00             	roll   $0x0,(%ecx)
    15b6:	00 70 06             	add    %dh,0x6(%eax)
    15b9:	00 00                	add    %al,(%eax)
    15bb:	62 06                	bound  %eax,(%esi)
    15bd:	00 00                	add    %al,(%eax)
    15bf:	0e                   	push   %cs
    15c0:	70 03                	jo     15c5 <MBOOT_HEADER_FLAGS+0x15c2>
    15c2:	00 00                	add    %al,(%eax)
    15c4:	7c 0c                	jl     15d2 <MBOOT_HEADER_FLAGS+0x15cf>
    15c6:	82 00 00             	addb   $0x0,(%eax)
    15c9:	00 bd 06 00 00 b9    	add    %bh,-0x46fffffa(%ebp)
    15cf:	06                   	push   %es
    15d0:	00 00                	add    %al,(%eax)
    15d2:	07                   	pop    %es
    15d3:	d7                   	xlat   %ds:(%ebx)
    15d4:	0b 00                	or     (%eax),%eax
    15d6:	00 98 11 79 0d 00    	add    %bl,0xd7911(%eax)
    15dc:	00 05 03 40 58 10    	add    %al,0x10584003
    15e2:	00 07                	add    %al,(%edi)
    15e4:	62 09                	bound  %ecx,(%ecx)
    15e6:	00 00                	add    %al,(%eax)
    15e8:	99                   	cltd
    15e9:	0e                   	push   %cs
    15ea:	4e                   	dec    %esi
    15eb:	00 00                	add    %al,(%eax)
    15ed:	00 02                	add    %al,(%edx)
    15ef:	91                   	xchg   %eax,%ecx
    15f0:	4c                   	dec    %esp
    15f1:	08 8c 08 10 00 34 00 	or     %cl,0x340010(%eax,%ecx,1)
    15f8:	00 00                	add    %al,(%eax)
    15fa:	78 0c                	js     1608 <MBOOT_HEADER_FLAGS+0x1605>
    15fc:	00 00                	add    %al,(%eax)
    15fe:	0e                   	push   %cs
    15ff:	e9 03 00 00 87       	jmp    87001607 <MBOOT_HEADER_MAGIC+0x6b526605>
    1604:	10 82 00 00 00 cf    	adc    %al,-0x31000000(%edx)
    160a:	06                   	push   %es
    160b:	00 00                	add    %al,(%eax)
    160d:	cd 06                	int    $0x6
    160f:	00 00                	add    %al,(%eax)
    1611:	00 08                	add    %cl,(%eax)
    1613:	0f 08                	invd
    1615:	10 00                	adc    %al,(%eax)
    1617:	19 00                	sbb    %eax,(%eax)
    1619:	00 00                	add    %al,(%eax)
    161b:	b2 0c                	mov    $0xc,%dl
    161d:	00 00                	add    %al,(%eax)
    161f:	05 69 00 91 0e       	add    $0xe910069,%eax
    1624:	74 00                	je     1626 <MBOOT_HEADER_FLAGS+0x1623>
    1626:	00 00                	add    %al,(%eax)
    1628:	dd 06                	fldl   (%esi)
    162a:	00 00                	add    %al,(%eax)
    162c:	d7                   	xlat   %ds:(%ebx)
    162d:	06                   	push   %es
    162e:	00 00                	add    %al,(%eax)
    1630:	12 9e 00 00 00 1a    	adc    0x1a000000(%esi),%bl
    1636:	63 00                	arpl   %eax,(%eax)
    1638:	92                   	xchg   %eax,%edx
    1639:	0e                   	push   %cs
    163a:	cd 0b                	int    $0xb
    163c:	00 00                	add    %al,(%eax)
    163e:	02 91 5c 01 23 08    	add    0x823015c(%ecx),%dl
    1644:	10 00                	adc    %al,(%eax)
    1646:	31 03                	xor    %eax,(%ebx)
    1648:	00 00                	add    %al,(%eax)
    164a:	00 00                	add    %al,(%eax)
    164c:	08 c0                	or     %al,%al
    164e:	08 10                	or     %dl,(%eax)
    1650:	00 a5 00 00 00 29    	add    %ah,0x29000000(%ebp)
    1656:	0d 00 00 07 20       	or     $0x20070000,%eax
    165b:	05 00 00 a0 0e       	add    $0xea00000,%eax
    1660:	88 0d 00 00 02 91    	mov    %cl,0x91020000
    1666:	5c                   	pop    %esp
    1667:	05 69 64 78 00       	add    $0x786469,%eax
    166c:	a1 0d 74 00 00       	mov    0x740d,%eax
    1671:	00 14 07             	add    %dl,(%edi,%eax,1)
    1674:	00 00                	add    %al,(%eax)
    1676:	02 07                	add    (%edi),%al
    1678:	00 00                	add    %al,(%eax)
    167a:	0e                   	push   %cs
    167b:	b1 02                	mov    $0x2,%cl
    167d:	00 00                	add    %al,(%eax)
    167f:	a2 12 4e 00 00       	mov    %al,0x4e12
    1684:	00 81 07 00 00 7b    	add    %al,0x7b000007(%ecx)
    168a:	07                   	pop    %es
    168b:	00 00                	add    %al,(%eax)
    168d:	08 40 09             	or     %al,0x9(%eax)
    1690:	10 00                	adc    %al,(%eax)
    1692:	10 00                	adc    %al,(%eax)
    1694:	00 00                	add    %al,(%eax)
    1696:	16                   	push   %ss
    1697:	0d 00 00 1a 63       	or     $0x631a0000,%eax
    169c:	00 ab 12 cd 0b 00    	add    %ch,0xbcd12(%ebx)
    16a2:	00 02                	add    %al,(%edx)
    16a4:	91                   	xchg   %eax,%ecx
    16a5:	4a                   	dec    %edx
    16a6:	01 50 09             	add    %edx,0x9(%eax)
    16a9:	10 00                	adc    %al,(%eax)
    16ab:	31 03                	xor    %eax,(%ebx)
    16ad:	00 00                	add    %al,(%eax)
    16af:	00 01                	add    %al,(%ecx)
    16b1:	ca 08 10             	lret   $0x1008
    16b4:	00 31                	add    %dh,(%ecx)
    16b6:	03 00                	add    (%eax),%eax
    16b8:	00 01                	add    %al,(%ecx)
    16ba:	64 09 10             	or     %edx,%fs:(%eax)
    16bd:	00 31                	add    %dh,(%ecx)
    16bf:	03 00                	add    (%eax),%eax
    16c1:	00 00                	add    %al,(%eax)
    16c3:	0c 88                	or     $0x88,%al
    16c5:	07                   	pop    %es
    16c6:	10 00                	adc    %al,(%eax)
    16c8:	31 03                	xor    %eax,(%ebx)
    16ca:	00 00                	add    %al,(%eax)
    16cc:	01 9d 07 10 00 11    	add    %ebx,0x11001007(%ebp)
    16d2:	03 00                	add    (%eax),%eax
    16d4:	00 01                	add    %al,(%ecx)
    16d6:	0f 08                	invd
    16d8:	10 00                	adc    %al,(%eax)
    16da:	31 03                	xor    %eax,(%ebx)
    16dc:	00 00                	add    %al,(%eax)
    16de:	01 32                	add    %esi,(%edx)
    16e0:	08 10                	or     %dl,(%eax)
    16e2:	00 31                	add    %dh,(%ecx)
    16e4:	03 00                	add    (%eax),%eax
    16e6:	00 01                	add    %al,(%ecx)
    16e8:	48                   	dec    %eax
    16e9:	08 10                	or     %dl,(%eax)
    16eb:	00 ea                	add    %ch,%dl
    16ed:	02 00                	add    (%eax),%al
    16ef:	00 01                	add    %al,(%ecx)
    16f1:	65 08 10             	or     %dl,%gs:(%eax)
    16f4:	00 31                	add    %dh,(%ecx)
    16f6:	03 00                	add    (%eax),%eax
    16f8:	00 01                	add    %al,(%ecx)
    16fa:	6f                   	outsl  %ds:(%esi),(%dx)
    16fb:	08 10                	or     %dl,(%eax)
    16fd:	00 31                	add    %dh,(%ecx)
    16ff:	03 00                	add    (%eax),%eax
    1701:	00 00                	add    %al,(%eax)
    1703:	06                   	push   %es
    1704:	61                   	popa
    1705:	00 00                	add    %al,(%eax)
    1707:	00 79 0d             	add    %bh,0xd(%ecx)
    170a:	00 00                	add    %al,(%eax)
    170c:	0b 5a 00             	or     0x0(%edx),%ebx
    170f:	00 00                	add    %al,(%eax)
    1711:	0a 00                	or     (%eax),%al
    1713:	06                   	push   %es
    1714:	61                   	popa
    1715:	00 00                	add    %al,(%eax)
    1717:	00 88 0d 00 00 23    	add    %cl,0x2300000d(%eax)
    171d:	5a                   	pop    %edx
    171e:	00 00                	add    %al,(%eax)
    1720:	00 00                	add    %al,(%eax)
    1722:	06                   	push   %es
    1723:	61                   	popa
    1724:	00 00                	add    %al,(%eax)
    1726:	00 98 0d 00 00 0b    	add    %bl,0xb00000d(%eax)
    172c:	5a                   	pop    %edx
    172d:	00 00                	add    %al,(%eax)
    172f:	00 0f                	add    %cl,(%edi)
    1731:	00 1b                	add    %bl,(%ebx)
    1733:	c7 02 00 00 5e ae    	movl   $0xae5e0000,(%edx)
    1739:	0d 00 00 1c 68       	or     $0x681c0000,%eax
    173e:	03 00                	add    (%eax),%eax
    1740:	00 5e 20             	add    %bl,0x20(%esi)
    1743:	c1 01 00             	roll   $0x0,(%ecx)
    1746:	00 00                	add    %al,(%eax)
    1748:	1b 4c 03 00          	sbb    0x0(%ebx,%eax,1),%ecx
    174c:	00 4e c4             	add    %cl,-0x3c(%esi)
    174f:	0d 00 00 1c a8       	or     $0xa81c0000,%eax
    1754:	08 00                	or     %al,(%eax)
    1756:	00 4e 24             	add    %cl,0x24(%esi)
    1759:	c1 01 00             	roll   $0x0,(%ecx)
    175c:	00 00                	add    %al,(%eax)
    175e:	1b 7d 05             	sbb    0x5(%ebp),%edi
    1761:	00 00                	add    %al,(%eax)
    1763:	3e da 0d 00 00 1c a8 	fimull %ds:0xa81c0000
    176a:	08 00                	or     %al,(%eax)
    176c:	00 3e                	add    %bh,(%esi)
    176e:	24 c1                	and    $0xc1,%al
    1770:	01 00                	add    %eax,(%eax)
    1772:	00 00                	add    %al,(%eax)
    1774:	25 41 04 00 00       	and    $0x441,%eax
    1779:	36 28 f2             	ss sub %dh,%dl
    177c:	02 00                	add    (%eax),%al
    177e:	00 1d 40 04 10 00    	add    %bl,0x100440
    1784:	dd 00                	fldl   (%eax)
    1786:	00 00                	add    %al,(%eax)
    1788:	01 9c 98 0e 00 00 14 	add    %ebx,0x1400000e(%eax,%ebx,4)
    178f:	8e 0a                	mov    (%edx),%cs
    1791:	00 00                	add    %al,(%eax)
    1793:	1d 25 c1 01 00       	sbb    $0x1c125,%eax
    1798:	00 9b 07 00 00 97    	add    %bl,-0x68fffff9(%ebx)
    179e:	07                   	pop    %es
    179f:	00 00                	add    %al,(%eax)
    17a1:	14 62                	adc    $0x62,%al
    17a3:	09 00                	or     %eax,(%eax)
    17a5:	00 1d 34 4e 00 00    	add    %bl,0x4e34
    17ab:	00 b2 07 00 00 ac    	add    %dh,-0x53fffff9(%edx)
    17b1:	07                   	pop    %es
    17b2:	00 00                	add    %al,(%eax)
    17b4:	14 86                	adc    $0x86,%al
    17b6:	01 00                	add    %eax,(%eax)
    17b8:	00 1d 42 34 00 00    	add    %bl,0x3442
    17be:	00 d1                	add    %dl,%cl
    17c0:	07                   	pop    %es
    17c1:	00 00                	add    %al,(%eax)
    17c3:	cb                   	lret
    17c4:	07                   	pop    %es
    17c5:	00 00                	add    %al,(%eax)
    17c7:	07                   	pop    %es
    17c8:	20 05 00 00 1e 0a    	and    %al,0xa1e0000
    17ce:	88 0d 00 00 02 91    	mov    %cl,0x91020000
    17d4:	5c                   	pop    %esp
    17d5:	05 6c 65 6e 00       	add    $0x6e656c,%eax
    17da:	1f                   	pop    %ds
    17db:	09 74 00 00          	or     %esi,0x0(%eax,%eax,1)
    17df:	00 fc                	add    %bh,%ah
    17e1:	07                   	pop    %es
    17e2:	00 00                	add    %al,(%eax)
    17e4:	ea 07 00 00 0e b1 02 	ljmp   $0x2b1,$0xe000007
    17eb:	00 00                	add    %al,(%eax)
    17ed:	20 0e                	and    %cl,(%esi)
    17ef:	4e                   	dec    %esi
    17f0:	00 00                	add    %al,(%eax)
    17f2:	00 6d 08             	add    %ch,0x8(%ebp)
    17f5:	00 00                	add    %al,(%eax)
    17f7:	67 08 00             	or     %al,(%bx,%si)
    17fa:	00 01                	add    %al,(%ecx)
    17fc:	b6 04                	mov    $0x4,%dh
    17fe:	10 00                	adc    %al,(%eax)
    1800:	31 03                	xor    %eax,(%ebx)
    1802:	00 00                	add    %al,(%eax)
    1804:	01 c0                	add    %eax,%eax
    1806:	04 10                	add    $0x10,%al
    1808:	00 31                	add    %dh,(%ecx)
    180a:	03 00                	add    (%eax),%eax
    180c:	00 01                	add    %al,(%ecx)
    180e:	dc 04 10             	faddl  (%eax,%edx,1)
    1811:	00 50 02             	add    %dl,0x2(%eax)
    1814:	00 00                	add    %al,(%eax)
    1816:	01 f0                	add    %esi,%eax
    1818:	04 10                	add    $0x10,%al
    181a:	00 31                	add    %dh,(%ecx)
    181c:	03 00                	add    (%eax),%eax
    181e:	00 0c 0a             	add    %cl,(%edx,%ecx,1)
    1821:	05 10 00 50 02       	add    $0x2500010,%eax
    1826:	00 00                	add    %al,(%eax)
    1828:	01 1a                	add    %ebx,(%edx)
    182a:	05 10 00 31 03       	add    $0x3310010,%eax
    182f:	00 00                	add    %al,(%eax)
    1831:	00 28                	add    %ch,(%eax)
    1833:	ac                   	lods   %ds:(%esi),%al
    1834:	03 00                	add    (%eax),%eax
    1836:	00 11                	add    %dl,(%ecx)
    1838:	00 07                	add    %al,(%edi)
    183a:	10 00                	adc    %al,(%eax)
    183c:	5e                   	pop    %esi
    183d:	00 00                	add    %al,(%eax)
    183f:	00 01                	add    %al,(%ecx)
    1841:	9c                   	pushf
    1842:	11 0f                	adc    %ecx,(%edi)
    1844:	00 00                	add    %al,(%eax)
    1846:	0e                   	push   %cs
    1847:	eb 0a                	jmp    1853 <MBOOT_HEADER_FLAGS+0x1850>
    1849:	00 00                	add    %al,(%eax)
    184b:	16                   	push   %ss
    184c:	11 c1                	adc    %eax,%ecx
    184e:	01 00                	add    %eax,(%eax)
    1850:	00 87 08 00 00 83    	add    %al,-0x7cfffff8(%edi)
    1856:	08 00                	or     %al,(%eax)
    1858:	00 01                	add    %al,(%ecx)
    185a:	0d 07 10 00 95       	or     $0x95001007,%eax
    185f:	01 00                	add    %eax,(%eax)
    1861:	00 01                	add    %al,(%ecx)
    1863:	17                   	pop    %ss
    1864:	07                   	pop    %es
    1865:	10 00                	adc    %al,(%eax)
    1867:	31 03                	xor    %eax,(%ebx)
    1869:	00 00                	add    %al,(%eax)
    186b:	01 20                	add    %esp,(%eax)
    186d:	07                   	pop    %es
    186e:	10 00                	adc    %al,(%eax)
    1870:	95                   	xchg   %eax,%ebp
    1871:	01 00                	add    %eax,(%eax)
    1873:	00 01                	add    %al,(%ecx)
    1875:	2a 07                	sub    (%edi),%al
    1877:	10 00                	adc    %al,(%eax)
    1879:	31 03                	xor    %eax,(%ebx)
    187b:	00 00                	add    %al,(%eax)
    187d:	01 2f                	add    %ebp,(%edi)
    187f:	07                   	pop    %es
    1880:	10 00                	adc    %al,(%eax)
    1882:	c6 01 00             	movb   $0x0,(%ecx)
    1885:	00 01                	add    %al,(%ecx)
    1887:	3a 07                	cmp    (%edi),%al
    1889:	10 00                	adc    %al,(%eax)
    188b:	95                   	xchg   %eax,%ebp
    188c:	01 00                	add    %eax,(%eax)
    188e:	00 01                	add    %al,(%ecx)
    1890:	43                   	inc    %ebx
    1891:	07                   	pop    %es
    1892:	10 00                	adc    %al,(%eax)
    1894:	31 03                	xor    %eax,(%ebx)
    1896:	00 00                	add    %al,(%eax)
    1898:	01 4c 07 10          	add    %ecx,0x10(%edi,%eax,1)
    189c:	00 95 01 00 00 01    	add    %dl,0x1000001(%ebp)
    18a2:	56                   	push   %esi
    18a3:	07                   	pop    %es
    18a4:	10 00                	adc    %al,(%eax)
    18a6:	31 03                	xor    %eax,(%ebx)
    18a8:	00 00                	add    %al,(%eax)
    18aa:	00 39                	add    %bh,(%ecx)
    18ac:	d2 03                	rolb   %cl,(%ebx)
    18ae:	00 00                	add    %al,(%eax)
    18b0:	00 10                	add    %dl,(%eax)
    18b2:	10 00                	adc    %al,(%eax)
    18b4:	79 00                	jns    18b6 <MBOOT_HEADER_FLAGS+0x18b3>
    18b6:	00 00                	add    %al,(%eax)
    18b8:	01 9c 11 e0 03 00 00 	add    %ebx,0x3e0(%ecx,%edx,1)
    18bf:	9a 08 00 00 96 08 00 	lcall  $0x8,$0x96000008
    18c6:	00 0d d2 03 00 00    	add    %cl,0x3d2
    18cc:	50                   	push   %eax
    18cd:	10 10                	adc    %dl,(%eax)
    18cf:	00 00                	add    %al,(%eax)
    18d1:	25 01 00 00 b1       	and    $0xb1000001,%eax
    18d6:	01 06                	add    %eax,(%esi)
    18d8:	59                   	pop    %ecx
    18d9:	0f 00 00             	sldt   (%eax)
    18dc:	11 e0                	adc    %esp,%eax
    18de:	03 00                	add    (%eax),%eax
    18e0:	00 b1 08 00 00 ab    	add    %dh,-0x54fffff8(%ecx)
    18e6:	08 00                	or     %al,(%eax)
    18e8:	00 0c 79             	add    %cl,(%ecx,%edi,2)
    18eb:	10 10                	adc    %dl,(%eax)
    18ed:	00 50 02             	add    %dl,0x2(%eax)
    18f0:	00 00                	add    %al,(%eax)
    18f2:	00 0c 36             	add    %cl,(%esi,%esi,1)
    18f5:	10 10                	adc    %dl,(%eax)
    18f7:	00 50 02             	add    %dl,0x2(%eax)
    18fa:	00 00                	add    %al,(%eax)
    18fc:	01 47 10             	add    %eax,0x10(%edi)
    18ff:	10 00                	adc    %al,(%eax)
    1901:	50                   	push   %eax
    1902:	02 00                	add    (%eax),%al
    1904:	00 0c 4e             	add    %cl,(%esi,%ecx,2)
    1907:	10 10                	adc    %dl,(%eax)
    1909:	00 ec                	add    %ch,%ah
    190b:	03 00                	add    (%eax),%eax
    190d:	00 00                	add    %al,(%eax)
    190f:	00 80 10 00 00 05    	add    %al,0x5000010(%eax)
    1915:	00 01                	add    %al,(%ecx)
    1917:	04 61                	add    $0x61,%al
    1919:	08 00                	or     %al,(%eax)
    191b:	00 1c 30             	add    %bl,(%eax,%esi,1)
    191e:	00 00                	add    %al,(%eax)
    1920:	00 1d bd 00 00 00    	add    %bl,0xbd
    1926:	00 00                	add    %al,(%eax)
    1928:	00 00                	add    %al,(%eax)
    192a:	00 11                	add    %dl,(%ecx)
    192c:	10 00                	adc    %al,(%eax)
    192e:	94                   	xchg   %eax,%esp
    192f:	03 00                	add    (%eax),%eax
    1931:	00 12                	add    %dl,(%edx)
    1933:	0f 00 00             	sldt   (%eax)
    1936:	0d a1 00 00 00       	or     $0xa1,%eax
    193b:	04 17                	add    $0x17,%al
    193d:	31 00                	xor    %eax,(%eax)
    193f:	00 00                	add    %al,(%eax)
    1941:	09 01                	or     %eax,(%ecx)
    1943:	08 a9 00 00 00 0d    	or     %ch,0xd000000(%ecx)
    1949:	14 01                	adc    $0x1,%al
    194b:	00 00                	add    %al,(%eax)
    194d:	05 18 48 00 00       	add    $0x4818,%eax
    1952:	00 16                	add    %dl,(%esi)
    1954:	38 00                	cmp    %al,(%eax)
    1956:	00 00                	add    %al,(%eax)
    1958:	09 02                	or     %eax,(%edx)
    195a:	07                   	pop    %es
    195b:	f3 00 00             	repz add %al,(%eax)
    195e:	00 0d b7 00 00 00    	add    %cl,0xb7
    1964:	06                   	push   %es
    1965:	16                   	push   %ss
    1966:	5a                   	pop    %edx
    1967:	00 00                	add    %al,(%eax)
    1969:	00 09                	add    %cl,(%ecx)
    196b:	04 07                	add    $0x7,%al
    196d:	2f                   	das
    196e:	04 00                	add    $0x0,%al
    1970:	00 09                	add    %cl,(%ecx)
    1972:	04 07                	add    $0x7,%al
    1974:	2a 04 00             	sub    (%eax,%eax,1),%al
    1977:	00 09                	add    %cl,(%ecx)
    1979:	01 06                	add    %eax,(%esi)
    197b:	b2 00                	mov    $0x0,%dl
    197d:	00 00                	add    %al,(%eax)
    197f:	16                   	push   %ss
    1980:	68 00 00 00 09       	push   $0x9000000
    1985:	02 05 1d 01 00 00    	add    0x11d,%al
    198b:	1d 04 05 69 6e       	sbb    $0x6e690504,%eax
    1990:	74 00                	je     1992 <MBOOT_HEADER_FLAGS+0x198f>
    1992:	09 04 05 c0 00 00 00 	or     %eax,0xc0(,%eax,1)
    1999:	0d 4e 02 00 00       	or     $0x24e,%eax
    199e:	0f 0d 7b 00          	prefetch 0x0(%ebx)
    19a2:	00 00                	add    %al,(%eax)
    19a4:	1e                   	push   %ds
    19a5:	d7                   	xlat   %ds:(%ebx)
    19a6:	05 00 00 01 05       	add    $0x5010000,%eax
    19ab:	0d 89 00 00 00       	or     $0x89,%eax
    19b0:	05 03 60 69 10       	add    $0x10696003,%eax
    19b5:	00 1f                	add    %bl,(%edi)
    19b7:	1d 02 00 00 04       	sbb    $0x4000002,%eax
    19bc:	22 06                	and    (%esi),%al
    19be:	b8 00 00 00 20       	mov    $0x20000000,%eax
    19c3:	b8 00 00 00 00       	mov    $0x0,%eax
    19c8:	0e                   	push   %cs
    19c9:	6f                   	outsl  %ds:(%esi),(%dx)
    19ca:	00 00                	add    %al,(%eax)
    19cc:	00 14 0b             	add    %dl,(%ebx,%ecx,1)
    19cf:	06                   	push   %es
    19d0:	00 00                	add    %al,(%eax)
    19d2:	71 89                	jno    195d <MBOOT_HEADER_FLAGS+0x195a>
    19d4:	00 00                	add    %al,(%eax)
    19d6:	00 20                	add    %ah,(%eax)
    19d8:	13 10                	adc    (%eax),%edx
    19da:	00 74 01 00          	add    %dh,0x0(%ecx,%eax,1)
    19de:	00 01                	add    %al,(%ecx)
    19e0:	9c                   	pushf
    19e1:	80 06 00             	addb   $0x0,(%esi)
    19e4:	00 17                	add    %dl,(%edi)
    19e6:	6c                   	insb   (%dx),%es:(%edi)
    19e7:	62 61 00             	bound  %esp,0x0(%ecx)
    19ea:	71 21                	jno    1a0d <MBOOT_HEADER_FLAGS+0x1a0a>
    19ec:	4f                   	dec    %edi
    19ed:	00 00                	add    %al,(%eax)
    19ef:	00 02                	add    %al,(%edx)
    19f1:	91                   	xchg   %eax,%ecx
    19f2:	00 0f                	add    %cl,(%edi)
    19f4:	1d 06 00 00 71       	sbb    $0x71000006,%eax
    19f9:	2e 26 00 00          	cs add %al,%es:(%eax)
    19fd:	00 e4                	add    %ah,%ah
    19ff:	08 00                	or     %al,(%eax)
    1a01:	00 da                	add    %bl,%dl
    1a03:	08 00                	or     %al,(%eax)
    1a05:	00 0f                	add    %cl,(%edi)
    1a07:	d7                   	xlat   %ds:(%ebx)
    1a08:	0b 00                	or     (%eax),%eax
    1a0a:	00 71 48             	add    %dh,0x48(%ecx)
    1a0d:	80 06 00             	addb   $0x0,(%esi)
    1a10:	00 17                	add    %dl,(%edi)
    1a12:	09 00                	or     %eax,(%eax)
    1a14:	00 0d 09 00 00 10    	add    %cl,0x10000009
    1a1a:	62 75 66             	bound  %esi,0x66(%ebp)
    1a1d:	00 8c 15 86 06 00 00 	add    %cl,0x686(%ebp,%edx,1)
    1a24:	46                   	inc    %esi
    1a25:	09 00                	or     %eax,(%eax)
    1a27:	00 40 09             	add    %al,0x9(%eax)
    1a2a:	00 00                	add    %al,(%eax)
    1a2c:	15 87 02 00 00       	adc    $0x287,%eax
    1a31:	1a 04 00             	sbb    (%eax,%eax,1),%al
    1a34:	00 10                	add    %dl,(%eax)
    1a36:	73 00                	jae    1a38 <MBOOT_HEADER_FLAGS+0x1a35>
    1a38:	8d 0e                	lea    (%esi),%ecx
    1a3a:	7b 00                	jnp    1a3c <MBOOT_HEADER_FLAGS+0x1a39>
    1a3c:	00 00                	add    %al,(%eax)
    1a3e:	65 09 00             	or     %eax,%gs:(%eax)
    1a41:	00 5f 09             	add    %bl,0x9(%edi)
    1a44:	00 00                	add    %al,(%eax)
    1a46:	18 00                	sbb    %al,(%eax)
    1a48:	14 10                	adc    $0x10,%al
    1a4a:	00 11                	add    %dl,(%ecx)
    1a4c:	00 00                	add    %al,(%eax)
    1a4e:	00 7d 01             	add    %bh,0x1(%ebp)
    1a51:	00 00                	add    %al,(%eax)
    1a53:	0c 69                	or     $0x69,%al
    1a55:	00 01                	add    %al,(%ecx)
    1a57:	94                   	xchg   %eax,%esp
    1a58:	12 7b 00             	adc    0x0(%ebx),%bh
    1a5b:	00 00                	add    %al,(%eax)
    1a5d:	07                   	pop    %es
    1a5e:	f3 0f 00 00          	repz sldt (%eax)
    1a62:	00 14 10             	add    %dl,(%eax,%edx,1)
    1a65:	00 02                	add    %al,(%edx)
    1a67:	00 14 10             	add    %dl,(%eax,%edx,1)
    1a6a:	00 0a                	add    %cl,(%edx)
    1a6c:	00 00                	add    %al,(%eax)
    1a6e:	00 95 0d 01 fd 0f    	add    %dl,0xffd010d(%ebp)
    1a74:	00 00                	add    %al,(%eax)
    1a76:	7e 09                	jle    1a81 <MBOOT_HEADER_FLAGS+0x1a7e>
    1a78:	00 00                	add    %al,(%eax)
    1a7a:	7c 09                	jl     1a85 <MBOOT_HEADER_FLAGS+0x1a82>
    1a7c:	00 00                	add    %al,(%eax)
    1a7e:	01 08                	add    %ecx,(%eax)
    1a80:	10 00                	adc    %al,(%eax)
    1a82:	00 8b 09 00 00 89    	add    %cl,-0x76fffff7(%ebx)
    1a88:	09 00                	or     %eax,(%eax)
    1a8a:	00 00                	add    %al,(%eax)
    1a8c:	00 11                	add    %dl,(%ecx)
    1a8e:	9c                   	pushf
    1a8f:	0f 00 00             	sldt   (%eax)
    1a92:	97                   	xchg   %eax,%edi
    1a93:	02 00                	add    (%eax),%al
    1a95:	00 8e 0e a9 02 00    	add    %cl,0x2a90e(%esi)
    1a9b:	00 06                	add    %al,(%esi)
    1a9d:	97                   	xchg   %eax,%edi
    1a9e:	02 00                	add    (%eax),%al
    1aa0:	00 04 aa             	add    %al,(%edx,%ebp,4)
    1aa3:	0f 00 00             	sldt   (%eax)
    1aa6:	98                   	cwtl
    1aa7:	09 00                	or     %eax,(%eax)
    1aa9:	00 94 09 00 00 0a b5 	add    %dl,-0x4af60000(%ecx,%ecx,1)
    1ab0:	0f 00 00             	sldt   (%eax)
    1ab3:	a7                   	cmpsl  %es:(%edi),%ds:(%esi)
    1ab4:	02 00                	add    (%eax),%al
    1ab6:	00 04 b6             	add    %al,(%esi,%esi,4)
    1ab9:	0f 00 00             	sldt   (%eax)
    1abc:	b5 09                	mov    $0x9,%ch
    1abe:	00 00                	add    %al,(%eax)
    1ac0:	b1 09                	mov    $0x9,%cl
    1ac2:	00 00                	add    %al,(%eax)
    1ac4:	05 5e 10 00 00       	add    $0x105e,%eax
    1ac9:	e9 13 10 00 01       	jmp    1002ae1 <stack_top+0xdf6e71>
    1ace:	b7 02                	mov    $0x2,%bh
    1ad0:	00 00                	add    %al,(%eax)
    1ad2:	1d 1a e9 01 00       	sbb    $0x1e91a,%eax
    1ad7:	00 01                	add    %al,(%ecx)
    1ad9:	6b 10 00             	imul   $0x0,(%eax),%edx
    1adc:	00 c6                	add    %al,%dh
    1ade:	09 00                	or     %eax,(%eax)
    1ae0:	00 c4                	add    %al,%ah
    1ae2:	09 00                	or     %eax,(%eax)
    1ae4:	00 06                	add    %al,(%esi)
    1ae6:	b7 02                	mov    $0x2,%bh
    1ae8:	00 00                	add    %al,(%eax)
    1aea:	04 76                	add    $0x76,%al
    1aec:	10 00                	adc    %al,(%eax)
    1aee:	00 d3                	add    %dl,%bl
    1af0:	09 00                	or     %eax,(%eax)
    1af2:	00 d1                	add    %dl,%cl
    1af4:	09 00                	or     %eax,(%eax)
    1af6:	00 00                	add    %al,(%eax)
    1af8:	00 07                	add    %al,(%edi)
    1afa:	ea 0f 00 00 e0 13 10 	ljmp   $0x1013,$0xe000000f
    1b01:	00 01                	add    %al,(%ecx)
    1b03:	e0 13                	loopne 1b18 <MBOOT_HEADER_FLAGS+0x1b15>
    1b05:	10 00                	adc    %al,(%eax)
    1b07:	04 00                	add    $0x0,%al
    1b09:	00 00                	add    %al,(%eax)
    1b0b:	21 09                	and    %ecx,(%ecx)
    1b0d:	03 5e 10             	add    0x10(%esi),%ebx
    1b10:	00 00                	add    %al,(%eax)
    1b12:	e0 13                	loopne 1b27 <MBOOT_HEADER_FLAGS+0x1b24>
    1b14:	10 00                	adc    %al,(%eax)
    1b16:	03 e0                	add    %eax,%esp
    1b18:	13 10                	adc    (%eax),%edx
    1b1a:	00 01                	add    %al,(%ecx)
    1b1c:	00 00                	add    %al,(%eax)
    1b1e:	00 08                	add    %cl,(%eax)
    1b20:	05 28 02 00 00       	add    $0x228,%eax
    1b25:	01 6b 10             	add    %ebp,0x10(%ebx)
    1b28:	00 00                	add    %al,(%eax)
    1b2a:	dd 09                	fisttpll (%ecx)
    1b2c:	00 00                	add    %al,(%eax)
    1b2e:	db 09                	fisttpl (%ecx)
    1b30:	00 00                	add    %al,(%eax)
    1b32:	02 76 10             	add    0x10(%esi),%dh
    1b35:	00 00                	add    %al,(%eax)
    1b37:	00 03                	add    %al,(%ebx)
    1b39:	5e                   	pop    %esi
    1b3a:	10 00                	adc    %al,(%eax)
    1b3c:	00 e1                	add    %ah,%cl
    1b3e:	13 10                	adc    (%eax),%edx
    1b40:	00 03                	add    %al,(%ebx)
    1b42:	e1 13                	loope  1b57 <MBOOT_HEADER_FLAGS+0x1b54>
    1b44:	10 00                	adc    %al,(%eax)
    1b46:	01 00                	add    %eax,(%eax)
    1b48:	00 00                	add    %al,(%eax)
    1b4a:	09 05 53 02 00 00    	or     %eax,0x253
    1b50:	01 6b 10             	add    %ebp,0x10(%ebx)
    1b53:	00 00                	add    %al,(%eax)
    1b55:	ea 09 00 00 e8 09 00 	ljmp   $0x9,$0xe8000009
    1b5c:	00 02                	add    %al,(%edx)
    1b5e:	76 10                	jbe    1b70 <MBOOT_HEADER_FLAGS+0x1b6d>
    1b60:	00 00                	add    %al,(%eax)
    1b62:	00 03                	add    %al,(%ebx)
    1b64:	5e                   	pop    %esi
    1b65:	10 00                	adc    %al,(%eax)
    1b67:	00 e2                	add    %ah,%dl
    1b69:	13 10                	adc    (%eax),%edx
    1b6b:	00 03                	add    %al,(%ebx)
    1b6d:	e2 13                	loop   1b82 <MBOOT_HEADER_FLAGS+0x1b7f>
    1b6f:	10 00                	adc    %al,(%eax)
    1b71:	01 00                	add    %eax,(%eax)
    1b73:	00 00                	add    %al,(%eax)
    1b75:	0a 05 7e 02 00 00    	or     0x27e,%al
    1b7b:	01 6b 10             	add    %ebp,0x10(%ebx)
    1b7e:	00 00                	add    %al,(%eax)
    1b80:	f7 09 00 00 f5 09    	testl  $0x9f50000,(%ecx)
    1b86:	00 00                	add    %al,(%eax)
    1b88:	02 76 10             	add    0x10(%esi),%dh
    1b8b:	00 00                	add    %al,(%eax)
    1b8d:	00 07                	add    %al,(%edi)
    1b8f:	5e                   	pop    %esi
    1b90:	10 00                	adc    %al,(%eax)
    1b92:	00 e3                	add    %ah,%bl
    1b94:	13 10                	adc    (%eax),%edx
    1b96:	00 03                	add    %al,(%ebx)
    1b98:	e3 13                	jecxz  1bad <MBOOT_HEADER_FLAGS+0x1baa>
    1b9a:	10 00                	adc    %al,(%eax)
    1b9c:	01 00                	add    %eax,(%eax)
    1b9e:	00 00                	add    %al,(%eax)
    1ba0:	0b 05 01 6b 10 00    	or     0x106b01,%eax
    1ba6:	00 04 0a             	add    %al,(%edx,%ecx,1)
    1ba9:	00 00                	add    %al,(%eax)
    1bab:	02 0a                	add    (%edx),%cl
    1bad:	00 00                	add    %al,(%eax)
    1baf:	02 76 10             	add    0x10(%esi),%dh
    1bb2:	00 00                	add    %al,(%eax)
    1bb4:	00 00                	add    %al,(%eax)
    1bb6:	00 00                	add    %al,(%eax)
    1bb8:	00 05 3d 10 00 00    	add    %al,0x103d
    1bbe:	11 14 10             	adc    %edx,(%eax,%edx,1)
    1bc1:	00 01                	add    %al,(%ecx)
    1bc3:	c2 02 00             	ret    $0x2
    1bc6:	00 99 09 d8 02 00    	add    %bl,0x2d809(%ecx)
    1bcc:	00 01                	add    %al,(%ecx)
    1bce:	47                   	inc    %edi
    1bcf:	10 00                	adc    %al,(%eax)
    1bd1:	00 11                	add    %dl,(%ecx)
    1bd3:	0a 00                	or     (%eax),%al
    1bd5:	00 0f                	add    %cl,(%edi)
    1bd7:	0a 00                	or     (%eax),%al
    1bd9:	00 01                	add    %al,(%ecx)
    1bdb:	52                   	push   %edx
    1bdc:	10 00                	adc    %al,(%eax)
    1bde:	00 1e                	add    %bl,(%esi)
    1be0:	0a 00                	or     (%eax),%al
    1be2:	00 1c 0a             	add    %bl,(%edx,%ecx,1)
    1be5:	00 00                	add    %al,(%eax)
    1be7:	00 05 c3 0f 00 00    	add    %al,0xfc3
    1bed:	19 14 10             	sbb    %edx,(%eax,%edx,1)
    1bf0:	00 02                	add    %al,(%edx)
    1bf2:	cd 02                	int    $0x2
    1bf4:	00 00                	add    %al,(%eax)
    1bf6:	9a 0e 07 04 00 00 06 	lcall  $0x600,$0x4070e
    1bfd:	cd 02                	int    $0x2
    1bff:	00 00                	add    %al,(%eax)
    1c01:	04 d1                	add    $0xd1,%al
    1c03:	0f 00 00             	sldt   (%eax)
    1c06:	2c 0a                	sub    $0xa,%al
    1c08:	00 00                	add    %al,(%eax)
    1c0a:	28 0a                	sub    %cl,(%edx)
    1c0c:	00 00                	add    %al,(%eax)
    1c0e:	0a dc                	or     %ah,%bl
    1c10:	0f 00 00             	sldt   (%eax)
    1c13:	d8 02                	fadds  (%edx)
    1c15:	00 00                	add    %al,(%eax)
    1c17:	04 dd                	add    $0xdd,%al
    1c19:	0f 00 00             	sldt   (%eax)
    1c1c:	49                   	dec    %ecx
    1c1d:	0a 00                	or     (%eax),%al
    1c1f:	00 45 0a             	add    %al,0xa(%ebp)
    1c22:	00 00                	add    %al,(%eax)
    1c24:	03 ea                	add    %edx,%ebp
    1c26:	0f 00 00             	sldt   (%eax)
    1c29:	20 14 10             	and    %dl,(%eax,%edx,1)
    1c2c:	00 02                	add    %al,(%edx)
    1c2e:	20 14 10             	and    %dl,(%eax,%edx,1)
    1c31:	00 04 00             	add    %al,(%eax,%eax,1)
    1c34:	00 00                	add    %al,(%eax)
    1c36:	15 09 d5 03 00       	adc    $0x3d509,%eax
    1c3b:	00 03                	add    %al,(%ebx)
    1c3d:	5e                   	pop    %esi
    1c3e:	10 00                	adc    %al,(%eax)
    1c40:	00 20                	add    %ah,(%eax)
    1c42:	14 10                	adc    $0x10,%al
    1c44:	00 04 20             	add    %al,(%eax,%eiz,1)
    1c47:	14 10                	adc    $0x10,%al
    1c49:	00 01                	add    %al,(%ecx)
    1c4b:	00 00                	add    %al,(%eax)
    1c4d:	00 08                	add    %cl,(%eax)
    1c4f:	05 57 03 00 00       	add    $0x357,%eax
    1c54:	01 6b 10             	add    %ebp,0x10(%ebx)
    1c57:	00 00                	add    %al,(%eax)
    1c59:	5a                   	pop    %edx
    1c5a:	0a 00                	or     (%eax),%al
    1c5c:	00 58 0a             	add    %bl,0xa(%eax)
    1c5f:	00 00                	add    %al,(%eax)
    1c61:	02 76 10             	add    0x10(%esi),%dh
    1c64:	00 00                	add    %al,(%eax)
    1c66:	00 03                	add    %al,(%ebx)
    1c68:	5e                   	pop    %esi
    1c69:	10 00                	adc    %al,(%eax)
    1c6b:	00 21                	add    %ah,(%ecx)
    1c6d:	14 10                	adc    $0x10,%al
    1c6f:	00 03                	add    %al,(%ebx)
    1c71:	21 14 10             	and    %edx,(%eax,%edx,1)
    1c74:	00 01                	add    %al,(%ecx)
    1c76:	00 00                	add    %al,(%eax)
    1c78:	00 09                	add    %cl,(%ecx)
    1c7a:	05 82 03 00 00       	add    $0x382,%eax
    1c7f:	01 6b 10             	add    %ebp,0x10(%ebx)
    1c82:	00 00                	add    %al,(%eax)
    1c84:	67 0a 00             	or     (%bx,%si),%al
    1c87:	00 65 0a             	add    %ah,0xa(%ebp)
    1c8a:	00 00                	add    %al,(%eax)
    1c8c:	02 76 10             	add    0x10(%esi),%dh
    1c8f:	00 00                	add    %al,(%eax)
    1c91:	00 03                	add    %al,(%ebx)
    1c93:	5e                   	pop    %esi
    1c94:	10 00                	adc    %al,(%eax)
    1c96:	00 22                	add    %ah,(%edx)
    1c98:	14 10                	adc    $0x10,%al
    1c9a:	00 03                	add    %al,(%ebx)
    1c9c:	22 14 10             	and    (%eax,%edx,1),%dl
    1c9f:	00 01                	add    %al,(%ecx)
    1ca1:	00 00                	add    %al,(%eax)
    1ca3:	00 0a                	add    %cl,(%edx)
    1ca5:	05 ad 03 00 00       	add    $0x3ad,%eax
    1caa:	01 6b 10             	add    %ebp,0x10(%ebx)
    1cad:	00 00                	add    %al,(%eax)
    1caf:	74 0a                	je     1cbb <MBOOT_HEADER_FLAGS+0x1cb8>
    1cb1:	00 00                	add    %al,(%eax)
    1cb3:	72 0a                	jb     1cbf <MBOOT_HEADER_FLAGS+0x1cbc>
    1cb5:	00 00                	add    %al,(%eax)
    1cb7:	02 76 10             	add    0x10(%esi),%dh
    1cba:	00 00                	add    %al,(%eax)
    1cbc:	00 07                	add    %al,(%edi)
    1cbe:	5e                   	pop    %esi
    1cbf:	10 00                	adc    %al,(%eax)
    1cc1:	00 23                	add    %ah,(%ebx)
    1cc3:	14 10                	adc    $0x10,%al
    1cc5:	00 03                	add    %al,(%ebx)
    1cc7:	23 14 10             	and    (%eax,%edx,1),%edx
    1cca:	00 01                	add    %al,(%ecx)
    1ccc:	00 00                	add    %al,(%eax)
    1cce:	00 0b                	add    %cl,(%ebx)
    1cd0:	05 01 6b 10 00       	add    $0x106b01,%eax
    1cd5:	00 81 0a 00 00 7f    	add    %al,0x7f00000a(%ecx)
    1cdb:	0a 00                	or     (%eax),%al
    1cdd:	00 02                	add    %al,(%edx)
    1cdf:	76 10                	jbe    1cf1 <MBOOT_HEADER_FLAGS+0x1cee>
    1ce1:	00 00                	add    %al,(%eax)
    1ce3:	00 00                	add    %al,(%eax)
    1ce5:	07                   	pop    %es
    1ce6:	5e                   	pop    %esi
    1ce7:	10 00                	adc    %al,(%eax)
    1ce9:	00 29                	add    %ch,(%ecx)
    1ceb:	14 10                	adc    $0x10,%al
    1ced:	00 01                	add    %al,(%ecx)
    1cef:	29 14 10             	sub    %edx,(%eax,%edx,1)
    1cf2:	00 03                	add    %al,(%ebx)
    1cf4:	00 00                	add    %al,(%eax)
    1cf6:	00 11                	add    %dl,(%ecx)
    1cf8:	1a 01                	sbb    (%ecx),%al
    1cfa:	6b 10 00             	imul   $0x0,(%eax),%edx
    1cfd:	00 8e 0a 00 00 8c    	add    %cl,-0x73fffff6(%esi)
    1d03:	0a 00                	or     (%eax),%al
    1d05:	00 04 76             	add    %al,(%esi,%esi,2)
    1d08:	10 00                	adc    %al,(%eax)
    1d0a:	00 9b 0a 00 00 99    	add    %bl,-0x66fffff6(%ebx)
    1d10:	0a 00                	or     (%eax),%al
    1d12:	00 00                	add    %al,(%eax)
    1d14:	00 00                	add    %al,(%eax)
    1d16:	00 08                	add    %cl,(%eax)
    1d18:	6a 14                	push   $0x14
    1d1a:	10 00                	adc    %al,(%eax)
    1d1c:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
    1d1d:	00 00                	add    %al,(%eax)
    1d1f:	00 08                	add    %cl,(%eax)
    1d21:	77 14                	ja     1d37 <MBOOT_HEADER_FLAGS+0x1d34>
    1d23:	10 00                	adc    %al,(%eax)
    1d25:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
    1d26:	00 00                	add    %al,(%eax)
    1d28:	00 00                	add    %al,(%eax)
    1d2a:	11 c3                	adc    %eax,%ebx
    1d2c:	0f 00 00             	sldt   (%eax)
    1d2f:	31 02                	xor    %eax,(%edx)
    1d31:	00 00                	add    %al,(%eax)
    1d33:	7d 0a                	jge    1d3f <MBOOT_HEADER_FLAGS+0x1d3c>
    1d35:	3e 05 00 00 06 31    	ds add $0x31060000,%eax
    1d3b:	02 00                	add    (%eax),%al
    1d3d:	00 02                	add    %al,(%edx)
    1d3f:	d1 0f                	rorl   $1,(%edi)
    1d41:	00 00                	add    %al,(%eax)
    1d43:	0a dc                	or     %ah,%bl
    1d45:	0f 00 00             	sldt   (%eax)
    1d48:	3c 02                	cmp    $0x2,%al
    1d4a:	00 00                	add    %al,(%eax)
    1d4c:	04 dd                	add    $0xdd,%al
    1d4e:	0f 00 00             	sldt   (%eax)
    1d51:	a7                   	cmpsl  %es:(%edi),%ds:(%esi)
    1d52:	0a 00                	or     (%eax),%al
    1d54:	00 a3 0a 00 00 05    	add    %ah,0x500000a(%ebx)
    1d5a:	5e                   	pop    %esi
    1d5b:	10 00                	adc    %al,(%eax)
    1d5d:	00 65 13             	add    %ah,0x13(%ebp)
    1d60:	10 00                	adc    %al,(%eax)
    1d62:	01 4c 02 00          	add    %ecx,0x0(%edx,%eax,1)
    1d66:	00 11                	add    %dl,(%ecx)
    1d68:	1a 7e 04             	sbb    0x4(%esi),%bh
    1d6b:	00 00                	add    %al,(%eax)
    1d6d:	01 6b 10             	add    %ebp,0x10(%ebx)
    1d70:	00 00                	add    %al,(%eax)
    1d72:	b8 0a 00 00 b6       	mov    $0xb600000a,%eax
    1d77:	0a 00                	or     (%eax),%al
    1d79:	00 06                	add    %al,(%esi)
    1d7b:	4c                   	dec    %esp
    1d7c:	02 00                	add    (%eax),%al
    1d7e:	00 04 76             	add    %al,(%esi,%esi,2)
    1d81:	10 00                	adc    %al,(%eax)
    1d83:	00 c5                	add    %al,%ch
    1d85:	0a 00                	or     (%eax),%al
    1d87:	00 c3                	add    %al,%bl
    1d89:	0a 00                	or     (%eax),%al
    1d8b:	00 00                	add    %al,(%eax)
    1d8d:	00 07                	add    %al,(%edi)
    1d8f:	ea 0f 00 00 58 13 10 	ljmp   $0x1013,$0x5800000f
    1d96:	00 01                	add    %al,(%ecx)
    1d98:	58                   	pop    %eax
    1d99:	13 10                	adc    (%eax),%edx
    1d9b:	00 04 00             	add    %al,(%eax,%eax,1)
    1d9e:	00 00                	add    %al,(%eax)
    1da0:	15 09 03 5e 10       	adc    $0x105e0309,%eax
    1da5:	00 00                	add    %al,(%eax)
    1da7:	58                   	pop    %eax
    1da8:	13 10                	adc    (%eax),%edx
    1daa:	00 03                	add    %al,(%ebx)
    1dac:	58                   	pop    %eax
    1dad:	13 10                	adc    (%eax),%edx
    1daf:	00 01                	add    %al,(%ecx)
    1db1:	00 00                	add    %al,(%eax)
    1db3:	00 08                	add    %cl,(%eax)
    1db5:	05 bd 04 00 00       	add    $0x4bd,%eax
    1dba:	01 6b 10             	add    %ebp,0x10(%ebx)
    1dbd:	00 00                	add    %al,(%eax)
    1dbf:	cf                   	iret
    1dc0:	0a 00                	or     (%eax),%al
    1dc2:	00 cd                	add    %cl,%ch
    1dc4:	0a 00                	or     (%eax),%al
    1dc6:	00 02                	add    %al,(%edx)
    1dc8:	76 10                	jbe    1dda <MBOOT_HEADER_FLAGS+0x1dd7>
    1dca:	00 00                	add    %al,(%eax)
    1dcc:	00 03                	add    %al,(%ebx)
    1dce:	5e                   	pop    %esi
    1dcf:	10 00                	adc    %al,(%eax)
    1dd1:	00 59 13             	add    %bl,0x13(%ecx)
    1dd4:	10 00                	adc    %al,(%eax)
    1dd6:	03 59 13             	add    0x13(%ecx),%ebx
    1dd9:	10 00                	adc    %al,(%eax)
    1ddb:	01 00                	add    %eax,(%eax)
    1ddd:	00 00                	add    %al,(%eax)
    1ddf:	09 05 e8 04 00 00    	or     %eax,0x4e8
    1de5:	01 6b 10             	add    %ebp,0x10(%ebx)
    1de8:	00 00                	add    %al,(%eax)
    1dea:	dc 0a                	fmull  (%edx)
    1dec:	00 00                	add    %al,(%eax)
    1dee:	da 0a                	fimull (%edx)
    1df0:	00 00                	add    %al,(%eax)
    1df2:	02 76 10             	add    0x10(%esi),%dh
    1df5:	00 00                	add    %al,(%eax)
    1df7:	00 03                	add    %al,(%ebx)
    1df9:	5e                   	pop    %esi
    1dfa:	10 00                	adc    %al,(%eax)
    1dfc:	00 5a 13             	add    %bl,0x13(%edx)
    1dff:	10 00                	adc    %al,(%eax)
    1e01:	03 5a 13             	add    0x13(%edx),%ebx
    1e04:	10 00                	adc    %al,(%eax)
    1e06:	01 00                	add    %eax,(%eax)
    1e08:	00 00                	add    %al,(%eax)
    1e0a:	0a 05 13 05 00 00    	or     0x513,%al
    1e10:	01 6b 10             	add    %ebp,0x10(%ebx)
    1e13:	00 00                	add    %al,(%eax)
    1e15:	e9 0a 00 00 e7       	jmp    e7001e24 <MBOOT_CHECKSUM+0x2adce29>
    1e1a:	0a 00                	or     (%eax),%al
    1e1c:	00 02                	add    %al,(%edx)
    1e1e:	76 10                	jbe    1e30 <MBOOT_HEADER_FLAGS+0x1e2d>
    1e20:	00 00                	add    %al,(%eax)
    1e22:	00 07                	add    %al,(%edi)
    1e24:	5e                   	pop    %esi
    1e25:	10 00                	adc    %al,(%eax)
    1e27:	00 5b 13             	add    %bl,0x13(%ebx)
    1e2a:	10 00                	adc    %al,(%eax)
    1e2c:	03 5b 13             	add    0x13(%ebx),%ebx
    1e2f:	10 00                	adc    %al,(%eax)
    1e31:	01 00                	add    %eax,(%eax)
    1e33:	00 00                	add    %al,(%eax)
    1e35:	0b 05 01 6b 10 00    	or     0x106b01,%eax
    1e3b:	00 f6                	add    %dh,%dh
    1e3d:	0a 00                	or     (%eax),%al
    1e3f:	00 f4                	add    %dh,%ah
    1e41:	0a 00                	or     (%eax),%al
    1e43:	00 02                	add    %al,(%edx)
    1e45:	76 10                	jbe    1e57 <MBOOT_HEADER_FLAGS+0x1e54>
    1e47:	00 00                	add    %al,(%eax)
    1e49:	00 00                	add    %al,(%eax)
    1e4b:	00 00                	add    %al,(%eax)
    1e4d:	00 05 3d 10 00 00    	add    %al,0x103d
    1e53:	6c                   	insb   (%dx),%es:(%edi)
    1e54:	13 10                	adc    (%eax),%edx
    1e56:	00 01                	add    %al,(%ecx)
    1e58:	57                   	push   %edi
    1e59:	02 00                	add    (%eax),%al
    1e5b:	00 83 05 6d 05 00    	add    %al,0x56d05(%ebx)
    1e61:	00 01                	add    %al,(%ecx)
    1e63:	47                   	inc    %edi
    1e64:	10 00                	adc    %al,(%eax)
    1e66:	00 03                	add    %al,(%ebx)
    1e68:	0b 00                	or     (%eax),%eax
    1e6a:	00 01                	add    %al,(%ecx)
    1e6c:	0b 00                	or     (%eax),%eax
    1e6e:	00 01                	add    %al,(%ecx)
    1e70:	52                   	push   %edx
    1e71:	10 00                	adc    %al,(%eax)
    1e73:	00 10                	add    %dl,(%eax)
    1e75:	0b 00                	or     (%eax),%eax
    1e77:	00 0e                	add    %cl,(%esi)
    1e79:	0b 00                	or     (%eax),%eax
    1e7b:	00 00                	add    %al,(%eax)
    1e7d:	03 3d 10 00 00 7e    	add    0x7e000010,%edi
    1e83:	13 10                	adc    (%eax),%edx
    1e85:	00 02                	add    %al,(%edx)
    1e87:	7e 13                	jle    1e9c <MBOOT_HEADER_FLAGS+0x1e99>
    1e89:	10 00                	adc    %al,(%eax)
    1e8b:	08 00                	or     %al,(%eax)
    1e8d:	00 00                	add    %al,(%eax)
    1e8f:	84 05 a0 05 00 00    	test   %al,0x5a0
    1e95:	01 47 10             	add    %eax,0x10(%edi)
    1e98:	00 00                	add    %al,(%eax)
    1e9a:	23 0b                	and    (%ebx),%ecx
    1e9c:	00 00                	add    %al,(%eax)
    1e9e:	21 0b                	and    %ecx,(%ebx)
    1ea0:	00 00                	add    %al,(%eax)
    1ea2:	01 52 10             	add    %edx,0x10(%edx)
    1ea5:	00 00                	add    %al,(%eax)
    1ea7:	30 0b                	xor    %cl,(%ebx)
    1ea9:	00 00                	add    %al,(%eax)
    1eab:	2e 0b 00             	or     %cs:(%eax),%eax
    1eae:	00 00                	add    %al,(%eax)
    1eb0:	03 3d 10 00 00 86    	add    0x86000010,%edi
    1eb6:	13 10                	adc    (%eax),%edx
    1eb8:	00 02                	add    %al,(%edx)
    1eba:	86 13                	xchg   %dl,(%ebx)
    1ebc:	10 00                	adc    %al,(%eax)
    1ebe:	0a 00                	or     (%eax),%al
    1ec0:	00 00                	add    %al,(%eax)
    1ec2:	85 05 d3 05 00 00    	test   %eax,0x5d3
    1ec8:	01 47 10             	add    %eax,0x10(%edi)
    1ecb:	00 00                	add    %al,(%eax)
    1ecd:	3a 0b                	cmp    (%ebx),%cl
    1ecf:	00 00                	add    %al,(%eax)
    1ed1:	38 0b                	cmp    %cl,(%ebx)
    1ed3:	00 00                	add    %al,(%eax)
    1ed5:	01 52 10             	add    %edx,0x10(%edx)
    1ed8:	00 00                	add    %al,(%eax)
    1eda:	47                   	inc    %edi
    1edb:	0b 00                	or     (%eax),%eax
    1edd:	00 45 0b             	add    %al,0xb(%ebp)
    1ee0:	00 00                	add    %al,(%eax)
    1ee2:	00 05 3d 10 00 00    	add    %al,0x103d
    1ee8:	90                   	nop
    1ee9:	13 10                	adc    (%eax),%edx
    1eeb:	00 02                	add    %al,(%edx)
    1eed:	67 02 00             	add    (%bx,%si),%al
    1ef0:	00 86 05 02 06 00    	add    %al,0x60205(%esi)
    1ef6:	00 01                	add    %al,(%ecx)
    1ef8:	47                   	inc    %edi
    1ef9:	10 00                	adc    %al,(%eax)
    1efb:	00 52 0b             	add    %dl,0xb(%edx)
    1efe:	00 00                	add    %al,(%eax)
    1f00:	50                   	push   %eax
    1f01:	0b 00                	or     (%eax),%eax
    1f03:	00 01                	add    %al,(%ecx)
    1f05:	52                   	push   %edx
    1f06:	10 00                	adc    %al,(%eax)
    1f08:	00 5f 0b             	add    %bl,0xb(%edi)
    1f0b:	00 00                	add    %al,(%eax)
    1f0d:	5d                   	pop    %ebp
    1f0e:	0b 00                	or     (%eax),%eax
    1f10:	00 00                	add    %al,(%eax)
    1f12:	05 3d 10 00 00       	add    $0x103d,%eax
    1f17:	9c                   	pushf
    1f18:	13 10                	adc    (%eax),%edx
    1f1a:	00 02                	add    %al,(%edx)
    1f1c:	77 02                	ja     1f20 <MBOOT_HEADER_FLAGS+0x1f1d>
    1f1e:	00 00                	add    %al,(%eax)
    1f20:	87 05 31 06 00 00    	xchg   %eax,0x631
    1f26:	01 47 10             	add    %eax,0x10(%edi)
    1f29:	00 00                	add    %al,(%eax)
    1f2b:	6a 0b                	push   $0xb
    1f2d:	00 00                	add    %al,(%eax)
    1f2f:	68 0b 00 00 01       	push   $0x100000b
    1f34:	52                   	push   %edx
    1f35:	10 00                	adc    %al,(%eax)
    1f37:	00 77 0b             	add    %dh,0xb(%edi)
    1f3a:	00 00                	add    %al,(%eax)
    1f3c:	75 0b                	jne    1f49 <MBOOT_HEADER_FLAGS+0x1f46>
    1f3e:	00 00                	add    %al,(%eax)
    1f40:	00 03                	add    %al,(%ebx)
    1f42:	3d 10 00 00 a8       	cmp    $0xa8000010,%eax
    1f47:	13 10                	adc    (%eax),%edx
    1f49:	00 02                	add    %al,(%edx)
    1f4b:	a8 13                	test   $0x13,%al
    1f4d:	10 00                	adc    %al,(%eax)
    1f4f:	08 00                	or     %al,(%eax)
    1f51:	00 00                	add    %al,(%eax)
    1f53:	8a 05 64 06 00 00    	mov    0x664,%al
    1f59:	01 47 10             	add    %eax,0x10(%edi)
    1f5c:	00 00                	add    %al,(%eax)
    1f5e:	82 0b 00             	orb    $0x0,(%ebx)
    1f61:	00 80 0b 00 00 01    	add    %al,0x100000b(%eax)
    1f67:	52                   	push   %edx
    1f68:	10 00                	adc    %al,(%eax)
    1f6a:	00 8f 0b 00 00 8d    	add    %cl,-0x72fffff5(%edi)
    1f70:	0b 00                	or     (%eax),%eax
    1f72:	00 00                	add    %al,(%eax)
    1f74:	08 55 14             	or     %dl,0x14(%ebp)
    1f77:	10 00                	adc    %al,(%eax)
    1f79:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
    1f7a:	00 00                	add    %al,(%eax)
    1f7c:	00 08                	add    %cl,(%eax)
    1f7e:	84 14 10             	test   %dl,(%eax,%edx,1)
    1f81:	00 a6 00 00 00 08    	add    %ah,0x8000000(%esi)
    1f87:	91                   	xchg   %eax,%ecx
    1f88:	14 10                	adc    $0x10,%al
    1f8a:	00 a6 00 00 00 00    	add    %ah,0x0(%esi)
    1f90:	0e                   	push   %cs
    1f91:	85 06                	test   %eax,(%esi)
    1f93:	00 00                	add    %al,(%eax)
    1f95:	21 0e                	and    %ecx,(%esi)
    1f97:	43                   	inc    %ebx
    1f98:	00 00                	add    %al,(%eax)
    1f9a:	00 14 2f             	add    %dl,(%edi,%ebp,1)
    1f9d:	06                   	push   %es
    1f9e:	00 00                	add    %al,(%eax)
    1fa0:	46                   	inc    %esi
    1fa1:	89 00                	mov    %eax,(%eax)
    1fa3:	00 00                	add    %al,(%eax)
    1fa5:	c0 11 10             	rclb   $0x10,(%ecx)
    1fa8:	00 5f 01             	add    %bl,0x1(%edi)
    1fab:	00 00                	add    %al,(%eax)
    1fad:	01 9c e5 0a 00 00 17 	add    %ebx,0x1700000a(%ebp,%eiz,8)
    1fb4:	6c                   	insb   (%dx),%es:(%edi)
    1fb5:	62 61 00             	bound  %esp,0x0(%ecx)
    1fb8:	46                   	inc    %esi
    1fb9:	20 4f 00             	and    %cl,0x0(%edi)
    1fbc:	00 00                	add    %al,(%eax)
    1fbe:	02 91 00 0f 1d 06    	add    0x61d0f00(%ecx),%dl
    1fc4:	00 00                	add    %al,(%eax)
    1fc6:	46                   	inc    %esi
    1fc7:	2d 26 00 00 00       	sub    $0x26,%eax
    1fcc:	a3 0b 00 00 99       	mov    %eax,0x9900000b
    1fd1:	0b 00                	or     (%eax),%eax
    1fd3:	00 0f                	add    %cl,(%edi)
    1fd5:	d7                   	xlat   %ds:(%ebx)
    1fd6:	0b 00                	or     (%eax),%eax
    1fd8:	00 46 41             	add    %al,0x41(%esi)
    1fdb:	e5 0a                	in     $0xa,%eax
    1fdd:	00 00                	add    %al,(%eax)
    1fdf:	d6                   	(bad)
    1fe0:	0b 00                	or     (%eax),%eax
    1fe2:	00 cc                	add    %cl,%ah
    1fe4:	0b 00                	or     (%eax),%eax
    1fe6:	00 10                	add    %dl,(%eax)
    1fe8:	62 75 66             	bound  %esi,0x66(%ebp)
    1feb:	00 61 0f             	add    %ah,0xf(%ecx)
    1fee:	e7 0a                	out    %eax,$0xa
    1ff0:	00 00                	add    %al,(%eax)
    1ff2:	05 0c 00 00 ff       	add    $0xff00000c,%eax
    1ff7:	0b 00                	or     (%eax),%eax
    1ff9:	00 15 e0 01 00 00    	add    %dl,0x1e0
    1fff:	7f 08                	jg     2009 <MBOOT_HEADER_FLAGS+0x2006>
    2001:	00 00                	add    %al,(%eax)
    2003:	10 73 00             	adc    %dh,0x0(%ebx)
    2006:	62 0e                	bound  %ecx,(%esi)
    2008:	7b 00                	jnp    200a <MBOOT_HEADER_FLAGS+0x2007>
    200a:	00 00                	add    %al,(%eax)
    200c:	26 0c 00             	es or  $0x0,%al
    200f:	00 1e                	add    %bl,(%esi)
    2011:	0c 00                	or     $0x0,%al
    2013:	00 15 1b 02 00 00    	add    %dl,0x21b
    2019:	49                   	dec    %ecx
    201a:	07                   	pop    %es
    201b:	00 00                	add    %al,(%eax)
    201d:	0c 69                	or     $0x69,%al
    201f:	00 01                	add    %al,(%ecx)
    2021:	69 12 7b 00 00 00    	imul   $0x7b,(%edx),%edx
    2027:	12 14 10             	adc    (%eax,%edx,1),%dl
    202a:	00 00                	add    %al,(%eax)
    202c:	b0 12                	mov    $0x12,%al
    202e:	10 00                	adc    %al,(%eax)
    2030:	02 26                	add    (%esi),%ah
    2032:	02 00                	add    (%eax),%al
    2034:	00 6a 22             	add    %ch,0x22(%edx)
    2037:	01 25 10 00 00 48    	add    %esp,0x48000010
    203d:	0c 00                	or     $0x0,%al
    203f:	00 46 0c             	add    %al,0xc(%esi)
    2042:	00 00                	add    %al,(%eax)
    2044:	06                   	push   %es
    2045:	26 02 00             	add    %es:(%eax),%al
    2048:	00 04 30             	add    %al,(%eax,%esi,1)
    204b:	10 00                	adc    %al,(%eax)
    204d:	00 55 0c             	add    %dl,0xc(%ebp)
    2050:	00 00                	add    %al,(%eax)
    2052:	53                   	push   %ebx
    2053:	0c 00                	or     $0x0,%al
    2055:	00 00                	add    %al,(%eax)
    2057:	00 00                	add    %al,(%eax)
    2059:	11 9c 0f 00 00 f0 01 	adc    %ebx,0x1f00000(%edi,%ecx,1)
    2060:	00 00                	add    %al,(%eax)
    2062:	63 0e                	arpl   %ecx,(%esi)
    2064:	75 08                	jne    206e <MBOOT_HEADER_FLAGS+0x206b>
    2066:	00 00                	add    %al,(%eax)
    2068:	06                   	push   %es
    2069:	f0 01 00             	lock add %eax,(%eax)
    206c:	00 04 aa             	add    %al,(%edx,%ebp,4)
    206f:	0f 00 00             	sldt   (%eax)
    2072:	61                   	popa
    2073:	0c 00                	or     $0x0,%al
    2075:	00 5d 0c             	add    %bl,0xc(%ebp)
    2078:	00 00                	add    %al,(%eax)
    207a:	0a b5 0f 00 00 00    	or     0xf(%ebp),%dh
    2080:	02 00                	add    (%eax),%al
    2082:	00 04 b6             	add    %al,(%esi,%esi,4)
    2085:	0f 00 00             	sldt   (%eax)
    2088:	7e 0c                	jle    2096 <MBOOT_HEADER_FLAGS+0x2093>
    208a:	00 00                	add    %al,(%eax)
    208c:	7a 0c                	jp     209a <MBOOT_HEADER_FLAGS+0x2097>
    208e:	00 00                	add    %al,(%eax)
    2090:	05 5e 10 00 00       	add    $0x105e,%eax
    2095:	99                   	cltd
    2096:	12 10                	adc    (%eax),%dl
    2098:	00 01                	add    %al,(%ecx)
    209a:	10 02                	adc    %al,(%edx)
    209c:	00 00                	add    %al,(%eax)
    209e:	1d 1a b5 07 00       	sbb    $0x7b51a,%eax
    20a3:	00 01                	add    %al,(%ecx)
    20a5:	6b 10 00             	imul   $0x0,(%eax),%edx
    20a8:	00 8f 0c 00 00 8d    	add    %cl,-0x72fffff4(%edi)
    20ae:	0c 00                	or     $0x0,%al
    20b0:	00 06                	add    %al,(%esi)
    20b2:	10 02                	adc    %al,(%edx)
    20b4:	00 00                	add    %al,(%eax)
    20b6:	04 76                	add    $0x76,%al
    20b8:	10 00                	adc    %al,(%eax)
    20ba:	00 9c 0c 00 00 9a 0c 	add    %bl,0xc9a0000(%esp,%ecx,1)
    20c1:	00 00                	add    %al,(%eax)
    20c3:	00 00                	add    %al,(%eax)
    20c5:	07                   	pop    %es
    20c6:	ea 0f 00 00 90 12 10 	ljmp   $0x1012,$0x9000000f
    20cd:	00 01                	add    %al,(%ecx)
    20cf:	90                   	nop
    20d0:	12 10                	adc    (%eax),%dl
    20d2:	00 04 00             	add    %al,(%eax,%eax,1)
    20d5:	00 00                	add    %al,(%eax)
    20d7:	21 09                	and    %ecx,(%ecx)
    20d9:	03 5e 10             	add    0x10(%esi),%ebx
    20dc:	00 00                	add    %al,(%eax)
    20de:	90                   	nop
    20df:	12 10                	adc    (%eax),%dl
    20e1:	00 03                	add    %al,(%ebx)
    20e3:	90                   	nop
    20e4:	12 10                	adc    (%eax),%dl
    20e6:	00 01                	add    %al,(%ecx)
    20e8:	00 00                	add    %al,(%eax)
    20ea:	00 08                	add    %cl,(%eax)
    20ec:	05 f4 07 00 00       	add    $0x7f4,%eax
    20f1:	01 6b 10             	add    %ebp,0x10(%ebx)
    20f4:	00 00                	add    %al,(%eax)
    20f6:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
    20f7:	0c 00                	or     $0x0,%al
    20f9:	00 a4 0c 00 00 02 76 	add    %ah,0x76020000(%esp,%ecx,1)
    2100:	10 00                	adc    %al,(%eax)
    2102:	00 00                	add    %al,(%eax)
    2104:	03 5e 10             	add    0x10(%esi),%ebx
    2107:	00 00                	add    %al,(%eax)
    2109:	91                   	xchg   %eax,%ecx
    210a:	12 10                	adc    (%eax),%dl
    210c:	00 03                	add    %al,(%ebx)
    210e:	91                   	xchg   %eax,%ecx
    210f:	12 10                	adc    (%eax),%dl
    2111:	00 01                	add    %al,(%ecx)
    2113:	00 00                	add    %al,(%eax)
    2115:	00 09                	add    %cl,(%ecx)
    2117:	05 1f 08 00 00       	add    $0x81f,%eax
    211c:	01 6b 10             	add    %ebp,0x10(%ebx)
    211f:	00 00                	add    %al,(%eax)
    2121:	b3 0c                	mov    $0xc,%bl
    2123:	00 00                	add    %al,(%eax)
    2125:	b1 0c                	mov    $0xc,%cl
    2127:	00 00                	add    %al,(%eax)
    2129:	02 76 10             	add    0x10(%esi),%dh
    212c:	00 00                	add    %al,(%eax)
    212e:	00 03                	add    %al,(%ebx)
    2130:	5e                   	pop    %esi
    2131:	10 00                	adc    %al,(%eax)
    2133:	00 92 12 10 00 03    	add    %dl,0x3001012(%edx)
    2139:	92                   	xchg   %eax,%edx
    213a:	12 10                	adc    (%eax),%dl
    213c:	00 01                	add    %al,(%ecx)
    213e:	00 00                	add    %al,(%eax)
    2140:	00 0a                	add    %cl,(%edx)
    2142:	05 4a 08 00 00       	add    $0x84a,%eax
    2147:	01 6b 10             	add    %ebp,0x10(%ebx)
    214a:	00 00                	add    %al,(%eax)
    214c:	c0 0c 00 00          	rorb   $0x0,(%eax,%eax,1)
    2150:	be 0c 00 00 02       	mov    $0x200000c,%esi
    2155:	76 10                	jbe    2167 <MBOOT_HEADER_FLAGS+0x2164>
    2157:	00 00                	add    %al,(%eax)
    2159:	00 07                	add    %al,(%edi)
    215b:	5e                   	pop    %esi
    215c:	10 00                	adc    %al,(%eax)
    215e:	00 93 12 10 00 03    	add    %dl,0x3001012(%ebx)
    2164:	93                   	xchg   %eax,%ebx
    2165:	12 10                	adc    (%eax),%dl
    2167:	00 01                	add    %al,(%ecx)
    2169:	00 00                	add    %al,(%eax)
    216b:	00 0b                	add    %cl,(%ebx)
    216d:	05 01 6b 10 00       	add    $0x106b01,%eax
    2172:	00 cd                	add    %cl,%ch
    2174:	0c 00                	or     $0x0,%al
    2176:	00 cb                	add    %cl,%bl
    2178:	0c 00                	or     $0x0,%al
    217a:	00 02                	add    %al,(%edx)
    217c:	76 10                	jbe    218e <MBOOT_HEADER_FLAGS+0x218b>
    217e:	00 00                	add    %al,(%eax)
    2180:	00 00                	add    %al,(%eax)
    2182:	00 00                	add    %al,(%eax)
    2184:	00 08                	add    %cl,(%eax)
    2186:	e7 12                	out    %eax,$0x12
    2188:	10 00                	adc    %al,(%eax)
    218a:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
    218b:	00 00                	add    %al,(%eax)
    218d:	00 00                	add    %al,(%eax)
    218f:	11 c3                	adc    %eax,%ebx
    2191:	0f 00 00             	sldt   (%eax)
    2194:	8a 01                	mov    (%ecx),%al
    2196:	00 00                	add    %al,(%eax)
    2198:	52                   	push   %edx
    2199:	0a a3 09 00 00 06    	or     0x6000009(%ebx),%ah
    219f:	8a 01                	mov    (%ecx),%al
    21a1:	00 00                	add    %al,(%eax)
    21a3:	02 d1                	add    %cl,%dl
    21a5:	0f 00 00             	sldt   (%eax)
    21a8:	0a dc                	or     %ah,%bl
    21aa:	0f 00 00             	sldt   (%eax)
    21ad:	95                   	xchg   %eax,%ebp
    21ae:	01 00                	add    %eax,(%eax)
    21b0:	00 04 dd 0f 00 00 dc 	add    %al,-0x23fffff1(,%ebx,8)
    21b7:	0c 00                	or     $0x0,%al
    21b9:	00 d8                	add    %bl,%al
    21bb:	0c 00                	or     $0x0,%al
    21bd:	00 05 5e 10 00 00    	add    %al,0x105e
    21c3:	05 12 10 00 01       	add    $0x1001012,%eax
    21c8:	a5                   	movsl  %ds:(%esi),%es:(%edi)
    21c9:	01 00                	add    %eax,(%eax)
    21cb:	00 11                	add    %dl,(%ecx)
    21cd:	1a e3                	sbb    %bl,%ah
    21cf:	08 00                	or     %al,(%eax)
    21d1:	00 01                	add    %al,(%ecx)
    21d3:	6b 10 00             	imul   $0x0,(%eax),%edx
    21d6:	00 ed                	add    %ch,%ch
    21d8:	0c 00                	or     $0x0,%al
    21da:	00 eb                	add    %ch,%bl
    21dc:	0c 00                	or     $0x0,%al
    21de:	00 06                	add    %al,(%esi)
    21e0:	a5                   	movsl  %ds:(%esi),%es:(%edi)
    21e1:	01 00                	add    %eax,(%eax)
    21e3:	00 04 76             	add    %al,(%esi,%esi,2)
    21e6:	10 00                	adc    %al,(%eax)
    21e8:	00 fa                	add    %bh,%dl
    21ea:	0c 00                	or     $0x0,%al
    21ec:	00 f8                	add    %bh,%al
    21ee:	0c 00                	or     $0x0,%al
    21f0:	00 00                	add    %al,(%eax)
    21f2:	00 07                	add    %al,(%edi)
    21f4:	ea 0f 00 00 f8 11 10 	ljmp   $0x1011,$0xf800000f
    21fb:	00 01                	add    %al,(%ecx)
    21fd:	f8                   	clc
    21fe:	11 10                	adc    %edx,(%eax)
    2200:	00 04 00             	add    %al,(%eax,%eax,1)
    2203:	00 00                	add    %al,(%eax)
    2205:	15 09 03 5e 10       	adc    $0x105e0309,%eax
    220a:	00 00                	add    %al,(%eax)
    220c:	f8                   	clc
    220d:	11 10                	adc    %edx,(%eax)
    220f:	00 03                	add    %al,(%ebx)
    2211:	f8                   	clc
    2212:	11 10                	adc    %edx,(%eax)
    2214:	00 01                	add    %al,(%ecx)
    2216:	00 00                	add    %al,(%eax)
    2218:	00 08                	add    %cl,(%eax)
    221a:	05 22 09 00 00       	add    $0x922,%eax
    221f:	01 6b 10             	add    %ebp,0x10(%ebx)
    2222:	00 00                	add    %al,(%eax)
    2224:	04 0d                	add    $0xd,%al
    2226:	00 00                	add    %al,(%eax)
    2228:	02 0d 00 00 02 76    	add    0x76020000,%cl
    222e:	10 00                	adc    %al,(%eax)
    2230:	00 00                	add    %al,(%eax)
    2232:	03 5e 10             	add    0x10(%esi),%ebx
    2235:	00 00                	add    %al,(%eax)
    2237:	f9                   	stc
    2238:	11 10                	adc    %edx,(%eax)
    223a:	00 03                	add    %al,(%ebx)
    223c:	f9                   	stc
    223d:	11 10                	adc    %edx,(%eax)
    223f:	00 01                	add    %al,(%ecx)
    2241:	00 00                	add    %al,(%eax)
    2243:	00 09                	add    %cl,(%ecx)
    2245:	05 4d 09 00 00       	add    $0x94d,%eax
    224a:	01 6b 10             	add    %ebp,0x10(%ebx)
    224d:	00 00                	add    %al,(%eax)
    224f:	11 0d 00 00 0f 0d    	adc    %ecx,0xd0f0000
    2255:	00 00                	add    %al,(%eax)
    2257:	02 76 10             	add    0x10(%esi),%dh
    225a:	00 00                	add    %al,(%eax)
    225c:	00 03                	add    %al,(%ebx)
    225e:	5e                   	pop    %esi
    225f:	10 00                	adc    %al,(%eax)
    2261:	00 fa                	add    %bh,%dl
    2263:	11 10                	adc    %edx,(%eax)
    2265:	00 03                	add    %al,(%ebx)
    2267:	fa                   	cli
    2268:	11 10                	adc    %edx,(%eax)
    226a:	00 01                	add    %al,(%ecx)
    226c:	00 00                	add    %al,(%eax)
    226e:	00 0a                	add    %cl,(%edx)
    2270:	05 78 09 00 00       	add    $0x978,%eax
    2275:	01 6b 10             	add    %ebp,0x10(%ebx)
    2278:	00 00                	add    %al,(%eax)
    227a:	1e                   	push   %ds
    227b:	0d 00 00 1c 0d       	or     $0xd1c0000,%eax
    2280:	00 00                	add    %al,(%eax)
    2282:	02 76 10             	add    0x10(%esi),%dh
    2285:	00 00                	add    %al,(%eax)
    2287:	00 07                	add    %al,(%edi)
    2289:	5e                   	pop    %esi
    228a:	10 00                	adc    %al,(%eax)
    228c:	00 fb                	add    %bh,%bl
    228e:	11 10                	adc    %edx,(%eax)
    2290:	00 03                	add    %al,(%ebx)
    2292:	fb                   	sti
    2293:	11 10                	adc    %edx,(%eax)
    2295:	00 01                	add    %al,(%ecx)
    2297:	00 00                	add    %al,(%eax)
    2299:	00 0b                	add    %cl,(%ebx)
    229b:	05 01 6b 10 00       	add    $0x106b01,%eax
    22a0:	00 2b                	add    %ch,(%ebx)
    22a2:	0d 00 00 29 0d       	or     $0xd290000,%eax
    22a7:	00 00                	add    %al,(%eax)
    22a9:	02 76 10             	add    0x10(%esi),%dh
    22ac:	00 00                	add    %al,(%eax)
    22ae:	00 00                	add    %al,(%eax)
    22b0:	00 00                	add    %al,(%eax)
    22b2:	00 05 3d 10 00 00    	add    %al,0x103d
    22b8:	0c 12                	or     $0x12,%al
    22ba:	10 00                	adc    %al,(%eax)
    22bc:	01 b0 01 00 00 58    	add    %esi,0x58000001(%eax)
    22c2:	05 d2 09 00 00       	add    $0x9d2,%eax
    22c7:	01 47 10             	add    %eax,0x10(%edi)
    22ca:	00 00                	add    %al,(%eax)
    22cc:	38 0d 00 00 36 0d    	cmp    %cl,0xd360000
    22d2:	00 00                	add    %al,(%eax)
    22d4:	01 52 10             	add    %edx,0x10(%edx)
    22d7:	00 00                	add    %al,(%eax)
    22d9:	45                   	inc    %ebp
    22da:	0d 00 00 43 0d       	or     $0xd430000,%eax
    22df:	00 00                	add    %al,(%eax)
    22e1:	00 03                	add    %al,(%ebx)
    22e3:	3d 10 00 00 1e       	cmp    $0x1e000010,%eax
    22e8:	12 10                	adc    (%eax),%dl
    22ea:	00 02                	add    %al,(%edx)
    22ec:	1e                   	push   %ds
    22ed:	12 10                	adc    (%eax),%dl
    22ef:	00 08                	add    %cl,(%eax)
    22f1:	00 00                	add    %al,(%eax)
    22f3:	00 59 05             	add    %bl,0x5(%ecx)
    22f6:	05 0a 00 00 01       	add    $0x100000a,%eax
    22fb:	47                   	inc    %edi
    22fc:	10 00                	adc    %al,(%eax)
    22fe:	00 58 0d             	add    %bl,0xd(%eax)
    2301:	00 00                	add    %al,(%eax)
    2303:	56                   	push   %esi
    2304:	0d 00 00 01 52       	or     $0x52010000,%eax
    2309:	10 00                	adc    %al,(%eax)
    230b:	00 65 0d             	add    %ah,0xd(%ebp)
    230e:	00 00                	add    %al,(%eax)
    2310:	63 0d 00 00 00 03    	arpl   %ecx,0x3000000
    2316:	3d 10 00 00 26       	cmp    $0x26000010,%eax
    231b:	12 10                	adc    (%eax),%dl
    231d:	00 02                	add    %al,(%edx)
    231f:	26 12 10             	adc    %es:(%eax),%dl
    2322:	00 0a                	add    %cl,(%edx)
    2324:	00 00                	add    %al,(%eax)
    2326:	00 5a 05             	add    %bl,0x5(%edx)
    2329:	38 0a                	cmp    %cl,(%edx)
    232b:	00 00                	add    %al,(%eax)
    232d:	01 47 10             	add    %eax,0x10(%edi)
    2330:	00 00                	add    %al,(%eax)
    2332:	6f                   	outsl  %ds:(%esi),(%dx)
    2333:	0d 00 00 6d 0d       	or     $0xd6d0000,%eax
    2338:	00 00                	add    %al,(%eax)
    233a:	01 52 10             	add    %edx,0x10(%edx)
    233d:	00 00                	add    %al,(%eax)
    233f:	7c 0d                	jl     234e <MBOOT_HEADER_FLAGS+0x234b>
    2341:	00 00                	add    %al,(%eax)
    2343:	7a 0d                	jp     2352 <MBOOT_HEADER_FLAGS+0x234f>
    2345:	00 00                	add    %al,(%eax)
    2347:	00 05 3d 10 00 00    	add    %al,0x103d
    234d:	30 12                	xor    %dl,(%edx)
    234f:	10 00                	adc    %al,(%eax)
    2351:	02 c0                	add    %al,%al
    2353:	01 00                	add    %eax,(%eax)
    2355:	00 5b 05             	add    %bl,0x5(%ebx)
    2358:	67 0a 00             	or     (%bx,%si),%al
    235b:	00 01                	add    %al,(%ecx)
    235d:	47                   	inc    %edi
    235e:	10 00                	adc    %al,(%eax)
    2360:	00 87 0d 00 00 85    	add    %al,-0x7afffff3(%edi)
    2366:	0d 00 00 01 52       	or     $0x52010000,%eax
    236b:	10 00                	adc    %al,(%eax)
    236d:	00 94 0d 00 00 92 0d 	add    %dl,0xd920000(%ebp,%ecx,1)
    2374:	00 00                	add    %al,(%eax)
    2376:	00 05 3d 10 00 00    	add    %al,0x103d
    237c:	3c 12                	cmp    $0x12,%al
    237e:	10 00                	adc    %al,(%eax)
    2380:	02 d0                	add    %al,%dl
    2382:	01 00                	add    %eax,(%eax)
    2384:	00 5c 05 96          	add    %bl,-0x6a(%ebp,%eax,1)
    2388:	0a 00                	or     (%eax),%al
    238a:	00 01                	add    %al,(%ecx)
    238c:	47                   	inc    %edi
    238d:	10 00                	adc    %al,(%eax)
    238f:	00 9f 0d 00 00 9d    	add    %bl,-0x62fffff3(%edi)
    2395:	0d 00 00 01 52       	or     $0x52010000,%eax
    239a:	10 00                	adc    %al,(%eax)
    239c:	00 ac 0d 00 00 aa 0d 	add    %ch,0xdaa0000(%ebp,%ecx,1)
    23a3:	00 00                	add    %al,(%eax)
    23a5:	00 03                	add    %al,(%ebx)
    23a7:	3d 10 00 00 48       	cmp    $0x48000010,%eax
    23ac:	12 10                	adc    (%eax),%dl
    23ae:	00 02                	add    %al,(%edx)
    23b0:	48                   	dec    %eax
    23b1:	12 10                	adc    (%eax),%dl
    23b3:	00 08                	add    %cl,(%eax)
    23b5:	00 00                	add    %al,(%eax)
    23b7:	00 5f 05             	add    %bl,0x5(%edi)
    23ba:	c9                   	leave
    23bb:	0a 00                	or     (%eax),%al
    23bd:	00 01                	add    %al,(%ecx)
    23bf:	47                   	inc    %edi
    23c0:	10 00                	adc    %al,(%eax)
    23c2:	00 b7 0d 00 00 b5    	add    %dh,-0x4afffff3(%edi)
    23c8:	0d 00 00 01 52       	or     $0x52010000,%eax
    23cd:	10 00                	adc    %al,(%eax)
    23cf:	00 c4                	add    %al,%ah
    23d1:	0d 00 00 c2 0d       	or     $0xdc20000,%eax
    23d6:	00 00                	add    %al,(%eax)
    23d8:	00 08                	add    %cl,(%eax)
    23da:	fc                   	cld
    23db:	12 10                	adc    (%eax),%dl
    23dd:	00 a6 00 00 00 08    	add    %ah,0x8000000(%esi)
    23e3:	0b 13                	or     (%ebx),%edx
    23e5:	10 00                	adc    %al,(%eax)
    23e7:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
    23e8:	00 00                	add    %al,(%eax)
    23ea:	00 08                	add    %cl,(%eax)
    23ec:	1a 13                	sbb    (%ebx),%dl
    23ee:	10 00                	adc    %al,(%eax)
    23f0:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
    23f1:	00 00                	add    %al,(%eax)
    23f3:	00 00                	add    %al,(%eax)
    23f5:	22 04 0e             	and    (%esi,%ecx,1),%al
    23f8:	38 00                	cmp    %al,(%eax)
    23fa:	00 00                	add    %al,(%eax)
    23fc:	14 0d                	adc    $0xd,%al
    23fe:	02 00                	add    (%eax),%al
    2400:	00 26                	add    %ah,(%esi)
    2402:	89 00                	mov    %eax,(%eax)
    2404:	00 00                	add    %al,(%eax)
    2406:	00 11                	add    %dl,(%ecx)
    2408:	10 00                	adc    %al,(%eax)
    240a:	ba 00 00 00 01       	mov    $0x1000000,%edx
    240f:	9c                   	pushf
    2410:	9c                   	pushf
    2411:	0f 00 00             	sldt   (%eax)
    2414:	18 7b 11             	sbb    %bh,0x11(%ebx)
    2417:	10 00                	adc    %al,(%eax)
    2419:	0e                   	push   %cs
    241a:	00 00                	add    %al,(%eax)
    241c:	00 45 0b             	add    %al,0xb(%ebp)
    241f:	00 00                	add    %al,(%eax)
    2421:	0c 69                	or     $0x69,%al
    2423:	00 01                	add    %al,(%ecx)
    2425:	3e 0e                	ds push %cs
    2427:	7b 00                	jnp    2429 <MBOOT_HEADER_FLAGS+0x2426>
    2429:	00 00                	add    %al,(%eax)
    242b:	12 14 10             	adc    (%eax,%edx,1),%dl
    242e:	00 00                	add    %al,(%eax)
    2430:	80 11 10             	adcb   $0x10,(%ecx)
    2433:	00 02                	add    %al,(%edx)
    2435:	7b 01                	jnp    2438 <MBOOT_HEADER_FLAGS+0x2435>
    2437:	00 00                	add    %al,(%eax)
    2439:	3f                   	aas
    243a:	09 01                	or     %eax,(%ecx)
    243c:	25 10 00 00 d2       	and    $0xd2000010,%eax
    2441:	0d 00 00 ce 0d       	or     $0xdce0000,%eax
    2446:	00 00                	add    %al,(%eax)
    2448:	06                   	push   %es
    2449:	7b 01                	jnp    244c <MBOOT_HEADER_FLAGS+0x2449>
    244b:	00 00                	add    %al,(%eax)
    244d:	02 30                	add    (%eax),%dh
    244f:	10 00                	adc    %al,(%eax)
    2451:	00 00                	add    %al,(%eax)
    2453:	00 00                	add    %al,(%eax)
    2455:	03 3d 10 00 00 20    	add    0x20000010,%edi
    245b:	11 10                	adc    %edx,(%eax)
    245d:	00 01                	add    %al,(%ecx)
    245f:	20 11                	and    %dl,(%ecx)
    2461:	10 00                	adc    %al,(%eax)
    2463:	0b 00                	or     (%eax),%eax
    2465:	00 00                	add    %al,(%eax)
    2467:	2c 05                	sub    $0x5,%al
    2469:	78 0b                	js     2476 <MBOOT_HEADER_FLAGS+0x2473>
    246b:	00 00                	add    %al,(%eax)
    246d:	01 47 10             	add    %eax,0x10(%edi)
    2470:	00 00                	add    %al,(%eax)
    2472:	e9 0d 00 00 e7       	jmp    e7002484 <MBOOT_CHECKSUM+0x2add489>
    2477:	0d 00 00 01 52       	or     $0x52010000,%eax
    247c:	10 00                	adc    %al,(%eax)
    247e:	00 f4                	add    %dh,%ah
    2480:	0d 00 00 f2 0d       	or     $0xdf20000,%eax
    2485:	00 00                	add    %al,(%eax)
    2487:	00 05 ea 0f 00 00    	add    %al,0xfea
    248d:	2b 11                	sub    (%ecx),%edx
    248f:	10 00                	adc    %al,(%eax)
    2491:	02 3c 01             	add    (%ecx,%eax,1),%bh
    2494:	00 00                	add    %al,(%eax)
    2496:	2d 05 37 0c 00       	sub    $0xc3705,%eax
    249b:	00 03                	add    %al,(%ebx)
    249d:	5e                   	pop    %esi
    249e:	10 00                	adc    %al,(%eax)
    24a0:	00 2b                	add    %ch,(%ebx)
    24a2:	11 10                	adc    %edx,(%eax)
    24a4:	00 04 2b             	add    %al,(%ebx,%ebp,1)
    24a7:	11 10                	adc    %edx,(%eax)
    24a9:	00 06                	add    %al,(%esi)
    24ab:	00 00                	add    %al,(%eax)
    24ad:	00 08                	add    %cl,(%eax)
    24af:	05 b7 0b 00 00       	add    $0xbb7,%eax
    24b4:	01 6b 10             	add    %ebp,0x10(%ebx)
    24b7:	00 00                	add    %al,(%eax)
    24b9:	fe 0d 00 00 fc 0d    	decb   0xdfc0000
    24bf:	00 00                	add    %al,(%eax)
    24c1:	02 76 10             	add    0x10(%esi),%dh
    24c4:	00 00                	add    %al,(%eax)
    24c6:	00 03                	add    %al,(%ebx)
    24c8:	5e                   	pop    %esi
    24c9:	10 00                	adc    %al,(%eax)
    24cb:	00 31                	add    %dh,(%ecx)
    24cd:	11 10                	adc    %edx,(%eax)
    24cf:	00 03                	add    %al,(%ebx)
    24d1:	31 11                	xor    %edx,(%ecx)
    24d3:	10 00                	adc    %al,(%eax)
    24d5:	01 00                	add    %eax,(%eax)
    24d7:	00 00                	add    %al,(%eax)
    24d9:	09 05 e2 0b 00 00    	or     %eax,0xbe2
    24df:	01 6b 10             	add    %ebp,0x10(%ebx)
    24e2:	00 00                	add    %al,(%eax)
    24e4:	09 0e                	or     %ecx,(%esi)
    24e6:	00 00                	add    %al,(%eax)
    24e8:	07                   	pop    %es
    24e9:	0e                   	push   %cs
    24ea:	00 00                	add    %al,(%eax)
    24ec:	02 76 10             	add    0x10(%esi),%dh
    24ef:	00 00                	add    %al,(%eax)
    24f1:	00 03                	add    %al,(%ebx)
    24f3:	5e                   	pop    %esi
    24f4:	10 00                	adc    %al,(%eax)
    24f6:	00 32                	add    %dh,(%edx)
    24f8:	11 10                	adc    %edx,(%eax)
    24fa:	00 03                	add    %al,(%ebx)
    24fc:	32 11                	xor    (%ecx),%dl
    24fe:	10 00                	adc    %al,(%eax)
    2500:	01 00                	add    %eax,(%eax)
    2502:	00 00                	add    %al,(%eax)
    2504:	0a 05 0d 0c 00 00    	or     0xc0d,%al
    250a:	01 6b 10             	add    %ebp,0x10(%ebx)
    250d:	00 00                	add    %al,(%eax)
    250f:	14 0e                	adc    $0xe,%al
    2511:	00 00                	add    %al,(%eax)
    2513:	12 0e                	adc    (%esi),%cl
    2515:	00 00                	add    %al,(%eax)
    2517:	02 76 10             	add    0x10(%esi),%dh
    251a:	00 00                	add    %al,(%eax)
    251c:	00 12                	add    %dl,(%edx)
    251e:	5e                   	pop    %esi
    251f:	10 00                	adc    %al,(%eax)
    2521:	00 33                	add    %dh,(%ebx)
    2523:	11 10                	adc    %edx,(%eax)
    2525:	00 03                	add    %al,(%ebx)
    2527:	43                   	inc    %ebx
    2528:	01 00                	add    %eax,(%eax)
    252a:	00 0b                	add    %cl,(%ebx)
    252c:	05 01 6b 10 00       	add    $0x106b01,%eax
    2531:	00 1f                	add    %bl,(%edi)
    2533:	0e                   	push   %cs
    2534:	00 00                	add    %al,(%eax)
    2536:	1d 0e 00 00 06       	sbb    $0x600000e,%eax
    253b:	43                   	inc    %ebx
    253c:	01 00                	add    %eax,(%eax)
    253e:	00 02                	add    %al,(%edx)
    2540:	76 10                	jbe    2552 <MBOOT_HEADER_FLAGS+0x254f>
    2542:	00 00                	add    %al,(%eax)
    2544:	00 00                	add    %al,(%eax)
    2546:	00 05 c3 0f 00 00    	add    %al,0xfc3
    254c:	34 11                	xor    $0x11,%al
    254e:	10 00                	adc    %al,(%eax)
    2550:	03 4a 01             	add    0x1(%edx),%ecx
    2553:	00 00                	add    %al,(%eax)
    2555:	30 0a                	xor    %cl,(%edx)
    2557:	66 0d 00 00          	or     $0x0,%ax
    255b:	06                   	push   %es
    255c:	4a                   	dec    %edx
    255d:	01 00                	add    %eax,(%eax)
    255f:	00 04 d1             	add    %al,(%ecx,%edx,8)
    2562:	0f 00 00             	sldt   (%eax)
    2565:	2c 0e                	sub    $0xe,%al
    2567:	00 00                	add    %al,(%eax)
    2569:	28 0e                	sub    %cl,(%esi)
    256b:	00 00                	add    %al,(%eax)
    256d:	0a dc                	or     %ah,%bl
    256f:	0f 00 00             	sldt   (%eax)
    2572:	51                   	push   %ecx
    2573:	01 00                	add    %eax,(%eax)
    2575:	00 04 dd 0f 00 00 45 	add    %al,0x4500000f(,%ebx,8)
    257c:	0e                   	push   %cs
    257d:	00 00                	add    %al,(%eax)
    257f:	41                   	inc    %ecx
    2580:	0e                   	push   %cs
    2581:	00 00                	add    %al,(%eax)
    2583:	03 ea                	add    %edx,%ebp
    2585:	0f 00 00             	sldt   (%eax)
    2588:	40                   	inc    %eax
    2589:	11 10                	adc    %edx,(%eax)
    258b:	00 02                	add    %al,(%edx)
    258d:	40                   	inc    %eax
    258e:	11 10                	adc    %edx,(%eax)
    2590:	00 04 00             	add    %al,(%eax,%eax,1)
    2593:	00 00                	add    %al,(%eax)
    2595:	15 09 34 0d 00       	adc    $0xd3409,%eax
    259a:	00 03                	add    %al,(%ebx)
    259c:	5e                   	pop    %esi
    259d:	10 00                	adc    %al,(%eax)
    259f:	00 40 11             	add    %al,0x11(%eax)
    25a2:	10 00                	adc    %al,(%eax)
    25a4:	04 40                	add    $0x40,%al
    25a6:	11 10                	adc    %edx,(%eax)
    25a8:	00 01                	add    %al,(%ecx)
    25aa:	00 00                	add    %al,(%eax)
    25ac:	00 08                	add    %cl,(%eax)
    25ae:	05 b6 0c 00 00       	add    $0xcb6,%eax
    25b3:	01 6b 10             	add    %ebp,0x10(%ebx)
    25b6:	00 00                	add    %al,(%eax)
    25b8:	52                   	push   %edx
    25b9:	0e                   	push   %cs
    25ba:	00 00                	add    %al,(%eax)
    25bc:	50                   	push   %eax
    25bd:	0e                   	push   %cs
    25be:	00 00                	add    %al,(%eax)
    25c0:	02 76 10             	add    0x10(%esi),%dh
    25c3:	00 00                	add    %al,(%eax)
    25c5:	00 03                	add    %al,(%ebx)
    25c7:	5e                   	pop    %esi
    25c8:	10 00                	adc    %al,(%eax)
    25ca:	00 41 11             	add    %al,0x11(%ecx)
    25cd:	10 00                	adc    %al,(%eax)
    25cf:	03 41 11             	add    0x11(%ecx),%eax
    25d2:	10 00                	adc    %al,(%eax)
    25d4:	01 00                	add    %eax,(%eax)
    25d6:	00 00                	add    %al,(%eax)
    25d8:	09 05 e1 0c 00 00    	or     %eax,0xce1
    25de:	01 6b 10             	add    %ebp,0x10(%ebx)
    25e1:	00 00                	add    %al,(%eax)
    25e3:	5d                   	pop    %ebp
    25e4:	0e                   	push   %cs
    25e5:	00 00                	add    %al,(%eax)
    25e7:	5b                   	pop    %ebx
    25e8:	0e                   	push   %cs
    25e9:	00 00                	add    %al,(%eax)
    25eb:	02 76 10             	add    0x10(%esi),%dh
    25ee:	00 00                	add    %al,(%eax)
    25f0:	00 03                	add    %al,(%ebx)
    25f2:	5e                   	pop    %esi
    25f3:	10 00                	adc    %al,(%eax)
    25f5:	00 42 11             	add    %al,0x11(%edx)
    25f8:	10 00                	adc    %al,(%eax)
    25fa:	03 42 11             	add    0x11(%edx),%eax
    25fd:	10 00                	adc    %al,(%eax)
    25ff:	01 00                	add    %eax,(%eax)
    2601:	00 00                	add    %al,(%eax)
    2603:	0a 05 0c 0d 00 00    	or     0xd0c,%al
    2609:	01 6b 10             	add    %ebp,0x10(%ebx)
    260c:	00 00                	add    %al,(%eax)
    260e:	68 0e 00 00 66       	push   $0x6600000e
    2613:	0e                   	push   %cs
    2614:	00 00                	add    %al,(%eax)
    2616:	02 76 10             	add    0x10(%esi),%dh
    2619:	00 00                	add    %al,(%eax)
    261b:	00 07                	add    %al,(%edi)
    261d:	5e                   	pop    %esi
    261e:	10 00                	adc    %al,(%eax)
    2620:	00 43 11             	add    %al,0x11(%ebx)
    2623:	10 00                	adc    %al,(%eax)
    2625:	03 43 11             	add    0x11(%ebx),%eax
    2628:	10 00                	adc    %al,(%eax)
    262a:	01 00                	add    %eax,(%eax)
    262c:	00 00                	add    %al,(%eax)
    262e:	0b 05 01 6b 10 00    	or     0x106b01,%eax
    2634:	00 73 0e             	add    %dh,0xe(%ebx)
    2637:	00 00                	add    %al,(%eax)
    2639:	71 0e                	jno    2649 <MBOOT_HEADER_FLAGS+0x2646>
    263b:	00 00                	add    %al,(%eax)
    263d:	02 76 10             	add    0x10(%esi),%dh
    2640:	00 00                	add    %al,(%eax)
    2642:	00 00                	add    %al,(%eax)
    2644:	07                   	pop    %es
    2645:	5e                   	pop    %esi
    2646:	10 00                	adc    %al,(%eax)
    2648:	00 49 11             	add    %cl,0x11(%ecx)
    264b:	10 00                	adc    %al,(%eax)
    264d:	01 49 11             	add    %ecx,0x11(%ecx)
    2650:	10 00                	adc    %al,(%eax)
    2652:	01 00                	add    %eax,(%eax)
    2654:	00 00                	add    %al,(%eax)
    2656:	11 1a                	adc    %ebx,(%edx)
    2658:	01 6b 10             	add    %ebp,0x10(%ebx)
    265b:	00 00                	add    %al,(%eax)
    265d:	7e 0e                	jle    266d <MBOOT_HEADER_FLAGS+0x266a>
    265f:	00 00                	add    %al,(%eax)
    2661:	7c 0e                	jl     2671 <MBOOT_HEADER_FLAGS+0x266e>
    2663:	00 00                	add    %al,(%eax)
    2665:	04 76                	add    $0x76,%al
    2667:	10 00                	adc    %al,(%eax)
    2669:	00 89 0e 00 00 87    	add    %cl,-0x78fffff2(%ecx)
    266f:	0e                   	push   %cs
    2670:	00 00                	add    %al,(%eax)
    2672:	00 00                	add    %al,(%eax)
    2674:	00 00                	add    %al,(%eax)
    2676:	03 3d 10 00 00 4e    	add    0x4e000010,%edi
    267c:	11 10                	adc    %edx,(%eax)
    267e:	00 01                	add    %al,(%ecx)
    2680:	4e                   	dec    %esi
    2681:	11 10                	adc    %edx,(%eax)
    2683:	00 06                	add    %al,(%esi)
    2685:	00 00                	add    %al,(%eax)
    2687:	00 35 05 99 0d 00    	add    %dh,0xd9905
    268d:	00 01                	add    %al,(%ecx)
    268f:	47                   	inc    %edi
    2690:	10 00                	adc    %al,(%eax)
    2692:	00 91 0e 00 00 8f    	add    %dl,-0x70fffff2(%ecx)
    2698:	0e                   	push   %cs
    2699:	00 00                	add    %al,(%eax)
    269b:	01 52 10             	add    %edx,0x10(%edx)
    269e:	00 00                	add    %al,(%eax)
    26a0:	9c                   	pushf
    26a1:	0e                   	push   %cs
    26a2:	00 00                	add    %al,(%eax)
    26a4:	9a 0e 00 00 00 05 ea 	lcall  $0xea05,$0xe
    26ab:	0f 00 00             	sldt   (%eax)
    26ae:	54                   	push   %esp
    26af:	11 10                	adc    %edx,(%eax)
    26b1:	00 02                	add    %al,(%edx)
    26b3:	58                   	pop    %eax
    26b4:	01 00                	add    %eax,(%eax)
    26b6:	00 36                	add    %dh,(%esi)
    26b8:	05 58 0e 00 00       	add    $0xe58,%eax
    26bd:	03 5e 10             	add    0x10(%esi),%ebx
    26c0:	00 00                	add    %al,(%eax)
    26c2:	54                   	push   %esp
    26c3:	11 10                	adc    %edx,(%eax)
    26c5:	00 04 54             	add    %al,(%esp,%edx,2)
    26c8:	11 10                	adc    %edx,(%eax)
    26ca:	00 01                	add    %al,(%ecx)
    26cc:	00 00                	add    %al,(%eax)
    26ce:	00 08                	add    %cl,(%eax)
    26d0:	05 d8 0d 00 00       	add    $0xdd8,%eax
    26d5:	01 6b 10             	add    %ebp,0x10(%ebx)
    26d8:	00 00                	add    %al,(%eax)
    26da:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
    26db:	0e                   	push   %cs
    26dc:	00 00                	add    %al,(%eax)
    26de:	a4                   	movsb  %ds:(%esi),%es:(%edi)
    26df:	0e                   	push   %cs
    26e0:	00 00                	add    %al,(%eax)
    26e2:	02 76 10             	add    0x10(%esi),%dh
    26e5:	00 00                	add    %al,(%eax)
    26e7:	00 03                	add    %al,(%ebx)
    26e9:	5e                   	pop    %esi
    26ea:	10 00                	adc    %al,(%eax)
    26ec:	00 55 11             	add    %dl,0x11(%ebp)
    26ef:	10 00                	adc    %al,(%eax)
    26f1:	03 55 11             	add    0x11(%ebp),%edx
    26f4:	10 00                	adc    %al,(%eax)
    26f6:	01 00                	add    %eax,(%eax)
    26f8:	00 00                	add    %al,(%eax)
    26fa:	09 05 03 0e 00 00    	or     %eax,0xe03
    2700:	01 6b 10             	add    %ebp,0x10(%ebx)
    2703:	00 00                	add    %al,(%eax)
    2705:	b1 0e                	mov    $0xe,%cl
    2707:	00 00                	add    %al,(%eax)
    2709:	af                   	scas   %es:(%edi),%eax
    270a:	0e                   	push   %cs
    270b:	00 00                	add    %al,(%eax)
    270d:	02 76 10             	add    0x10(%esi),%dh
    2710:	00 00                	add    %al,(%eax)
    2712:	00 03                	add    %al,(%ebx)
    2714:	5e                   	pop    %esi
    2715:	10 00                	adc    %al,(%eax)
    2717:	00 56 11             	add    %dl,0x11(%esi)
    271a:	10 00                	adc    %al,(%eax)
    271c:	03 56 11             	add    0x11(%esi),%edx
    271f:	10 00                	adc    %al,(%eax)
    2721:	01 00                	add    %eax,(%eax)
    2723:	00 00                	add    %al,(%eax)
    2725:	0a 05 2e 0e 00 00    	or     0xe2e,%al
    272b:	01 6b 10             	add    %ebp,0x10(%ebx)
    272e:	00 00                	add    %al,(%eax)
    2730:	bc 0e 00 00 ba       	mov    $0xba00000e,%esp
    2735:	0e                   	push   %cs
    2736:	00 00                	add    %al,(%eax)
    2738:	02 76 10             	add    0x10(%esi),%dh
    273b:	00 00                	add    %al,(%eax)
    273d:	00 12                	add    %dl,(%edx)
    273f:	5e                   	pop    %esi
    2740:	10 00                	adc    %al,(%eax)
    2742:	00 57 11             	add    %dl,0x11(%edi)
    2745:	10 00                	adc    %al,(%eax)
    2747:	03 5f 01             	add    0x1(%edi),%ebx
    274a:	00 00                	add    %al,(%eax)
    274c:	0b 05 01 6b 10 00    	or     0x106b01,%eax
    2752:	00 c7                	add    %al,%bh
    2754:	0e                   	push   %cs
    2755:	00 00                	add    %al,(%eax)
    2757:	c5 0e                	lds    (%esi),%ecx
    2759:	00 00                	add    %al,(%eax)
    275b:	06                   	push   %es
    275c:	5f                   	pop    %edi
    275d:	01 00                	add    %eax,(%eax)
    275f:	00 02                	add    %al,(%edx)
    2761:	76 10                	jbe    2773 <MBOOT_HEADER_FLAGS+0x2770>
    2763:	00 00                	add    %al,(%eax)
    2765:	00 00                	add    %al,(%eax)
    2767:	00 05 9c 0f 00 00    	add    %al,0xf9c
    276d:	58                   	pop    %eax
    276e:	11 10                	adc    %edx,(%eax)
    2770:	00 03                	add    %al,(%ebx)
    2772:	66 01 00             	add    %ax,(%eax)
    2775:	00 38                	add    %bh,(%eax)
    2777:	0a 89 0f 00 00 06    	or     0x600000f(%ecx),%cl
    277d:	66 01 00             	add    %ax,(%eax)
    2780:	00 04 aa             	add    %al,(%edx,%ebp,4)
    2783:	0f 00 00             	sldt   (%eax)
    2786:	d4 0e                	aam    $0xe
    2788:	00 00                	add    %al,(%eax)
    278a:	d0 0e                	rorb   $1,(%esi)
    278c:	00 00                	add    %al,(%eax)
    278e:	0a b5 0f 00 00 6d    	or     0x6d00000f(%ebp),%dh
    2794:	01 00                	add    %eax,(%eax)
    2796:	00 04 b6             	add    %al,(%esi,%esi,4)
    2799:	0f 00 00             	sldt   (%eax)
    279c:	ed                   	in     (%dx),%eax
    279d:	0e                   	push   %cs
    279e:	00 00                	add    %al,(%eax)
    27a0:	e9 0e 00 00 05       	jmp    50027b3 <stack_top+0x4df6b43>
    27a5:	5e                   	pop    %esi
    27a6:	10 00                	adc    %al,(%eax)
    27a8:	00 71 11             	add    %dh,0x11(%ecx)
    27ab:	10 00                	adc    %al,(%eax)
    27ad:	01 74 01 00          	add    %esi,0x0(%ecx,%eax,1)
    27b1:	00 1d 1a c9 0e 00    	add    %bl,0xec91a
    27b7:	00 01                	add    %al,(%ecx)
    27b9:	6b 10 00             	imul   $0x0,(%eax),%edx
    27bc:	00 fb                	add    %bh,%bl
    27be:	0e                   	push   %cs
    27bf:	00 00                	add    %al,(%eax)
    27c1:	f9                   	stc
    27c2:	0e                   	push   %cs
    27c3:	00 00                	add    %al,(%eax)
    27c5:	06                   	push   %es
    27c6:	74 01                	je     27c9 <MBOOT_HEADER_FLAGS+0x27c6>
    27c8:	00 00                	add    %al,(%eax)
    27ca:	04 76                	add    $0x76,%al
    27cc:	10 00                	adc    %al,(%eax)
    27ce:	00 06                	add    %al,(%esi)
    27d0:	0f 00 00             	sldt   (%eax)
    27d3:	04 0f                	add    $0xf,%al
    27d5:	00 00                	add    %al,(%eax)
    27d7:	00 00                	add    %al,(%eax)
    27d9:	07                   	pop    %es
    27da:	ea 0f 00 00 68 11 10 	ljmp   $0x1011,$0x6800000f
    27e1:	00 02                	add    %al,(%edx)
    27e3:	68 11 10 00 04       	push   $0x4001011
    27e8:	00 00                	add    %al,(%eax)
    27ea:	00 21                	add    %ah,(%ecx)
    27ec:	09 03                	or     %eax,(%ebx)
    27ee:	5e                   	pop    %esi
    27ef:	10 00                	adc    %al,(%eax)
    27f1:	00 68 11             	add    %ch,0x11(%eax)
    27f4:	10 00                	adc    %al,(%eax)
    27f6:	04 68                	add    $0x68,%al
    27f8:	11 10                	adc    %edx,(%eax)
    27fa:	00 01                	add    %al,(%ecx)
    27fc:	00 00                	add    %al,(%eax)
    27fe:	00 08                	add    %cl,(%eax)
    2800:	05 08 0f 00 00       	add    $0xf08,%eax
    2805:	01 6b 10             	add    %ebp,0x10(%ebx)
    2808:	00 00                	add    %al,(%eax)
    280a:	0e                   	push   %cs
    280b:	0f 00 00             	sldt   (%eax)
    280e:	0c 0f                	or     $0xf,%al
    2810:	00 00                	add    %al,(%eax)
    2812:	02 76 10             	add    0x10(%esi),%dh
    2815:	00 00                	add    %al,(%eax)
    2817:	00 03                	add    %al,(%ebx)
    2819:	5e                   	pop    %esi
    281a:	10 00                	adc    %al,(%eax)
    281c:	00 69 11             	add    %ch,0x11(%ecx)
    281f:	10 00                	adc    %al,(%eax)
    2821:	03 69 11             	add    0x11(%ecx),%ebp
    2824:	10 00                	adc    %al,(%eax)
    2826:	01 00                	add    %eax,(%eax)
    2828:	00 00                	add    %al,(%eax)
    282a:	09 05 33 0f 00 00    	or     %eax,0xf33
    2830:	01 6b 10             	add    %ebp,0x10(%ebx)
    2833:	00 00                	add    %al,(%eax)
    2835:	19 0f                	sbb    %ecx,(%edi)
    2837:	00 00                	add    %al,(%eax)
    2839:	17                   	pop    %ss
    283a:	0f 00 00             	sldt   (%eax)
    283d:	02 76 10             	add    0x10(%esi),%dh
    2840:	00 00                	add    %al,(%eax)
    2842:	00 03                	add    %al,(%ebx)
    2844:	5e                   	pop    %esi
    2845:	10 00                	adc    %al,(%eax)
    2847:	00 6a 11             	add    %ch,0x11(%edx)
    284a:	10 00                	adc    %al,(%eax)
    284c:	03 6a 11             	add    0x11(%edx),%ebp
    284f:	10 00                	adc    %al,(%eax)
    2851:	01 00                	add    %eax,(%eax)
    2853:	00 00                	add    %al,(%eax)
    2855:	0a 05 5e 0f 00 00    	or     0xf5e,%al
    285b:	01 6b 10             	add    %ebp,0x10(%ebx)
    285e:	00 00                	add    %al,(%eax)
    2860:	24 0f                	and    $0xf,%al
    2862:	00 00                	add    %al,(%eax)
    2864:	22 0f                	and    (%edi),%cl
    2866:	00 00                	add    %al,(%eax)
    2868:	02 76 10             	add    0x10(%esi),%dh
    286b:	00 00                	add    %al,(%eax)
    286d:	00 07                	add    %al,(%edi)
    286f:	5e                   	pop    %esi
    2870:	10 00                	adc    %al,(%eax)
    2872:	00 6b 11             	add    %ch,0x11(%ebx)
    2875:	10 00                	adc    %al,(%eax)
    2877:	03 6b 11             	add    0x11(%ebx),%ebp
    287a:	10 00                	adc    %al,(%eax)
    287c:	01 00                	add    %eax,(%eax)
    287e:	00 00                	add    %al,(%eax)
    2880:	0b 05 01 6b 10 00    	or     0x106b01,%eax
    2886:	00 2f                	add    %ch,(%edi)
    2888:	0f 00 00             	sldt   (%eax)
    288b:	2d 0f 00 00 02       	sub    $0x200000f,%eax
    2890:	76 10                	jbe    28a2 <MBOOT_HEADER_FLAGS+0x289f>
    2892:	00 00                	add    %al,(%eax)
    2894:	00 00                	add    %al,(%eax)
    2896:	00 00                	add    %al,(%eax)
    2898:	00 08                	add    %cl,(%eax)
    289a:	a2 11 10 00 a6       	mov    %al,0xa6001011
    289f:	00 00                	add    %al,(%eax)
    28a1:	00 08                	add    %cl,(%eax)
    28a3:	b4 11                	mov    $0x11,%ah
    28a5:	10 00                	adc    %al,(%eax)
    28a7:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
    28a8:	00 00                	add    %al,(%eax)
    28aa:	00 00                	add    %al,(%eax)
    28ac:	19 fe                	sbb    %edi,%esi
    28ae:	05 00 00 1a 89       	add    $0x891a0000,%eax
    28b3:	00 00                	add    %al,(%eax)
    28b5:	00 c3                	add    %al,%bl
    28b7:	0f 00 00             	sldt   (%eax)
    28ba:	13 45 06             	adc    0x6(%ebp),%eax
    28bd:	00 00                	add    %al,(%eax)
    28bf:	1b 0e                	sbb    (%esi),%ecx
    28c1:	4f                   	dec    %edi
    28c2:	00 00                	add    %al,(%eax)
    28c4:	00 1a                	add    %bl,(%edx)
    28c6:	13 f7                	adc    %edi,%esi
    28c8:	05 00 00 1d 11       	add    $0x111d0000,%eax
    28cd:	26 00 00             	add    %al,%es:(%eax)
    28d0:	00 00                	add    %al,(%eax)
    28d2:	00 19                	add    %bl,(%ecx)
    28d4:	52                   	push   %edx
    28d5:	06                   	push   %es
    28d6:	00 00                	add    %al,(%eax)
    28d8:	0e                   	push   %cs
    28d9:	89 00                	mov    %eax,(%eax)
    28db:	00 00                	add    %al,(%eax)
    28dd:	ea 0f 00 00 13 45 06 	ljmp   $0x645,$0x1300000f
    28e4:	00 00                	add    %al,(%eax)
    28e6:	0f 0e                	femms
    28e8:	4f                   	dec    %edi
    28e9:	00 00                	add    %al,(%eax)
    28eb:	00 1a                	add    %bl,(%edx)
    28ed:	13 f7                	adc    %edi,%esi
    28ef:	05 00 00 11 11       	add    $0x11110000,%eax
    28f4:	26 00 00             	add    %al,%es:(%eax)
    28f7:	00 00                	add    %al,(%eax)
    28f9:	00 23                	add    %ah,(%ebx)
    28fb:	e7 05                	out    %eax,$0x5
    28fd:	00 00                	add    %al,(%eax)
    28ff:	01 07                	add    %eax,(%edi)
    2901:	0d 01 1b 40 06       	or     $0x6401b01,%eax
    2906:	00 00                	add    %al,(%eax)
    2908:	16                   	push   %ss
    2909:	14 10                	adc    $0x10,%al
    290b:	00 00                	add    %al,(%eax)
    290d:	0b 4d 06             	or     0x6(%ebp),%ecx
    2910:	00 00                	add    %al,(%eax)
    2912:	16                   	push   %ss
    2913:	22 38                	and    (%eax),%bh
    2915:	00 00                	add    %al,(%eax)
    2917:	00 0b                	add    %cl,(%ebx)
    2919:	37                   	aaa
    291a:	03 00                	add    (%eax),%eax
    291c:	00 16                	add    %dl,(%esi)
    291e:	31 38                	xor    %edi,(%eax)
    2920:	00 00                	add    %al,(%eax)
    2922:	00 00                	add    %al,(%eax)
    2924:	24 69                	and    $0x69,%al
    2926:	6e                   	outsb  %ds:(%esi),(%dx)
    2927:	77 00                	ja     2929 <MBOOT_HEADER_FLAGS+0x2926>
    2929:	02 10                	add    (%eax),%dl
    292b:	18 38                	sbb    %bh,(%eax)
    292d:	00 00                	add    %al,(%eax)
    292f:	00 03                	add    %al,(%ebx)
    2931:	3d 10 00 00 0b       	cmp    $0xb000010,%eax
    2936:	4d                   	dec    %ebp
    2937:	06                   	push   %es
    2938:	00 00                	add    %al,(%eax)
    293a:	10 25 38 00 00 00    	adc    %ah,0x38
    2940:	0c 72                	or     $0x72,%al
    2942:	65 74 00             	gs je  2945 <MBOOT_HEADER_FLAGS+0x2942>
    2945:	02 11                	add    (%ecx),%dl
    2947:	0e                   	push   %cs
    2948:	38 00                	cmp    %al,(%eax)
    294a:	00 00                	add    %al,(%eax)
    294c:	00 1b                	add    %bl,(%ebx)
    294e:	2a 06                	sub    (%esi),%al
    2950:	00 00                	add    %al,(%eax)
    2952:	0c 5e                	or     $0x5e,%al
    2954:	10 00                	adc    %al,(%eax)
    2956:	00 0b                	add    %cl,(%ebx)
    2958:	4d                   	dec    %ebp
    2959:	06                   	push   %es
    295a:	00 00                	add    %al,(%eax)
    295c:	0c 22                	or     $0x22,%al
    295e:	38 00                	cmp    %al,(%eax)
    2960:	00 00                	add    %al,(%eax)
    2962:	0b 37                	or     (%edi),%esi
    2964:	03 00                	add    (%eax),%eax
    2966:	00 0c 30             	add    %cl,(%eax,%esi,1)
    2969:	26 00 00             	add    %al,%es:(%eax)
    296c:	00 00                	add    %al,(%eax)
    296e:	25 69 6e 62 00       	and    $0x626e69,%eax
    2973:	02 06                	add    (%esi),%al
    2975:	17                   	pop    %ss
    2976:	26 00 00             	add    %al,%es:(%eax)
    2979:	00 03                	add    %al,(%ebx)
    297b:	0b 4d 06             	or     0x6(%ebp),%ecx
    297e:	00 00                	add    %al,(%eax)
    2980:	06                   	push   %es
    2981:	24 38                	and    $0x38,%al
    2983:	00 00                	add    %al,(%eax)
    2985:	00 0c 72             	add    %cl,(%edx,%esi,2)
    2988:	65 74 00             	gs je  298b <MBOOT_HEADER_FLAGS+0x2988>
    298b:	02 07                	add    (%edi),%al
    298d:	0d 26 00 00 00       	or     $0x26,%eax
    2992:	00 00                	add    %al,(%eax)
    2994:	e4 17                	in     $0x17,%al
    2996:	00 00                	add    %al,(%eax)
    2998:	05 00 01 04 95       	add    $0x95040100,%eax
    299d:	0a 00                	or     (%eax),%al
    299f:	00 2f                	add    %ch,(%edi)
    29a1:	30 00                	xor    %al,(%eax)
    29a3:	00 00                	add    %al,(%eax)
    29a5:	1d eb 00 00 00       	sbb    $0xeb,%eax
    29aa:	00 00                	add    %al,(%eax)
    29ac:	00 00                	add    %al,(%eax)
    29ae:	c0 14 10 00          	rclb   $0x0,(%eax,%edx,1)
    29b2:	e5 13                	in     $0x13,%eax
    29b4:	00 00                	add    %al,(%eax)
    29b6:	d2 17                	rclb   %cl,(%edi)
    29b8:	00 00                	add    %al,(%eax)
    29ba:	10 a1 00 00 00 02    	adc    %ah,0x2000000(%ecx)
    29c0:	04 17                	add    $0x17,%al
    29c2:	32 00                	xor    (%eax),%al
    29c4:	00 00                	add    %al,(%eax)
    29c6:	16                   	push   %ss
    29c7:	01 08                	add    %ecx,(%eax)
    29c9:	a9 00 00 00 10       	test   $0x10000000,%eax
    29ce:	14 01                	adc    $0x1,%al
    29d0:	00 00                	add    %al,(%eax)
    29d2:	02 05 18 45 00 00    	add    0x4518,%al
    29d8:	00 16                	add    %dl,(%esi)
    29da:	02 07                	add    (%edi),%al
    29dc:	f3 00 00             	repz add %al,(%eax)
    29df:	00 10                	add    %dl,(%eax)
    29e1:	b7 00                	mov    $0x0,%bh
    29e3:	00 00                	add    %al,(%eax)
    29e5:	02 06                	add    (%esi),%al
    29e7:	16                   	push   %ss
    29e8:	58                   	pop    %eax
    29e9:	00 00                	add    %al,(%eax)
    29eb:	00 16                	add    %dl,(%esi)
    29ed:	04 07                	add    $0x7,%al
    29ef:	2f                   	das
    29f0:	04 00                	add    $0x0,%al
    29f2:	00 16                	add    %dl,(%esi)
    29f4:	04 07                	add    $0x7,%al
    29f6:	2a 04 00             	sub    (%eax,%eax,1),%al
    29f9:	00 16                	add    %dl,(%esi)
    29fb:	01 06                	add    %eax,(%esi)
    29fd:	b2 00                	mov    $0x0,%dl
    29ff:	00 00                	add    %al,(%eax)
    2a01:	26 66 00 00          	data16 add %al,%es:(%eax)
    2a05:	00 16                	add    %dl,(%esi)
    2a07:	02 05 1d 01 00 00    	add    0x11d,%al
    2a0d:	30 04 05 69 6e 74 00 	xor    %al,0x746e69(,%eax,1)
    2a14:	16                   	push   %ss
    2a15:	04 05                	add    $0x5,%al
    2a17:	c0 00 00             	rolb   $0x0,(%eax)
    2a1a:	00 10                	add    %dl,(%eax)
    2a1c:	b6 02                	mov    $0x2,%dh
    2a1e:	00 00                	add    %al,(%eax)
    2a20:	02 0c 17             	add    (%edi,%edx,1),%cl
    2a23:	5f                   	pop    %edi
    2a24:	00 00                	add    %al,(%eax)
    2a26:	00 10                	add    %dl,(%eax)
    2a28:	4e                   	dec    %esi
    2a29:	02 00                	add    (%eax),%al
    2a2b:	00 02                	add    %al,(%edx)
    2a2d:	0f 0d 79 00          	prefetch 0x0(%ecx)
    2a31:	00 00                	add    %al,(%eax)
    2a33:	27                   	daa
    2a34:	5a                   	pop    %edx
    2a35:	15 eb 01 00 00       	adc    $0x1eb,%eax
    2a3a:	02 84 08 00 00 16 0e 	add    0xe160000(%eax,%ecx,1),%al
    2a41:	eb 01                	jmp    2a44 <MBOOT_HEADER_FLAGS+0x2a41>
    2a43:	00 00                	add    %al,(%eax)
    2a45:	00 02                	add    %al,(%edx)
    2a47:	93                   	xchg   %eax,%ebx
    2a48:	0a 00                	or     (%eax),%al
    2a4a:	00 17                	add    %dl,(%edi)
    2a4c:	0e                   	push   %cs
    2a4d:	fb                   	sti
    2a4e:	01 00                	add    %eax,(%eax)
    2a50:	00 03                	add    %al,(%ebx)
    2a52:	02 10                	add    (%eax),%dl
    2a54:	0a 00                	or     (%eax),%al
    2a56:	00 18                	add    %bl,(%eax)
    2a58:	0e                   	push   %cs
    2a59:	39 00                	cmp    %eax,(%eax)
    2a5b:	00 00                	add    %al,(%eax)
    2a5d:	0b 02                	or     (%edx),%eax
    2a5f:	4a                   	dec    %edx
    2a60:	07                   	pop    %es
    2a61:	00 00                	add    %al,(%eax)
    2a63:	19 0e                	sbb    %ecx,(%esi)
    2a65:	26 00 00             	add    %al,%es:(%eax)
    2a68:	00 0d 02 32 07 00    	add    %cl,0x73202
    2a6e:	00 1a                	add    %bl,(%edx)
    2a70:	0e                   	push   %cs
    2a71:	39 00                	cmp    %eax,(%eax)
    2a73:	00 00                	add    %al,(%eax)
    2a75:	0e                   	push   %cs
    2a76:	02 27                	add    (%edi),%ah
    2a78:	09 00                	or     %eax,(%eax)
    2a7a:	00 1b                	add    %bl,(%ebx)
    2a7c:	0e                   	push   %cs
    2a7d:	26 00 00             	add    %al,%es:(%eax)
    2a80:	00 10                	add    %dl,(%eax)
    2a82:	02 9a 09 00 00 1c    	add    0x1c000009(%edx),%bl
    2a88:	0e                   	push   %cs
    2a89:	39 00                	cmp    %eax,(%eax)
    2a8b:	00 00                	add    %al,(%eax)
    2a8d:	11 02                	adc    %eax,(%edx)
    2a8f:	73 08                	jae    2a99 <MBOOT_HEADER_FLAGS+0x2a96>
    2a91:	00 00                	add    %al,(%eax)
    2a93:	1d 0e 39 00 00       	sbb    $0x390e,%eax
    2a98:	00 13                	add    %dl,(%ebx)
    2a9a:	02 cc                	add    %ah,%cl
    2a9c:	0a 00                	or     (%eax),%al
    2a9e:	00 1e                	add    %bl,(%esi)
    2aa0:	0e                   	push   %cs
    2aa1:	26 00 00             	add    %al,%es:(%eax)
    2aa4:	00 15 02 64 06 00    	add    %dl,0x66402
    2aaa:	00 1f                	add    %bl,(%edi)
    2aac:	0e                   	push   %cs
    2aad:	39 00                	cmp    %eax,(%eax)
    2aaf:	00 00                	add    %al,(%eax)
    2ab1:	16                   	push   %ss
    2ab2:	02 8e 08 00 00 20    	add    0x20000008(%esi),%cl
    2ab8:	0e                   	push   %cs
    2ab9:	39 00                	cmp    %eax,(%eax)
    2abb:	00 00                	add    %al,(%eax)
    2abd:	18 02                	sbb    %al,(%edx)
    2abf:	f5                   	cmc
    2ac0:	07                   	pop    %es
    2ac1:	00 00                	add    %al,(%eax)
    2ac3:	21 0e                	and    %ecx,(%esi)
    2ac5:	39 00                	cmp    %eax,(%eax)
    2ac7:	00 00                	add    %al,(%eax)
    2ac9:	1a 02                	sbb    (%edx),%al
    2acb:	3a 08                	cmp    (%eax),%cl
    2acd:	00 00                	add    %al,(%eax)
    2acf:	22 0e                	and    (%esi),%cl
    2ad1:	4c                   	dec    %esp
    2ad2:	00 00                	add    %al,(%eax)
    2ad4:	00 1c 02             	add    %bl,(%edx,%eax,1)
    2ad7:	9c                   	pushf
    2ad8:	0a 00                	or     (%eax),%al
    2ada:	00 23                	add    %ah,(%ebx)
    2adc:	0e                   	push   %cs
    2add:	4c                   	dec    %esp
    2ade:	00 00                	add    %al,(%eax)
    2ae0:	00 20                	add    %ah,(%eax)
    2ae2:	02 d5                	add    %ch,%dl
    2ae4:	08 00                	or     %al,(%eax)
    2ae6:	00 24 0e             	add    %ah,(%esi,%ecx,1)
    2ae9:	4c                   	dec    %esp
    2aea:	00 00                	add    %al,(%eax)
    2aec:	00 24 02             	add    %ah,(%edx,%eax,1)
    2aef:	92                   	xchg   %eax,%edx
    2af0:	07                   	pop    %es
    2af1:	00 00                	add    %al,(%eax)
    2af3:	25 0e 39 00 00       	and    $0x390e,%eax
    2af8:	00 28                	add    %ch,(%eax)
    2afa:	02 70 06             	add    0x6(%eax),%dh
    2afd:	00 00                	add    %al,(%eax)
    2aff:	26 0e                	es push %cs
    2b01:	39 00                	cmp    %eax,(%eax)
    2b03:	00 00                	add    %al,(%eax)
    2b05:	2a 02                	sub    (%edx),%al
    2b07:	1a 09                	sbb    (%ecx),%cl
    2b09:	00 00                	add    %al,(%eax)
    2b0b:	27                   	daa
    2b0c:	0e                   	push   %cs
    2b0d:	4c                   	dec    %esp
    2b0e:	00 00                	add    %al,(%eax)
    2b10:	00 2c 02             	add    %ch,(%edx,%eax,1)
    2b13:	e1 08                	loope  2b1d <MBOOT_HEADER_FLAGS+0x2b1a>
    2b15:	00 00                	add    %al,(%eax)
    2b17:	28 0e                	sub    %cl,(%esi)
    2b19:	39 00                	cmp    %eax,(%eax)
    2b1b:	00 00                	add    %al,(%eax)
    2b1d:	30 02                	xor    %al,(%edx)
    2b1f:	49                   	dec    %ecx
    2b20:	08 00                	or     %al,(%eax)
    2b22:	00 29                	add    %ch,(%ecx)
    2b24:	0e                   	push   %cs
    2b25:	39 00                	cmp    %eax,(%eax)
    2b27:	00 00                	add    %al,(%eax)
    2b29:	32 02                	xor    (%edx),%al
    2b2b:	54                   	push   %esp
    2b2c:	09 00                	or     %eax,(%eax)
    2b2e:	00 2a                	add    %ch,(%edx)
    2b30:	0e                   	push   %cs
    2b31:	0b 02                	or     (%edx),%eax
    2b33:	00 00                	add    %al,(%eax)
    2b35:	34 02                	xor    $0x2,%al
    2b37:	79 0a                	jns    2b43 <MBOOT_HEADER_FLAGS+0x2b40>
    2b39:	00 00                	add    %al,(%eax)
    2b3b:	2b 0e                	sub    (%esi),%ecx
    2b3d:	26 00 00             	add    %al,%es:(%eax)
    2b40:	00 40 02             	add    %al,0x2(%eax)
    2b43:	12 08                	adc    (%eax),%cl
    2b45:	00 00                	add    %al,(%eax)
    2b47:	2c 0e                	sub    $0xe,%al
    2b49:	26 00 00             	add    %al,%es:(%eax)
    2b4c:	00 41 02             	add    %al,0x2(%ecx)
    2b4f:	2b 08                	sub    (%eax),%ecx
    2b51:	00 00                	add    %al,(%eax)
    2b53:	2d 0e 26 00 00       	sub    $0x260e,%eax
    2b58:	00 42 02             	add    %al,0x2(%edx)
    2b5b:	04 07                	add    $0x7,%al
    2b5d:	00 00                	add    %al,(%eax)
    2b5f:	2e 0e                	cs push %cs
    2b61:	4c                   	dec    %esp
    2b62:	00 00                	add    %al,(%eax)
    2b64:	00 43 02             	add    %al,0x2(%ebx)
    2b67:	e2 09                	loop   2b72 <MBOOT_HEADER_FLAGS+0x2b6f>
    2b69:	00 00                	add    %al,(%eax)
    2b6b:	2f                   	das
    2b6c:	0e                   	push   %cs
    2b6d:	1b 02                	sbb    (%edx),%eax
    2b6f:	00 00                	add    %al,(%eax)
    2b71:	47                   	inc    %edi
    2b72:	02 82 09 00 00 30    	add    0x30000009(%edx),%al
    2b78:	0e                   	push   %cs
    2b79:	fb                   	sti
    2b7a:	01 00                	add    %eax,(%eax)
    2b7c:	00 52 00             	add    %dl,0x0(%edx)
    2b7f:	0b 26                	or     (%esi),%esp
    2b81:	00 00                	add    %al,(%eax)
    2b83:	00 fb                	add    %bh,%bl
    2b85:	01 00                	add    %eax,(%eax)
    2b87:	00 0c 5f             	add    %cl,(%edi,%ebx,2)
    2b8a:	00 00                	add    %al,(%eax)
    2b8c:	00 02                	add    %al,(%edx)
    2b8e:	00 0b                	add    %cl,(%ebx)
    2b90:	26 00 00             	add    %al,%es:(%eax)
    2b93:	00 0b                	add    %cl,(%ebx)
    2b95:	02 00                	add    (%eax),%al
    2b97:	00 0c 5f             	add    %cl,(%edi,%ebx,2)
    2b9a:	00 00                	add    %al,(%eax)
    2b9c:	00 07                	add    %al,(%edi)
    2b9e:	00 0b                	add    %cl,(%ebx)
    2ba0:	26 00 00             	add    %al,%es:(%eax)
    2ba3:	00 1b                	add    %bl,(%ebx)
    2ba5:	02 00                	add    (%eax),%al
    2ba7:	00 0c 5f             	add    %cl,(%edi,%ebx,2)
    2baa:	00 00                	add    %al,(%eax)
    2bac:	00 0b                	add    %cl,(%ebx)
    2bae:	00 0b                	add    %cl,(%ebx)
    2bb0:	26 00 00             	add    %al,%es:(%eax)
    2bb3:	00 2b                	add    %ch,(%ebx)
    2bb5:	02 00                	add    (%eax),%al
    2bb7:	00 0c 5f             	add    %cl,(%edi,%ebx,2)
    2bba:	00 00                	add    %al,(%eax)
    2bbc:	00 0a                	add    %cl,(%edx)
    2bbe:	00 10                	add    %dl,(%eax)
    2bc0:	9c                   	pushf
    2bc1:	07                   	pop    %es
    2bc2:	00 00                	add    %al,(%eax)
    2bc4:	03 31                	add    (%ecx),%esi
    2bc6:	1b 9f 00 00 00 27    	sbb    0x27000000(%edi),%ebx
    2bcc:	20 33                	and    %dh,(%ebx)
    2bce:	cf                   	iret
    2bcf:	02 00                	add    (%eax),%al
    2bd1:	00 02                	add    %al,(%edx)
    2bd3:	8e 0a                	mov    (%edx),%cs
    2bd5:	00 00                	add    %al,(%eax)
    2bd7:	34 0e                	xor    $0xe,%al
    2bd9:	1b 02                	sbb    (%edx),%eax
    2bdb:	00 00                	add    %al,(%eax)
    2bdd:	00 02                	add    %al,(%edx)
    2bdf:	a4                   	movsb  %ds:(%esi),%es:(%edi)
    2be0:	06                   	push   %es
    2be1:	00 00                	add    %al,(%eax)
    2be3:	35 0e 26 00 00       	xor    $0x260e,%eax
    2be8:	00 0b                	add    %cl,(%ebx)
    2bea:	02 51 09             	add    0x9(%ecx),%dl
    2bed:	00 00                	add    %al,(%eax)
    2bef:	36 0e                	ss push %cs
    2bf1:	26 00 00             	add    %al,%es:(%eax)
    2bf4:	00 0c 02             	add    %cl,(%edx,%eax,1)
    2bf7:	21 0a                	and    %ecx,(%edx)
    2bf9:	00 00                	add    %al,(%eax)
    2bfb:	37                   	aaa
    2bfc:	0e                   	push   %cs
    2bfd:	26 00 00             	add    %al,%es:(%eax)
    2c00:	00 0d 02 30 09 00    	add    %cl,0x93002
    2c06:	00 38                	add    %bh,(%eax)
    2c08:	0e                   	push   %cs
    2c09:	39 00                	cmp    %eax,(%eax)
    2c0b:	00 00                	add    %al,(%eax)
    2c0d:	0e                   	push   %cs
    2c0e:	02 d4                	add    %ah,%dl
    2c10:	09 00                	or     %eax,(%eax)
    2c12:	00 39                	add    %bh,(%ecx)
    2c14:	0e                   	push   %cs
    2c15:	39 00                	cmp    %eax,(%eax)
    2c17:	00 00                	add    %al,(%eax)
    2c19:	10 02                	adc    %al,(%edx)
    2c1b:	21 07                	and    %eax,(%edi)
    2c1d:	00 00                	add    %al,(%eax)
    2c1f:	3a 0e                	cmp    (%esi),%cl
    2c21:	39 00                	cmp    %eax,(%eax)
    2c23:	00 00                	add    %al,(%eax)
    2c25:	12 02                	adc    (%edx),%al
    2c27:	ff 07                	incl   (%edi)
    2c29:	00 00                	add    %al,(%eax)
    2c2b:	3b 0e                	cmp    (%esi),%ecx
    2c2d:	39 00                	cmp    %eax,(%eax)
    2c2f:	00 00                	add    %al,(%eax)
    2c31:	14 02                	adc    $0x2,%al
    2c33:	5e                   	pop    %esi
    2c34:	07                   	pop    %es
    2c35:	00 00                	add    %al,(%eax)
    2c37:	3c 0e                	cmp    $0xe,%al
    2c39:	39 00                	cmp    %eax,(%eax)
    2c3b:	00 00                	add    %al,(%eax)
    2c3d:	16                   	push   %ss
    2c3e:	02 8a 09 00 00 3d    	add    0x3d000009(%edx),%cl
    2c44:	0e                   	push   %cs
    2c45:	39 00                	cmp    %eax,(%eax)
    2c47:	00 00                	add    %al,(%eax)
    2c49:	18 02                	sbb    %al,(%edx)
    2c4b:	c0 06 00             	rolb   $0x0,(%esi)
    2c4e:	00 3e                	add    %bh,(%esi)
    2c50:	0e                   	push   %cs
    2c51:	39 00                	cmp    %eax,(%eax)
    2c53:	00 00                	add    %al,(%eax)
    2c55:	1a 02                	sbb    (%edx),%al
    2c57:	5d                   	pop    %ebp
    2c58:	09 00                	or     %eax,(%eax)
    2c5a:	00 3f                	add    %bh,(%edi)
    2c5c:	0e                   	push   %cs
    2c5d:	4c                   	dec    %esp
    2c5e:	00 00                	add    %al,(%eax)
    2c60:	00 1c 00             	add    %bl,(%eax,%eax,1)
    2c63:	10 42 0a             	adc    %al,0xa(%edx)
    2c66:	00 00                	add    %al,(%eax)
    2c68:	03 40 1b             	add    0x1b(%eax),%eax
    2c6b:	37                   	aaa
    2c6c:	02 00                	add    (%eax),%al
    2c6e:	00 26                	add    %ah,(%esi)
    2c70:	cf                   	iret
    2c71:	02 00                	add    (%eax),%al
    2c73:	00 31                	add    %dh,(%ecx)
    2c75:	10 01                	adc    %al,(%ecx)
    2c77:	03 42 09             	add    0x9(%edx),%eax
    2c7a:	0f 03 00             	lsl    (%eax),%eax
    2c7d:	00 02                	add    %al,(%edx)
    2c7f:	bd 07 00 00 43       	mov    $0x43000007,%ebp
    2c84:	0e                   	push   %cs
    2c85:	4c                   	dec    %esp
    2c86:	00 00                	add    %al,(%eax)
    2c88:	00 00                	add    %al,(%eax)
    2c8a:	02 8e 0a 00 00 44    	add    0x4400000a(%esi),%cl
    2c90:	0a 0f                	or     (%edi),%cl
    2c92:	03 00                	add    (%eax),%eax
    2c94:	00 04 02             	add    %al,(%edx,%eax,1)
    2c97:	eb 0a                	jmp    2ca3 <MBOOT_HEADER_FLAGS+0x2ca0>
    2c99:	00 00                	add    %al,(%eax)
    2c9b:	45                   	inc    %ebp
    2c9c:	0a 1f                	or     (%edi),%bl
    2c9e:	03 00                	add    (%eax),%eax
    2ca0:	00 10                	add    %dl,(%eax)
    2ca2:	00 0b                	add    %cl,(%ebx)
    2ca4:	66 00 00             	data16 add %al,(%eax)
    2ca7:	00 1f                	add    %bl,(%edi)
    2ca9:	03 00                	add    (%eax),%eax
    2cab:	00 0c 5f             	add    %cl,(%edi,%ebx,2)
    2cae:	00 00                	add    %al,(%eax)
    2cb0:	00 0b                	add    %cl,(%ebx)
    2cb2:	00 0b                	add    %cl,(%ebx)
    2cb4:	66 00 00             	data16 add %al,(%eax)
    2cb7:	00 2f                	add    %ch,(%edi)
    2cb9:	03 00                	add    (%eax),%eax
    2cbb:	00 0c 5f             	add    %cl,(%edi,%ebx,2)
    2cbe:	00 00                	add    %al,(%eax)
    2cc0:	00 ff                	add    %bh,%bh
    2cc2:	00 10                	add    %dl,(%eax)
    2cc4:	b1 08                	mov    $0x8,%cl
    2cc6:	00 00                	add    %al,(%eax)
    2cc8:	03 46 03             	add    0x3(%esi),%eax
    2ccb:	e0 02                	loopne 2ccf <MBOOT_HEADER_FLAGS+0x2ccc>
    2ccd:	00 00                	add    %al,(%eax)
    2ccf:	1c f7                	sbb    $0xf7,%al
    2cd1:	08 00                	or     %al,(%eax)
    2cd3:	00 08                	add    %cl,(%eax)
    2cd5:	0d 93 00 00 00       	or     $0x93,%eax
    2cda:	0e                   	push   %cs
    2cdb:	d2 06                	rolb   %cl,(%esi)
    2cdd:	00 00                	add    %al,(%eax)
    2cdf:	09 0d 93 00 00 00    	or     %ecx,0x93
    2ce5:	05 03 1c 7c 10       	add    $0x107c1c03,%eax
    2cea:	00 0e                	add    %cl,(%esi)
    2cec:	50                   	push   %eax
    2ced:	08 00                	or     %al,(%eax)
    2cef:	00 0a                	add    %cl,(%edx)
    2cf1:	1c 2b                	sbb    $0x2b,%al
    2cf3:	02 00                	add    (%eax),%al
    2cf5:	00 05 03 c0 7b 10    	add    %al,0x107bc003
    2cfb:	00 0e                	add    %cl,(%esi)
    2cfd:	c5 07                	lds    (%edi),%eax
    2cff:	00 00                	add    %al,(%eax)
    2d01:	0b 11                	or     (%ecx),%edx
    2d03:	4c                   	dec    %esp
    2d04:	00 00                	add    %al,(%eax)
    2d06:	00 05 03 b8 7b 10    	add    %al,0x107bb803
    2d0c:	00 0e                	add    %cl,(%esi)
    2d0e:	c3                   	ret
    2d0f:	08 00                	or     %al,(%eax)
    2d11:	00 0c 11             	add    %cl,(%ecx,%edx,1)
    2d14:	4c                   	dec    %esp
    2d15:	00 00                	add    %al,(%eax)
    2d17:	00 05 03 b4 7b 10    	add    %al,0x107bb403
    2d1d:	00 0e                	add    %cl,(%esi)
    2d1f:	4a                   	dec    %edx
    2d20:	07                   	pop    %es
    2d21:	00 00                	add    %al,(%eax)
    2d23:	0d 11 4c 00 00       	or     $0x4c11,%eax
    2d28:	00 05 03 b0 7b 10    	add    %al,0x107bb003
    2d2e:	00 0e                	add    %cl,(%esi)
    2d30:	92                   	xchg   %eax,%edx
    2d31:	06                   	push   %es
    2d32:	00 00                	add    %al,(%eax)
    2d34:	0e                   	push   %cs
    2d35:	1a 2f                	sbb    (%edi),%ch
    2d37:	03 00                	add    (%eax),%eax
    2d39:	00 05 03 a0 7a 10    	add    %al,0x107aa003
    2d3f:	00 0b                	add    %cl,(%ebx)
    2d41:	2f                   	das
    2d42:	03 00                	add    (%eax),%eax
    2d44:	00 bc 03 00 00 0c 5f 	add    %bh,0x5f0c0000(%ebx,%eax,1)
    2d4b:	00 00                	add    %al,(%eax)
    2d4d:	00 0f                	add    %cl,(%edi)
    2d4f:	00 0e                	add    %cl,(%esi)
    2d51:	e1 06                	loope  2d59 <MBOOT_HEADER_FLAGS+0x2d56>
    2d53:	00 00                	add    %al,(%eax)
    2d55:	0f 1a ac 03 00 00 05 	bndldx 0x3050000(%ebx,%eax,1),(bad)
    2d5c:	03 
    2d5d:	a0 69 10 00 0e       	mov    0xe001069,%al
    2d62:	67 09 00             	or     %eax,(%bx,%si)
    2d65:	00 10                	add    %dl,(%eax)
    2d67:	0c 79                	or     $0x79,%al
    2d69:	00 00                	add    %al,(%eax)
    2d6b:	00 05 03 80 69 10    	add    %al,0x10698003
    2d71:	00 28                	add    %ch,(%eax)
    2d73:	ad                   	lods   %ds:(%esi),%eax
    2d74:	0a 00                	or     (%eax),%al
    2d76:	00 06                	add    %al,(%esi)
    2d78:	06                   	push   %es
    2d79:	f4                   	hlt
    2d7a:	03 00                	add    (%eax),%eax
    2d7c:	00 04 4c             	add    %al,(%esp,%ecx,2)
    2d7f:	00 00                	add    %al,(%eax)
    2d81:	00 04 f4             	add    %al,(%esp,%esi,8)
    2d84:	03 00                	add    (%eax),%eax
    2d86:	00 00                	add    %al,(%eax)
    2d88:	17                   	pop    %ss
    2d89:	66 00 00             	data16 add %al,(%eax)
    2d8c:	00 11                	add    %dl,(%ecx)
    2d8e:	e5 07                	in     $0x7,%eax
    2d90:	00 00                	add    %al,(%eax)
    2d92:	04 09                	add    $0x9,%al
    2d94:	05 79 00 00 00       	add    $0x79,%eax
    2d99:	19 04 00             	sbb    %eax,(%eax,%eax,1)
    2d9c:	00 04 19             	add    %al,(%ecx,%ebx,1)
    2d9f:	04 00                	add    $0x0,%al
    2da1:	00 04 19             	add    %al,(%ecx,%ebx,1)
    2da4:	04 00                	add    $0x0,%al
    2da6:	00 04 87             	add    %al,(%edi,%eax,4)
    2da9:	00 00                	add    %al,(%eax)
    2dab:	00 00                	add    %al,(%eax)
    2dad:	17                   	pop    %ss
    2dae:	1e                   	push   %ds
    2daf:	04 00                	add    $0x0,%al
    2db1:	00 32                	add    %dh,(%edx)
    2db3:	11 0b                	adc    %ecx,(%ebx)
    2db5:	06                   	push   %es
    2db6:	00 00                	add    %al,(%eax)
    2db8:	05 3c 06 93 00       	add    $0x93063c,%eax
    2dbd:	00 00                	add    %al,(%eax)
    2dbf:	3f                   	aas
    2dc0:	04 00                	add    $0x0,%al
    2dc2:	00 04 4c             	add    %al,(%esp,%ecx,2)
    2dc5:	00 00                	add    %al,(%eax)
    2dc7:	00 04 26             	add    %al,(%esi,%eiz,1)
    2dca:	00 00                	add    %al,(%eax)
    2dcc:	00 04 19             	add    %al,(%ecx,%ebx,1)
    2dcf:	04 00                	add    $0x0,%al
    2dd1:	00 00                	add    %al,(%eax)
    2dd3:	11 de                	adc    %ebx,%esi
    2dd5:	07                   	pop    %es
    2dd6:	00 00                	add    %al,(%eax)
    2dd8:	04 0c                	add    $0xc,%al
    2dda:	07                   	pop    %es
    2ddb:	f4                   	hlt
    2ddc:	03 00                	add    (%eax),%eax
    2dde:	00 5a 04             	add    %bl,0x4(%edx)
    2de1:	00 00                	add    %al,(%eax)
    2de3:	04 f4                	add    $0xf4,%al
    2de5:	03 00                	add    (%eax),%eax
    2de7:	00 04 5a             	add    %al,(%edx,%ebx,2)
    2dea:	04 00                	add    $0x0,%al
    2dec:	00 00                	add    %al,(%eax)
    2dee:	17                   	pop    %ss
    2def:	6d                   	insl   (%dx),%es:(%edi)
    2df0:	00 00                	add    %al,(%eax)
    2df2:	00 11                	add    %dl,(%ecx)
    2df4:	43                   	inc    %ebx
    2df5:	07                   	pop    %es
    2df6:	00 00                	add    %al,(%eax)
    2df8:	04 08                	add    $0x8,%al
    2dfa:	07                   	pop    %es
    2dfb:	7f 04                	jg     2e01 <MBOOT_HEADER_FLAGS+0x2dfe>
    2dfd:	00 00                	add    %al,(%eax)
    2dff:	7f 04                	jg     2e05 <MBOOT_HEADER_FLAGS+0x2e02>
    2e01:	00 00                	add    %al,(%eax)
    2e03:	04 7f                	add    $0x7f,%al
    2e05:	04 00                	add    $0x0,%al
    2e07:	00 04 19             	add    %al,(%ecx,%ebx,1)
    2e0a:	04 00                	add    $0x0,%al
    2e0c:	00 04 87             	add    %al,(%edi,%eax,4)
    2e0f:	00 00                	add    %al,(%eax)
    2e11:	00 00                	add    %al,(%eax)
    2e13:	33 04 11             	xor    (%ecx,%edx,1),%eax
    2e16:	9c                   	pushf
    2e17:	03 00                	add    (%eax),%eax
    2e19:	00 04 07             	add    %al,(%edi,%eax,1)
    2e1c:	07                   	pop    %es
    2e1d:	7f 04                	jg     2e23 <MBOOT_HEADER_FLAGS+0x2e20>
    2e1f:	00 00                	add    %al,(%eax)
    2e21:	a1 04 00 00 04       	mov    0x4000004,%eax
    2e26:	7f 04                	jg     2e2c <MBOOT_HEADER_FLAGS+0x2e29>
    2e28:	00 00                	add    %al,(%eax)
    2e2a:	04 79                	add    $0x79,%al
    2e2c:	00 00                	add    %al,(%eax)
    2e2e:	00 04 87             	add    %al,(%edi,%eax,4)
    2e31:	00 00                	add    %al,(%eax)
    2e33:	00 00                	add    %al,(%eax)
    2e35:	11 29                	adc    %ebp,(%ecx)
    2e37:	05 00 00 04 0a       	add    $0xa040000,%eax
    2e3c:	05 79 00 00 00       	add    $0x79,%eax
    2e41:	bc 04 00 00 04       	mov    $0x4000004,%esp
    2e46:	5a                   	pop    %edx
    2e47:	04 00                	add    $0x0,%al
    2e49:	00 04 5a             	add    %al,(%edx,%ebx,2)
    2e4c:	04 00                	add    $0x0,%al
    2e4e:	00 00                	add    %al,(%eax)
    2e50:	11 3e                	adc    %edi,(%esi)
    2e52:	09 00                	or     %eax,(%eax)
    2e54:	00 04 0b             	add    %al,(%ebx,%ecx,1)
    2e57:	07                   	pop    %es
    2e58:	f4                   	hlt
    2e59:	03 00                	add    (%eax),%eax
    2e5b:	00 d7                	add    %dl,%bh
    2e5d:	04 00                	add    $0x0,%al
    2e5f:	00 04 f4             	add    %al,(%esp,%esi,8)
    2e62:	03 00                	add    (%eax),%eax
    2e64:	00 04 5a             	add    %al,(%edx,%ebx,2)
    2e67:	04 00                	add    $0x0,%al
    2e69:	00 00                	add    %al,(%eax)
    2e6b:	28 1d 02 00 00 07    	sub    %bl,0x7000002
    2e71:	22 e8                	and    %al,%ch
    2e73:	04 00                	add    $0x0,%al
    2e75:	00 04 5a             	add    %al,(%edx,%ebx,2)
    2e78:	04 00                	add    $0x0,%al
    2e7a:	00 00                	add    %al,(%eax)
    2e7c:	11 2f                	adc    %ebp,(%edi)
    2e7e:	06                   	push   %es
    2e7f:	00 00                	add    %al,(%eax)
    2e81:	05 3b 06 93 00       	add    $0x93063b,%eax
    2e86:	00 00                	add    %al,(%eax)
    2e88:	08 05 00 00 04 4c    	or     %al,0x4c040000
    2e8e:	00 00                	add    %al,(%eax)
    2e90:	00 04 26             	add    %al,(%esi,%eiz,1)
    2e93:	00 00                	add    %al,(%eax)
    2e95:	00 04 7f             	add    %al,(%edi,%edi,2)
    2e98:	04 00                	add    $0x0,%al
    2e9a:	00 00                	add    %al,(%eax)
    2e9c:	12 fe                	adc    %dh,%bh
    2e9e:	02 00                	add    (%eax),%al
    2ea0:	00 85 02 06 93 00    	add    %al,0x930602(%ebp)
    2ea6:	00 00                	add    %al,(%eax)
    2ea8:	b0 23                	mov    $0x23,%al
    2eaa:	10 00                	adc    %al,(%eax)
    2eac:	f5                   	cmc
    2ead:	04 00                	add    $0x0,%al
    2eaf:	00 01                	add    %al,(%ecx)
    2eb1:	9c                   	pushf
    2eb2:	5b                   	pop    %ebx
    2eb3:	09 00                	or     %eax,(%eax)
    2eb5:	00 13                	add    %dl,(%ebx)
    2eb7:	8e 0a                	mov    (%edx),%cs
    2eb9:	00 00                	add    %al,(%eax)
    2ebb:	85 02                	test   %eax,(%edx)
    2ebd:	22 5a 04             	and    0x4(%edx),%bl
    2ec0:	00 00                	add    %al,(%eax)
    2ec2:	02 91 00 1d d7 0b    	add    0xbd71d00(%ecx),%dl
    2ec8:	00 00                	add    %al,(%eax)
    2eca:	85 02                	test   %eax,(%edx)
    2ecc:	2e 7f 04             	jg,pn  2ed3 <MBOOT_HEADER_FLAGS+0x2ed0>
    2ecf:	00 00                	add    %al,(%eax)
    2ed1:	4a                   	dec    %edx
    2ed2:	0f 00 00             	sldt   (%eax)
    2ed5:	44                   	inc    %esp
    2ed6:	0f 00 00             	sldt   (%eax)
    2ed9:	1d 62 09 00 00       	sbb    $0x962,%eax
    2ede:	85 02                	test   %eax,(%edx)
    2ee0:	40                   	inc    %eax
    2ee1:	5b                   	pop    %ebx
    2ee2:	09 00                	or     %eax,(%eax)
    2ee4:	00 69 0f             	add    %ch,0xf(%ecx)
    2ee7:	00 00                	add    %al,(%eax)
    2ee9:	63 0f                	arpl   %ecx,(%edi)
    2eeb:	00 00                	add    %al,(%eax)
    2eed:	03 c4                	add    %esp,%eax
    2eef:	09 00                	or     %eax,(%eax)
    2ef1:	00 8b 02 0e 4c 00    	add    %cl,0x4c0e02(%ebx)
    2ef7:	00 00                	add    %al,(%eax)
    2ef9:	88 0f                	mov    %cl,(%edi)
    2efb:	00 00                	add    %al,(%eax)
    2efd:	82 0f 00             	orb    $0x0,(%edi)
    2f00:	00 0d 7c 07 00 00    	add    %cl,0x77c
    2f06:	8c 02                	mov    %es,(%edx)
    2f08:	0d 60 09 00 00       	or     $0x960,%eax
    2f0d:	03 91 ec 7b 03 e2    	add    -0x1dfc8414(%ecx),%edx
    2f13:	0b 00                	or     (%eax),%eax
    2f15:	00 8d 02 18 71 09    	add    %cl,0x9711802(%ebp)
    2f1b:	00 00                	add    %al,(%eax)
    2f1d:	b4 0f                	mov    $0xf,%ah
    2f1f:	00 00                	add    %al,(%eax)
    2f21:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
    2f22:	0f 00 00             	sldt   (%eax)
    2f25:	03 be 09 00 00 8e    	add    -0x71fffff7(%esi),%edi
    2f2b:	02 0a                	add    (%edx),%cl
    2f2d:	93                   	xchg   %eax,%ebx
    2f2e:	00 00                	add    %al,(%eax)
    2f30:	00 f8                	add    %bh,%al
    2f32:	0f 00 00             	sldt   (%eax)
    2f35:	f0 0f 00 00          	lock sldt (%eax)
    2f39:	0d 20 05 00 00       	or     $0x520,%eax
    2f3e:	b1 02                	mov    $0x2,%cl
    2f40:	0a 76 09             	or     0x9(%esi),%dh
    2f43:	00 00                	add    %al,(%eax)
    2f45:	03 91 cc 77 03 54    	add    0x540377cc(%ecx),%edx
    2f4b:	0a 00                	or     (%eax),%al
    2f4d:	00 b7 02 0e 4c 00    	add    %dh,0x4c0e02(%edi)
    2f53:	00 00                	add    %al,(%eax)
    2f55:	1b 10                	sbb    (%eax),%edx
    2f57:	00 00                	add    %al,(%eax)
    2f59:	19 10                	sbb    %edx,(%eax)
    2f5b:	00 00                	add    %al,(%eax)
    2f5d:	03 d3                	add    %ebx,%edx
    2f5f:	07                   	pop    %es
    2f60:	00 00                	add    %al,(%eax)
    2f62:	c8 02 0e 4c          	enter  $0xe02,$0x4c
    2f66:	00 00                	add    %al,(%eax)
    2f68:	00 2b                	add    %ch,(%ebx)
    2f6a:	10 00                	adc    %al,(%eax)
    2f6c:	00 23                	add    %ah,(%ebx)
    2f6e:	10 00                	adc    %al,(%eax)
    2f70:	00 03                	add    %al,(%ebx)
    2f72:	b0 07                	mov    $0x7,%al
    2f74:	00 00                	add    %al,(%eax)
    2f76:	c9                   	leave
    2f77:	02 0e                	add    (%esi),%cl
    2f79:	4c                   	dec    %esp
    2f7a:	00 00                	add    %al,(%eax)
    2f7c:	00 55 10             	add    %dl,0x10(%ebp)
    2f7f:	00 00                	add    %al,(%eax)
    2f81:	4f                   	dec    %edi
    2f82:	10 00                	adc    %al,(%eax)
    2f84:	00 06                	add    %al,(%esi)
    2f86:	9f                   	lahf
    2f87:	04 00                	add    $0x0,%al
    2f89:	00 49 07             	add    %cl,0x7(%ecx)
    2f8c:	00 00                	add    %al,(%eax)
    2f8e:	03 bd 0a 00 00 92    	add    -0x6dfffff6(%ebp),%edi
    2f94:	02 12                	add    (%edx),%dl
    2f96:	4c                   	dec    %esp
    2f97:	00 00                	add    %al,(%eax)
    2f99:	00 73 10             	add    %dh,0x10(%ebx)
    2f9c:	00 00                	add    %al,(%eax)
    2f9e:	6d                   	insl   (%dx),%es:(%edi)
    2f9f:	10 00                	adc    %al,(%eax)
    2fa1:	00 06                	add    %al,(%esi)
    2fa3:	bf 04 00 00 dc       	mov    $0xdc000004,%edi
    2fa8:	06                   	push   %es
    2fa9:	00 00                	add    %al,(%eax)
    2fab:	0a 69 00             	or     0x0(%ecx),%ch
    2fae:	94                   	xchg   %eax,%esp
    2faf:	02 17                	add    (%edi),%dl
    2fb1:	4c                   	dec    %esp
    2fb2:	00 00                	add    %al,(%eax)
    2fb4:	00 93 10 00 00 8d    	add    %dl,-0x72fffff0(%ebx)
    2fba:	10 00                	adc    %al,(%eax)
    2fbc:	00 06                	add    %al,(%esi)
    2fbe:	d9 04 00             	flds   (%eax,%eax,1)
    2fc1:	00 d2                	add    %dl,%dl
    2fc3:	06                   	push   %es
    2fc4:	00 00                	add    %al,(%eax)
    2fc6:	14 6a                	adc    $0x6a,%al
    2fc8:	00 9b 02 1b 4c 00    	add    %bl,0x4c1b02(%ebx)
    2fce:	00 00                	add    %al,(%eax)
    2fd0:	29 d8                	sub    %ebx,%eax
    2fd2:	16                   	push   %ss
    2fd3:	00 00                	add    %al,(%eax)
    2fd5:	ee                   	out    %al,(%dx)
    2fd6:	04 00                	add    $0x0,%al
    2fd8:	00 9d 02 19 18 e7    	add    %bl,-0x18e7e6fe(%ebp)
    2fde:	16                   	push   %ss
    2fdf:	00 00                	add    %al,(%eax)
    2fe1:	18 f2                	sbb    %dh,%dl
    2fe3:	16                   	push   %ss
    2fe4:	00 00                	add    %al,(%eax)
    2fe6:	09 ee                	or     %ebp,%esi
    2fe8:	04 00                	add    $0x0,%al
    2fea:	00 0f                	add    %cl,(%edi)
    2fec:	fd                   	std
    2fed:	16                   	push   %ss
    2fee:	00 00                	add    %al,(%eax)
    2ff0:	03 91 ec 77 05 08    	add    0x80577ec(%ecx),%edx
    2ff6:	17                   	pop    %ss
    2ff7:	00 00                	add    %al,(%eax)
    2ff9:	b0 10                	mov    $0x10,%al
    2ffb:	00 00                	add    %al,(%eax)
    2ffd:	ac                   	lods   %ds:(%esi),%al
    2ffe:	10 00                	adc    %al,(%eax)
    3000:	00 05 13 17 00 00    	add    %al,0x1713
    3006:	e1 10                	loope  3018 <MBOOT_HEADER_FLAGS+0x3015>
    3008:	00 00                	add    %al,(%eax)
    300a:	c1 10 00             	rcll   $0x0,(%eax)
    300d:	00 2a                	add    %ch,(%edx)
    300f:	52                   	push   %edx
    3010:	17                   	pop    %ss
    3011:	00 00                	add    %al,(%eax)
    3013:	84 24 10             	test   %ah,(%eax,%edx,1)
    3016:	00 16                	add    %dl,(%esi)
    3018:	00 00                	add    %al,(%eax)
    301a:	00 99 06 00 00 05    	add    %bl,0x5000006(%ecx)
    3020:	57                   	push   %edi
    3021:	17                   	pop    %ss
    3022:	00 00                	add    %al,(%eax)
    3024:	aa                   	stos   %al,%es:(%edi)
    3025:	11 00                	adc    %eax,(%eax)
    3027:	00 a6 11 00 00 00    	add    %ah,0x11(%esi)
    302d:	2a 61 17             	sub    0x17(%ecx),%ah
    3030:	00 00                	add    %al,(%eax)
    3032:	d0 24 10             	shlb   $1,(%eax,%edx,1)
    3035:	00 16                	add    %dl,(%esi)
    3037:	00 00                	add    %al,(%eax)
    3039:	00 b8 06 00 00 05    	add    %bh,0x5000006(%eax)
    303f:	66 17                	popw   %ss
    3041:	00 00                	add    %al,(%eax)
    3043:	c3                   	ret
    3044:	11 00                	adc    %eax,(%eax)
    3046:	00 c1                	add    %al,%cl
    3048:	11 00                	adc    %eax,(%eax)
    304a:	00 00                	add    %al,(%eax)
    304c:	2b 8a 17 00 00 03    	sub    0x3000017(%edx),%ecx
    3052:	05 00 00 05 8b       	add    $0x8b050000,%eax
    3057:	17                   	pop    %ss
    3058:	00 00                	add    %al,(%eax)
    305a:	cf                   	iret
    305b:	11 00                	adc    %eax,(%eax)
    305d:	00 cb                	add    %cl,%bl
    305f:	11 00                	adc    %eax,(%eax)
    3061:	00 00                	add    %al,(%eax)
    3063:	00 00                	add    %al,(%eax)
    3065:	00 01                	add    %al,(%ecx)
    3067:	37                   	aaa
    3068:	24 10                	and    $0x10,%al
    306a:	00 e8                	add    %ch,%al
    306c:	04 00                	add    $0x0,%al
    306e:	00 00                	add    %al,(%eax)
    3070:	1e                   	push   %ds
    3071:	49                   	dec    %ecx
    3072:	15 00 00 f1 23       	adc    $0x23f10000,%eax
    3077:	10 00                	adc    %al,(%eax)
    3079:	01 00                	add    %eax,(%eax)
    307b:	b4 04                	mov    $0x4,%ah
    307d:	00 00                	add    %al,(%eax)
    307f:	92                   	xchg   %eax,%edx
    3080:	02 23                	add    (%ebx),%ah
    3082:	f8                   	clc
    3083:	06                   	push   %es
    3084:	00 00                	add    %al,(%eax)
    3086:	18 58 15             	sbb    %bl,0x15(%eax)
    3089:	00 00                	add    %al,(%eax)
    308b:	00 22                	add    %ah,(%edx)
    308d:	0b 15 00 00 b9 27    	or     0x27b90000,%edx
    3093:	10 00                	adc    %al,(%eax)
    3095:	02 00                	add    (%eax),%al
    3097:	b9 27 10 00 45       	mov    $0x45001027,%ecx
    309c:	00 00                	add    %al,(%eax)
    309e:	00 a6 02 1f 07 1c    	add    %ah,0x1c071f02(%esi)
    30a4:	15 00 00 e3 11       	adc    $0x11e30000,%eax
    30a9:	00 00                	add    %al,(%eax)
    30ab:	df 11                	fists  (%ecx)
    30ad:	00 00                	add    %al,(%eax)
    30af:	05 27 15 00 00       	add    $0x1527,%eax
    30b4:	fc                   	cld
    30b5:	11 00                	adc    %eax,(%eax)
    30b7:	00 fa                	add    %bh,%dl
    30b9:	11 00                	adc    %eax,(%eax)
    30bb:	00 05 32 15 00 00    	add    %al,0x1532
    30c1:	13 12                	adc    (%edx),%edx
    30c3:	00 00                	add    %al,(%eax)
    30c5:	0f 12 00             	movlps (%eax),%xmm0
    30c8:	00 0f                	add    %cl,(%edi)
    30ca:	3d 15 00 00 03       	cmp    $0x3000015,%eax
    30cf:	91                   	xchg   %eax,%ecx
    30d0:	ec                   	in     (%dx),%al
    30d1:	77 01                	ja     30d4 <MBOOT_HEADER_FLAGS+0x30d1>
    30d3:	da 27                	fisubl (%edi)
    30d5:	10 00                	adc    %al,(%eax)
    30d7:	e8 04 00 00 00       	call   30e0 <MBOOT_HEADER_FLAGS+0x30dd>
    30dc:	00 15 66 25 10 00    	add    %dl,0x102566
    30e2:	47                   	inc    %edi
    30e3:	00 00                	add    %al,(%eax)
    30e5:	00 a0 07 00 00 0a    	add    %ah,0xa000007(%eax)
    30eb:	69 00 b8 02 0e 79    	imul   $0x790e02b8,(%eax),%eax
    30f1:	00 00                	add    %al,(%eax)
    30f3:	00 2a                	add    %ch,(%edx)
    30f5:	12 00                	adc    (%eax),%al
    30f7:	00 28                	add    %ch,(%eax)
    30f9:	12 00                	adc    (%eax),%al
    30fb:	00 23                	add    %ah,(%ebx)
    30fd:	66 25 10 00          	and    $0x10,%ax
    3101:	32 00                	xor    (%eax),%al
    3103:	00 00                	add    %al,(%eax)
    3105:	0a 68 65             	or     0x65(%eax),%ch
    3108:	78 00                	js     310a <MBOOT_HEADER_FLAGS+0x3107>
    310a:	b9 02 0e 66 00       	mov    $0x660e02,%ecx
    310f:	00 00                	add    %al,(%eax)
    3111:	35 12 00 00 33       	xor    $0x33000012,%eax
    3116:	12 00                	adc    (%eax),%al
    3118:	00 2c 73             	add    %ch,(%ebx,%esi,2)
    311b:	74 72                	je     318f <MBOOT_HEADER_FLAGS+0x318c>
    311d:	00 ba 02 0e 86 09    	add    %bh,0x9860e02(%edx)
    3123:	00 00                	add    %al,(%eax)
    3125:	03 91 ec 77 01 98    	add    -0x67fe8814(%ecx),%edx
    312b:	25 10 00 d7 04       	and    $0x4d70010,%eax
    3130:	00 00                	add    %al,(%eax)
    3132:	00 00                	add    %al,(%eax)
    3134:	06                   	push   %es
    3135:	0e                   	push   %cs
    3136:	05 00 00 f7 08       	add    $0x8f70000,%eax
    313b:	00 00                	add    %al,(%eax)
    313d:	03 36                	add    (%esi),%esi
    313f:	0a 00                	or     (%eax),%al
    3141:	00 cc                	add    %cl,%ah
    3143:	02 12                	add    (%edx),%dl
    3145:	4c                   	dec    %esp
    3146:	00 00                	add    %al,(%eax)
    3148:	00 4f 12             	add    %cl,0x12(%edi)
    314b:	00 00                	add    %al,(%eax)
    314d:	49                   	dec    %ecx
    314e:	12 00                	adc    (%eax),%al
    3150:	00 03                	add    %al,(%ebx)
    3152:	e9 08 00 00 d6       	jmp    d600315f <MBOOT_HEADER_MAGIC+0xba52815d>
    3157:	02 12                	add    (%edx),%dl
    3159:	4c                   	dec    %esp
    315a:	00 00                	add    %al,(%eax)
    315c:	00 6b 12             	add    %ch,0x12(%ebx)
    315f:	00 00                	add    %al,(%eax)
    3161:	65 12 00             	adc    %gs:(%eax),%al
    3164:	00 03                	add    %al,(%ebx)
    3166:	f4                   	hlt
    3167:	06                   	push   %es
    3168:	00 00                	add    %al,(%eax)
    316a:	d7                   	xlat   %ds:(%ebx)
    316b:	02 12                	add    (%edx),%dl
    316d:	4c                   	dec    %esp
    316e:	00 00                	add    %al,(%eax)
    3170:	00 a7 12 00 00 9f    	add    %ah,-0x60ffffee(%edi)
    3176:	12 00                	adc    (%eax),%al
    3178:	00 06                	add    %al,(%esi)
    317a:	29 05 00 00 34 08    	sub    %eax,0x8340000
    3180:	00 00                	add    %al,(%eax)
    3182:	0a 69 00             	or     0x0(%ecx),%ch
    3185:	ce                   	into
    3186:	02 12                	add    (%edx),%dl
    3188:	79 00                	jns    318a <MBOOT_HEADER_FLAGS+0x3187>
    318a:	00 00                	add    %al,(%eax)
    318c:	d7                   	xlat   %ds:(%ebx)
    318d:	12 00                	adc    (%eax),%al
    318f:	00 d5                	add    %dl,%ch
    3191:	12 00                	adc    (%eax),%al
    3193:	00 09                	add    %cl,(%ecx)
    3195:	34 05                	xor    $0x5,%al
    3197:	00 00                	add    %al,(%eax)
    3199:	0a 68 65             	or     0x65(%eax),%ch
    319c:	78 00                	js     319e <MBOOT_HEADER_FLAGS+0x319b>
    319e:	cf                   	iret
    319f:	02 12                	add    (%edx),%dl
    31a1:	66 00 00             	data16 add %al,(%eax)
    31a4:	00 e4                	add    %ah,%ah
    31a6:	12 00                	adc    (%eax),%al
    31a8:	00 e0                	add    %ah,%al
    31aa:	12 00                	adc    (%eax),%al
    31ac:	00 2c 73             	add    %ch,(%ebx,%esi,2)
    31af:	74 72                	je     3223 <MBOOT_HEADER_FLAGS+0x3220>
    31b1:	00 d0                	add    %dl,%al
    31b3:	02 12                	add    (%edx),%dl
    31b5:	86 09                	xchg   %cl,(%ecx)
    31b7:	00 00                	add    %al,(%eax)
    31b9:	03 91 ec 77 01 4e    	add    0x4e0177ec(%ecx),%edx
    31bf:	26 10 00             	adc    %al,%es:(%eax)
    31c2:	d7                   	xlat   %ds:(%ebx)
    31c3:	04 00                	add    $0x0,%al
    31c5:	00 00                	add    %al,(%eax)
    31c7:	00 1e                	add    %bl,(%esi)
    31c9:	49                   	dec    %ecx
    31ca:	15 00 00 fd 25       	adc    $0x25fd0000,%eax
    31cf:	10 00                	adc    %al,(%eax)
    31d1:	01 00                	add    %eax,(%eax)
    31d3:	1e                   	push   %ds
    31d4:	05 00 00 cc 02       	add    $0x2cc0000,%eax
    31d9:	20 58 08             	and    %bl,0x8(%eax)
    31dc:	00 00                	add    %al,(%eax)
    31de:	07                   	pop    %es
    31df:	58                   	pop    %eax
    31e0:	15 00 00 0d 13       	adc    $0x130d0000,%eax
    31e5:	00 00                	add    %al,(%eax)
    31e7:	0b 13                	or     (%ebx),%edx
    31e9:	00 00                	add    %al,(%eax)
    31eb:	00 1e                	add    %bl,(%esi)
    31ed:	0b 15 00 00 de 26    	or     0x26de0000,%edx
    31f3:	10 00                	adc    %al,(%eax)
    31f5:	02 00                	add    (%eax),%al
    31f7:	3f                   	aas
    31f8:	05 00 00 e8 02       	add    $0x2e80000,%eax
    31fd:	20 ae 08 00 00 07    	and    %ch,0x7000008(%esi)
    3203:	1c 15                	sbb    $0x15,%al
    3205:	00 00                	add    %al,(%eax)
    3207:	1b 13                	sbb    (%ebx),%edx
    3209:	00 00                	add    %al,(%eax)
    320b:	15 13 00 00 09       	adc    $0x9000013,%eax
    3210:	3f                   	aas
    3211:	05 00 00 05 27       	add    $0x27050000,%eax
    3216:	15 00 00 37 13       	adc    $0x13370000,%eax
    321b:	00 00                	add    %al,(%eax)
    321d:	35 13 00 00 05       	xor    $0x5000013,%eax
    3222:	32 15 00 00 52 13    	xor    0x13520000,%dl
    3228:	00 00                	add    %al,(%eax)
    322a:	4a                   	dec    %edx
    322b:	13 00                	adc    (%eax),%eax
    322d:	00 0f                	add    %cl,(%edi)
    322f:	3d 15 00 00 03       	cmp    $0x3000015,%eax
    3234:	91                   	xchg   %eax,%ecx
    3235:	ec                   	in     (%dx),%al
    3236:	77 01                	ja     3239 <MBOOT_HEADER_FLAGS+0x3236>
    3238:	09 27                	or     %esp,(%edi)
    323a:	10 00                	adc    %al,(%eax)
    323c:	e8 04 00 00 00       	call   3245 <MBOOT_HEADER_FLAGS+0x3242>
    3241:	00 01                	add    %al,(%ecx)
    3243:	22 26                	and    (%esi),%ah
    3245:	10 00                	adc    %al,(%eax)
    3247:	d7                   	xlat   %ds:(%ebx)
    3248:	04 00                	add    $0x0,%al
    324a:	00 01                	add    %al,(%ecx)
    324c:	6a 26                	push   $0x26
    324e:	10 00                	adc    %al,(%eax)
    3250:	d7                   	xlat   %ds:(%ebx)
    3251:	04 00                	add    $0x0,%al
    3253:	00 01                	add    %al,(%ecx)
    3255:	a0 26 10 00 d7       	mov    0xd7001026,%al
    325a:	04 00                	add    $0x0,%al
    325c:	00 01                	add    %al,(%ecx)
    325e:	a7                   	cmpsl  %es:(%edi),%ds:(%esi)
    325f:	26 10 00             	adc    %al,%es:(%eax)
    3262:	de 03                	fiadds (%ebx)
    3264:	00 00                	add    %al,(%eax)
    3266:	01 ad 26 10 00 d7    	add    %ebp,-0x28ffefda(%ebp)
    326c:	04 00                	add    $0x0,%al
    326e:	00 01                	add    %al,(%ecx)
    3270:	b7 26                	mov    $0x26,%bh
    3272:	10 00                	adc    %al,(%eax)
    3274:	d7                   	xlat   %ds:(%ebx)
    3275:	04 00                	add    $0x0,%al
    3277:	00 01                	add    %al,(%ecx)
    3279:	cd 26                	int    $0x26
    327b:	10 00                	adc    %al,(%eax)
    327d:	e8 04 00 00 01       	call   1003286 <stack_top+0xdf7616>
    3282:	83 27 10             	andl   $0x10,(%edi)
    3285:	00 d7                	add    %dl,%bh
    3287:	04 00                	add    $0x0,%al
    3289:	00 00                	add    %al,(%eax)
    328b:	01 2e                	add    %ebp,(%esi)
    328d:	25 10 00 d7 04       	and    $0x4d70010,%eax
    3292:	00 00                	add    %al,(%eax)
    3294:	01 37                	add    %esi,(%edi)
    3296:	25 10 00 de 03       	and    $0x3de0010,%eax
    329b:	00 00                	add    %al,(%eax)
    329d:	01 3d 25 10 00 d7    	add    %edi,0xd7001025
    32a3:	04 00                	add    $0x0,%al
    32a5:	00 01                	add    %al,(%ecx)
    32a7:	47                   	inc    %edi
    32a8:	25 10 00 d7 04       	and    $0x4d70010,%eax
    32ad:	00 00                	add    %al,(%eax)
    32af:	01 51 25             	add    %edx,0x25(%ecx)
    32b2:	10 00                	adc    %al,(%eax)
    32b4:	d7                   	xlat   %ds:(%ebx)
    32b5:	04 00                	add    $0x0,%al
    32b7:	00 01                	add    %al,(%ecx)
    32b9:	bd 25 10 00 d7       	mov    $0xd7001025,%ebp
    32be:	04 00                	add    $0x0,%al
    32c0:	00 01                	add    %al,(%ecx)
    32c2:	53                   	push   %ebx
    32c3:	27                   	daa
    32c4:	10 00                	adc    %al,(%eax)
    32c6:	d7                   	xlat   %ds:(%ebx)
    32c7:	04 00                	add    $0x0,%al
    32c9:	00 01                	add    %al,(%ecx)
    32cb:	5f                   	pop    %edi
    32cc:	27                   	daa
    32cd:	10 00                	adc    %al,(%eax)
    32cf:	de 03                	fiadds (%ebx)
    32d1:	00 00                	add    %al,(%eax)
    32d3:	01 65 27             	add    %esp,0x27(%ebp)
    32d6:	10 00                	adc    %al,(%eax)
    32d8:	d7                   	xlat   %ds:(%ebx)
    32d9:	04 00                	add    $0x0,%al
    32db:	00 01                	add    %al,(%ecx)
    32dd:	6f                   	outsl  %ds:(%esi),(%dx)
    32de:	27                   	daa
    32df:	10 00                	adc    %al,(%eax)
    32e1:	d7                   	xlat   %ds:(%ebx)
    32e2:	04 00                	add    $0x0,%al
    32e4:	00 01                	add    %al,(%ecx)
    32e6:	9a 28 10 00 d7 04 00 	lcall  $0x4,$0xd7001028
    32ed:	00 00                	add    %al,(%eax)
    32ef:	17                   	pop    %ss
    32f0:	4c                   	dec    %esp
    32f1:	00 00                	add    %al,(%eax)
    32f3:	00 0b                	add    %cl,(%ebx)
    32f5:	26 00 00             	add    %al,%es:(%eax)
    32f8:	00 71 09             	add    %dh,0x9(%ecx)
    32fb:	00 00                	add    %al,(%eax)
    32fd:	34 5f                	xor    $0x5f,%al
    32ff:	00 00                	add    %al,(%eax)
    3301:	00 ff                	add    %bh,%bh
    3303:	01 00                	add    %eax,(%eax)
    3305:	17                   	pop    %ss
    3306:	cf                   	iret
    3307:	02 00                	add    (%eax),%al
    3309:	00 0b                	add    %cl,(%ebx)
    330b:	66 00 00             	data16 add %al,(%eax)
    330e:	00 86 09 00 00 0c    	add    %al,0xc000009(%esi)
    3314:	5f                   	pop    %edi
    3315:	00 00                	add    %al,(%eax)
    3317:	00 1f                	add    %bl,(%edi)
    3319:	00 0b                	add    %cl,(%ebx)
    331b:	66 00 00             	data16 add %al,(%eax)
    331e:	00 96 09 00 00 0c    	add    %dl,0xc000009(%esi)
    3324:	5f                   	pop    %edi
    3325:	00 00                	add    %al,(%eax)
    3327:	00 01                	add    %al,(%ecx)
    3329:	00 12                	add    %dl,(%edx)
    332b:	8b 03                	mov    (%ebx),%eax
    332d:	00 00                	add    %al,(%eax)
    332f:	2b 02                	sub    (%edx),%eax
    3331:	06                   	push   %es
    3332:	93                   	xchg   %eax,%ebx
    3333:	00 00                	add    %al,(%eax)
    3335:	00 a0 21 10 00 10    	add    %ah,0x10001021(%eax)
    333b:	02 00                	add    (%eax),%al
    333d:	00 01                	add    %al,(%ecx)
    333f:	9c                   	pushf
    3340:	27                   	daa
    3341:	0c 00                	or     $0x0,%al
    3343:	00 13                	add    %dl,(%ebx)
    3345:	8e 0a                	mov    (%edx),%cs
    3347:	00 00                	add    %al,(%eax)
    3349:	2b 02                	sub    (%edx),%eax
    334b:	23 5a 04             	and    0x4(%edx),%ebx
    334e:	00 00                	add    %al,(%eax)
    3350:	02 91 00 1d 6d 04    	add    0x46d1d00(%ecx),%dl
    3356:	00 00                	add    %al,(%eax)
    3358:	2b 02                	sub    (%edx),%eax
    335a:	35 19 04 00 00       	xor    $0x419,%eax
    335f:	8f                   	(bad)
    3360:	13 00                	adc    (%eax),%eax
    3362:	00 85 13 00 00 1d    	add    %al,0x1d000013(%ebp)
    3368:	62 09                	bound  %ecx,(%ecx)
    336a:	00 00                	add    %al,(%eax)
    336c:	2b 02                	sub    (%edx),%eax
    336e:	44                   	inc    %esp
    336f:	4c                   	dec    %esp
    3370:	00 00                	add    %al,(%eax)
    3372:	00 c2                	add    %al,%dl
    3374:	13 00                	adc    (%eax),%eax
    3376:	00 b8 13 00 00 03    	add    %bh,0x3000013(%eax)
    337c:	c4 09                	les    (%ecx),%ecx
    337e:	00 00                	add    %al,(%eax)
    3380:	2f                   	das
    3381:	02 0e                	add    (%esi),%cl
    3383:	4c                   	dec    %esp
    3384:	00 00                	add    %al,(%eax)
    3386:	00 f3                	add    %dh,%bl
    3388:	13 00                	adc    (%eax),%eax
    338a:	00 eb                	add    %ch,%bl
    338c:	13 00                	adc    (%eax),%eax
    338e:	00 0d 7c 07 00 00    	add    %cl,0x77c
    3394:	30 02                	xor    %al,(%edx)
    3396:	0d 60 09 00 00       	or     $0x960,%eax
    339b:	03 91 ec 7b 03 e2    	add    -0x1dfc8414(%ecx),%edx
    33a1:	0b 00                	or     (%eax),%eax
    33a3:	00 31                	add    %dh,(%ecx)
    33a5:	02 18                	add    (%eax),%bl
    33a7:	71 09                	jno    33b2 <MBOOT_HEADER_FLAGS+0x33af>
    33a9:	00 00                	add    %al,(%eax)
    33ab:	23 14 00             	and    (%eax,%eax,1),%edx
    33ae:	00 1d 14 00 00 03    	add    %bl,0x3000014
    33b4:	7b 06                	jnp    33bc <MBOOT_HEADER_FLAGS+0x33b9>
    33b6:	00 00                	add    %al,(%eax)
    33b8:	32 02                	xor    (%edx),%al
    33ba:	0e                   	push   %cs
    33bb:	4c                   	dec    %esp
    33bc:	00 00                	add    %al,(%eax)
    33be:	00 47 14             	add    %al,0x14(%edi)
    33c1:	00 00                	add    %al,(%eax)
    33c3:	3d 14 00 00 03       	cmp    $0x3000014,%eax
    33c8:	d7                   	xlat   %ds:(%ebx)
    33c9:	0a 00                	or     (%eax),%al
    33cb:	00 33                	add    %dh,(%ebx)
    33cd:	02 0e                	add    (%esi),%cl
    33cf:	4c                   	dec    %esp
    33d0:	00 00                	add    %al,(%eax)
    33d2:	00 70 14             	add    %dh,0x14(%eax)
    33d5:	00 00                	add    %al,(%eax)
    33d7:	6e                   	outsb  %ds:(%esi),(%dx)
    33d8:	14 00                	adc    $0x0,%al
    33da:	00 03                	add    %al,(%ebx)
    33dc:	ef                   	out    %eax,(%dx)
    33dd:	09 00                	or     %eax,(%eax)
    33df:	00 34 02             	add    %dh,(%edx,%eax,1)
    33e2:	0a 93 00 00 00 83    	or     -0x7d000000(%ebx),%dl
    33e8:	14 00                	adc    $0x0,%al
    33ea:	00 79 14             	add    %bh,0x14(%ecx)
    33ed:	00 00                	add    %al,(%eax)
    33ef:	03 54 0a 00          	add    0x0(%edx,%ecx,1),%edx
    33f3:	00 52 02             	add    %dl,0x2(%edx)
    33f6:	0e                   	push   %cs
    33f7:	4c                   	dec    %esp
    33f8:	00 00                	add    %al,(%eax)
    33fa:	00 b0 14 00 00 ac    	add    %dh,-0x53ffffec(%eax)
    3400:	14 00                	adc    $0x0,%al
    3402:	00 03                	add    %al,(%ebx)
    3404:	6e                   	outsb  %ds:(%esi),(%dx)
    3405:	07                   	pop    %es
    3406:	00 00                	add    %al,(%eax)
    3408:	63 02                	arpl   %eax,(%edx)
    340a:	0e                   	push   %cs
    340b:	4c                   	dec    %esp
    340c:	00 00                	add    %al,(%eax)
    340e:	00 c7                	add    %al,%bh
    3410:	14 00                	adc    $0x0,%al
    3412:	00 c1                	add    %al,%cl
    3414:	14 00                	adc    $0x0,%al
    3416:	00 03                	add    %al,(%ebx)
    3418:	b0 07                	mov    $0x7,%al
    341a:	00 00                	add    %al,(%eax)
    341c:	64 02 0e             	add    %fs:(%esi),%cl
    341f:	4c                   	dec    %esp
    3420:	00 00                	add    %al,(%eax)
    3422:	00 e6                	add    %ah,%dh
    3424:	14 00                	adc    $0x0,%al
    3426:	00 de                	add    %bl,%dh
    3428:	14 00                	adc    $0x0,%al
    342a:	00 06                	add    %al,(%esi)
    342c:	5e                   	pop    %esi
    342d:	04 00                	add    $0x0,%al
    342f:	00 63 0b             	add    %ah,0xb(%ebx)
    3432:	00 00                	add    %al,(%eax)
    3434:	03 bd 0a 00 00 38    	add    0x3800000a(%ebp),%edi
    343a:	02 12                	add    (%edx),%dl
    343c:	4c                   	dec    %esp
    343d:	00 00                	add    %al,(%eax)
    343f:	00 0b                	add    %cl,(%ebx)
    3441:	15 00 00 05 15       	adc    $0x15050000,%eax
    3446:	00 00                	add    %al,(%eax)
    3448:	06                   	push   %es
    3449:	6e                   	outsb  %ds:(%esi),(%dx)
    344a:	04 00                	add    $0x0,%al
    344c:	00 f1                	add    %dh,%cl
    344e:	0a 00                	or     (%eax),%al
    3450:	00 0a                	add    %cl,(%edx)
    3452:	69 00 3a 02 17 4c    	imul   $0x4c17023a,(%eax),%eax
    3458:	00 00                	add    %al,(%eax)
    345a:	00 2b                	add    %ch,(%ebx)
    345c:	15 00 00 25 15       	adc    $0x15250000,%eax
    3461:	00 00                	add    %al,(%eax)
    3463:	15 30 22 10 00       	adc    $0x102230,%eax
    3468:	15 00 00 00 e7       	adc    $0xe7000000,%eax
    346d:	0a 00                	or     (%eax),%al
    346f:	00 14 6a             	add    %dl,(%edx,%ebp,2)
    3472:	00 40 02             	add    %al,0x2(%eax)
    3475:	1b 4c 00 00          	sbb    0x0(%eax,%eax,1),%ecx
    3479:	00 00                	add    %al,(%eax)
    347b:	01 18                	add    %ebx,(%eax)
    347d:	22 10                	and    (%eax),%dl
    347f:	00 e8                	add    %ch,%al
    3481:	04 00                	add    $0x0,%al
    3483:	00 00                	add    %al,(%eax)
    3485:	1f                   	pop    %ds
    3486:	49                   	dec    %ecx
    3487:	15 00 00 d4 21       	adc    $0x21d40000,%eax
    348c:	10 00                	adc    %al,(%eax)
    348e:	01 00                	add    %eax,(%eax)
    3490:	d4 21                	aam    $0x21
    3492:	10 00                	adc    %al,(%eax)
    3494:	12 00                	adc    (%eax),%al
    3496:	00 00                	add    %al,(%eax)
    3498:	38 02                	cmp    %al,(%edx)
    349a:	10 0b                	adc    %cl,(%ebx)
    349c:	00 00                	add    %al,(%eax)
    349e:	18 58 15             	sbb    %bl,0x15(%eax)
    34a1:	00 00                	add    %al,(%eax)
    34a3:	00 21                	add    %ah,(%ecx)
    34a5:	0b 15 00 00 56 22    	or     0x22560000,%edx
    34ab:	10 00                	adc    %al,(%eax)
    34ad:	02 00                	add    (%eax),%al
    34af:	79 04                	jns    34b5 <MBOOT_HEADER_FLAGS+0x34b2>
    34b1:	00 00                	add    %al,(%eax)
    34b3:	4b                   	dec    %ebx
    34b4:	02 1f                	add    (%edi),%bl
    34b6:	07                   	pop    %es
    34b7:	1c 15                	sbb    $0x15,%al
    34b9:	00 00                	add    %al,(%eax)
    34bb:	46                   	inc    %esi
    34bc:	15 00 00 44 15       	adc    $0x15440000,%eax
    34c1:	00 00                	add    %al,(%eax)
    34c3:	09 79 04             	or     %edi,0x4(%ecx)
    34c6:	00 00                	add    %al,(%eax)
    34c8:	05 27 15 00 00       	add    $0x1527,%eax
    34cd:	58                   	pop    %eax
    34ce:	15 00 00 56 15       	adc    $0x15560000,%eax
    34d3:	00 00                	add    %al,(%eax)
    34d5:	05 32 15 00 00       	add    $0x1532,%eax
    34da:	73 15                	jae    34f1 <MBOOT_HEADER_FLAGS+0x34ee>
    34dc:	00 00                	add    %al,(%eax)
    34de:	6b 15 00 00 0f 3d 15 	imul   $0x15,0x3d0f0000,%edx
    34e5:	00 00                	add    %al,(%eax)
    34e7:	03 91 ec 77 01 77    	add    0x770177ec(%ecx),%edx
    34ed:	22 10                	and    (%eax),%dl
    34ef:	00 e8                	add    %ch,%al
    34f1:	04 00                	add    $0x0,%al
    34f3:	00 00                	add    %al,(%eax)
    34f5:	00 00                	add    %al,(%eax)
    34f7:	06                   	push   %es
    34f8:	84 04 00             	test   %al,(%eax,%eax,1)
    34fb:	00 02                	add    %al,(%edx)
    34fd:	0c 00                	or     $0x0,%al
    34ff:	00 03                	add    %al,(%ebx)
    3501:	36 0a 00             	or     %ss:(%eax),%al
    3504:	00 67 02             	add    %ah,0x2(%edi)
    3507:	12 4c 00 00          	adc    0x0(%eax,%eax,1),%cl
    350b:	00 a4 15 00 00 a2 15 	add    %ah,0x15a20000(%ebp,%edx,1)
    3512:	00 00                	add    %al,(%eax)
    3514:	19 1c 08             	sbb    %ebx,(%eax,%ecx,1)
    3517:	00 00                	add    %al,(%eax)
    3519:	68 02 12 4c 00       	push   $0x4c1202
    351e:	00 00                	add    %al,(%eax)
    3520:	03 af 06 00 00 69    	add    0x69000006(%edi),%ebp
    3526:	02 12                	add    (%edx),%dl
    3528:	4c                   	dec    %esp
    3529:	00 00                	add    %al,(%eax)
    352b:	00 be 15 00 00 b8    	add    %bh,-0x47ffffeb(%esi)
    3531:	15 00 00 15 89       	adc    $0x89150000,%eax
    3536:	23 10                	and    (%eax),%edx
    3538:	00 27                	add    %ah,(%edi)
    353a:	00 00                	add    %al,(%eax)
    353c:	00 d4                	add    %dl,%ah
    353e:	0b 00                	or     (%eax),%eax
    3540:	00 03                	add    %al,(%ebx)
    3542:	66 08 00             	data16 or %al,(%eax)
    3545:	00 78 02             	add    %bh,0x2(%eax)
    3548:	16                   	push   %ss
    3549:	4c                   	dec    %esp
    354a:	00 00                	add    %al,(%eax)
    354c:	00 e8                	add    %ch,%al
    354e:	15 00 00 e4 15       	adc    $0x15e40000,%eax
    3553:	00 00                	add    %al,(%eax)
    3555:	01 8e 23 10 00 ff    	add    %ecx,-0xffefdd(%esi)
    355b:	0c 00                	or     $0x0,%al
    355d:	00 01                	add    %al,(%ecx)
    355f:	9f                   	lahf
    3560:	23 10                	and    (%eax),%edx
    3562:	00 27                	add    %ah,(%edi)
    3564:	0c 00                	or     $0x0,%al
    3566:	00 00                	add    %al,(%eax)
    3568:	1e                   	push   %ds
    3569:	49                   	dec    %ecx
    356a:	15 00 00 28 23       	adc    $0x23280000,%eax
    356f:	10 00                	adc    %al,(%eax)
    3571:	01 00                	add    %eax,(%eax)
    3573:	8f 04 00             	pop    (%eax,%eax,1)
    3576:	00 67 02             	add    %ah,0x2(%edi)
    3579:	20 f8                	and    %bh,%al
    357b:	0b 00                	or     (%eax),%eax
    357d:	00 07                	add    %al,(%edi)
    357f:	58                   	pop    %eax
    3580:	15 00 00 f9 15       	adc    $0x15f90000,%eax
    3585:	00 00                	add    %al,(%eax)
    3587:	f7 15 00 00 00 01    	notl   0x1000000
    358d:	5a                   	pop    %edx
    358e:	23 10                	and    (%eax),%edx
    3590:	00 1f                	add    %bl,(%edi)
    3592:	04 00                	add    $0x0,%al
    3594:	00 00                	add    %al,(%eax)
    3596:	01 b5 22 10 00 ff    	add    %esi,-0xffefde(%ebp)
    359c:	0c 00                	or     $0x0,%al
    359e:	00 01                	add    %al,(%ecx)
    35a0:	cd 22                	int    $0x22
    35a2:	10 00                	adc    %al,(%eax)
    35a4:	81 04 00 00 01 d8 22 	addl   $0x22d80100,(%eax,%eax,1)
    35ab:	10 00                	adc    %al,(%eax)
    35ad:	5f                   	pop    %edi
    35ae:	04 00                	add    $0x0,%al
    35b0:	00 01                	add    %al,(%ecx)
    35b2:	04 23                	add    $0x23,%al
    35b4:	10 00                	adc    %al,(%eax)
    35b6:	1f                   	pop    %ds
    35b7:	04 00                	add    $0x0,%al
    35b9:	00 00                	add    %al,(%eax)
    35bb:	12 fa                	adc    %dl,%bh
    35bd:	09 00                	or     %eax,(%eax)
    35bf:	00 15 02 06 93 00    	add    %dl,0x930602
    35c5:	00 00                	add    %al,(%eax)
    35c7:	50                   	push   %eax
    35c8:	20 10                	and    %dl,(%eax)
    35ca:	00 9d 00 00 00 01    	add    %bl,0x1000000(%ebp)
    35d0:	9c                   	pushf
    35d1:	ef                   	out    %eax,(%dx)
    35d2:	0c 00                	or     $0x0,%al
    35d4:	00 13                	add    %dl,(%ebx)
    35d6:	bd 07 00 00 15       	mov    $0x15000007,%ebp
    35db:	02 25 4c 00 00 00    	add    0x4c,%ah
    35e1:	02 91 00 1d 37 03    	add    0x3371d00(%ecx),%dl
    35e7:	00 00                	add    %al,(%eax)
    35e9:	15 02 37 4c 00       	adc    $0x4c3702,%eax
    35ee:	00 00                	add    %al,(%eax)
    35f0:	09 16                	or     %edx,(%esi)
    35f2:	00 00                	add    %al,(%eax)
    35f4:	01 16                	add    %edx,(%esi)
    35f6:	00 00                	add    %al,(%eax)
    35f8:	03 16                	add    (%esi),%edx
    35fa:	07                   	pop    %es
    35fb:	00 00                	add    %al,(%eax)
    35fd:	16                   	push   %ss
    35fe:	02 0e                	add    (%esi),%cl
    3600:	4c                   	dec    %esp
    3601:	00 00                	add    %al,(%eax)
    3603:	00 2e                	add    %ch,(%esi)
    3605:	16                   	push   %ss
    3606:	00 00                	add    %al,(%eax)
    3608:	2a 16                	sub    (%esi),%dl
    360a:	00 00                	add    %al,(%eax)
    360c:	03 dd                	add    %ebp,%ebx
    360e:	0a 00                	or     (%eax),%al
    3610:	00 17                	add    %dl,(%edi)
    3612:	02 0e                	add    (%esi),%cl
    3614:	4c                   	dec    %esp
    3615:	00 00                	add    %al,(%eax)
    3617:	00 43 16             	add    %al,0x16(%ebx)
    361a:	00 00                	add    %al,(%eax)
    361c:	3d 16 00 00 0d       	cmp    $0xd000016,%eax
    3621:	d7                   	xlat   %ds:(%ebx)
    3622:	0b 00                	or     (%eax),%eax
    3624:	00 18                	add    %bl,(%eax)
    3626:	02 0e                	add    (%esi),%cl
    3628:	ef                   	out    %eax,(%dx)
    3629:	0c 00                	or     $0x0,%al
    362b:	00 03                	add    %al,(%ebx)
    362d:	91                   	xchg   %eax,%ecx
    362e:	ec                   	in     (%dx),%al
    362f:	7b 15                	jnp    3646 <MBOOT_HEADER_FLAGS+0x3643>
    3631:	97                   	xchg   %eax,%edi
    3632:	20 10                	and    %dl,(%eax)
    3634:	00 39                	add    %bh,(%ecx)
    3636:	00 00                	add    %al,(%eax)
    3638:	00 e5                	add    %ah,%ch
    363a:	0c 00                	or     $0x0,%al
    363c:	00 0a                	add    %cl,(%edx)
    363e:	66 61                	popaw
    3640:	74 00                	je     3642 <MBOOT_HEADER_FLAGS+0x363f>
    3642:	21 02                	and    %eax,(%edx)
    3644:	13 4c 00 00          	adc    0x0(%eax,%eax,1),%ecx
    3648:	00 6c 16 00          	add    %ch,0x0(%esi,%edx,1)
    364c:	00 68 16             	add    %ch,0x16(%eax)
    364f:	00 00                	add    %al,(%eax)
    3651:	23 b6 20 10 00 1a    	and    0x1a001020(%esi),%esi
    3657:	00 00                	add    %al,(%eax)
    3659:	00 03                	add    %al,(%ebx)
    365b:	0e                   	push   %cs
    365c:	07                   	pop    %es
    365d:	00 00                	add    %al,(%eax)
    365f:	22 02                	and    (%edx),%al
    3661:	12 4c 00 00          	adc    0x0(%eax,%eax,1),%cl
    3665:	00 7e 16             	add    %bh,0x16(%esi)
    3668:	00 00                	add    %al,(%eax)
    366a:	7c 16                	jl     3682 <MBOOT_HEADER_FLAGS+0x367f>
    366c:	00 00                	add    %al,(%eax)
    366e:	01 c9                	add    %ecx,%ecx
    3670:	20 10                	and    %dl,(%eax)
    3672:	00 1f                	add    %bl,(%edi)
    3674:	04 00                	add    $0x0,%al
    3676:	00 00                	add    %al,(%eax)
    3678:	00 01                	add    %al,(%ecx)
    367a:	80 20 10             	andb   $0x10,(%eax)
    367d:	00 e8                	add    %ch,%al
    367f:	04 00                	add    $0x0,%al
    3681:	00 00                	add    %al,(%eax)
    3683:	0b 4c 00 00          	or     0x0(%eax,%eax,1),%ecx
    3687:	00 ff                	add    %bh,%bh
    3689:	0c 00                	or     $0x0,%al
    368b:	00 0c 5f             	add    %cl,(%edi,%ebx,2)
    368e:	00 00                	add    %al,(%eax)
    3690:	00 7f 00             	add    %bh,0x0(%edi)
    3693:	12 62 0a             	adc    0xa(%edx),%ah
    3696:	00 00                	add    %al,(%eax)
    3698:	fc                   	cld
    3699:	01 0a                	add    %ecx,(%edx)
    369b:	4c                   	dec    %esp
    369c:	00 00                	add    %al,(%eax)
    369e:	00 f0                	add    %dh,%al
    36a0:	20 10                	and    %dl,(%eax)
    36a2:	00 a3 00 00 00 01    	add    %ah,0x1000000(%ebx)
    36a8:	9c                   	pushf
    36a9:	8c 0d 00 00 0d d7    	mov    %cs,0xd70d0000
    36af:	0b 00                	or     (%eax),%eax
    36b1:	00 fd                	add    %bh,%ch
    36b3:	01 0e                	add    %ecx,(%esi)
    36b5:	ef                   	out    %eax,(%dx)
    36b6:	0c 00                	or     $0x0,%al
    36b8:	00 03                	add    %al,(%ebx)
    36ba:	91                   	xchg   %eax,%ecx
    36bb:	ec                   	in     (%dx),%al
    36bc:	7b 09                	jnp    36c7 <MBOOT_HEADER_FLAGS+0x36c4>
    36be:	49                   	dec    %ecx
    36bf:	04 00                	add    $0x0,%al
    36c1:	00 03                	add    %al,(%ebx)
    36c3:	16                   	push   %ss
    36c4:	07                   	pop    %es
    36c5:	00 00                	add    %al,(%eax)
    36c7:	00 02                	add    %al,(%edx)
    36c9:	13 4c 00 00          	adc    0x0(%eax,%eax,1),%ecx
    36cd:	00 98 16 00 00 92    	add    %bl,-0x6dffffea(%eax)
    36d3:	16                   	push   %ss
    36d4:	00 00                	add    %al,(%eax)
    36d6:	15 40 21 10 00       	adc    $0x102140,%eax
    36db:	29 00                	sub    %eax,(%eax)
    36dd:	00 00                	add    %al,(%eax)
    36df:	81 0d 00 00 14 69 00 	orl    $0x17020500,0x69140000
    36e6:	05 02 17 
    36e9:	4c                   	dec    %esp
    36ea:	00 00                	add    %al,(%eax)
    36ec:	00 23                	add    %ah,(%ebx)
    36ee:	53                   	push   %ebx
    36ef:	21 10                	and    %edx,(%eax)
    36f1:	00 16                	add    %dl,(%esi)
    36f3:	00 00                	add    %al,(%eax)
    36f5:	00 03                	add    %al,(%ebx)
    36f7:	bd 07 00 00 08       	mov    $0x8000007,%ebp
    36fc:	02 1a                	add    (%edx),%bl
    36fe:	4c                   	dec    %esp
    36ff:	00 00                	add    %al,(%eax)
    3701:	00 b3 16 00 00 af    	add    %dh,-0x50ffffea(%ebx)
    3707:	16                   	push   %ss
    3708:	00 00                	add    %al,(%eax)
    370a:	01 63 21             	add    %esp,0x21(%ebx)
    370d:	10 00                	adc    %al,(%eax)
    370f:	27                   	daa
    3710:	0c 00                	or     $0x0,%al
    3712:	00 00                	add    %al,(%eax)
    3714:	00 01                	add    %al,(%ecx)
    3716:	21 21                	and    %esp,(%ecx)
    3718:	10 00                	adc    %al,(%eax)
    371a:	e8 04 00 00 00       	call   3723 <MBOOT_HEADER_FLAGS+0x3720>
    371f:	00 12                	add    %dl,(%edx)
    3721:	f7 04 00 00 d9 01 06 	testl  $0x601d900,(%eax,%eax,1)
    3728:	93                   	xchg   %eax,%ebx
    3729:	00 00                	add    %al,(%eax)
    372b:	00 00                	add    %al,(%eax)
    372d:	1f                   	pop    %ds
    372e:	10 00                	adc    %al,(%eax)
    3730:	4d                   	dec    %ebp
    3731:	01 00                	add    %eax,(%eax)
    3733:	00 01                	add    %al,(%ecx)
    3735:	9c                   	pushf
    3736:	cd 0e                	int    $0xe
    3738:	00 00                	add    %al,(%eax)
    373a:	13 8e 0a 00 00 d9    	adc    -0x26fffff6(%esi),%ecx
    3740:	01 29                	add    %ebp,(%ecx)
    3742:	5a                   	pop    %edx
    3743:	04 00                	add    $0x0,%al
    3745:	00 02                	add    %al,(%edx)
    3747:	91                   	xchg   %eax,%ecx
    3748:	00 03                	add    %al,(%ebx)
    374a:	c4 09                	les    (%ecx),%ecx
    374c:	00 00                	add    %al,(%eax)
    374e:	dc 01                	faddl  (%ecx)
    3750:	0e                   	push   %cs
    3751:	4c                   	dec    %esp
    3752:	00 00                	add    %al,(%eax)
    3754:	00 ce                	add    %cl,%dh
    3756:	16                   	push   %ss
    3757:	00 00                	add    %al,(%eax)
    3759:	c2 16 00             	ret    $0x16
    375c:	00 0d d7 0b 00 00    	add    %cl,0xbd7
    3762:	dd 01                	fldl   (%ecx)
    3764:	0d 60 09 00 00       	or     $0x960,%eax
    3769:	03 91 ec 7b 19 e2    	add    -0x1de68414(%ecx),%edx
    376f:	0b 00                	or     (%eax),%eax
    3771:	00 de                	add    %bl,%dh
    3773:	01 18                	add    %ebx,(%eax)
    3775:	71 09                	jno    3780 <MBOOT_HEADER_FLAGS+0x377d>
    3777:	00 00                	add    %al,(%eax)
    3779:	09 09                	or     %ecx,(%ecx)
    377b:	04 00                	add    $0x0,%al
    377d:	00 03                	add    %al,(%ebx)
    377f:	bd 0a 00 00 e1       	mov    $0xe100000a,%ebp
    3784:	01 12                	add    %edx,(%edx)
    3786:	4c                   	dec    %esp
    3787:	00 00                	add    %al,(%eax)
    3789:	00 0c 17             	add    %cl,(%edi,%edx,1)
    378c:	00 00                	add    %al,(%eax)
    378e:	04 17                	add    $0x17,%al
    3790:	00 00                	add    %al,(%eax)
    3792:	06                   	push   %es
    3793:	1e                   	push   %ds
    3794:	04 00                	add    $0x0,%al
    3796:	00 52 0e             	add    %dl,0xe(%edx)
    3799:	00 00                	add    %al,(%eax)
    379b:	0a 69 00             	or     0x0(%ecx),%ch
    379e:	e3 01                	jecxz  37a1 <MBOOT_HEADER_FLAGS+0x379e>
    37a0:	17                   	pop    %ss
    37a1:	4c                   	dec    %esp
    37a2:	00 00                	add    %al,(%eax)
    37a4:	00 35 17 00 00 2f    	add    %dh,0x2f000017
    37aa:	17                   	pop    %ss
    37ab:	00 00                	add    %al,(%eax)
    37ad:	06                   	push   %es
    37ae:	2e 04 00             	cs add $0x0,%al
    37b1:	00 48 0e             	add    %cl,0xe(%eax)
    37b4:	00 00                	add    %al,(%eax)
    37b6:	14 6a                	adc    $0x6a,%al
    37b8:	00 e9                	add    %ch,%cl
    37ba:	01 1b                	add    %ebx,(%ebx)
    37bc:	4c                   	dec    %esp
    37bd:	00 00                	add    %al,(%eax)
    37bf:	00 01                	add    %al,(%ecx)
    37c1:	04 20                	add    $0x20,%al
    37c3:	10 00                	adc    %al,(%eax)
    37c5:	81 04 00 00 01 0f 20 	addl   $0x200f0100,(%eax,%eax,1)
    37cc:	10 00                	adc    %al,(%eax)
    37ce:	5f                   	pop    %edi
    37cf:	04 00                	add    $0x0,%al
    37d1:	00 01                	add    %al,(%ecx)
    37d3:	23 20                	and    (%eax),%esp
    37d5:	10 00                	adc    %al,(%eax)
    37d7:	1f                   	pop    %ds
    37d8:	04 00                	add    $0x0,%al
    37da:	00 00                	add    %al,(%eax)
    37dc:	01 6b 1f             	add    %ebp,0x1f(%ebx)
    37df:	10 00                	adc    %al,(%eax)
    37e1:	e8 04 00 00 00       	call   37ea <MBOOT_HEADER_FLAGS+0x37e7>
    37e6:	1f                   	pop    %ds
    37e7:	49                   	dec    %ecx
    37e8:	15 00 00 29 1f       	adc    $0x1f290000,%eax
    37ed:	10 00                	adc    %al,(%eax)
    37ef:	01 00                	add    %eax,(%eax)
    37f1:	29 1f                	sub    %ebx,(%edi)
    37f3:	10 00                	adc    %al,(%eax)
    37f5:	12 00                	adc    (%eax),%al
    37f7:	00 00                	add    %al,(%eax)
    37f9:	e1 01                	loope  37fc <MBOOT_HEADER_FLAGS+0x37f9>
    37fb:	79 0e                	jns    380b <MBOOT_HEADER_FLAGS+0x3808>
    37fd:	00 00                	add    %al,(%eax)
    37ff:	07                   	pop    %es
    3800:	58                   	pop    %eax
    3801:	15 00 00 4e 17       	adc    $0x174e0000,%eax
    3806:	00 00                	add    %al,(%eax)
    3808:	4c                   	dec    %esp
    3809:	17                   	pop    %ss
    380a:	00 00                	add    %al,(%eax)
    380c:	00 21                	add    %ah,(%ecx)
    380e:	0b 15 00 00 a6 1f    	or     0x1fa60000,%edx
    3814:	10 00                	adc    %al,(%eax)
    3816:	02 00                	add    (%eax),%al
    3818:	3e 04 00             	ds add $0x0,%al
    381b:	00 f7                	add    %dh,%bh
    381d:	01 1b                	add    %ebx,(%ebx)
    381f:	07                   	pop    %es
    3820:	1c 15                	sbb    $0x15,%al
    3822:	00 00                	add    %al,(%eax)
    3824:	58                   	pop    %eax
    3825:	17                   	pop    %ss
    3826:	00 00                	add    %al,(%eax)
    3828:	56                   	push   %esi
    3829:	17                   	pop    %ss
    382a:	00 00                	add    %al,(%eax)
    382c:	09 3e                	or     %edi,(%esi)
    382e:	04 00                	add    $0x0,%al
    3830:	00 05 27 15 00 00    	add    %al,0x1527
    3836:	62 17                	bound  %edx,(%edi)
    3838:	00 00                	add    %al,(%eax)
    383a:	60                   	pusha
    383b:	17                   	pop    %ss
    383c:	00 00                	add    %al,(%eax)
    383e:	05 32 15 00 00       	add    $0x1532,%eax
    3843:	7b 17                	jnp    385c <MBOOT_HEADER_FLAGS+0x3859>
    3845:	00 00                	add    %al,(%eax)
    3847:	75 17                	jne    3860 <MBOOT_HEADER_FLAGS+0x385d>
    3849:	00 00                	add    %al,(%eax)
    384b:	0f 3d                	(bad)
    384d:	15 00 00 03 91       	adc    $0x91030000,%eax
    3852:	ec                   	in     (%dx),%al
    3853:	77 01                	ja     3856 <MBOOT_HEADER_FLAGS+0x3853>
    3855:	c7                   	(bad)
    3856:	1f                   	pop    %ds
    3857:	10 00                	adc    %al,(%eax)
    3859:	e8 04 00 00 00       	call   3862 <MBOOT_HEADER_FLAGS+0x385f>
    385e:	00 00                	add    %al,(%eax)
    3860:	00 12                	add    %dl,(%edx)
    3862:	25 03 00 00 b8       	and    $0xb8000003,%eax
    3867:	01 06                	add    %eax,(%esi)
    3869:	93                   	xchg   %eax,%ebx
    386a:	00 00                	add    %al,(%eax)
    386c:	00 c0                	add    %al,%al
    386e:	1d 10 00 3c 01       	sbb    $0x13c0010,%eax
    3873:	00 00                	add    %al,(%eax)
    3875:	01 9c 05 10 00 00 13 	add    %ebx,0x13000010(%ebp,%eax,1)
    387c:	8e 0a                	mov    (%edx),%cs
    387e:	00 00                	add    %al,(%eax)
    3880:	b8 01 24 5a 04       	mov    $0x45a2401,%eax
    3885:	00 00                	add    %al,(%eax)
    3887:	02 91 00 03 c4 09    	add    0x9c40300(%ecx),%dl
    388d:	00 00                	add    %al,(%eax)
    388f:	bb 01 0e 4c 00       	mov    $0x4c0e01,%ebx
    3894:	00 00                	add    %al,(%eax)
    3896:	a9 17 00 00 9d       	test   $0x9d000017,%eax
    389b:	17                   	pop    %ss
    389c:	00 00                	add    %al,(%eax)
    389e:	0d d7 0b 00 00       	or     $0xbd7,%eax
    38a3:	bc 01 0d 60 09       	mov    $0x9600d01,%esp
    38a8:	00 00                	add    %al,(%eax)
    38aa:	03 91 ec 7b 19 e2    	add    -0x1de68414(%ecx),%edx
    38b0:	0b 00                	or     (%eax),%eax
    38b2:	00 bd 01 18 71 09    	add    %bh,0x9711801(%ebp)
    38b8:	00 00                	add    %al,(%eax)
    38ba:	09 c9                	or     %ecx,%ecx
    38bc:	03 00                	add    (%eax),%eax
    38be:	00 03                	add    %al,(%ebx)
    38c0:	bd 0a 00 00 c0       	mov    $0xc000000a,%ebp
    38c5:	01 12                	add    %edx,(%edx)
    38c7:	4c                   	dec    %esp
    38c8:	00 00                	add    %al,(%eax)
    38ca:	00 e7                	add    %ah,%bh
    38cc:	17                   	pop    %ss
    38cd:	00 00                	add    %al,(%eax)
    38cf:	df 17                	fists  (%edi)
    38d1:	00 00                	add    %al,(%eax)
    38d3:	06                   	push   %es
    38d4:	de 03                	fiadds (%ebx)
    38d6:	00 00                	add    %al,(%eax)
    38d8:	8a 0f                	mov    (%edi),%cl
    38da:	00 00                	add    %al,(%eax)
    38dc:	0a 69 00             	or     0x0(%ecx),%ch
    38df:	c2 01 17             	ret    $0x1701
    38e2:	4c                   	dec    %esp
    38e3:	00 00                	add    %al,(%eax)
    38e5:	00 10                	add    %dl,(%eax)
    38e7:	18 00                	sbb    %al,(%eax)
    38e9:	00 0a                	add    %cl,(%edx)
    38eb:	18 00                	sbb    %al,(%eax)
    38ed:	00 06                	add    %al,(%esi)
    38ef:	ee                   	out    %al,(%dx)
    38f0:	03 00                	add    (%eax),%eax
    38f2:	00 80 0f 00 00 14    	add    %al,0x1400000f(%eax)
    38f8:	6a 00                	push   $0x0
    38fa:	c8 01 1b 4c          	enter  $0x1b01,$0x4c
    38fe:	00 00                	add    %al,(%eax)
    3900:	00 01                	add    %al,(%ecx)
    3902:	54                   	push   %esp
    3903:	1e                   	push   %ds
    3904:	10 00                	adc    %al,(%eax)
    3906:	f9                   	stc
    3907:	03 00                	add    (%eax),%eax
    3909:	00 01                	add    %al,(%ecx)
    390b:	df 1e                	fistps (%esi)
    390d:	10 00                	adc    %al,(%eax)
    390f:	1f                   	pop    %ds
    3910:	04 00                	add    $0x0,%al
    3912:	00 00                	add    %al,(%eax)
    3914:	01 2d 1e 10 00 e8    	add    %ebp,0xe800101e
    391a:	04 00                	add    $0x0,%al
    391c:	00 00                	add    %al,(%eax)
    391e:	1f                   	pop    %ds
    391f:	49                   	dec    %ecx
    3920:	15 00 00 ec 1d       	adc    $0x1dec0000,%eax
    3925:	10 00                	adc    %al,(%eax)
    3927:	01 00                	add    %eax,(%eax)
    3929:	ec                   	in     (%dx),%al
    392a:	1d 10 00 12 00       	sbb    $0x120010,%eax
    392f:	00 00                	add    %al,(%eax)
    3931:	c0 01 b1             	rolb   $0xb1,(%ecx)
    3934:	0f 00 00             	sldt   (%eax)
    3937:	07                   	pop    %es
    3938:	58                   	pop    %eax
    3939:	15 00 00 29 18       	adc    $0x18290000,%eax
    393e:	00 00                	add    %al,(%eax)
    3940:	27                   	daa
    3941:	18 00                	sbb    %al,(%eax)
    3943:	00 00                	add    %al,(%eax)
    3945:	21 0b                	and    %ecx,(%ebx)
    3947:	15 00 00 76 1e       	adc    $0x1e760000,%eax
    394c:	10 00                	adc    %al,(%eax)
    394e:	02 00                	add    (%eax),%al
    3950:	fe 03                	incb   (%ebx)
    3952:	00 00                	add    %al,(%eax)
    3954:	d4 01                	aam    $0x1
    3956:	1b 07                	sbb    (%edi),%eax
    3958:	1c 15                	sbb    $0x15,%al
    395a:	00 00                	add    %al,(%eax)
    395c:	33 18                	xor    (%eax),%ebx
    395e:	00 00                	add    %al,(%eax)
    3960:	31 18                	xor    %ebx,(%eax)
    3962:	00 00                	add    %al,(%eax)
    3964:	09 fe                	or     %edi,%esi
    3966:	03 00                	add    (%eax),%eax
    3968:	00 05 27 15 00 00    	add    %al,0x1527
    396e:	3d 18 00 00 3b       	cmp    $0x3b000018,%eax
    3973:	18 00                	sbb    %al,(%eax)
    3975:	00 05 32 15 00 00    	add    %al,0x1532
    397b:	56                   	push   %esi
    397c:	18 00                	sbb    %al,(%eax)
    397e:	00 50 18             	add    %dl,0x18(%eax)
    3981:	00 00                	add    %al,(%eax)
    3983:	0f 3d                	(bad)
    3985:	15 00 00 03 91       	adc    $0x91030000,%eax
    398a:	ec                   	in     (%dx),%al
    398b:	77 01                	ja     398e <MBOOT_HEADER_FLAGS+0x398b>
    398d:	97                   	xchg   %eax,%edi
    398e:	1e                   	push   %ds
    398f:	10 00                	adc    %al,(%eax)
    3991:	e8 04 00 00 00       	call   399a <MBOOT_HEADER_FLAGS+0x3997>
    3996:	00 00                	add    %al,(%eax)
    3998:	00 12                	add    %dl,(%edx)
    399a:	45                   	inc    %ebp
    399b:	05 00 00 95 01       	add    $0x1950000,%eax
    39a0:	06                   	push   %es
    39a1:	93                   	xchg   %eax,%ebx
    39a2:	00 00                	add    %al,(%eax)
    39a4:	00 70 1c             	add    %dh,0x1c(%eax)
    39a7:	10 00                	adc    %al,(%eax)
    39a9:	4d                   	dec    %ebp
    39aa:	01 00                	add    %eax,(%eax)
    39ac:	00 01                	add    %al,(%ecx)
    39ae:	9c                   	pushf
    39af:	46                   	inc    %esi
    39b0:	11 00                	adc    %eax,(%eax)
    39b2:	00 13                	add    %dl,(%ebx)
    39b4:	8e 0a                	mov    (%edx),%cs
    39b6:	00 00                	add    %al,(%eax)
    39b8:	95                   	xchg   %eax,%ebp
    39b9:	01 24 5a             	add    %esp,(%edx,%ebx,2)
    39bc:	04 00                	add    $0x0,%al
    39be:	00 02                	add    %al,(%edx)
    39c0:	91                   	xchg   %eax,%ecx
    39c1:	00 03                	add    %al,(%ebx)
    39c3:	c4 09                	les    (%ecx),%ecx
    39c5:	00 00                	add    %al,(%eax)
    39c7:	98                   	cwtl
    39c8:	01 0e                	add    %ecx,(%esi)
    39ca:	4c                   	dec    %esp
    39cb:	00 00                	add    %al,(%eax)
    39cd:	00 84 18 00 00 78 18 	add    %al,0x18780000(%eax,%ebx,1)
    39d4:	00 00                	add    %al,(%eax)
    39d6:	0d d7 0b 00 00       	or     $0xbd7,%eax
    39db:	99                   	cltd
    39dc:	01 0d 60 09 00 00    	add    %ecx,0x960
    39e2:	03 91 ec 7b 19 e2    	add    -0x1de68414(%ecx),%edx
    39e8:	0b 00                	or     (%eax),%eax
    39ea:	00 9a 01 18 71 09    	add    %bl,0x9711801(%edx)
    39f0:	00 00                	add    %al,(%eax)
    39f2:	09 89 03 00 00 03    	or     %ecx,0x3000003(%ecx)
    39f8:	bd 0a 00 00 9d       	mov    $0x9d00000a,%ebp
    39fd:	01 12                	add    %edx,(%edx)
    39ff:	4c                   	dec    %esp
    3a00:	00 00                	add    %al,(%eax)
    3a02:	00 c2                	add    %al,%dl
    3a04:	18 00                	sbb    %al,(%eax)
    3a06:	00 ba 18 00 00 06    	add    %bh,0x6000018(%edx)
    3a0c:	9e                   	sahf
    3a0d:	03 00                	add    (%eax),%eax
    3a0f:	00 cb                	add    %cl,%bl
    3a11:	10 00                	adc    %al,(%eax)
    3a13:	00 0a                	add    %cl,(%edx)
    3a15:	69 00 9f 01 17 4c    	imul   $0x4c17019f,(%eax),%eax
    3a1b:	00 00                	add    %al,(%eax)
    3a1d:	00 eb                	add    %ch,%bl
    3a1f:	18 00                	sbb    %al,(%eax)
    3a21:	00 e5                	add    %ah,%ch
    3a23:	18 00                	sbb    %al,(%eax)
    3a25:	00 06                	add    %al,(%esi)
    3a27:	ae                   	scas   %es:(%edi),%al
    3a28:	03 00                	add    (%eax),%eax
    3a2a:	00 c1                	add    %al,%cl
    3a2c:	10 00                	adc    %al,(%eax)
    3a2e:	00 14 6a             	add    %dl,(%edx,%ebp,2)
    3a31:	00 a5 01 1b 4c 00    	add    %ah,0x4c1b01(%ebp)
    3a37:	00 00                	add    %al,(%eax)
    3a39:	01 74 1d 10          	add    %esi,0x10(%ebp,%ebx,1)
    3a3d:	00 81 04 00 00 01    	add    %al,0x1000004(%ecx)
    3a43:	7f 1d                	jg     3a62 <MBOOT_HEADER_FLAGS+0x3a5f>
    3a45:	10 00                	adc    %al,(%eax)
    3a47:	5f                   	pop    %edi
    3a48:	04 00                	add    $0x0,%al
    3a4a:	00 01                	add    %al,(%ecx)
    3a4c:	93                   	xchg   %eax,%ebx
    3a4d:	1d 10 00 1f 04       	sbb    $0x41f0010,%eax
    3a52:	00 00                	add    %al,(%eax)
    3a54:	00 01                	add    %al,(%ecx)
    3a56:	db 1c 10             	fistpl (%eax,%edx,1)
    3a59:	00 e8                	add    %ch,%al
    3a5b:	04 00                	add    $0x0,%al
    3a5d:	00 00                	add    %al,(%eax)
    3a5f:	1f                   	pop    %ds
    3a60:	49                   	dec    %ecx
    3a61:	15 00 00 99 1c       	adc    $0x1c990000,%eax
    3a66:	10 00                	adc    %al,(%eax)
    3a68:	01 00                	add    %eax,(%eax)
    3a6a:	99                   	cltd
    3a6b:	1c 10                	sbb    $0x10,%al
    3a6d:	00 12                	add    %dl,(%edx)
    3a6f:	00 00                	add    %al,(%eax)
    3a71:	00 9d 01 f2 10 00    	add    %bl,0x10f201(%ebp)
    3a77:	00 07                	add    %al,(%edi)
    3a79:	58                   	pop    %eax
    3a7a:	15 00 00 04 19       	adc    $0x19040000,%eax
    3a7f:	00 00                	add    %al,(%eax)
    3a81:	02 19                	add    (%ecx),%bl
    3a83:	00 00                	add    %al,(%eax)
    3a85:	00 21                	add    %ah,(%ecx)
    3a87:	0b 15 00 00 16 1d    	or     0x1d160000,%edx
    3a8d:	10 00                	adc    %al,(%eax)
    3a8f:	02 00                	add    (%eax),%al
    3a91:	be 03 00 00 b3       	mov    $0xb3000003,%esi
    3a96:	01 1b                	add    %ebx,(%ebx)
    3a98:	07                   	pop    %es
    3a99:	1c 15                	sbb    $0x15,%al
    3a9b:	00 00                	add    %al,(%eax)
    3a9d:	0e                   	push   %cs
    3a9e:	19 00                	sbb    %eax,(%eax)
    3aa0:	00 0c 19             	add    %cl,(%ecx,%ebx,1)
    3aa3:	00 00                	add    %al,(%eax)
    3aa5:	09 be 03 00 00 05    	or     %edi,0x5000003(%esi)
    3aab:	27                   	daa
    3aac:	15 00 00 18 19       	adc    $0x19180000,%eax
    3ab1:	00 00                	add    %al,(%eax)
    3ab3:	16                   	push   %ss
    3ab4:	19 00                	sbb    %eax,(%eax)
    3ab6:	00 05 32 15 00 00    	add    %al,0x1532
    3abc:	31 19                	xor    %ebx,(%ecx)
    3abe:	00 00                	add    %al,(%eax)
    3ac0:	2b 19                	sub    (%ecx),%ebx
    3ac2:	00 00                	add    %al,(%eax)
    3ac4:	0f 3d                	(bad)
    3ac6:	15 00 00 03 91       	adc    $0x91030000,%eax
    3acb:	ec                   	in     (%dx),%al
    3acc:	77 01                	ja     3acf <MBOOT_HEADER_FLAGS+0x3acc>
    3ace:	37                   	aaa
    3acf:	1d 10 00 e8 04       	sbb    $0x4e80010,%eax
    3ad4:	00 00                	add    %al,(%eax)
    3ad6:	00 00                	add    %al,(%eax)
    3ad8:	00 00                	add    %al,(%eax)
    3ada:	12 ab 09 00 00 91    	adc    -0x6efffff7(%ebx),%ch
    3ae0:	01 06                	add    %eax,(%esi)
    3ae2:	93                   	xchg   %eax,%ebx
    3ae3:	00 00                	add    %al,(%eax)
    3ae5:	00 50 1c             	add    %dl,0x1c(%eax)
    3ae8:	10 00                	adc    %al,(%eax)
    3aea:	12 00                	adc    (%eax),%al
    3aec:	00 00                	add    %al,(%eax)
    3aee:	01 9c 70 11 00 00 13 	add    %ebx,0x13000011(%eax,%esi,2)
    3af5:	e2 0b                	loop   3b02 <MBOOT_HEADER_FLAGS+0x3aff>
    3af7:	00 00                	add    %al,(%eax)
    3af9:	91                   	xchg   %eax,%ecx
    3afa:	01 32                	add    %esi,(%edx)
    3afc:	70 11                	jo     3b0f <MBOOT_HEADER_FLAGS+0x3b0c>
    3afe:	00 00                	add    %al,(%eax)
    3b00:	02 91 00 00 17 db    	add    -0x24e90000(%ecx),%dl
    3b06:	02 00                	add    (%eax),%al
    3b08:	00 35 30 05 00 00    	add    %dh,0x530
    3b0e:	01 67 01             	add    %esp,0x1(%edi)
    3b11:	06                   	push   %es
    3b12:	93                   	xchg   %eax,%ebx
    3b13:	00 00                	add    %al,(%eax)
    3b15:	00 20                	add    %ah,(%eax)
    3b17:	1b 10                	sbb    (%eax),%edx
    3b19:	00 27                	add    %ah,(%edi)
    3b1b:	01 00                	add    %eax,(%eax)
    3b1d:	00 01                	add    %al,(%ecx)
    3b1f:	9c                   	pushf
    3b20:	9a 12 00 00 13 f5 02 	lcall  $0x2f5,$0x13000012
    3b27:	00 00                	add    %al,(%eax)
    3b29:	67 01 22             	add    %esp,(%bp,%si)
    3b2c:	af                   	scas   %es:(%edi),%eax
    3b2d:	12 00                	adc    (%eax),%al
    3b2f:	00 02                	add    %al,(%edx)
    3b31:	91                   	xchg   %eax,%ecx
    3b32:	00 03                	add    %al,(%ebx)
    3b34:	c4 09                	les    (%ecx),%ecx
    3b36:	00 00                	add    %al,(%eax)
    3b38:	6a 01                	push   $0x1
    3b3a:	0e                   	push   %cs
    3b3b:	4c                   	dec    %esp
    3b3c:	00 00                	add    %al,(%eax)
    3b3e:	00 5b 19             	add    %bl,0x19(%ebx)
    3b41:	00 00                	add    %al,(%eax)
    3b43:	53                   	push   %ebx
    3b44:	19 00                	sbb    %eax,(%eax)
    3b46:	00 0d d7 0b 00 00    	add    %cl,0xbd7
    3b4c:	6b 01 0d             	imul   $0xd,(%ecx),%eax
    3b4f:	60                   	pusha
    3b50:	09 00                	or     %eax,(%eax)
    3b52:	00 03                	add    %al,(%ebx)
    3b54:	91                   	xchg   %eax,%ecx
    3b55:	ec                   	in     (%dx),%al
    3b56:	7b 19                	jnp    3b71 <MBOOT_HEADER_FLAGS+0x3b6e>
    3b58:	e2 0b                	loop   3b65 <MBOOT_HEADER_FLAGS+0x3b62>
    3b5a:	00 00                	add    %al,(%eax)
    3b5c:	6c                   	insb   (%dx),%es:(%edi)
    3b5d:	01 18                	add    %ebx,(%eax)
    3b5f:	71 09                	jno    3b6a <MBOOT_HEADER_FLAGS+0x3b67>
    3b61:	00 00                	add    %al,(%eax)
    3b63:	09 5e 03             	or     %ebx,0x3(%esi)
    3b66:	00 00                	add    %al,(%eax)
    3b68:	03 bd 0a 00 00 6f    	add    0x6f00000a(%ebp),%edi
    3b6e:	01 12                	add    %edx,(%edx)
    3b70:	4c                   	dec    %esp
    3b71:	00 00                	add    %al,(%eax)
    3b73:	00 8b 19 00 00 85    	add    %cl,-0x7affffe7(%ebx)
    3b79:	19 00                	sbb    %eax,(%eax)
    3b7b:	00 06                	add    %al,(%esi)
    3b7d:	73 03                	jae    3b82 <MBOOT_HEADER_FLAGS+0x3b7f>
    3b7f:	00 00                	add    %al,(%eax)
    3b81:	21 12                	and    %edx,(%edx)
    3b83:	00 00                	add    %al,(%eax)
    3b85:	0a 69 00             	or     0x0(%ecx),%ch
    3b88:	71 01                	jno    3b8b <MBOOT_HEADER_FLAGS+0x3b88>
    3b8a:	17                   	pop    %ss
    3b8b:	4c                   	dec    %esp
    3b8c:	00 00                	add    %al,(%eax)
    3b8e:	00 a9 19 00 00 a5    	add    %ch,-0x5affffe7(%ecx)
    3b94:	19 00                	sbb    %eax,(%eax)
    3b96:	00 06                	add    %al,(%esi)
    3b98:	7e 03                	jle    3b9d <MBOOT_HEADER_FLAGS+0x3b9a>
    3b9a:	00 00                	add    %al,(%eax)
    3b9c:	17                   	pop    %ss
    3b9d:	12 00                	adc    (%eax),%al
    3b9f:	00 14 6a             	add    %dl,(%edx,%ebp,2)
    3ba2:	00 77 01             	add    %dh,0x1(%edi)
    3ba5:	1b 4c 00 00          	sbb    0x0(%eax,%eax,1),%ecx
    3ba9:	00 00                	add    %al,(%eax)
    3bab:	01 8a 1b 10 00 e8    	add    %ecx,-0x17ffefe5(%edx)
    3bb1:	04 00                	add    $0x0,%al
    3bb3:	00 00                	add    %al,(%eax)
    3bb5:	1f                   	pop    %ds
    3bb6:	49                   	dec    %ecx
    3bb7:	15 00 00 4f 1b       	adc    $0x1b4f0000,%eax
    3bbc:	10 00                	adc    %al,(%eax)
    3bbe:	01 00                	add    %eax,(%eax)
    3bc0:	4f                   	dec    %edi
    3bc1:	1b 10                	sbb    (%eax),%edx
    3bc3:	00 18                	add    %bl,(%eax)
    3bc5:	00 00                	add    %al,(%eax)
    3bc7:	00 6f 01             	add    %ch,0x1(%edi)
    3bca:	48                   	dec    %eax
    3bcb:	12 00                	adc    (%eax),%al
    3bcd:	00 07                	add    %al,(%edi)
    3bcf:	58                   	pop    %eax
    3bd0:	15 00 00 bb 19       	adc    $0x19bb0000,%eax
    3bd5:	00 00                	add    %al,(%eax)
    3bd7:	b9 19 00 00 00       	mov    $0x19,%ecx
    3bdc:	22 0b                	and    (%ebx),%cl
    3bde:	15 00 00 e1 1b       	adc    $0x1be10000,%eax
    3be3:	10 00                	adc    %al,(%eax)
    3be5:	02 00                	add    (%eax),%al
    3be7:	e1 1b                	loope  3c04 <MBOOT_HEADER_FLAGS+0x3c01>
    3be9:	10 00                	adc    %al,(%eax)
    3beb:	35 00 00 00 88       	xor    $0x88000000,%eax
    3bf0:	01 1b                	add    %ebx,(%ebx)
    3bf2:	07                   	pop    %es
    3bf3:	1c 15                	sbb    $0x15,%al
    3bf5:	00 00                	add    %al,(%eax)
    3bf7:	c5 19                	lds    (%ecx),%ebx
    3bf9:	00 00                	add    %al,(%eax)
    3bfb:	c3                   	ret
    3bfc:	19 00                	sbb    %eax,(%eax)
    3bfe:	00 05 27 15 00 00    	add    %al,0x1527
    3c04:	cf                   	iret
    3c05:	19 00                	sbb    %eax,(%eax)
    3c07:	00 cd                	add    %cl,%ch
    3c09:	19 00                	sbb    %eax,(%eax)
    3c0b:	00 05 32 15 00 00    	add    %al,0x1532
    3c11:	e8 19 00 00 e2       	call   e2003c2f <MBOOT_HEADER_MAGIC+0xc6528c2d>
    3c16:	19 00                	sbb    %eax,(%eax)
    3c18:	00 0f                	add    %cl,(%edi)
    3c1a:	3d 15 00 00 03       	cmp    $0x3000015,%eax
    3c1f:	91                   	xchg   %eax,%ecx
    3c20:	ec                   	in     (%dx),%al
    3c21:	77 01                	ja     3c24 <MBOOT_HEADER_FLAGS+0x3c21>
    3c23:	02 1c 10             	add    (%eax,%edx,1),%bl
    3c26:	00 e8                	add    %ch,%al
    3c28:	04 00                	add    $0x0,%al
    3c2a:	00 00                	add    %al,(%eax)
    3c2c:	00 00                	add    %al,(%eax)
    3c2e:	36 af                	ss scas %es:(%edi),%eax
    3c30:	12 00                	adc    (%eax),%al
    3c32:	00 04 5a             	add    %al,(%edx,%ebx,2)
    3c35:	04 00                	add    $0x0,%al
    3c37:	00 04 4c             	add    %al,(%esp,%ecx,2)
    3c3a:	00 00                	add    %al,(%eax)
    3c3c:	00 04 26             	add    %al,(%esi,%eiz,1)
    3c3f:	00 00                	add    %al,(%eax)
    3c41:	00 00                	add    %al,(%eax)
    3c43:	17                   	pop    %ss
    3c44:	9a 12 00 00 2d b0 04 	lcall  $0x4b0,$0x2d000012
    3c4b:	00 00                	add    %al,(%eax)
    3c4d:	f4                   	hlt
    3c4e:	93                   	xchg   %eax,%ebx
    3c4f:	00 00                	add    %al,(%eax)
    3c51:	00 60 17             	add    %ah,0x17(%eax)
    3c54:	10 00                	adc    %al,(%eax)
    3c56:	b6 03                	mov    $0x3,%dh
    3c58:	00 00                	add    %al,(%eax)
    3c5a:	01 9c fb 14 00 00 37 	add    %ebx,0x37000014(%ebx,%edi,8)
    3c61:	68 03 00 00 01       	push   $0x1000003
    3c66:	f4                   	hlt
    3c67:	29 5a 04             	sub    %ebx,0x4(%edx)
    3c6a:	00 00                	add    %al,(%eax)
    3c6c:	10 1a                	adc    %bl,(%edx)
    3c6e:	00 00                	add    %al,(%eax)
    3c70:	0a 1a                	or     (%edx),%bl
    3c72:	00 00                	add    %al,(%eax)
    3c74:	0d 98 04 00 00       	or     $0x498,%eax
    3c79:	11 01                	adc    %eax,(%ecx)
    3c7b:	0a fb                	or     %bl,%bh
    3c7d:	14 00                	adc    $0x0,%al
    3c7f:	00 03                	add    %al,(%ebx)
    3c81:	91                   	xchg   %eax,%ecx
    3c82:	e1 77                	loope  3cfb <MBOOT_HEADER_FLAGS+0x3cf8>
    3c84:	0a 64 6f 74          	or     0x74(%edi,%ebp,2),%ah
    3c88:	00 15 01 11 5a 04    	add    %dl,0x45a1101
    3c8e:	00 00                	add    %al,(%eax)
    3c90:	37                   	aaa
    3c91:	1a 00                	sbb    (%eax),%al
    3c93:	00 29                	add    %ch,(%ecx)
    3c95:	1a 00                	sbb    (%eax),%al
    3c97:	00 03                	add    %al,(%ebx)
    3c99:	70 03                	jo     3c9e <MBOOT_HEADER_FLAGS+0x3c9b>
    3c9b:	00 00                	add    %al,(%eax)
    3c9d:	16                   	push   %ss
    3c9e:	01 0c 87             	add    %ecx,(%edi,%eax,4)
    3ca1:	00 00                	add    %al,(%eax)
    3ca3:	00 85 1a 00 00 81    	add    %al,-0x7effffe6(%ebp)
    3ca9:	1a 00                	sbb    (%eax),%al
    3cab:	00 03                	add    %al,(%ebx)
    3cad:	c4 09                	les    (%ecx),%ecx
    3caf:	00 00                	add    %al,(%eax)
    3cb1:	2d 01 0e 4c 00       	sub    $0x4c0e01,%eax
    3cb6:	00 00                	add    %al,(%eax)
    3cb8:	9d                   	popf
    3cb9:	1a 00                	sbb    (%eax),%al
    3cbb:	00 95 1a 00 00 0d    	add    %dl,0xd00001a(%ebp)
    3cc1:	d7                   	xlat   %ds:(%ebx)
    3cc2:	0b 00                	or     (%eax),%eax
    3cc4:	00 2e                	add    %ch,(%esi)
    3cc6:	01 0d 60 09 00 00    	add    %ecx,0x960
    3ccc:	03 91 ec 7b 19 e2    	add    -0x1de68414(%ecx),%edx
    3cd2:	0b 00                	or     (%eax),%eax
    3cd4:	00 2f                	add    %ch,(%edi)
    3cd6:	01 18                	add    %ebx,(%eax)
    3cd8:	71 09                	jno    3ce3 <MBOOT_HEADER_FLAGS+0x3ce0>
    3cda:	00 00                	add    %al,(%eax)
    3cdc:	15 dc 1a 10 00       	adc    $0x101adc,%eax
    3ce1:	30 00                	xor    %al,(%eax)
    3ce3:	00 00                	add    %al,(%eax)
    3ce5:	6a 13                	push   $0x13
    3ce7:	00 00                	add    %al,(%eax)
    3ce9:	03 e9                	add    %ecx,%ebp
    3ceb:	03 00                	add    (%eax),%eax
    3ced:	00 22                	add    %ah,(%edx)
    3cef:	01 10                	add    %edx,(%eax)
    3cf1:	87 00                	xchg   %eax,(%eax)
    3cf3:	00 00                	add    %al,(%eax)
    3cf5:	c9                   	leave
    3cf6:	1a 00                	sbb    (%eax),%al
    3cf8:	00 c7                	add    %al,%bh
    3cfa:	1a 00                	sbb    (%eax),%al
    3cfc:	00 00                	add    %al,(%eax)
    3cfe:	06                   	push   %es
    3cff:	22 03                	and    (%ebx),%al
    3d01:	00 00                	add    %al,(%eax)
    3d03:	bb 14 00 00 03       	mov    $0x3000014,%ebx
    3d08:	bd 0a 00 00 32       	mov    $0x3200000a,%ebp
    3d0d:	01 12                	add    %edx,(%edx)
    3d0f:	4c                   	dec    %esp
    3d10:	00 00                	add    %al,(%eax)
    3d12:	00 d3                	add    %dl,%bl
    3d14:	1a 00                	sbb    (%eax),%al
    3d16:	00 d1                	add    %dl,%cl
    3d18:	1a 00                	sbb    (%eax),%al
    3d1a:	00 06                	add    %al,(%esi)
    3d1c:	3d 03 00 00 46       	cmp    $0x46000003,%eax
    3d21:	14 00                	adc    $0x0,%al
    3d23:	00 0a                	add    %cl,(%edx)
    3d25:	69 00 34 01 17 4c    	imul   $0x4c170134,(%eax),%eax
    3d2b:	00 00                	add    %al,(%eax)
    3d2d:	00 e3                	add    %ah,%bl
    3d2f:	1a 00                	sbb    (%eax),%al
    3d31:	00 db                	add    %bl,%bl
    3d33:	1a 00                	sbb    (%eax),%al
    3d35:	00 15 30 19 10 00    	add    %dl,0x101930
    3d3b:	30 01                	xor    %al,(%ecx)
    3d3d:	00 00                	add    %al,(%eax)
    3d3f:	3c 14                	cmp    $0x14,%al
    3d41:	00 00                	add    %al,(%eax)
    3d43:	14 6a                	adc    $0x6a,%al
    3d45:	00 3a                	add    %bh,(%edx)
    3d47:	01 1b                	add    %ebx,(%ebx)
    3d49:	4c                   	dec    %esp
    3d4a:	00 00                	add    %al,(%eax)
    3d4c:	00 15 bc 19 10 00    	add    %dl,0x1019bc
    3d52:	74 00                	je     3d54 <MBOOT_HEADER_FLAGS+0x3d51>
    3d54:	00 00                	add    %al,(%eax)
    3d56:	ed                   	in     (%dx),%eax
    3d57:	13 00                	adc    (%eax),%eax
    3d59:	00 03                	add    %al,(%ebx)
    3d5b:	45                   	inc    %ebp
    3d5c:	09 00                	or     %eax,(%eax)
    3d5e:	00 52 01             	add    %dl,0x1(%edx)
    3d61:	1e                   	push   %ds
    3d62:	4c                   	dec    %esp
    3d63:	00 00                	add    %al,(%eax)
    3d65:	00 05 1b 00 00 03    	add    %al,0x300001b
    3d6b:	1b 00                	sbb    (%eax),%eax
    3d6d:	00 01                	add    %al,(%ecx)
    3d6f:	0d 1a 10 00 5f       	or     $0x5f00101a,%eax
    3d74:	04 00                	add    $0x0,%al
    3d76:	00 01                	add    %al,(%ecx)
    3d78:	19 1a                	sbb    %ebx,(%edx)
    3d7a:	10 00                	adc    %al,(%eax)
    3d7c:	d4 15                	aam    $0x15
    3d7e:	00 00                	add    %al,(%eax)
    3d80:	00 29                	add    %ch,(%ecx)
    3d82:	93                   	xchg   %eax,%ebx
    3d83:	16                   	push   %ss
    3d84:	00 00                	add    %al,(%eax)
    3d86:	48                   	dec    %eax
    3d87:	03 00                	add    (%eax),%eax
    3d89:	00 4b 01             	add    %cl,0x1(%ebx)
    3d8c:	15 18 a2 16 00       	adc    $0x16a218,%eax
    3d91:	00 18                	add    %bl,(%eax)
    3d93:	ad                   	lods   %ds:(%esi),%eax
    3d94:	16                   	push   %ss
    3d95:	00 00                	add    %al,(%eax)
    3d97:	09 48 03             	or     %ecx,0x3(%eax)
    3d9a:	00 00                	add    %al,(%eax)
    3d9c:	05 b8 16 00 00       	add    $0x16b8,%eax
    3da1:	2c 1b                	sub    $0x1b,%al
    3da3:	00 00                	add    %al,(%eax)
    3da5:	28 1b                	sub    %bl,(%ebx)
    3da7:	00 00                	add    %al,(%eax)
    3da9:	2b c1                	sub    %ecx,%eax
    3dab:	16                   	push   %ss
    3dac:	00 00                	add    %al,(%eax)
    3dae:	53                   	push   %ebx
    3daf:	03 00                	add    (%eax),%eax
    3db1:	00 05 c2 16 00 00    	add    %al,0x16c2
    3db7:	3f                   	aas
    3db8:	1b 00                	sbb    (%eax),%eax
    3dba:	00 3b                	add    %bh,(%ebx)
    3dbc:	1b 00                	sbb    (%eax),%eax
    3dbe:	00 05 cc 16 00 00    	add    %al,0x16cc
    3dc4:	58                   	pop    %eax
    3dc5:	1b 00                	sbb    (%eax),%eax
    3dc7:	00 56 1b             	add    %dl,0x1b(%esi)
    3dca:	00 00                	add    %al,(%eax)
    3dcc:	00 00                	add    %al,(%eax)
    3dce:	00 00                	add    %al,(%eax)
    3dd0:	01 02                	add    %eax,(%edx)
    3dd2:	19 10                	sbb    %edx,(%eax)
    3dd4:	00 e8                	add    %ch,%al
    3dd6:	04 00                	add    $0x0,%al
    3dd8:	00 00                	add    %al,(%eax)
    3dda:	1e                   	push   %ds
    3ddb:	49                   	dec    %ecx
    3ddc:	15 00 00 cc 18       	adc    $0x18cc0000,%eax
    3de1:	10 00                	adc    %al,(%eax)
    3de3:	01 00                	add    %eax,(%eax)
    3de5:	32 03                	xor    (%ebx),%al
    3de7:	00 00                	add    %al,(%eax)
    3de9:	32 01                	xor    (%ecx),%al
    3deb:	23 6a 14             	and    0x14(%edx),%ebp
    3dee:	00 00                	add    %al,(%eax)
    3df0:	07                   	pop    %es
    3df1:	58                   	pop    %eax
    3df2:	15 00 00 62 1b       	adc    $0x1b620000,%eax
    3df7:	00 00                	add    %al,(%eax)
    3df9:	60                   	pusha
    3dfa:	1b 00                	sbb    (%eax),%eax
    3dfc:	00 00                	add    %al,(%eax)
    3dfe:	22 0b                	and    (%ebx),%cl
    3e00:	15 00 00 81 1a       	adc    $0x1a810000,%eax
    3e05:	10 00                	adc    %al,(%eax)
    3e07:	02 00                	add    (%eax),%al
    3e09:	81 1a 10 00 35 00    	sbbl   $0x350010,(%edx)
    3e0f:	00 00                	add    %al,(%eax)
    3e11:	5e                   	pop    %esi
    3e12:	01 1b                	add    %ebx,(%ebx)
    3e14:	07                   	pop    %es
    3e15:	1c 15                	sbb    $0x15,%al
    3e17:	00 00                	add    %al,(%eax)
    3e19:	6c                   	insb   (%dx),%es:(%edi)
    3e1a:	1b 00                	sbb    (%eax),%eax
    3e1c:	00 6a 1b             	add    %ch,0x1b(%edx)
    3e1f:	00 00                	add    %al,(%eax)
    3e21:	05 27 15 00 00       	add    $0x1527,%eax
    3e26:	76 1b                	jbe    3e43 <MBOOT_HEADER_FLAGS+0x3e40>
    3e28:	00 00                	add    %al,(%eax)
    3e2a:	74 1b                	je     3e47 <MBOOT_HEADER_FLAGS+0x3e44>
    3e2c:	00 00                	add    %al,(%eax)
    3e2e:	05 32 15 00 00       	add    $0x1532,%eax
    3e33:	8f                   	(bad)
    3e34:	1b 00                	sbb    (%eax),%eax
    3e36:	00 89 1b 00 00 0f    	add    %cl,0xf00001b(%ecx)
    3e3c:	3d 15 00 00 03       	cmp    $0x3000015,%eax
    3e41:	91                   	xchg   %eax,%ecx
    3e42:	ec                   	in     (%dx),%al
    3e43:	77 01                	ja     3e46 <MBOOT_HEADER_FLAGS+0x3e43>
    3e45:	a2 1a 10 00 e8       	mov    %al,0xe800101a
    3e4a:	04 00                	add    $0x0,%al
    3e4c:	00 00                	add    %al,(%eax)
    3e4e:	00 01                	add    %al,(%ecx)
    3e50:	93                   	xchg   %eax,%ebx
    3e51:	17                   	pop    %ss
    3e52:	10 00                	adc    %al,(%eax)
    3e54:	a1 04 00 00 01       	mov    0x1000004,%eax
    3e59:	a4                   	movsb  %ds:(%esi),%es:(%edi)
    3e5a:	17                   	pop    %ss
    3e5b:	10 00                	adc    %al,(%eax)
    3e5d:	a1 04 00 00 01       	mov    0x1000004,%eax
    3e62:	d8 17                	fcoms  (%edi)
    3e64:	10 00                	adc    %al,(%eax)
    3e66:	d4 15                	aam    $0x15
    3e68:	00 00                	add    %al,(%eax)
    3e6a:	01 01                	add    %eax,(%ecx)
    3e6c:	18 10                	sbb    %dl,(%eax)
    3e6e:	00 bc 04 00 00 01 10 	add    %bh,0x10010000(%esp,%eax,1)
    3e75:	18 10                	sbb    %dl,(%eax)
    3e77:	00 d4                	add    %dl,%ah
    3e79:	15 00 00 01 23       	adc    $0x23010000,%eax
    3e7e:	18 10                	sbb    %dl,(%eax)
    3e80:	00 a1 04 00 00 01    	add    %ah,0x1000004(%ecx)
    3e86:	39 18                	cmp    %ebx,(%eax)
    3e88:	10 00                	adc    %al,(%eax)
    3e8a:	81 04 00 00 00 0b 66 	addl   $0x660b0000,(%eax,%eax,1)
    3e91:	00 00                	add    %al,(%eax)
    3e93:	00 0b                	add    %cl,(%ebx)
    3e95:	15 00 00 0c 5f       	adc    $0x5f0c0000,%eax
    3e9a:	00 00                	add    %al,(%eax)
    3e9c:	00 0a                	add    %cl,(%edx)
    3e9e:	00 38                	add    %bh,(%eax)
    3ea0:	5c                   	pop    %esp
    3ea1:	08 00                	or     %al,(%eax)
    3ea3:	00 01                	add    %al,(%ecx)
    3ea5:	e8 0a 4c 00 00       	call   8ab4 <MBOOT_HEADER_FLAGS+0x8ab1>
    3eaa:	00 01                	add    %al,(%ecx)
    3eac:	49                   	dec    %ecx
    3ead:	15 00 00 1a bd       	adc    $0xbd1a0000,%eax
    3eb2:	07                   	pop    %es
    3eb3:	00 00                	add    %al,(%eax)
    3eb5:	e8 2a 4c 00 00       	call   8ae4 <MBOOT_HEADER_FLAGS+0x8ae1>
    3eba:	00 1c 16             	add    %bl,(%esi,%edx,1)
    3ebd:	07                   	pop    %es
    3ebe:	00 00                	add    %al,(%eax)
    3ec0:	e9 0e 4c 00 00       	jmp    8ad3 <MBOOT_HEADER_FLAGS+0x8ad0>
    3ec5:	00 1c dd 0a 00 00 ea 	add    %bl,-0x15fffff6(,%ebx,8)
    3ecc:	0e                   	push   %cs
    3ecd:	4c                   	dec    %esp
    3ece:	00 00                	add    %al,(%eax)
    3ed0:	00 1c d7             	add    %bl,(%edi,%edx,8)
    3ed3:	0b 00                	or     (%eax),%eax
    3ed5:	00 eb                	add    %ch,%bl
    3ed7:	0e                   	push   %cs
    3ed8:	ef                   	out    %eax,(%dx)
    3ed9:	0c 00                	or     $0x0,%al
    3edb:	00 00                	add    %al,(%eax)
    3edd:	24 fd                	and    $0xfd,%al
    3edf:	08 00                	or     %al,(%eax)
    3ee1:	00 e4                	add    %ah,%ah
    3ee3:	11 4c 00 00          	adc    %ecx,0x0(%eax,%eax,1)
    3ee7:	00 64 15 00          	add    %ah,0x0(%ebp,%edx,1)
    3eeb:	00 1a                	add    %bl,(%edx)
    3eed:	bd 07 00 00 e4       	mov    $0xe4000007,%ebp
    3ef2:	29 4c 00 00          	sub    %ecx,0x0(%eax,%eax,1)
    3ef6:	00 00                	add    %al,(%eax)
    3ef8:	2e fb                	cs sti
    3efa:	03 00                	add    (%eax),%eax
    3efc:	00 e0                	add    %ah,%al
    3efe:	0d 5a 04 00 00       	or     $0x45a,%eax
    3f03:	f0 16                	lock push %ss
    3f05:	10 00                	adc    %al,(%eax)
    3f07:	06                   	push   %es
    3f08:	00 00                	add    %al,(%eax)
    3f0a:	00 01                	add    %al,(%ecx)
    3f0c:	9c                   	pushf
    3f0d:	2e 88 06             	mov    %al,%cs:(%esi)
    3f10:	00 00                	add    %al,(%eax)
    3f12:	dc 0a                	fmull  (%edx)
    3f14:	4c                   	dec    %esp
    3f15:	00 00                	add    %al,(%eax)
    3f17:	00 e0                	add    %ah,%al
    3f19:	16                   	push   %ss
    3f1a:	10 00                	adc    %al,(%eax)
    3f1c:	06                   	push   %es
    3f1d:	00 00                	add    %al,(%eax)
    3f1f:	00 01                	add    %al,(%ecx)
    3f21:	9c                   	pushf
    3f22:	2d 35 02 00 00       	sub    $0x235,%eax
    3f27:	c3                   	ret
    3f28:	93                   	xchg   %eax,%ebx
    3f29:	00 00                	add    %al,(%eax)
    3f2b:	00 10                	add    %dl,(%eax)
    3f2d:	16                   	push   %ss
    3f2e:	10 00                	adc    %al,(%eax)
    3f30:	ca 00 00             	lret   $0x0
    3f33:	00 01                	add    %al,(%ecx)
    3f35:	9c                   	pushf
    3f36:	d4 15                	aam    $0x15
    3f38:	00 00                	add    %al,(%eax)
    3f3a:	01 21                	add    %esp,(%ecx)
    3f3c:	16                   	push   %ss
    3f3d:	10 00                	adc    %al,(%eax)
    3f3f:	e8 04 00 00 01       	call   1003f48 <stack_top+0xdf82d8>
    3f44:	41                   	inc    %ecx
    3f45:	16                   	push   %ss
    3f46:	10 00                	adc    %al,(%eax)
    3f48:	d7                   	xlat   %ds:(%ebx)
    3f49:	04 00                	add    $0x0,%al
    3f4b:	00 01                	add    %al,(%ecx)
    3f4d:	97                   	xchg   %eax,%edi
    3f4e:	16                   	push   %ss
    3f4f:	10 00                	adc    %al,(%eax)
    3f51:	bc 04 00 00 01       	mov    $0x1000004,%esp
    3f56:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
    3f57:	16                   	push   %ss
    3f58:	10 00                	adc    %al,(%eax)
    3f5a:	bc 04 00 00 01       	mov    $0x1000004,%esp
    3f5f:	d2 16                	rclb   %cl,(%esi)
    3f61:	10 00                	adc    %al,(%eax)
    3f63:	d7                   	xlat   %ds:(%ebx)
    3f64:	04 00                	add    $0x0,%al
    3f66:	00 00                	add    %al,(%eax)
    3f68:	39 e4                	cmp    %esp,%esp
    3f6a:	0a 00                	or     (%eax),%al
    3f6c:	00 01                	add    %al,(%ecx)
    3f6e:	9b                   	fwait
    3f6f:	0d c0 14 10 00       	or     $0x1014c0,%eax
    3f74:	44                   	inc    %esp
    3f75:	01 00                	add    %eax,(%eax)
    3f77:	00 01                	add    %al,(%ecx)
    3f79:	9c                   	pushf
    3f7a:	93                   	xchg   %eax,%ebx
    3f7b:	16                   	push   %ss
    3f7c:	00 00                	add    %al,(%eax)
    3f7e:	06                   	push   %es
    3f7f:	ef                   	out    %eax,(%dx)
    3f80:	02 00                	add    (%eax),%al
    3f82:	00 45 16             	add    %al,0x16(%ebp)
    3f85:	00 00                	add    %al,(%eax)
    3f87:	25 69 00 a1 0e       	and    $0xea10069,%eax
    3f8c:	79 00                	jns    3f8e <MBOOT_HEADER_FLAGS+0x3f8b>
    3f8e:	00 00                	add    %al,(%eax)
    3f90:	bb 1b 00 00 b1       	mov    $0xb100001b,%ebx
    3f95:	1b 00                	sbb    (%eax),%eax
    3f97:	00 09                	add    %cl,(%ecx)
    3f99:	01 03                	add    %eax,(%ebx)
    3f9b:	00 00                	add    %al,(%eax)
    3f9d:	0e                   	push   %cs
    3f9e:	86 0a                	xchg   %cl,(%edx)
    3fa0:	00 00                	add    %al,(%eax)
    3fa2:	a8 0e                	test   $0xe,%al
    3fa4:	0f 03 00             	lsl    (%eax),%eax
    3fa7:	00 02                	add    %al,(%edx)
    3fa9:	91                   	xchg   %eax,%ecx
    3faa:	60                   	pusha
    3fab:	25 6a 00 a9 0d       	and    $0xda9006a,%eax
    3fb0:	79 00                	jns    3fb2 <MBOOT_HEADER_FLAGS+0x3faf>
    3fb2:	00 00                	add    %al,(%eax)
    3fb4:	e3 1b                	jecxz  3fd1 <MBOOT_HEADER_FLAGS+0x3fce>
    3fb6:	00 00                	add    %al,(%eax)
    3fb8:	df 1b                	fistps (%ebx)
    3fba:	00 00                	add    %al,(%eax)
    3fbc:	01 ff                	add    %edi,%edi
    3fbe:	14 10                	adc    $0x10,%al
    3fc0:	00 a1 04 00 00 01    	add    %ah,0x1000004(%ecx)
    3fc6:	51                   	push   %ecx
    3fc7:	15 10 00 3f 04       	adc    $0x43f0010,%eax
    3fcc:	00 00                	add    %al,(%eax)
    3fce:	01 8f 15 10 00 3f    	add    %ecx,0x3f001015(%edi)
    3fd4:	04 00                	add    $0x0,%al
    3fd6:	00 00                	add    %al,(%eax)
    3fd8:	00 06                	add    %al,(%esi)
    3fda:	12 03                	adc    (%ebx),%al
    3fdc:	00 00                	add    %al,(%eax)
    3fde:	89 16                	mov    %edx,(%esi)
    3fe0:	00 00                	add    %al,(%eax)
    3fe2:	0e                   	push   %cs
    3fe3:	86 0a                	xchg   %cl,(%edx)
    3fe5:	00 00                	add    %al,(%eax)
    3fe7:	b9 0e 0f 03 00       	mov    $0x30f0e,%ecx
    3fec:	00 02                	add    %al,(%edx)
    3fee:	91                   	xchg   %eax,%ecx
    3fef:	60                   	pusha
    3ff0:	25 6a 00 ba 0d       	and    $0xdba006a,%eax
    3ff5:	79 00                	jns    3ff7 <MBOOT_HEADER_FLAGS+0x3ff4>
    3ff7:	00 00                	add    %al,(%eax)
    3ff9:	f4                   	hlt
    3ffa:	1b 00                	sbb    (%eax),%eax
    3ffc:	00 f0                	add    %dh,%al
    3ffe:	1b 00                	sbb    (%eax),%eax
    4000:	00 01                	add    %al,(%ecx)
    4002:	a5                   	movsl  %ds:(%esi),%es:(%edi)
    4003:	15 10 00 a1 04       	adc    $0x4a10010,%eax
    4008:	00 00                	add    %al,(%eax)
    400a:	01 e7                	add    %esp,%edi
    400c:	15 10 00 3f 04       	adc    $0x43f0010,%eax
    4011:	00 00                	add    %al,(%eax)
    4013:	01 00                	add    %eax,(%eax)
    4015:	16                   	push   %ss
    4016:	10 00                	adc    %al,(%eax)
    4018:	3f                   	aas
    4019:	04 00                	add    $0x0,%al
    401b:	00 00                	add    %al,(%eax)
    401d:	01 6a 15             	add    %ebp,0x15(%edx)
    4020:	10 00                	adc    %al,(%eax)
    4022:	a1 04 00 00 00       	mov    0x4,%eax
    4027:	24 0c                	and    $0xc,%al
    4029:	09 00                	or     %eax,(%eax)
    402b:	00 86 0d 93 00 00    	add    %al,0x930d(%esi)
    4031:	00 d8                	add    %bl,%al
    4033:	16                   	push   %ss
    4034:	00 00                	add    %al,(%eax)
    4036:	1a 98 04 00 00 86    	sbb    -0x79fffffc(%eax),%bl
    403c:	27                   	daa
    403d:	5a                   	pop    %edx
    403e:	04 00                	add    $0x0,%al
    4040:	00 1a                	add    %bl,(%edx)
    4042:	ec                   	in     (%dx),%al
    4043:	07                   	pop    %es
    4044:	00 00                	add    %al,(%eax)
    4046:	86 3d 5a 04 00 00    	xchg   %bh,0x45a
    404c:	08 69 00             	or     %ch,0x0(%ecx)
    404f:	88 09                	mov    %cl,(%ecx)
    4051:	79 00                	jns    4053 <MBOOT_HEADER_FLAGS+0x4050>
    4053:	00 00                	add    %al,(%eax)
    4055:	1b 08                	sbb    (%eax),%ecx
    4057:	63 31                	arpl   %esi,(%ecx)
    4059:	00 91 0e 66 00 00    	add    %dl,0x660e(%ecx)
    405f:	00 08                	add    %cl,(%eax)
    4061:	63 32                	arpl   %esi,(%edx)
    4063:	00 92 0e 66 00 00    	add    %dl,0x660e(%edx)
    4069:	00 00                	add    %al,(%eax)
    406b:	00 24 a0             	add    %ah,(%eax,%eiz,4)
    406e:	08 00                	or     %al,(%eax)
    4070:	00 2b                	add    %ch,(%ebx)
    4072:	0d 93 00 00 00       	or     $0x93,%eax
    4077:	a3 17 00 00 1a       	mov    %eax,0x1a000017
    407c:	98                   	cwtl
    407d:	04 00                	add    $0x0,%al
    407f:	00 2b                	add    %ch,(%ebx)
    4081:	2a 5a 04             	sub    0x4(%edx),%bl
    4084:	00 00                	add    %al,(%eax)
    4086:	1a 77 09             	sbb    0x9(%edi),%dh
    4089:	00 00                	add    %al,(%eax)
    408b:	2b 40 5a             	sub    0x5a(%eax),%eax
    408e:	04 00                	add    $0x0,%al
    4090:	00 1c 87             	add    %bl,(%edi,%eax,4)
    4093:	07                   	pop    %es
    4094:	00 00                	add    %al,(%eax)
    4096:	44                   	inc    %esp
    4097:	0a fb                	or     %bl,%bh
    4099:	14 00                	adc    $0x0,%al
    409b:	00 08                	add    %cl,(%eax)
    409d:	73 72                	jae    4111 <MBOOT_HEADER_FLAGS+0x410e>
    409f:	63 00                	arpl   %eax,(%eax)
    40a1:	45                   	inc    %ebp
    40a2:	09 79 00             	or     %edi,0x0(%ecx)
    40a5:	00 00                	add    %al,(%eax)
    40a7:	08 64 73 74          	or     %ah,0x74(%ebx,%esi,2)
    40ab:	00 45 12             	add    %al,0x12(%ebp)
    40ae:	79 00                	jns    40b0 <MBOOT_HEADER_FLAGS+0x40ad>
    40b0:	00 00                	add    %al,(%eax)
    40b2:	20 38                	and    %bh,(%eax)
    40b4:	17                   	pop    %ss
    40b5:	00 00                	add    %al,(%eax)
    40b7:	08 69 00             	or     %ch,0x0(%ecx)
    40ba:	2f                   	das
    40bb:	11 79 00             	adc    %edi,0x0(%ecx)
    40be:	00 00                	add    %al,(%eax)
    40c0:	1b 08                	sbb    (%eax),%ecx
    40c2:	63 00                	arpl   %eax,(%eax)
    40c4:	32 16                	xor    (%esi),%dl
    40c6:	86 09                	xchg   %cl,(%ecx)
    40c8:	00 00                	add    %al,(%eax)
    40ca:	00 00                	add    %al,(%eax)
    40cc:	20 52 17             	and    %dl,0x17(%edx)
    40cf:	00 00                	add    %al,(%eax)
    40d1:	08 69 00             	or     %ch,0x0(%ecx)
    40d4:	39 11                	cmp    %edx,(%ecx)
    40d6:	79 00                	jns    40d8 <MBOOT_HEADER_FLAGS+0x40d5>
    40d8:	00 00                	add    %al,(%eax)
    40da:	1b 08                	sbb    (%eax),%ecx
    40dc:	63 00                	arpl   %eax,(%eax)
    40de:	3c 16                	cmp    $0x16,%al
    40e0:	86 09                	xchg   %cl,(%ecx)
    40e2:	00 00                	add    %al,(%eax)
    40e4:	00 00                	add    %al,(%eax)
    40e6:	20 61 17             	and    %ah,0x17(%ecx)
    40e9:	00 00                	add    %al,(%eax)
    40eb:	08 63 00             	or     %ah,0x0(%ebx)
    40ee:	49                   	dec    %ecx
    40ef:	0e                   	push   %cs
    40f0:	66 00 00             	data16 add %al,(%eax)
    40f3:	00 00                	add    %al,(%eax)
    40f5:	20 70 17             	and    %dh,0x17(%eax)
    40f8:	00 00                	add    %al,(%eax)
    40fa:	08 63 00             	or     %ah,0x0(%ebx)
    40fd:	5c                   	pop    %esp
    40fe:	0e                   	push   %cs
    40ff:	66 00 00             	data16 add %al,(%eax)
    4102:	00 00                	add    %al,(%eax)
    4104:	20 8a 17 00 00 08    	and    %cl,0x8000017(%edx)
    410a:	69 00 6b 11 79 00    	imul   $0x79116b,(%eax),%eax
    4110:	00 00                	add    %al,(%eax)
    4112:	1b 08                	sbb    (%eax),%ecx
    4114:	63 00                	arpl   %eax,(%eax)
    4116:	6e                   	outsb  %ds:(%esi),(%dx)
    4117:	16                   	push   %ss
    4118:	86 09                	xchg   %cl,(%ecx)
    411a:	00 00                	add    %al,(%eax)
    411c:	00 00                	add    %al,(%eax)
    411e:	1b 08                	sbb    (%eax),%ecx
    4120:	69 00 76 0e 79 00    	imul   $0x790e76,(%eax),%eax
    4126:	00 00                	add    %al,(%eax)
    4128:	1b 08                	sbb    (%eax),%ecx
    412a:	70 6f                	jo     419b <MBOOT_HEADER_FLAGS+0x4198>
    412c:	73 00                	jae    412e <MBOOT_HEADER_FLAGS+0x412b>
    412e:	7a 16                	jp     4146 <MBOOT_HEADER_FLAGS+0x4143>
    4130:	86 09                	xchg   %cl,(%ecx)
    4132:	00 00                	add    %al,(%eax)
    4134:	00 00                	add    %al,(%eax)
    4136:	00 3a                	add    %bh,(%edx)
    4138:	0b 15 00 00 00 17    	or     0x17000000,%edx
    413e:	10 00                	adc    %al,(%eax)
    4140:	53                   	push   %ebx
    4141:	00 00                	add    %al,(%eax)
    4143:	00 01                	add    %al,(%ecx)
    4145:	9c                   	pushf
    4146:	3b 1c 15 00 00 02 91 	cmp    -0x6efe0000(,%edx,1),%ebx
    414d:	00 05 27 15 00 00    	add    %al,0x1527
    4153:	08 1c 00             	or     %bl,(%eax,%eax,1)
    4156:	00 04 1c             	add    %al,(%esp,%ebx,1)
    4159:	00 00                	add    %al,(%eax)
    415b:	05 32 15 00 00       	add    $0x1532,%eax
    4160:	28 1c 00             	sub    %bl,(%eax,%eax,1)
    4163:	00 22                	add    %ah,(%edx)
    4165:	1c 00                	sbb    $0x0,%al
    4167:	00 0f                	add    %cl,(%edi)
    4169:	3d 15 00 00 03       	cmp    $0x3000015,%eax
    416e:	91                   	xchg   %eax,%ecx
    416f:	f4                   	hlt
    4170:	7b 01                	jnp    4173 <MBOOT_HEADER_FLAGS+0x4170>
    4172:	2e 17                	cs pop %ss
    4174:	10 00                	adc    %al,(%eax)
    4176:	e8 04 00 00 00       	call   417f <MBOOT_HEADER_FLAGS+0x417c>
    417b:	00 76 02             	add    %dh,0x2(%esi)
    417e:	00 00                	add    %al,(%eax)
    4180:	05 00 01 04 2e       	add    $0x2e040100,%eax
    4185:	0e                   	push   %cs
    4186:	00 00                	add    %al,(%eax)
    4188:	0c 30                	or     $0x30,%al
    418a:	00 00                	add    %al,(%eax)
    418c:	00 1d 04 01 00 00    	add    %bl,0x104
    4192:	00 00                	add    %al,(%eax)
    4194:	00 00                	add    %al,(%eax)
    4196:	a3 05 00 00 00       	mov    %eax,0x5
    419b:	00 00                	add    %al,(%eax)
    419d:	00 cc                	add    %cl,%ah
    419f:	29 00                	sub    %eax,(%eax)
    41a1:	00 05 a1 00 00 00    	add    %al,0xa1
    41a7:	04 17                	add    $0x17,%al
    41a9:	31 00                	xor    %eax,(%eax)
    41ab:	00 00                	add    %al,(%eax)
    41ad:	01 01                	add    %eax,(%ecx)
    41af:	08 a9 00 00 00 05    	or     %ch,0x5000000(%ecx)
    41b5:	14 01                	adc    $0x1,%al
    41b7:	00 00                	add    %al,(%eax)
    41b9:	05 18 43 00 00       	add    $0x4318,%eax
    41be:	00 01                	add    %al,(%ecx)
    41c0:	02 07                	add    (%edi),%al
    41c2:	f3 00 00             	repz add %al,(%eax)
    41c5:	00 01                	add    %al,(%ecx)
    41c7:	04 07                	add    $0x7,%al
    41c9:	2f                   	das
    41ca:	04 00                	add    $0x0,%al
    41cc:	00 01                	add    %al,(%ecx)
    41ce:	04 07                	add    $0x7,%al
    41d0:	2a 04 00             	sub    (%eax,%eax,1),%al
    41d3:	00 01                	add    %al,(%ecx)
    41d5:	01 06                	add    %eax,(%esi)
    41d7:	b2 00                	mov    $0x0,%dl
    41d9:	00 00                	add    %al,(%eax)
    41db:	06                   	push   %es
    41dc:	58                   	pop    %eax
    41dd:	00 00                	add    %al,(%eax)
    41df:	00 01                	add    %al,(%ecx)
    41e1:	02 05 1d 01 00 00    	add    0x11d,%al
    41e7:	0d 04 05 69 6e       	or     $0x6e690504,%eax
    41ec:	74 00                	je     41ee <MBOOT_HEADER_FLAGS+0x41eb>
    41ee:	01 04 05 c0 00 00 00 	add    %eax,0xc0(,%eax,1)
    41f5:	05 4e 02 00 00       	add    $0x24e,%eax
    41fa:	0f 0d 6b 00          	prefetch 0x0(%ebx)
    41fe:	00 00                	add    %al,(%eax)
    4200:	02 fc                	add    %ah,%bh
    4202:	0a 00                	or     (%eax),%al
    4204:	00 04 0d 79 00 00 00 	add    %al,0x79(,%ecx,1)
    420b:	05 03 24 7c 10       	add    $0x107c2403,%eax
    4210:	00 02                	add    %al,(%edx)
    4212:	40                   	inc    %eax
    4213:	0b 00                	or     (%eax),%eax
    4215:	00 05 0d 79 00 00    	add    %al,0x790d
    421b:	00 05 03 20 7c 10    	add    %al,0x107c2003
    4221:	00 0e                	add    %cl,(%esi)
    4223:	5f                   	pop    %edi
    4224:	00 00                	add    %al,(%eax)
    4226:	00 b6 00 00 00 0f    	add    %dh,0xf000000(%esi)
    422c:	51                   	push   %ecx
    422d:	00 00                	add    %al,(%eax)
    422f:	00 39                	add    %bh,(%ecx)
    4231:	00 06                	add    %al,(%esi)
    4233:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
    4234:	00 00                	add    %al,(%eax)
    4236:	00 02                	add    %al,(%edx)
    4238:	2e 0b 00             	or     %cs:(%eax),%eax
    423b:	00 08                	add    %cl,(%eax)
    423d:	13 b6 00 00 00 05    	adc    0x5000000(%esi),%esi
    4243:	03 80 4a 10 00 02    	add    0x200104a(%eax),%eax
    4249:	4a                   	dec    %edx
    424a:	0b 00                	or     (%eax),%eax
    424c:	00 10                	add    %dl,(%eax)
    424e:	13 b6 00 00 00 05    	adc    0x5000000(%esi),%esi
    4254:	03 40 4a             	add    0x4a(%eax),%eax
    4257:	10 00                	adc    %al,(%eax)
    4259:	07                   	pop    %es
    425a:	0a 0b                	or     (%ebx),%cl
    425c:	00 00                	add    %al,(%eax)
    425e:	5e                   	pop    %esi
    425f:	79 00                	jns    4261 <MBOOT_HEADER_FLAGS+0x425e>
    4261:	00 00                	add    %al,(%eax)
    4263:	20 2a                	and    %ch,(%edx)
    4265:	10 00                	adc    %al,(%eax)
    4267:	06                   	push   %es
    4268:	00 00                	add    %al,(%eax)
    426a:	00 01                	add    %al,(%ecx)
    426c:	9c                   	pushf
    426d:	07                   	pop    %es
    426e:	f0 0a 00             	lock or (%eax),%al
    4271:	00 5a 79             	add    %bl,0x79(%edx)
    4274:	00 00                	add    %al,(%eax)
    4276:	00 10                	add    %dl,(%eax)
    4278:	2a 10                	sub    (%eax),%dl
    427a:	00 06                	add    %al,(%esi)
    427c:	00 00                	add    %al,(%eax)
    427e:	00 01                	add    %al,(%ecx)
    4280:	9c                   	pushf
    4281:	10 e9                	adc    %ch,%cl
    4283:	04 00                	add    $0x0,%al
    4285:	00 01                	add    %al,(%ecx)
    4287:	4c                   	dec    %esp
    4288:	06                   	push   %es
    4289:	58                   	pop    %eax
    428a:	00 00                	add    %al,(%eax)
    428c:	00 d0                	add    %dl,%al
    428e:	28 10                	sub    %dl,(%eax)
    4290:	00 34 01             	add    %dh,(%ecx,%eax,1)
    4293:	00 00                	add    %al,(%eax)
    4295:	01 9c e4 01 00 00 11 	add    %ebx,0x11000001(%esp,%eiz,8)
    429c:	63 00                	arpl   %eax,(%eax)
    429e:	01 4d 0a             	add    %ecx,0xa(%ebp)
    42a1:	58                   	pop    %eax
    42a2:	00 00                	add    %al,(%eax)
    42a4:	00 61 1c             	add    %ah,0x1c(%ecx)
    42a7:	00 00                	add    %al,(%eax)
    42a9:	59                   	pop    %ecx
    42aa:	1c 00                	sbb    $0x0,%al
    42ac:	00 08                	add    %cl,(%eax)
    42ae:	60                   	pusha
    42af:	05 00 00 12 25       	add    $0x25120000,%eax
    42b4:	0b 00                	or     (%eax),%eax
    42b6:	00 01                	add    %al,(%ecx)
    42b8:	53                   	push   %ebx
    42b9:	11 26                	adc    %esp,(%esi)
    42bb:	00 00                	add    %al,(%eax)
    42bd:	00 86 1c 00 00 80    	add    %al,-0x7fffffe4(%esi)
    42c3:	1c 00                	sbb    $0x0,%al
    42c5:	00 09                	add    %cl,(%ecx)
    42c7:	53                   	push   %ebx
    42c8:	02 00                	add    (%eax),%al
    42ca:	00 f0                	add    %dh,%al
    42cc:	28 10                	sub    %dl,(%eax)
    42ce:	00 01                	add    %al,(%ecx)
    42d0:	f0 28 10             	lock sub %dl,(%eax)
    42d3:	00 02                	add    %al,(%edx)
    42d5:	00 00                	add    %al,(%eax)
    42d7:	00 50 12             	add    %dl,0x12(%eax)
    42da:	7d 01                	jge    42dd <MBOOT_HEADER_FLAGS+0x42da>
    42dc:	00 00                	add    %al,(%eax)
    42de:	03 60 02             	add    0x2(%eax),%esp
    42e1:	00 00                	add    %al,(%eax)
    42e3:	9f                   	lahf
    42e4:	1c 00                	sbb    $0x0,%al
    42e6:	00 9d 1c 00 00 04    	add    %bl,0x400001c(%ebp)
    42ec:	6c                   	insb   (%dx),%es:(%edi)
    42ed:	02 00                	add    (%eax),%al
    42ef:	00 ac 1c 00 00 aa 1c 	add    %ch,0x1caa0000(%esp,%ebx,1)
    42f6:	00 00                	add    %al,(%eax)
    42f8:	00 09                	add    %cl,(%ecx)
    42fa:	53                   	push   %ebx
    42fb:	02 00                	add    (%eax),%al
    42fd:	00 f6                	add    %dh,%dh
    42ff:	28 10                	sub    %dl,(%eax)
    4301:	00 01                	add    %al,(%ecx)
    4303:	f6 28                	imulb  (%eax)
    4305:	10 00                	adc    %al,(%eax)
    4307:	02 00                	add    (%eax),%al
    4309:	00 00                	add    %al,(%eax)
    430b:	53                   	push   %ebx
    430c:	1c b0                	sbb    $0xb0,%al
    430e:	01 00                	add    %eax,(%eax)
    4310:	00 03                	add    %al,(%ebx)
    4312:	60                   	pusha
    4313:	02 00                	add    (%eax),%al
    4315:	00 b7 1c 00 00 b5    	add    %dh,-0x4affffe4(%edi)
    431b:	1c 00                	sbb    $0x0,%al
    431d:	00 04 6c             	add    %al,(%esp,%ebp,2)
    4320:	02 00                	add    (%eax),%al
    4322:	00 c4                	add    %al,%ah
    4324:	1c 00                	sbb    $0x0,%al
    4326:	00 c2                	add    %al,%dl
    4328:	1c 00                	sbb    $0x0,%al
    432a:	00 00                	add    %al,(%eax)
    432c:	13 e4                	adc    %esp,%esp
    432e:	01 00                	add    %eax,(%eax)
    4330:	00 f8                	add    %bh,%al
    4332:	28 10                	sub    %dl,(%eax)
    4334:	00 03                	add    %al,(%ebx)
    4336:	82 05 00 00 01 54 0d 	addb   $0xd,0x54010000
    433d:	03 f5                	add    %ebp,%esi
    433f:	01 00                	add    %eax,(%eax)
    4341:	00 d7                	add    %dl,%bh
    4343:	1c 00                	sbb    $0x0,%al
    4345:	00 cd                	add    %cl,%ch
    4347:	1c 00                	sbb    $0x0,%al
    4349:	00 08                	add    %cl,(%eax)
    434b:	82 05 00 00 04 01 02 	addb   $0x2,0x1040000
    4352:	00 00                	add    %al,(%eax)
    4354:	03 1d 00 00 fd 1c    	add    0x1cfd0000,%ebx
    435a:	00 00                	add    %al,(%eax)
    435c:	00 00                	add    %al,(%eax)
    435e:	00 00                	add    %al,(%eax)
    4360:	14 1e                	adc    $0x1e,%al
    4362:	0b 00                	or     (%eax),%eax
    4364:	00 01                	add    %al,(%ecx)
    4366:	21 0d 58 00 00 00    	and    %ecx,0x58
    436c:	01 0c 02             	add    %ecx,(%edx,%eax,1)
    436f:	00 00                	add    %al,(%eax)
    4371:	0a 25 0b 00 00 01    	or     0x100000b,%ah
    4377:	21 25 26 00 00 00    	and    %esp,0x26
    437d:	0b 63 00             	or     0x0(%ebx),%esp
    4380:	01 3b                	add    %edi,(%ebx)
    4382:	0a 58 00             	or     0x0(%eax),%bl
    4385:	00 00                	add    %al,(%eax)
    4387:	00 15 40 02 00 00    	add    %dl,0x240
    438d:	01 18                	add    %ebx,(%eax)
    438f:	06                   	push   %es
    4390:	b0 28                	mov    $0x28,%al
    4392:	10 00                	adc    %al,(%eax)
    4394:	1b 00                	sbb    (%eax),%eax
    4396:	00 00                	add    %al,(%eax)
    4398:	01 9c 53 02 00 00 16 	add    %ebx,0x16000002(%ebx,%edx,2)
    439f:	53                   	push   %ebx
    43a0:	02 00                	add    (%eax),%al
    43a2:	00 b0 28 10 00 02    	add    %dh,0x2001028(%eax)
    43a8:	b0 28                	mov    $0x28,%al
    43aa:	10 00                	adc    %al,(%eax)
    43ac:	02 00                	add    (%eax),%al
    43ae:	00 00                	add    %al,(%eax)
    43b0:	01 1a                	add    %ebx,(%edx)
    43b2:	0c 03                	or     $0x3,%al
    43b4:	60                   	pusha
    43b5:	02 00                	add    (%eax),%al
    43b7:	00 1e                	add    %bl,(%esi)
    43b9:	1d 00 00 1c 1d       	sbb    $0x1d1c0000,%eax
    43be:	00 00                	add    %al,(%eax)
    43c0:	04 6c                	add    $0x6c,%al
    43c2:	02 00                	add    (%eax),%al
    43c4:	00 2b                	add    %ch,(%ebx)
    43c6:	1d 00 00 29 1d       	sbb    $0x1d290000,%eax
    43cb:	00 00                	add    %al,(%eax)
    43cd:	00 00                	add    %al,(%eax)
    43cf:	17                   	pop    %ss
    43d0:	69 6e 62 00 02 06 17 	imul   $0x17060200,0x62(%esi),%ebp
    43d7:	26 00 00             	add    %al,%es:(%eax)
    43da:	00 03                	add    %al,(%ebx)
    43dc:	0a 4d 06             	or     0x6(%ebp),%cl
    43df:	00 00                	add    %al,(%eax)
    43e1:	02 06                	add    (%esi),%al
    43e3:	24 38                	and    $0x38,%al
    43e5:	00 00                	add    %al,(%eax)
    43e7:	00 0b                	add    %cl,(%ebx)
    43e9:	72 65                	jb     4450 <MBOOT_HEADER_FLAGS+0x444d>
    43eb:	74 00                	je     43ed <MBOOT_HEADER_FLAGS+0x43ea>
    43ed:	02 07                	add    (%edi),%al
    43ef:	0d 26 00 00 00       	or     $0x26,%eax
    43f4:	00 00                	add    %al,(%eax)
    43f6:	7b 02                	jnp    43fa <MBOOT_HEADER_FLAGS+0x43f7>
    43f8:	00 00                	add    %al,(%eax)
    43fa:	05 00 01 04 b8       	add    $0xb8040100,%eax
    43ff:	0f 00 00             	sldt   (%eax)
    4402:	0b 30                	or     (%eax),%esi
    4404:	00 00                	add    %al,(%eax)
    4406:	00 1d 17 01 00 00    	add    %bl,0x117
    440c:	00 00                	add    %al,(%eax)
    440e:	00 00                	add    %al,(%eax)
    4410:	30 2a                	xor    %ch,(%edx)
    4412:	10 00                	adc    %al,(%eax)
    4414:	0b 01                	or     (%ecx),%eax
    4416:	00 00                	add    %al,(%eax)
    4418:	8c 2b                	mov    %gs,(%ebx)
    441a:	00 00                	add    %al,(%eax)
    441c:	01 01                	add    %eax,(%ecx)
    441e:	08 a9 00 00 00 01    	or     %ch,0x1000000(%ecx)
    4424:	02 07                	add    (%edi),%al
    4426:	f3 00 00             	repz add %al,(%eax)
    4429:	00 04 b7             	add    %al,(%edi,%esi,4)
    442c:	00 00                	add    %al,(%eax)
    442e:	00 02                	add    %al,(%edx)
    4430:	06                   	push   %es
    4431:	16                   	push   %ss
    4432:	40                   	inc    %eax
    4433:	00 00                	add    %al,(%eax)
    4435:	00 01                	add    %al,(%ecx)
    4437:	04 07                	add    $0x7,%al
    4439:	2f                   	das
    443a:	04 00                	add    $0x0,%al
    443c:	00 01                	add    %al,(%ecx)
    443e:	04 07                	add    $0x7,%al
    4440:	2a 04 00             	sub    (%eax,%eax,1),%al
    4443:	00 01                	add    %al,(%ecx)
    4445:	01 06                	add    %eax,(%esi)
    4447:	b2 00                	mov    $0x0,%dl
    4449:	00 00                	add    %al,(%eax)
    444b:	0c 4e                	or     $0x4e,%al
    444d:	00 00                	add    %al,(%eax)
    444f:	00 01                	add    %al,(%ecx)
    4451:	02 05 1d 01 00 00    	add    0x11d,%al
    4457:	0d 04 05 69 6e       	or     $0x6e690504,%eax
    445c:	74 00                	je     445e <MBOOT_HEADER_FLAGS+0x445b>
    445e:	01 04 05 c0 00 00 00 	add    %eax,0xc0(,%eax,1)
    4465:	04 b6                	add    $0xb6,%al
    4467:	02 00                	add    (%eax),%al
    4469:	00 02                	add    %al,(%edx)
    446b:	0c 17                	or     $0x17,%al
    446d:	47                   	inc    %edi
    446e:	00 00                	add    %al,(%eax)
    4470:	00 04 4e             	add    %al,(%esi,%ecx,2)
    4473:	02 00                	add    (%eax),%al
    4475:	00 02                	add    %al,(%edx)
    4477:	0f 0d 61 00          	prefetch 0x0(%ecx)
    447b:	00 00                	add    %al,(%eax)
    447d:	0e                   	push   %cs
    447e:	0c 03                	or     $0x3,%al
    4480:	09 09                	or     %ecx,(%ecx)
    4482:	b5 00                	mov    $0x0,%ch
    4484:	00 00                	add    %al,(%eax)
    4486:	06                   	push   %es
    4487:	7b 04                	jnp    448d <MBOOT_HEADER_FLAGS+0x448a>
    4489:	00 00                	add    %al,(%eax)
    448b:	0a 0e                	or     (%esi),%cl
    448d:	34 00                	xor    $0x0,%al
    448f:	00 00                	add    %al,(%eax)
    4491:	00 06                	add    %al,(%esi)
    4493:	c9                   	leave
    4494:	05 00 00 0b 0e       	add    $0xe0b0000,%eax
    4499:	34 00                	xor    $0x0,%al
    449b:	00 00                	add    %al,(%eax)
    449d:	04 06                	add    $0x6,%al
    449f:	76 05                	jbe    44a6 <MBOOT_HEADER_FLAGS+0x44a3>
    44a1:	00 00                	add    %al,(%eax)
    44a3:	0c 0a                	or     $0xa,%al
    44a5:	7b 00                	jnp    44a7 <MBOOT_HEADER_FLAGS+0x44a4>
    44a7:	00 00                	add    %al,(%eax)
    44a9:	08 00                	or     %al,(%eax)
    44ab:	04 a2                	add    $0xa2,%al
    44ad:	02 00                	add    (%eax),%al
    44af:	00 03                	add    %al,(%ebx)
    44b1:	0d 03 87 00 00       	or     $0x8703,%eax
    44b6:	00 08                	add    %cl,(%eax)
    44b8:	fe 02                	incb   (%edx)
    44ba:	00 00                	add    %al,(%eax)
    44bc:	04 54                	add    $0x54,%al
    44be:	06                   	push   %es
    44bf:	7b 00                	jnp    44c1 <MBOOT_HEADER_FLAGS+0x44be>
    44c1:	00 00                	add    %al,(%eax)
    44c3:	e1 00                	loope  44c5 <MBOOT_HEADER_FLAGS+0x44c2>
    44c5:	00 00                	add    %al,(%eax)
    44c7:	02 e1                	add    %cl,%ah
    44c9:	00 00                	add    %al,(%eax)
    44cb:	00 02                	add    %al,(%edx)
    44cd:	e6 00                	out    %al,$0x0
    44cf:	00 00                	add    %al,(%eax)
    44d1:	02 e8                	add    %al,%ch
    44d3:	00 00                	add    %al,(%eax)
    44d5:	00 00                	add    %al,(%eax)
    44d7:	05 55 00 00 00       	add    $0x55,%eax
    44dc:	0f 04                	(bad)
    44de:	05 34 00 00 00       	add    $0x34,%eax
    44e3:	08 9c 03 00 00 05 07 	or     %bl,0x7050000(%ebx,%eax,1)
    44ea:	07                   	pop    %es
    44eb:	e6 00                	out    %al,$0x0
    44ed:	00 00                	add    %al,(%eax)
    44ef:	0d 01 00 00 02       	or     $0x2000001,%eax
    44f4:	e6 00                	out    %al,$0x0
    44f6:	00 00                	add    %al,(%eax)
    44f8:	02 61 00             	add    0x0(%ecx),%ah
    44fb:	00 00                	add    %al,(%eax)
    44fd:	02 6f 00             	add    0x0(%edi),%ch
    4500:	00 00                	add    %al,(%eax)
    4502:	00 10                	add    %dl,(%eax)
    4504:	1d 02 00 00 06       	sbb    $0x6000002,%eax
    4509:	22 06                	and    (%esi),%al
    450b:	1f                   	pop    %ds
    450c:	01 00                	add    %eax,(%eax)
    450e:	00 02                	add    %al,(%edx)
    4510:	e1 00                	loope  4512 <MBOOT_HEADER_FLAGS+0x450f>
    4512:	00 00                	add    %al,(%eax)
    4514:	00 11                	add    %dl,(%ecx)
    4516:	98                   	cwtl
    4517:	05 00 00 01 23       	add    $0x23010000,%eax
    451c:	06                   	push   %es
    451d:	c0 2a 10             	shrb   $0x10,(%edx)
    4520:	00 7b 00             	add    %bh,0x0(%ebx)
    4523:	00 00                	add    %al,(%eax)
    4525:	01 9c e0 01 00 00 07 	add    %ebx,0x7000001(%eax,%eiz,8)
    452c:	7b 04                	jnp    4532 <MBOOT_HEADER_FLAGS+0x452f>
    452e:	00 00                	add    %al,(%eax)
    4530:	23 1f                	and    (%edi),%ebx
    4532:	34 00                	xor    $0x0,%al
    4534:	00 00                	add    %al,(%eax)
    4536:	42                   	inc    %edx
    4537:	1d 00 00 40 1d       	sbb    $0x1d400000,%eax
    453c:	00 00                	add    %al,(%eax)
    453e:	07                   	pop    %es
    453f:	c9                   	leave
    4540:	05 00 00 23 35       	add    $0x35230000,%eax
    4545:	34 00                	xor    $0x0,%al
    4547:	00 00                	add    %al,(%eax)
    4549:	4f                   	dec    %edi
    454a:	1d 00 00 4b 1d       	sbb    $0x1d4b0000,%eax
    454f:	00 00                	add    %al,(%eax)
    4551:	04 62                	add    $0x62,%al
    4553:	0b 00                	or     (%eax),%eax
    4555:	00 01                	add    %al,(%ecx)
    4557:	24 14                	and    $0x14,%al
    4559:	e0 01                	loopne 455c <MBOOT_HEADER_FLAGS+0x4559>
    455b:	00 00                	add    %al,(%eax)
    455d:	09 cc                	or     %ecx,%esp
    455f:	04 00                	add    $0x0,%al
    4561:	00 25 13 5b 01 00    	add    %ah,0x15b13
    4567:	00 62 1d             	add    %ah,0x1d(%edx)
    456a:	00 00                	add    %al,(%eax)
    456c:	60                   	pusha
    456d:	1d 00 00 12 b7       	sbb    $0xb7120000,%eax
    4572:	05 00 00 c4 01       	add    $0x1c40000,%eax
    4577:	00 00                	add    %al,(%eax)
    4579:	0a 69 00             	or     0x0(%ecx),%ch
    457c:	28 61 00             	sub    %ah,0x0(%ecx)
    457f:	00 00                	add    %al,(%eax)
    4581:	6c                   	insb   (%dx),%es:(%edi)
    4582:	1d 00 00 6a 1d       	sbb    $0x1d6a0000,%eax
    4587:	00 00                	add    %al,(%eax)
    4589:	13 c2                	adc    %edx,%eax
    458b:	05 00 00 0a 68       	add    $0x680a0000,%eax
    4590:	65 78 00             	gs js  4593 <MBOOT_HEADER_FLAGS+0x4590>
    4593:	29 4e 00             	sub    %ecx,0x0(%esi)
    4596:	00 00                	add    %al,(%eax)
    4598:	79 1d                	jns    45b7 <MBOOT_HEADER_FLAGS+0x45b4>
    459a:	00 00                	add    %al,(%eax)
    459c:	75 1d                	jne    45bb <MBOOT_HEADER_FLAGS+0x45b8>
    459e:	00 00                	add    %al,(%eax)
    45a0:	14 73                	adc    $0x73,%al
    45a2:	74 72                	je     4616 <MBOOT_HEADER_FLAGS+0x4613>
    45a4:	00 01                	add    %al,(%ecx)
    45a6:	2a 0e                	sub    (%esi),%cl
    45a8:	e6 01                	out    %al,$0x1
    45aa:	00 00                	add    %al,(%eax)
    45ac:	02 91 6a 03 10 2b    	add    0x2b10036a(%ecx),%dl
    45b2:	10 00                	adc    %al,(%eax)
    45b4:	0d 01 00 00 00       	or     $0x1,%eax
    45b9:	00 03                	add    %al,(%ebx)
    45bb:	e4 2a                	in     $0x2a,%al
    45bd:	10 00                	adc    %al,(%eax)
    45bf:	0d 01 00 00 03       	or     $0x3000001,%eax
    45c4:	20 2b                	and    %ch,(%ebx)
    45c6:	10 00                	adc    %al,(%eax)
    45c8:	0d 01 00 00 15       	or     $0x15000001,%eax
    45cd:	3b 2b                	cmp    (%ebx),%ebp
    45cf:	10 00                	adc    %al,(%eax)
    45d1:	0d 01 00 00 00       	or     $0x1,%eax
    45d6:	05 e5 01 00 00       	add    $0x1e5,%eax
    45db:	16                   	push   %ss
    45dc:	17                   	pop    %ss
    45dd:	4e                   	dec    %esi
    45de:	00 00                	add    %al,(%eax)
    45e0:	00 f6                	add    %dh,%dh
    45e2:	01 00                	add    %eax,(%eax)
    45e4:	00 18                	add    %bl,(%eax)
    45e6:	47                   	inc    %edi
    45e7:	00 00                	add    %al,(%eax)
    45e9:	00 01                	add    %al,(%ecx)
    45eb:	00 19                	add    %bl,(%ecx)
    45ed:	c7 04 00 00 01 08 06 	movl   $0x6080100,(%eax,%eax,1)
    45f4:	7b 00                	jnp    45f6 <MBOOT_HEADER_FLAGS+0x45f3>
    45f6:	00 00                	add    %al,(%eax)
    45f8:	30 2a                	xor    %ch,(%edx)
    45fa:	10 00                	adc    %al,(%eax)
    45fc:	82 00 00             	addb   $0x0,(%eax)
    45ff:	00 01                	add    %al,(%ecx)
    4601:	9c                   	pushf
    4602:	79 02                	jns    4606 <MBOOT_HEADER_FLAGS+0x4603>
    4604:	00 00                	add    %al,(%eax)
    4606:	1a a8 08 00 00 01    	sbb    0x1000008(%eax),%ch
    460c:	08 1f                	or     %bl,(%edi)
    460e:	e1 00                	loope  4610 <MBOOT_HEADER_FLAGS+0x460d>
    4610:	00 00                	add    %al,(%eax)
    4612:	02 91 00 07 ce 03    	add    0x3ce0700(%ecx),%dl
    4618:	00 00                	add    %al,(%eax)
    461a:	08 39                	or     %bh,(%ecx)
    461c:	79 02                	jns    4620 <MBOOT_HEADER_FLAGS+0x461d>
    461e:	00 00                	add    %al,(%eax)
    4620:	a8 1d                	test   $0x1d,%al
    4622:	00 00                	add    %al,(%eax)
    4624:	a0 1d 00 00 09       	mov    0x900001d,%al
    4629:	70 0b                	jo     4636 <MBOOT_HEADER_FLAGS+0x4633>
    462b:	00 00                	add    %al,(%eax)
    462d:	13 0e                	adc    (%esi),%ecx
    462f:	34 00                	xor    $0x0,%al
    4631:	00 00                	add    %al,(%eax)
    4633:	c6                   	(bad)
    4634:	1d 00 00 c4 1d       	sbb    $0x1dc40000,%eax
    4639:	00 00                	add    %al,(%eax)
    463b:	1b 62 09             	sbb    0x9(%edx),%esp
    463e:	00 00                	add    %al,(%eax)
    4640:	01 19                	add    %ebx,(%ecx)
    4642:	0e                   	push   %cs
    4643:	34 00                	xor    $0x0,%al
    4645:	00 00                	add    %al,(%eax)
    4647:	02 91 70 03 5c 2a    	add    0x2a5c0370(%ecx),%dl
    464d:	10 00                	adc    %al,(%eax)
    464f:	0d 01 00 00 03       	or     $0x3000001,%eax
    4654:	6a 2a                	push   $0x2a
    4656:	10 00                	adc    %al,(%eax)
    4658:	ed                   	in     (%dx),%eax
    4659:	00 00                	add    %al,(%eax)
    465b:	00 03                	add    %al,(%ebx)
    465d:	7f 2a                	jg     4689 <MBOOT_HEADER_FLAGS+0x4686>
    465f:	10 00                	adc    %al,(%eax)
    4661:	c1 00 00             	roll   $0x0,(%eax)
    4664:	00 03                	add    %al,(%ebx)
    4666:	aa                   	stos   %al,%es:(%edi)
    4667:	2a 10                	sub    (%eax),%dl
    4669:	00 0d 01 00 00 00    	add    %cl,0x1
    466f:	05 b5 00 00 00       	add    $0xb5,%eax
    4674:	00 46 01             	add    %al,0x1(%esi)
    4677:	00 00                	add    %al,(%eax)
    4679:	05 00 01 04 46       	add    $0x46040100,%eax
    467e:	11 00                	adc    %eax,(%eax)
    4680:	00 05 30 00 00 00    	add    %al,0x30
    4686:	1d 46 01 00 00       	sbb    $0x146,%eax
    468b:	00 00                	add    %al,(%eax)
    468d:	00 00                	add    %al,(%eax)
    468f:	40                   	inc    %eax
    4690:	2b 10                	sub    (%eax),%edx
    4692:	00 71 00             	add    %dh,0x0(%ecx)
    4695:	00 00                	add    %al,(%eax)
    4697:	d8 2c 00             	fsubrs (%eax,%eax,1)
    469a:	00 03                	add    %al,(%ebx)
    469c:	a1 00 00 00 04       	mov    0x4000000,%eax
    46a1:	30 00                	xor    %al,(%eax)
    46a3:	00 00                	add    %al,(%eax)
    46a5:	01 01                	add    %eax,(%ecx)
    46a7:	08 a9 00 00 00 01    	or     %ch,0x1000000(%ecx)
    46ad:	02 07                	add    (%edi),%al
    46af:	f3 00 00             	repz add %al,(%eax)
    46b2:	00 01                	add    %al,(%ecx)
    46b4:	04 07                	add    $0x7,%al
    46b6:	2f                   	das
    46b7:	04 00                	add    $0x0,%al
    46b9:	00 01                	add    %al,(%ecx)
    46bb:	04 07                	add    $0x7,%al
    46bd:	2a 04 00             	sub    (%eax,%eax,1),%al
    46c0:	00 01                	add    %al,(%ecx)
    46c2:	01 06                	add    %eax,(%esi)
    46c4:	b2 00                	mov    $0x0,%dl
    46c6:	00 00                	add    %al,(%eax)
    46c8:	01 02                	add    %eax,(%edx)
    46ca:	05 1d 01 00 00       	add    $0x11d,%eax
    46cf:	06                   	push   %es
    46d0:	04 05                	add    $0x5,%al
    46d2:	69 6e 74 00 01 04 05 	imul   $0x5040100,0x74(%esi),%ebp
    46d9:	c0 00 00             	rolb   $0x0,(%eax)
    46dc:	00 03                	add    %al,(%ebx)
    46de:	b6 02                	mov    $0x2,%dh
    46e0:	00 00                	add    %al,(%eax)
    46e2:	0c 45                	or     $0x45,%al
    46e4:	00 00                	add    %al,(%eax)
    46e6:	00 07                	add    %al,(%edi)
    46e8:	26 00 00             	add    %al,%es:(%eax)
    46eb:	00 85 00 00 00 08    	add    %al,0x8000000(%ebp)
    46f1:	45                   	inc    %ebp
    46f2:	00 00                	add    %al,(%eax)
    46f4:	00 ff                	add    %bh,%bh
    46f6:	ff 0f                	decl   (%edi)
    46f8:	00 00                	add    %al,(%eax)
    46fa:	04 91                	add    $0x91,%al
    46fc:	0b 00                	or     (%eax),%eax
    46fe:	00 07                	add    %al,(%edi)
    4700:	10 72 00             	adc    %dh,0x0(%edx)
    4703:	00 00                	add    %al,(%eax)
    4705:	05 03 60 7c 10       	add    $0x107c6003,%eax
    470a:	00 04 88             	add    %al,(%eax,%ecx,4)
    470d:	0b 00                	or     (%eax),%eax
    470f:	00 08                	add    %cl,(%eax)
    4711:	0f 68 00             	punpckhbw (%eax),%mm0
    4714:	00 00                	add    %al,(%eax)
    4716:	05 03 40 7c 10       	add    $0x107c4003,%eax
    471b:	00 09                	add    %cl,(%ecx)
    471d:	9c                   	pushf
    471e:	03 00                	add    (%eax),%eax
    4720:	00 03                	add    %al,(%ebx)
    4722:	07                   	pop    %es
    4723:	07                   	pop    %es
    4724:	c7 00 00 00 c7 00    	movl   $0xc70000,(%eax)
    472a:	00 00                	add    %al,(%eax)
    472c:	02 c7                	add    %bh,%al
    472e:	00 00                	add    %al,(%eax)
    4730:	00 02                	add    %al,(%edx)
    4732:	5a                   	pop    %edx
    4733:	00 00                	add    %al,(%eax)
    4735:	00 02                	add    %al,(%edx)
    4737:	68 00 00 00 00       	push   $0x0
    473c:	0a 04 0b             	or     (%ebx,%ecx,1),%al
    473f:	9e                   	sahf
    4740:	0b 00                	or     (%eax),%eax
    4742:	00 01                	add    %al,(%ecx)
    4744:	1b 06                	sbb    (%esi),%eax
    4746:	b0 2b                	mov    $0x2b,%al
    4748:	10 00                	adc    %al,(%eax)
    474a:	01 00                	add    %eax,(%eax)
    474c:	00 00                	add    %al,(%eax)
    474e:	01 9c ef 00 00 00 0c 	add    %ebx,0xc000000(%edi,%ebp,8)
    4755:	70 74                	jo     47cb <MBOOT_HEADER_FLAGS+0x47c8>
    4757:	72 00                	jb     4759 <MBOOT_HEADER_FLAGS+0x4756>
    4759:	01 1b                	add    %ebx,(%ebx)
    475b:	12 c7                	adc    %bh,%al
    475d:	00 00                	add    %al,(%eax)
    475f:	00 02                	add    %al,(%edx)
    4761:	91                   	xchg   %eax,%ecx
    4762:	00 00                	add    %al,(%eax)
    4764:	0d 96 0b 00 00       	or     $0xb96,%eax
    4769:	01 0f                	add    %ecx,(%edi)
    476b:	07                   	pop    %es
    476c:	c7 00 00 00 70 2b    	movl   $0x2b700000,(%eax)
    4772:	10 00                	adc    %al,(%eax)
    4774:	34 00                	xor    $0x0,%al
    4776:	00 00                	add    %al,(%eax)
    4778:	01 9c 2d 01 00 00 0e 	add    %ebx,0xe000001(%ebp,%ebp,1)
    477f:	62 09                	bound  %ecx,(%ecx)
    4781:	00 00                	add    %al,(%eax)
    4783:	01 0f                	add    %ecx,(%edi)
    4785:	16                   	push   %ss
    4786:	68 00 00 00 02       	push   $0x2000000
    478b:	91                   	xchg   %eax,%ecx
    478c:	00 0f                	add    %cl,(%edi)
    478e:	70 74                	jo     4804 <MBOOT_HEADER_FLAGS+0x4801>
    4790:	72 00                	jb     4792 <MBOOT_HEADER_FLAGS+0x478f>
    4792:	01 14 0b             	add    %edx,(%ebx,%ecx,1)
    4795:	c7 00 00 00 dd 1d    	movl   $0x1ddd0000,(%eax)
    479b:	00 00                	add    %al,(%eax)
    479d:	db 1d 00 00 00 10    	fistpl 0x10000000
    47a3:	7c 0b                	jl     47b0 <MBOOT_HEADER_FLAGS+0x47ad>
    47a5:	00 00                	add    %al,(%eax)
    47a7:	01 0a                	add    %ecx,(%edx)
    47a9:	06                   	push   %es
    47aa:	40                   	inc    %eax
    47ab:	2b 10                	sub    (%eax),%edx
    47ad:	00 23                	add    %ah,(%ebx)
    47af:	00 00                	add    %al,(%eax)
    47b1:	00 01                	add    %al,(%ecx)
    47b3:	9c                   	pushf
    47b4:	11 5e 2b             	adc    %ebx,0x2b(%esi)
    47b7:	10 00                	adc    %al,(%eax)
    47b9:	a7                   	cmpsl  %es:(%edi),%ds:(%esi)
    47ba:	00 00                	add    %al,(%eax)
    47bc:	00 00                	add    %al,(%eax)
    47be:	00 4b 01             	add    %cl,0x1(%ebx)
    47c1:	00 00                	add    %al,(%eax)
    47c3:	05 00 01 04 5a       	add    $0x5a040100,%eax
    47c8:	12 00                	adc    (%eax),%al
    47ca:	00 07                	add    %al,(%edi)
    47cc:	30 00                	xor    %al,(%eax)
    47ce:	00 00                	add    %al,(%eax)
    47d0:	1d 57 01 00 00       	sbb    $0x157,%eax
    47d5:	00 00                	add    %al,(%eax)
    47d7:	00 00                	add    %al,(%eax)
    47d9:	c0 2b 10             	shrb   $0x10,(%ebx)
    47dc:	00 45 00             	add    %al,0x0(%ebp)
    47df:	00 00                	add    %al,(%eax)
    47e1:	98                   	cwtl
    47e2:	2d 00 00 01 01       	sub    $0x1010000,%eax
    47e7:	08 a9 00 00 00 01    	or     %ch,0x1000000(%ecx)
    47ed:	02 07                	add    (%edi),%al
    47ef:	f3 00 00             	repz add %al,(%eax)
    47f2:	00 01                	add    %al,(%ecx)
    47f4:	04 07                	add    $0x7,%al
    47f6:	2f                   	das
    47f7:	04 00                	add    $0x0,%al
    47f9:	00 01                	add    %al,(%ecx)
    47fb:	04 07                	add    $0x7,%al
    47fd:	2a 04 00             	sub    (%eax,%eax,1),%al
    4800:	00 01                	add    %al,(%ecx)
    4802:	01 06                	add    %eax,(%esi)
    4804:	b2 00                	mov    $0x0,%dl
    4806:	00 00                	add    %al,(%eax)
    4808:	08 42 00             	or     %al,0x0(%edx)
    480b:	00 00                	add    %al,(%eax)
    480d:	01 02                	add    %eax,(%edx)
    480f:	05 1d 01 00 00       	add    $0x11d,%eax
    4814:	09 04 05 69 6e 74 00 	or     %eax,0x746e69(,%eax,1)
    481b:	01 04 05 c0 00 00 00 	add    %eax,0xc0(,%eax,1)
    4822:	0a 63 05             	or     0x5(%ebx),%ah
    4825:	00 00                	add    %al,(%eax)
    4827:	02 1f                	add    (%edi),%bl
    4829:	06                   	push   %es
    482a:	03 57 05             	add    0x5(%edi),%edx
    482d:	00 00                	add    %al,(%eax)
    482f:	21 7b 00             	and    %edi,0x0(%ebx)
    4832:	00 00                	add    %al,(%eax)
    4834:	04 42                	add    $0x42,%al
    4836:	00 00                	add    %al,(%eax)
    4838:	00 00                	add    %al,(%eax)
    483a:	03 1d 02 00 00 22    	add    0x22000002,%ebx
    4840:	8b 00                	mov    (%eax),%eax
    4842:	00 00                	add    %al,(%eax)
    4844:	04 8b                	add    $0x8b,%al
    4846:	00 00                	add    %al,(%eax)
    4848:	00 00                	add    %al,(%eax)
    484a:	0b 04 49             	or     (%ecx,%ecx,2),%eax
    484d:	00 00                	add    %al,(%eax)
    484f:	00 0c ac             	add    %cl,(%esp,%ebp,4)
    4852:	0b 00                	or     (%eax),%eax
    4854:	00 01                	add    %al,(%ecx)
    4856:	14 06                	adc    $0x6,%al
    4858:	00 2c 10             	add    %ch,(%eax,%edx,1)
    485b:	00 05 00 00 00 01    	add    %al,0x1000000
    4861:	9c                   	pushf
    4862:	b1 00                	mov    $0x0,%cl
    4864:	00 00                	add    %al,(%eax)
    4866:	02 05 2c 10 00 63    	add    0x6300102c,%al
    486c:	00 00                	add    %al,(%eax)
    486e:	00 00                	add    %al,(%eax)
    4870:	05 b0 01 00 00       	add    $0x1b0,%eax
    4875:	10 f0                	adc    %dh,%al
    4877:	2b 10                	sub    (%eax),%edx
    4879:	00 10                	add    %dl,(%eax)
    487b:	00 00                	add    %al,(%eax)
    487d:	00 01                	add    %al,(%ecx)
    487f:	9c                   	pushf
    4880:	e0 00                	loopne 4882 <MBOOT_HEADER_FLAGS+0x487f>
    4882:	00 00                	add    %al,(%eax)
    4884:	06                   	push   %es
    4885:	63 00                	arpl   %eax,(%eax)
    4887:	10 15 42 00 00 00    	adc    %dl,0x42
    488d:	f3 1d 00 00 ef 1d    	repz sbb $0x1def0000,%eax
    4893:	00 00                	add    %al,(%eax)
    4895:	02 00                	add    (%eax),%al
    4897:	2c 10                	sub    $0x10,%al
    4899:	00 6b 00             	add    %ch,0x0(%ebx)
    489c:	00 00                	add    %al,(%eax)
    489e:	00 05 a4 0b 00 00    	add    %al,0xba4
    48a4:	0b d0                	or     %eax,%edx
    48a6:	2b 10                	sub    (%eax),%edx
    48a8:	00 19                	add    %bl,(%ecx)
    48aa:	00 00                	add    %al,(%eax)
    48ac:	00 01                	add    %al,(%ecx)
    48ae:	9c                   	pushf
    48af:	1a 01                	sbb    (%ecx),%al
    48b1:	00 00                	add    %al,(%eax)
    48b3:	06                   	push   %es
    48b4:	73 74                	jae    492a <MBOOT_HEADER_FLAGS+0x4927>
    48b6:	72 00                	jb     48b8 <MBOOT_HEADER_FLAGS+0x48b5>
    48b8:	0b 1a                	or     (%edx),%ebx
    48ba:	8b 00                	mov    (%eax),%eax
    48bc:	00 00                	add    %al,(%eax)
    48be:	01 1e                	add    %ebx,(%esi)
    48c0:	00 00                	add    %al,(%eax)
    48c2:	ff 1d 00 00 0d db    	lcall  *0xdb0d0000
    48c8:	2b 10                	sub    (%eax),%edx
    48ca:	00 7b 00             	add    %bh,0x0(%ebx)
    48cd:	00 00                	add    %al,(%eax)
    48cf:	02 e9                	add    %cl,%ch
    48d1:	2b 10                	sub    (%eax),%edx
    48d3:	00 6b 00             	add    %ch,0x0(%ebx)
    48d6:	00 00                	add    %al,(%eax)
    48d8:	00 0e                	add    %cl,(%esi)
    48da:	bf 01 00 00 01       	mov    $0x1000001,%edi
    48df:	07                   	pop    %es
    48e0:	06                   	push   %es
    48e1:	c0 2b 10             	shrb   $0x10,(%ebx)
    48e4:	00 05 00 00 00 01    	add    %al,0x1000000
    48ea:	9c                   	pushf
    48eb:	0f 73                	psllq  $0x73,(bad)
    48ed:	74 72                	je     4961 <MBOOT_HEADER_FLAGS+0x495e>
    48ef:	00 01                	add    %al,(%ecx)
    48f1:	07                   	pop    %es
    48f2:	18 8b 00 00 00 02    	sbb    %cl,0x2000000(%ebx)
    48f8:	91                   	xchg   %eax,%ecx
    48f9:	00 10                	add    %dl,(%eax)
    48fb:	c5 2b                	lds    (%ebx),%ebp
    48fd:	10 00                	adc    %al,(%eax)
    48ff:	7b 00                	jnp    4901 <MBOOT_HEADER_FLAGS+0x48fe>
    4901:	00 00                	add    %al,(%eax)
    4903:	11 02                	adc    %eax,(%edx)
    4905:	91                   	xchg   %eax,%ecx
    4906:	00 03                	add    %al,(%ebx)
    4908:	91                   	xchg   %eax,%ecx
    4909:	00 06                	add    %al,(%esi)
    490b:	00 00                	add    %al,(%eax)
    490d:	00 2f                	add    %ch,(%edi)
    490f:	07                   	pop    %es
    4910:	00 00                	add    %al,(%eax)
    4912:	05 00 01 04 64       	add    $0x64040100,%eax
    4917:	13 00                	adc    (%eax),%eax
    4919:	00 14 30             	add    %dl,(%eax,%esi,1)
    491c:	00 00                	add    %al,(%eax)
    491e:	00 1d 69 01 00 00    	add    %bl,0x169
    4924:	00 00                	add    %al,(%eax)
    4926:	00 00                	add    %al,(%eax)
    4928:	20 2c 10             	and    %ch,(%eax,%edx,1)
    492b:	00 ea                	add    %ch,%dl
    492d:	02 00                	add    (%eax),%al
    492f:	00 26                	add    %ah,(%esi)
    4931:	2e 00 00             	add    %al,%cs:(%eax)
    4934:	0c a1                	or     $0xa1,%al
    4936:	00 00                	add    %al,(%eax)
    4938:	00 04 17             	add    %al,(%edi,%edx,1)
    493b:	31 00                	xor    %eax,(%eax)
    493d:	00 00                	add    %al,(%eax)
    493f:	04 01                	add    $0x1,%al
    4941:	08 a9 00 00 00 0c    	or     %ch,0xc000000(%ecx)
    4947:	14 01                	adc    $0x1,%al
    4949:	00 00                	add    %al,(%eax)
    494b:	05 18 43 00 00       	add    $0x4318,%eax
    4950:	00 04 02             	add    %al,(%edx,%eax,1)
    4953:	07                   	pop    %es
    4954:	f3 00 00             	repz add %al,(%eax)
    4957:	00 04 04             	add    %al,(%esp,%eax,1)
    495a:	07                   	pop    %es
    495b:	2f                   	das
    495c:	04 00                	add    $0x0,%al
    495e:	00 04 04             	add    %al,(%esp,%eax,1)
    4961:	07                   	pop    %es
    4962:	2a 04 00             	sub    (%eax,%eax,1),%al
    4965:	00 04 01             	add    %al,(%ecx,%eax,1)
    4968:	06                   	push   %es
    4969:	b2 00                	mov    $0x0,%dl
    496b:	00 00                	add    %al,(%eax)
    496d:	10 58 00             	adc    %bl,0x0(%eax)
    4970:	00 00                	add    %al,(%eax)
    4972:	04 02                	add    $0x2,%al
    4974:	05 1d 01 00 00       	add    $0x11d,%eax
    4979:	15 04 05 69 6e       	adc    $0x6e690504,%eax
    497e:	74 00                	je     4980 <MBOOT_HEADER_FLAGS+0x497d>
    4980:	04 04                	add    $0x4,%al
    4982:	05 c0 00 00 00       	add    $0xc0,%eax
    4987:	0c b6                	or     $0xb6,%al
    4989:	02 00                	add    (%eax),%al
    498b:	00 0c 17             	add    %cl,(%edi,%edx,1)
    498e:	51                   	push   %ecx
    498f:	00 00                	add    %al,(%eax)
    4991:	00 16                	add    %dl,(%esi)
    4993:	d3 0b                	rorl   %cl,(%ebx)
    4995:	00 00                	add    %al,(%eax)
    4997:	01 09                	add    %ecx,(%ecx)
    4999:	18 99 00 00 00 00    	sbb    %bl,0x0(%ecx)
    499f:	80 0b 00             	orb    $0x0,(%ebx)
    49a2:	11 38                	adc    %edi,(%eax)
    49a4:	00 00                	add    %al,(%eax)
    49a6:	00 10                	add    %dl,(%eax)
    49a8:	94                   	xchg   %eax,%esp
    49a9:	00 00                	add    %al,(%eax)
    49ab:	00 12                	add    %dl,(%edx)
    49ad:	16                   	push   %ss
    49ae:	05 00 00 0a 10       	add    $0x100a0000,%eax
    49b3:	26 00 00             	add    %al,%es:(%eax)
    49b6:	00 05 03 62 7c 20    	add    %al,0x207c6203
    49bc:	00 12                	add    %dl,(%edx)
    49be:	c0 0b 00             	rorb   $0x0,(%ebx)
    49c1:	00 0b                	add    %cl,(%ebx)
    49c3:	11 38                	adc    %edi,(%eax)
    49c5:	00 00                	add    %al,(%eax)
    49c7:	00 05 03 60 7c 20    	add    %al,0x207c6003
    49cd:	00 05 e4 02 00 00    	add    %al,0x2e4
    49d3:	56                   	push   %esi
    49d4:	f0 2e 10 00          	lock adc %al,%cs:(%eax)
    49d8:	1a 00                	sbb    (%eax),%al
    49da:	00 00                	add    %al,(%eax)
    49dc:	01 9c ef 00 00 00 08 	add    %ebx,0x8000000(%edi,%ebp,8)
    49e3:	66 67 00 56 1c       	data16 add %dl,0x1c(%bp)
    49e8:	26 00 00             	add    %al,%es:(%eax)
    49eb:	00 02                	add    %al,(%edx)
    49ed:	91                   	xchg   %eax,%ecx
    49ee:	00 08                	add    %cl,(%eax)
    49f0:	62 67 00             	bound  %esp,0x0(%edi)
    49f3:	56                   	push   %esi
    49f4:	28 26                	sub    %ah,(%esi)
    49f6:	00 00                	add    %al,(%eax)
    49f8:	00 02                	add    %al,(%edx)
    49fa:	91                   	xchg   %eax,%ecx
    49fb:	04 00                	add    $0x0,%al
    49fd:	17                   	pop    %ss
    49fe:	b8 0b 00 00 01       	mov    $0x100000b,%eax
    4a03:	4e                   	dec    %esi
    4a04:	06                   	push   %es
    4a05:	01 08                	add    %ecx,(%eax)
    4a07:	01 00                	add    %eax,(%eax)
    4a09:	00 13                	add    %dl,(%ebx)
    4a0b:	70 6f                	jo     4a7c <MBOOT_HEADER_FLAGS+0x4a79>
    4a0d:	73 00                	jae    4a0f <MBOOT_HEADER_FLAGS+0x4a0c>
    4a0f:	4e                   	dec    %esi
    4a10:	22 38                	and    (%eax),%bh
    4a12:	00 00                	add    %al,(%eax)
    4a14:	00 00                	add    %al,(%eax)
    4a16:	05 63 05 00 00       	add    $0x563,%eax
    4a1b:	46                   	inc    %esi
    4a1c:	30 2e                	xor    %ch,(%esi)
    4a1e:	10 00                	adc    %al,(%eax)
    4a20:	72 00                	jb     4a22 <MBOOT_HEADER_FLAGS+0x4a1f>
    4a22:	00 00                	add    %al,(%eax)
    4a24:	01 9c 66 02 00 00 0d 	add    %ebx,0xd000002(%esi,%eiz,2)
    4a2b:	30 2e                	xor    %ch,(%esi)
    4a2d:	10 00                	adc    %al,(%eax)
    4a2f:	41                   	inc    %ecx
    4a30:	00 00                	add    %al,(%eax)
    4a32:	00 86 01 00 00 09    	add    %al,0x9000001(%esi)
    4a38:	69 00 47 0e 6b 00    	imul   $0x6b0e47,(%eax),%eax
    4a3e:	00 00                	add    %al,(%eax)
    4a40:	16                   	push   %ss
    4a41:	1e                   	push   %ds
    4a42:	00 00                	add    %al,(%eax)
    4a44:	14 1e                	adc    $0x1e,%al
    4a46:	00 00                	add    %al,(%eax)
    4a48:	06                   	push   %es
    4a49:	f8                   	clc
    4a4a:	05 00 00 60 2e       	add    $0x2e600000,%eax
    4a4f:	10 00                	adc    %al,(%eax)
    4a51:	01 1c 06             	add    %ebx,(%esi,%eax,1)
    4a54:	00 00                	add    %al,(%eax)
    4a56:	48                   	dec    %eax
    4a57:	19 01                	sbb    %eax,(%ecx)
    4a59:	09 06                	or     %eax,(%esi)
    4a5b:	00 00                	add    %al,(%eax)
    4a5d:	23 1e                	and    (%esi),%ebx
    4a5f:	00 00                	add    %al,(%eax)
    4a61:	1f                   	pop    %ds
    4a62:	1e                   	push   %ds
    4a63:	00 00                	add    %al,(%eax)
    4a65:	01 12                	add    %edx,(%edx)
    4a67:	06                   	push   %es
    4a68:	00 00                	add    %al,(%eax)
    4a6a:	3a 1e                	cmp    (%esi),%bl
    4a6c:	00 00                	add    %al,(%eax)
    4a6e:	36 1e                	ss push %ds
    4a70:	00 00                	add    %al,(%eax)
    4a72:	07                   	pop    %es
    4a73:	1c 06                	sbb    $0x6,%al
    4a75:	00 00                	add    %al,(%eax)
    4a77:	03 1e                	add    (%esi),%ebx
    4a79:	06                   	push   %es
    4a7a:	00 00                	add    %al,(%eax)
    4a7c:	55                   	push   %ebp
    4a7d:	1e                   	push   %ds
    4a7e:	00 00                	add    %al,(%eax)
    4a80:	51                   	push   %ecx
    4a81:	1e                   	push   %ds
    4a82:	00 00                	add    %al,(%eax)
    4a84:	03 29                	add    (%ecx),%ebp
    4a86:	06                   	push   %es
    4a87:	00 00                	add    %al,(%eax)
    4a89:	6c                   	insb   (%dx),%es:(%edi)
    4a8a:	1e                   	push   %ds
    4a8b:	00 00                	add    %al,(%eax)
    4a8d:	68 1e 00 00 00       	push   $0x1e
    4a92:	00 00                	add    %al,(%eax)
    4a94:	06                   	push   %es
    4a95:	ef                   	out    %eax,(%dx)
    4a96:	00 00                	add    %al,(%eax)
    4a98:	00 7e 2e             	add    %bh,0x2e(%esi)
    4a9b:	10 00                	adc    %al,(%eax)
    4a9d:	01 2c 06             	add    %ebp,(%esi,%eax,1)
    4aa0:	00 00                	add    %al,(%eax)
    4aa2:	4b                   	dec    %ebx
    4aa3:	05 01 fc 00 00       	add    $0xfc01,%eax
    4aa8:	00 91 1e 00 00 8f    	add    %dl,-0x70ffffe2(%ecx)
    4aae:	1e                   	push   %ds
    4aaf:	00 00                	add    %al,(%eax)
    4ab1:	0a 36                	or     (%esi),%dh
    4ab3:	06                   	push   %es
    4ab4:	00 00                	add    %al,(%eax)
    4ab6:	7e 2e                	jle    4ae6 <MBOOT_HEADER_FLAGS+0x4ae3>
    4ab8:	10 00                	adc    %al,(%eax)
    4aba:	04 37                	add    $0x37,%al
    4abc:	06                   	push   %es
    4abd:	00 00                	add    %al,(%eax)
    4abf:	50                   	push   %eax
    4ac0:	05 d2 01 00 00       	add    $0x1d2,%eax
    4ac5:	01 43 06             	add    %eax,0x6(%ebx)
    4ac8:	00 00                	add    %al,(%eax)
    4aca:	9c                   	pushf
    4acb:	1e                   	push   %ds
    4acc:	00 00                	add    %al,(%eax)
    4ace:	9a 1e 00 00 01 4f 06 	lcall  $0x64f,$0x100001e
    4ad5:	00 00                	add    %al,(%eax)
    4ad7:	a9 1e 00 00 a7       	test   $0xa700001e,%eax
    4adc:	1e                   	push   %ds
    4add:	00 00                	add    %al,(%eax)
    4adf:	00 02                	add    %al,(%edx)
    4ae1:	36 06                	ss push %es
    4ae3:	00 00                	add    %al,(%eax)
    4ae5:	84 2e                	test   %ch,(%esi)
    4ae7:	10 00                	adc    %al,(%eax)
    4ae9:	02 84 2e 10 00 0a 00 	add    0xa0010(%esi,%ebp,1),%al
    4af0:	00 00                	add    %al,(%eax)
    4af2:	51                   	push   %ecx
    4af3:	04 02                	add    $0x2,%al
    4af5:	00 00                	add    %al,(%eax)
    4af7:	01 43 06             	add    %eax,0x6(%ebx)
    4afa:	00 00                	add    %al,(%eax)
    4afc:	b4 1e                	mov    $0x1e,%ah
    4afe:	00 00                	add    %al,(%eax)
    4b00:	b2 1e                	mov    $0x1e,%dl
    4b02:	00 00                	add    %al,(%eax)
    4b04:	01 4f 06             	add    %ecx,0x6(%edi)
    4b07:	00 00                	add    %al,(%eax)
    4b09:	c1 1e 00             	rcrl   $0x0,(%esi)
    4b0c:	00 bf 1e 00 00 00    	add    %bh,0x1e(%edi)
    4b12:	02 36                	add    (%esi),%dh
    4b14:	06                   	push   %es
    4b15:	00 00                	add    %al,(%eax)
    4b17:	8e 2e                	mov    (%esi),%gs
    4b19:	10 00                	adc    %al,(%eax)
    4b1b:	02 8e 2e 10 00 0b    	add    0xb00102e(%esi),%cl
    4b21:	00 00                	add    %al,(%eax)
    4b23:	00 52 36             	add    %dl,0x36(%edx)
    4b26:	02 00                	add    (%eax),%al
    4b28:	00 01                	add    %al,(%ecx)
    4b2a:	43                   	inc    %ebx
    4b2b:	06                   	push   %es
    4b2c:	00 00                	add    %al,(%eax)
    4b2e:	cc                   	int3
    4b2f:	1e                   	push   %ds
    4b30:	00 00                	add    %al,(%eax)
    4b32:	ca 1e 00             	lret   $0x1e
    4b35:	00 01                	add    %al,(%ecx)
    4b37:	4f                   	dec    %edi
    4b38:	06                   	push   %es
    4b39:	00 00                	add    %al,(%eax)
    4b3b:	d9 1e                	fstps  (%esi)
    4b3d:	00 00                	add    %al,(%eax)
    4b3f:	d7                   	xlat   %ds:(%ebx)
    4b40:	1e                   	push   %ds
    4b41:	00 00                	add    %al,(%eax)
    4b43:	00 0b                	add    %cl,(%ebx)
    4b45:	36 06                	ss push %es
    4b47:	00 00                	add    %al,(%eax)
    4b49:	99                   	cltd
    4b4a:	2e 10 00             	adc    %al,%cs:(%eax)
    4b4d:	02 99 2e 10 00 08    	add    0x800102e(%ecx),%bl
    4b53:	00 00                	add    %al,(%eax)
    4b55:	00 53 01             	add    %dl,0x1(%ebx)
    4b58:	43                   	inc    %ebx
    4b59:	06                   	push   %es
    4b5a:	00 00                	add    %al,(%eax)
    4b5c:	e4 1e                	in     $0x1e,%al
    4b5e:	00 00                	add    %al,(%eax)
    4b60:	e2 1e                	loop   4b80 <MBOOT_HEADER_FLAGS+0x4b7d>
    4b62:	00 00                	add    %al,(%eax)
    4b64:	01 4f 06             	add    %ecx,0x6(%edi)
    4b67:	00 00                	add    %al,(%eax)
    4b69:	f1                   	int1
    4b6a:	1e                   	push   %ds
    4b6b:	00 00                	add    %al,(%eax)
    4b6d:	ef                   	out    %eax,(%dx)
    4b6e:	1e                   	push   %ds
    4b6f:	00 00                	add    %al,(%eax)
    4b71:	00 00                	add    %al,(%eax)
    4b73:	00 05 1d 02 00 00    	add    %al,0x21d
    4b79:	40                   	inc    %eax
    4b7a:	f0 2d 10 00 37 00    	lock sub $0x370010,%eax
    4b80:	00 00                	add    %al,(%eax)
    4b82:	01 9c a9 02 00 00 08 	add    %ebx,0x8000002(%ecx,%ebp,4)
    4b89:	73 74                	jae    4bff <MBOOT_HEADER_FLAGS+0x4bfc>
    4b8b:	72 00                	jb     4b8d <MBOOT_HEADER_FLAGS+0x4b8a>
    4b8d:	40                   	inc    %eax
    4b8e:	1f                   	pop    %ds
    4b8f:	a9 02 00 00 02       	test   $0x2000002,%eax
    4b94:	91                   	xchg   %eax,%ecx
    4b95:	00 07                	add    %al,(%edi)
    4b97:	11 06                	adc    %eax,(%esi)
    4b99:	00 00                	add    %al,(%eax)
    4b9b:	09 69 00             	or     %ebp,0x0(%ecx)
    4b9e:	41                   	inc    %ecx
    4b9f:	11 79 00             	adc    %edi,0x0(%ecx)
    4ba2:	00 00                	add    %al,(%eax)
    4ba4:	00 1f                	add    %bl,(%edi)
    4ba6:	00 00                	add    %al,(%eax)
    4ba8:	fa                   	cli
    4ba9:	1e                   	push   %ds
    4baa:	00 00                	add    %al,(%eax)
    4bac:	18 19                	sbb    %bl,(%ecx)
    4bae:	2e 10 00             	adc    %al,%cs:(%eax)
    4bb1:	ae                   	scas   %es:(%edi),%al
    4bb2:	02 00                	add    (%eax),%al
    4bb4:	00 00                	add    %al,(%eax)
    4bb6:	00 11                	add    %dl,(%ecx)
    4bb8:	5f                   	pop    %edi
    4bb9:	00 00                	add    %al,(%eax)
    4bbb:	00 05 57 05 00 00    	add    %al,0x557
    4bc1:	21 90 2c 10 00 5f    	and    %edx,0x5f00102c(%eax)
    4bc7:	01 00                	add    %eax,(%eax)
    4bc9:	00 01                	add    %al,(%ecx)
    4bcb:	9c                   	pushf
    4bcc:	e3 04                	jecxz  4bd2 <MBOOT_HEADER_FLAGS+0x4bcf>
    4bce:	00 00                	add    %al,(%eax)
    4bd0:	08 63 00             	or     %ah,0x0(%ebx)
    4bd3:	21 17                	and    %edx,(%edi)
    4bd5:	58                   	pop    %eax
    4bd6:	00 00                	add    %al,(%eax)
    4bd8:	00 02                	add    %al,(%edx)
    4bda:	91                   	xchg   %eax,%ecx
    4bdb:	00 0d f0 2c 10 00    	add    %cl,0x102cf0
    4be1:	2e 00 00             	add    %al,%cs:(%eax)
    4be4:	00 00                	add    %al,(%eax)
    4be6:	03 00                	add    (%eax),%eax
    4be8:	00 0e                	add    %cl,(%esi)
    4bea:	69 00 32 12 6b 00    	imul   $0x6b1232,(%eax),%eax
    4bf0:	00 00                	add    %al,(%eax)
    4bf2:	19 f0                	sbb    %esi,%eax
    4bf4:	2c 10                	sub    $0x10,%al
    4bf6:	00 21                	add    %ah,(%ecx)
    4bf8:	00 00                	add    %al,(%eax)
    4bfa:	00 09                	add    %cl,(%ecx)
    4bfc:	6a 00                	push   $0x0
    4bfe:	33 16                	xor    (%esi),%edx
    4c00:	6b 00 00             	imul   $0x0,(%eax),%eax
    4c03:	00 28                	add    %ch,(%eax)
    4c05:	1f                   	pop    %ds
    4c06:	00 00                	add    %al,(%eax)
    4c08:	26 1f                	es pop %ds
    4c0a:	00 00                	add    %al,(%eax)
    4c0c:	00 00                	add    %al,(%eax)
    4c0e:	0d 1e 2d 10 00       	or     $0x102d1e,%eax
    4c13:	33 00                	xor    (%eax),%eax
    4c15:	00 00                	add    %al,(%eax)
    4c17:	62 03                	bound  %eax,(%ebx)
    4c19:	00 00                	add    %al,(%eax)
    4c1b:	0e                   	push   %cs
    4c1c:	69 00 38 12 6b 00    	imul   $0x6b1238,(%eax),%eax
    4c22:	00 00                	add    %al,(%eax)
    4c24:	06                   	push   %es
    4c25:	f8                   	clc
    4c26:	05 00 00 40 2d       	add    $0x2d400000,%eax
    4c2b:	10 00                	adc    %al,(%eax)
    4c2d:	01 eb                	add    %ebp,%ebx
    4c2f:	05 00 00 39 3c       	add    $0x3c390000,%eax
    4c34:	01 09                	add    %ecx,(%ecx)
    4c36:	06                   	push   %es
    4c37:	00 00                	add    %al,(%eax)
    4c39:	35 1f 00 00 31       	xor    $0x3100001f,%eax
    4c3e:	1f                   	pop    %ds
    4c3f:	00 00                	add    %al,(%eax)
    4c41:	01 12                	add    %edx,(%edx)
    4c43:	06                   	push   %es
    4c44:	00 00                	add    %al,(%eax)
    4c46:	4c                   	dec    %esp
    4c47:	1f                   	pop    %ds
    4c48:	00 00                	add    %al,(%eax)
    4c4a:	48                   	dec    %eax
    4c4b:	1f                   	pop    %ds
    4c4c:	00 00                	add    %al,(%eax)
    4c4e:	07                   	pop    %es
    4c4f:	eb 05                	jmp    4c56 <MBOOT_HEADER_FLAGS+0x4c53>
    4c51:	00 00                	add    %al,(%eax)
    4c53:	03 1e                	add    (%esi),%ebx
    4c55:	06                   	push   %es
    4c56:	00 00                	add    %al,(%eax)
    4c58:	67 1f                	addr16 pop %ds
    4c5a:	00 00                	add    %al,(%eax)
    4c5c:	63 1f                	arpl   %ebx,(%edi)
    4c5e:	00 00                	add    %al,(%eax)
    4c60:	03 29                	add    (%ecx),%ebp
    4c62:	06                   	push   %es
    4c63:	00 00                	add    %al,(%eax)
    4c65:	7e 1f                	jle    4c86 <MBOOT_HEADER_FLAGS+0x4c83>
    4c67:	00 00                	add    %al,(%eax)
    4c69:	7a 1f                	jp     4c8a <MBOOT_HEADER_FLAGS+0x4c87>
    4c6b:	00 00                	add    %al,(%eax)
    4c6d:	00 00                	add    %al,(%eax)
    4c6f:	00 0a                	add    %cl,(%edx)
    4c71:	f8                   	clc
    4c72:	05 00 00 b1 2c       	add    $0x2cb10000,%eax
    4c77:	10 00                	adc    %al,(%eax)
    4c79:	01 e0                	add    %esp,%eax
    4c7b:	05 00 00 2c 22       	add    $0x222c0000,%eax
    4c80:	b1 03                	mov    $0x3,%cl
    4c82:	00 00                	add    %al,(%eax)
    4c84:	01 09                	add    %ecx,(%ecx)
    4c86:	06                   	push   %es
    4c87:	00 00                	add    %al,(%eax)
    4c89:	a3 1f 00 00 a1       	mov    %eax,0xa100001f
    4c8e:	1f                   	pop    %ds
    4c8f:	00 00                	add    %al,(%eax)
    4c91:	01 12                	add    %edx,(%edx)
    4c93:	06                   	push   %es
    4c94:	00 00                	add    %al,(%eax)
    4c96:	ad                   	lods   %ds:(%esi),%eax
    4c97:	1f                   	pop    %ds
    4c98:	00 00                	add    %al,(%eax)
    4c9a:	ab                   	stos   %eax,%es:(%edi)
    4c9b:	1f                   	pop    %ds
    4c9c:	00 00                	add    %al,(%eax)
    4c9e:	07                   	pop    %es
    4c9f:	e0 05                	loopne 4ca6 <MBOOT_HEADER_FLAGS+0x4ca3>
    4ca1:	00 00                	add    %al,(%eax)
    4ca3:	03 1e                	add    (%esi),%ebx
    4ca5:	06                   	push   %es
    4ca6:	00 00                	add    %al,(%eax)
    4ca8:	bd 1f 00 00 b9       	mov    $0xb900001f,%ebp
    4cad:	1f                   	pop    %ds
    4cae:	00 00                	add    %al,(%eax)
    4cb0:	03 29                	add    (%ecx),%ebp
    4cb2:	06                   	push   %es
    4cb3:	00 00                	add    %al,(%eax)
    4cb5:	d8 1f                	fcomps (%edi)
    4cb7:	00 00                	add    %al,(%eax)
    4cb9:	d2 1f                	rcrb   %cl,(%edi)
    4cbb:	00 00                	add    %al,(%eax)
    4cbd:	00 00                	add    %al,(%eax)
    4cbf:	0a ef                	or     %bh,%ch
    4cc1:	00 00                	add    %al,(%eax)
    4cc3:	00 66 2d             	add    %ah,0x2d(%esi)
    4cc6:	10 00                	adc    %al,(%eax)
    4cc8:	01 fb                	add    %edi,%ebx
    4cca:	05 00 00 3d 05       	add    $0x53d0000,%eax
    4ccf:	97                   	xchg   %eax,%edi
    4cd0:	04 00                	add    $0x0,%al
    4cd2:	00 01                	add    %al,(%ecx)
    4cd4:	fc                   	cld
    4cd5:	00 00                	add    %al,(%eax)
    4cd7:	00 04 20             	add    %al,(%eax,%eiz,1)
    4cda:	00 00                	add    %al,(%eax)
    4cdc:	02 20                	add    (%eax),%ah
    4cde:	00 00                	add    %al,(%eax)
    4ce0:	02 36                	add    (%esi),%dh
    4ce2:	06                   	push   %es
    4ce3:	00 00                	add    %al,(%eax)
    4ce5:	66 2d 10 00          	sub    $0x10,%ax
    4ce9:	04 66                	add    $0x66,%al
    4ceb:	2d 10 00 0b 00       	sub    $0xb0010,%eax
    4cf0:	00 00                	add    %al,(%eax)
    4cf2:	50                   	push   %eax
    4cf3:	04 04                	add    $0x4,%al
    4cf5:	00 00                	add    %al,(%eax)
    4cf7:	01 43 06             	add    %eax,0x6(%ebx)
    4cfa:	00 00                	add    %al,(%eax)
    4cfc:	12 20                	adc    (%eax),%ah
    4cfe:	00 00                	add    %al,(%eax)
    4d00:	10 20                	adc    %ah,(%eax)
    4d02:	00 00                	add    %al,(%eax)
    4d04:	01 4f 06             	add    %ecx,0x6(%edi)
    4d07:	00 00                	add    %al,(%eax)
    4d09:	1f                   	pop    %ds
    4d0a:	20 00                	and    %al,(%eax)
    4d0c:	00 1d 20 00 00 00    	add    %bl,0x20
    4d12:	02 36                	add    (%esi),%dh
    4d14:	06                   	push   %es
    4d15:	00 00                	add    %al,(%eax)
    4d17:	71 2d                	jno    4d46 <MBOOT_HEADER_FLAGS+0x4d43>
    4d19:	10 00                	adc    %al,(%eax)
    4d1b:	02 71 2d             	add    0x2d(%ecx),%dh
    4d1e:	10 00                	adc    %al,(%eax)
    4d20:	0a 00                	or     (%eax),%al
    4d22:	00 00                	add    %al,(%eax)
    4d24:	51                   	push   %ecx
    4d25:	36 04 00             	ss add $0x0,%al
    4d28:	00 01                	add    %al,(%ecx)
    4d2a:	43                   	inc    %ebx
    4d2b:	06                   	push   %es
    4d2c:	00 00                	add    %al,(%eax)
    4d2e:	2a 20                	sub    (%eax),%ah
    4d30:	00 00                	add    %al,(%eax)
    4d32:	28 20                	sub    %ah,(%eax)
    4d34:	00 00                	add    %al,(%eax)
    4d36:	01 4f 06             	add    %ecx,0x6(%edi)
    4d39:	00 00                	add    %al,(%eax)
    4d3b:	37                   	aaa
    4d3c:	20 00                	and    %al,(%eax)
    4d3e:	00 35 20 00 00 00    	add    %dh,0x20
    4d44:	02 36                	add    (%esi),%dh
    4d46:	06                   	push   %es
    4d47:	00 00                	add    %al,(%eax)
    4d49:	7b 2d                	jnp    4d78 <MBOOT_HEADER_FLAGS+0x4d75>
    4d4b:	10 00                	adc    %al,(%eax)
    4d4d:	02 7b 2d             	add    0x2d(%ebx),%bh
    4d50:	10 00                	adc    %al,(%eax)
    4d52:	0b 00                	or     (%eax),%eax
    4d54:	00 00                	add    %al,(%eax)
    4d56:	52                   	push   %edx
    4d57:	68 04 00 00 01       	push   $0x1000004
    4d5c:	43                   	inc    %ebx
    4d5d:	06                   	push   %es
    4d5e:	00 00                	add    %al,(%eax)
    4d60:	45                   	inc    %ebp
    4d61:	20 00                	and    %al,(%eax)
    4d63:	00 43 20             	add    %al,0x20(%ebx)
    4d66:	00 00                	add    %al,(%eax)
    4d68:	01 4f 06             	add    %ecx,0x6(%edi)
    4d6b:	00 00                	add    %al,(%eax)
    4d6d:	52                   	push   %edx
    4d6e:	20 00                	and    %al,(%eax)
    4d70:	00 50 20             	add    %dl,0x20(%eax)
    4d73:	00 00                	add    %al,(%eax)
    4d75:	00 0b                	add    %cl,(%ebx)
    4d77:	36 06                	ss push %es
    4d79:	00 00                	add    %al,(%eax)
    4d7b:	86 2d 10 00 02 86    	xchg   %ch,0x86020010
    4d81:	2d 10 00 05 00       	sub    $0x50010,%eax
    4d86:	00 00                	add    %al,(%eax)
    4d88:	53                   	push   %ebx
    4d89:	01 43 06             	add    %eax,0x6(%ebx)
    4d8c:	00 00                	add    %al,(%eax)
    4d8e:	5d                   	pop    %ebp
    4d8f:	20 00                	and    %al,(%eax)
    4d91:	00 5b 20             	add    %bl,0x20(%ebx)
    4d94:	00 00                	add    %al,(%eax)
    4d96:	01 4f 06             	add    %ecx,0x6(%edi)
    4d99:	00 00                	add    %al,(%eax)
    4d9b:	6a 20                	push   $0x20
    4d9d:	00 00                	add    %al,(%eax)
    4d9f:	68 20 00 00 00       	push   $0x20
    4da4:	00 06                	add    %al,(%esi)
    4da6:	f8                   	clc
    4da7:	05 00 00 a7 2d       	add    $0x2da70000,%eax
    4dac:	10 00                	adc    %al,(%eax)
    4dae:	01 06                	add    %eax,(%esi)
    4db0:	06                   	push   %es
    4db1:	00 00                	add    %al,(%eax)
    4db3:	28 26                	sub    %ah,(%esi)
    4db5:	01 09                	add    %ecx,(%ecx)
    4db7:	06                   	push   %es
    4db8:	00 00                	add    %al,(%eax)
    4dba:	78 20                	js     4ddc <MBOOT_HEADER_FLAGS+0x4dd9>
    4dbc:	00 00                	add    %al,(%eax)
    4dbe:	76 20                	jbe    4de0 <MBOOT_HEADER_FLAGS+0x4ddd>
    4dc0:	00 00                	add    %al,(%eax)
    4dc2:	01 12                	add    %edx,(%edx)
    4dc4:	06                   	push   %es
    4dc5:	00 00                	add    %al,(%eax)
    4dc7:	84 20                	test   %ah,(%eax)
    4dc9:	00 00                	add    %al,(%eax)
    4dcb:	82 20 00             	andb   $0x0,(%eax)
    4dce:	00 07                	add    %al,(%edi)
    4dd0:	06                   	push   %es
    4dd1:	06                   	push   %es
    4dd2:	00 00                	add    %al,(%eax)
    4dd4:	03 1e                	add    (%esi),%ebx
    4dd6:	06                   	push   %es
    4dd7:	00 00                	add    %al,(%eax)
    4dd9:	92                   	xchg   %eax,%edx
    4dda:	20 00                	and    %al,(%eax)
    4ddc:	00 90 20 00 00 03    	add    %dl,0x3000020(%eax)
    4de2:	29 06                	sub    %eax,(%esi)
    4de4:	00 00                	add    %al,(%eax)
    4de6:	a0 20 00 00 9c       	mov    0x9c000020,%al
    4deb:	20 00                	and    %al,(%eax)
    4ded:	00 00                	add    %al,(%eax)
    4def:	00 00                	add    %al,(%eax)
    4df1:	05 53 02 00 00       	add    $0x253,%eax
    4df6:	13 20                	adc    (%eax),%esp
    4df8:	2c 10                	sub    $0x10,%al
    4dfa:	00 65 00             	add    %ah,0x0(%ebp)
    4dfd:	00 00                	add    %al,(%eax)
    4dff:	01 9c f8 05 00 00 1a 	add    %ebx,0x1a000005(%eax,%edi,8)
    4e06:	d9 05 00 00 12 05    	flds   0x5120000
    4e0c:	00 00                	add    %al,(%eax)
    4e0e:	09 69 00             	or     %ebp,0x0(%ecx)
    4e11:	19 0e                	sbb    %ecx,(%esi)
    4e13:	6b 00 00             	imul   $0x0,(%eax),%eax
    4e16:	00 bb 20 00 00 b9    	add    %bh,-0x46ffffe0(%ebx)
    4e1c:	20 00                	and    %al,(%eax)
    4e1e:	00 00                	add    %al,(%eax)
    4e20:	0b ef                	or     %edi,%ebp
    4e22:	00 00                	add    %al,(%eax)
    4e24:	00 5c 2c 10          	add    %bl,0x10(%esp,%ebp,1)
    4e28:	00 01                	add    %al,(%ecx)
    4e2a:	5c                   	pop    %esp
    4e2b:	2c 10                	sub    $0x10,%al
    4e2d:	00 28                	add    %ch,(%eax)
    4e2f:	00 00                	add    %al,(%eax)
    4e31:	00 1e                	add    %bl,(%esi)
    4e33:	01 fc                	add    %edi,%esp
    4e35:	00 00                	add    %al,(%eax)
    4e37:	00 c4                	add    %al,%ah
    4e39:	20 00                	and    %al,(%eax)
    4e3b:	00 c2                	add    %al,%dl
    4e3d:	20 00                	and    %al,(%eax)
    4e3f:	00 02                	add    %al,(%edx)
    4e41:	36 06                	ss push %es
    4e43:	00 00                	add    %al,(%eax)
    4e45:	5c                   	pop    %esp
    4e46:	2c 10                	sub    $0x10,%al
    4e48:	00 04 5c             	add    %al,(%esp,%ebx,2)
    4e4b:	2c 10                	sub    $0x10,%al
    4e4d:	00 0b                	add    %cl,(%ebx)
    4e4f:	00 00                	add    %al,(%eax)
    4e51:	00 50 64             	add    %dl,0x64(%eax)
    4e54:	05 00 00 01 43       	add    $0x43010000,%eax
    4e59:	06                   	push   %es
    4e5a:	00 00                	add    %al,(%eax)
    4e5c:	cd 20                	int    $0x20
    4e5e:	00 00                	add    %al,(%eax)
    4e60:	cb                   	lret
    4e61:	20 00                	and    %al,(%eax)
    4e63:	00 01                	add    %al,(%ecx)
    4e65:	4f                   	dec    %edi
    4e66:	06                   	push   %es
    4e67:	00 00                	add    %al,(%eax)
    4e69:	d8 20                	fsubs  (%eax)
    4e6b:	00 00                	add    %al,(%eax)
    4e6d:	d6                   	(bad)
    4e6e:	20 00                	and    %al,(%eax)
    4e70:	00 00                	add    %al,(%eax)
    4e72:	02 36                	add    (%esi),%dh
    4e74:	06                   	push   %es
    4e75:	00 00                	add    %al,(%eax)
    4e77:	67 2c 10             	addr16 sub $0x10,%al
    4e7a:	00 02                	add    %al,(%edx)
    4e7c:	67 2c 10             	addr16 sub $0x10,%al
    4e7f:	00 0a                	add    %cl,(%edx)
    4e81:	00 00                	add    %al,(%eax)
    4e83:	00 51 96             	add    %dl,-0x6a(%ecx)
    4e86:	05 00 00 01 43       	add    $0x43010000,%eax
    4e8b:	06                   	push   %es
    4e8c:	00 00                	add    %al,(%eax)
    4e8e:	e1 20                	loope  4eb0 <MBOOT_HEADER_FLAGS+0x4ead>
    4e90:	00 00                	add    %al,(%eax)
    4e92:	df 20                	fbld   (%eax)
    4e94:	00 00                	add    %al,(%eax)
    4e96:	01 4f 06             	add    %ecx,0x6(%edi)
    4e99:	00 00                	add    %al,(%eax)
    4e9b:	ec                   	in     (%dx),%al
    4e9c:	20 00                	and    %al,(%eax)
    4e9e:	00 ea                	add    %ch,%dl
    4ea0:	20 00                	and    %al,(%eax)
    4ea2:	00 00                	add    %al,(%eax)
    4ea4:	02 36                	add    (%esi),%dh
    4ea6:	06                   	push   %es
    4ea7:	00 00                	add    %al,(%eax)
    4ea9:	71 2c                	jno    4ed7 <MBOOT_HEADER_FLAGS+0x4ed4>
    4eab:	10 00                	adc    %al,(%eax)
    4ead:	02 71 2c             	add    0x2c(%ecx),%dh
    4eb0:	10 00                	adc    %al,(%eax)
    4eb2:	0b 00                	or     (%eax),%eax
    4eb4:	00 00                	add    %al,(%eax)
    4eb6:	52                   	push   %edx
    4eb7:	c8 05 00 00          	enter  $0x5,$0x0
    4ebb:	01 43 06             	add    %eax,0x6(%ebx)
    4ebe:	00 00                	add    %al,(%eax)
    4ec0:	f5                   	cmc
    4ec1:	20 00                	and    %al,(%eax)
    4ec3:	00 f3                	add    %dh,%bl
    4ec5:	20 00                	and    %al,(%eax)
    4ec7:	00 01                	add    %al,(%ecx)
    4ec9:	4f                   	dec    %edi
    4eca:	06                   	push   %es
    4ecb:	00 00                	add    %al,(%eax)
    4ecd:	00 21                	add    %ah,(%ecx)
    4ecf:	00 00                	add    %al,(%eax)
    4ed1:	fe                   	(bad)
    4ed2:	20 00                	and    %al,(%eax)
    4ed4:	00 00                	add    %al,(%eax)
    4ed6:	0b 36                	or     (%esi),%esi
    4ed8:	06                   	push   %es
    4ed9:	00 00                	add    %al,(%eax)
    4edb:	7c 2c                	jl     4f09 <MBOOT_HEADER_FLAGS+0x4f06>
    4edd:	10 00                	adc    %al,(%eax)
    4edf:	02 7c 2c 10          	add    0x10(%esp,%ebp,1),%bh
    4ee3:	00 08                	add    %cl,(%eax)
    4ee5:	00 00                	add    %al,(%eax)
    4ee7:	00 53 01             	add    %dl,0x1(%ebx)
    4eea:	43                   	inc    %ebx
    4eeb:	06                   	push   %es
    4eec:	00 00                	add    %al,(%eax)
    4eee:	09 21                	or     %esp,(%ecx)
    4ef0:	00 00                	add    %al,(%eax)
    4ef2:	07                   	pop    %es
    4ef3:	21 00                	and    %eax,(%eax)
    4ef5:	00 01                	add    %al,(%ecx)
    4ef7:	4f                   	dec    %edi
    4ef8:	06                   	push   %es
    4ef9:	00 00                	add    %al,(%eax)
    4efb:	14 21                	adc    $0x21,%al
    4efd:	00 00                	add    %al,(%eax)
    4eff:	12 21                	adc    (%ecx),%ah
    4f01:	00 00                	add    %al,(%eax)
    4f03:	00 00                	add    %al,(%eax)
    4f05:	00 1b                	add    %bl,(%ebx)
    4f07:	de 0b                	fimuls (%ebx)
    4f09:	00 00                	add    %al,(%eax)
    4f0b:	01 0d 11 38 00 00    	add    %ecx,0x3811
    4f11:	00 01                	add    %al,(%ecx)
    4f13:	36 06                	ss push %es
    4f15:	00 00                	add    %al,(%eax)
    4f17:	13 63 00             	adc    0x0(%ebx),%esp
    4f1a:	0d 20 58 00 00       	or     $0x5820,%eax
    4f1f:	00 0f                	add    %cl,(%edi)
    4f21:	1a 05 00 00 01 0d    	sbb    0xd010000,%al
    4f27:	2b 26                	sub    (%esi),%esp
    4f29:	00 00                	add    %al,(%eax)
    4f2b:	00 0e                	add    %cl,(%esi)
    4f2d:	63 31                	arpl   %esi,(%ecx)
    4f2f:	36 00 0e             	add    %cl,%ss:(%esi)
    4f32:	0e                   	push   %cs
    4f33:	38 00                	cmp    %al,(%eax)
    4f35:	00 00                	add    %al,(%eax)
    4f37:	1c cb                	sbb    $0xcb,%al
    4f39:	0b 00                	or     (%eax),%eax
    4f3b:	00 01                	add    %al,(%ecx)
    4f3d:	0f 0e                	femms
    4f3f:	38 00                	cmp    %al,(%eax)
    4f41:	00 00                	add    %al,(%eax)
    4f43:	00 1d 2a 06 00 00    	add    %bl,0x62a
    4f49:	02 0c 14             	add    (%esp,%edx,1),%cl
    4f4c:	03 5c 06 00          	add    0x0(%esi,%eax,1),%ebx
    4f50:	00 0f                	add    %cl,(%edi)
    4f52:	4d                   	dec    %ebp
    4f53:	06                   	push   %es
    4f54:	00 00                	add    %al,(%eax)
    4f56:	02 0c 22             	add    (%edx,%eiz,1),%cl
    4f59:	38 00                	cmp    %al,(%eax)
    4f5b:	00 00                	add    %al,(%eax)
    4f5d:	0f 37                	getsec
    4f5f:	03 00                	add    (%eax),%eax
    4f61:	00 02                	add    %al,(%edx)
    4f63:	0c 30                	or     $0x30,%al
    4f65:	26 00 00             	add    %al,%es:(%eax)
    4f68:	00 00                	add    %al,(%eax)
    4f6a:	1e                   	push   %ds
    4f6b:	ef                   	out    %eax,(%dx)
    4f6c:	00 00                	add    %al,(%eax)
    4f6e:	00 b0 2e 10 00 3c    	add    %dh,0x3c00102e(%eax)
    4f74:	00 00                	add    %al,(%eax)
    4f76:	00 01                	add    %al,(%ecx)
    4f78:	9c                   	pushf
    4f79:	1f                   	pop    %ds
    4f7a:	fc                   	cld
    4f7b:	00 00                	add    %al,(%eax)
    4f7d:	00 02                	add    %al,(%edx)
    4f7f:	91                   	xchg   %eax,%ecx
    4f80:	00 0a                	add    %cl,(%edx)
    4f82:	36 06                	ss push %es
    4f84:	00 00                	add    %al,(%eax)
    4f86:	c9                   	leave
    4f87:	2e 10 00             	adc    %al,%cs:(%eax)
    4f8a:	01 42 06             	add    %eax,0x6(%edx)
    4f8d:	00 00                	add    %al,(%eax)
    4f8f:	50                   	push   %eax
    4f90:	05 a2 06 00 00       	add    $0x6a2,%eax
    4f95:	01 43 06             	add    %eax,0x6(%ebx)
    4f98:	00 00                	add    %al,(%eax)
    4f9a:	1d 21 00 00 1b       	sbb    $0x1b000021,%eax
    4f9f:	21 00                	and    %eax,(%eax)
    4fa1:	00 01                	add    %al,(%ecx)
    4fa3:	4f                   	dec    %edi
    4fa4:	06                   	push   %es
    4fa5:	00 00                	add    %al,(%eax)
    4fa7:	2a 21                	sub    (%ecx),%ah
    4fa9:	00 00                	add    %al,(%eax)
    4fab:	28 21                	sub    %ah,(%ecx)
    4fad:	00 00                	add    %al,(%eax)
    4faf:	00 02                	add    %al,(%edx)
    4fb1:	36 06                	ss push %es
    4fb3:	00 00                	add    %al,(%eax)
    4fb5:	ca 2e 10             	lret   $0x102e
    4fb8:	00 02                	add    %al,(%edx)
    4fba:	ca 2e 10             	lret   $0x102e
    4fbd:	00 0a                	add    %cl,(%edx)
    4fbf:	00 00                	add    %al,(%eax)
    4fc1:	00 51 d4             	add    %dl,-0x2c(%ecx)
    4fc4:	06                   	push   %es
    4fc5:	00 00                	add    %al,(%eax)
    4fc7:	01 43 06             	add    %eax,0x6(%ebx)
    4fca:	00 00                	add    %al,(%eax)
    4fcc:	35 21 00 00 33       	xor    $0x33000021,%eax
    4fd1:	21 00                	and    %eax,(%eax)
    4fd3:	00 01                	add    %al,(%ecx)
    4fd5:	4f                   	dec    %edi
    4fd6:	06                   	push   %es
    4fd7:	00 00                	add    %al,(%eax)
    4fd9:	42                   	inc    %edx
    4fda:	21 00                	and    %eax,(%eax)
    4fdc:	00 40 21             	add    %al,0x21(%eax)
    4fdf:	00 00                	add    %al,(%eax)
    4fe1:	00 02                	add    %al,(%edx)
    4fe3:	36 06                	ss push %es
    4fe5:	00 00                	add    %al,(%eax)
    4fe7:	d4 2e                	aam    $0x2e
    4fe9:	10 00                	adc    %al,(%eax)
    4feb:	02 d4                	add    %ah,%dl
    4fed:	2e 10 00             	adc    %al,%cs:(%eax)
    4ff0:	0b 00                	or     (%eax),%eax
    4ff2:	00 00                	add    %al,(%eax)
    4ff4:	52                   	push   %edx
    4ff5:	06                   	push   %es
    4ff6:	07                   	pop    %es
    4ff7:	00 00                	add    %al,(%eax)
    4ff9:	01 43 06             	add    %eax,0x6(%ebx)
    4ffc:	00 00                	add    %al,(%eax)
    4ffe:	4c                   	dec    %esp
    4fff:	21 00                	and    %eax,(%eax)
    5001:	00 4a 21             	add    %cl,0x21(%edx)
    5004:	00 00                	add    %al,(%eax)
    5006:	01 4f 06             	add    %ecx,0x6(%edi)
    5009:	00 00                	add    %al,(%eax)
    500b:	59                   	pop    %ecx
    500c:	21 00                	and    %eax,(%eax)
    500e:	00 57 21             	add    %dl,0x21(%edi)
    5011:	00 00                	add    %al,(%eax)
    5013:	00 06                	add    %al,(%esi)
    5015:	36 06                	ss push %es
    5017:	00 00                	add    %al,(%eax)
    5019:	df 2e                	fildll (%esi)
    501b:	10 00                	adc    %al,(%eax)
    501d:	02 4d 06             	add    0x6(%ebp),%cl
    5020:	00 00                	add    %al,(%eax)
    5022:	53                   	push   %ebx
    5023:	05 01 43 06 00       	add    $0x64301,%eax
    5028:	00 64 21 00          	add    %ah,0x0(%ecx,%eiz,1)
    502c:	00 62 21             	add    %ah,0x21(%edx)
    502f:	00 00                	add    %al,(%eax)
    5031:	01 4f 06             	add    %ecx,0x6(%edi)
    5034:	00 00                	add    %al,(%eax)
    5036:	71 21                	jno    5059 <MBOOT_HEADER_FLAGS+0x5056>
    5038:	00 00                	add    %al,(%eax)
    503a:	6f                   	outsl  %ds:(%esi),(%dx)
    503b:	21 00                	and    %eax,(%eax)
    503d:	00 00                	add    %al,(%eax)
    503f:	00 00                	add    %al,(%eax)
    5041:	df 00                	filds  (%eax)
    5043:	00 00                	add    %al,(%eax)
    5045:	05 00 01 04 4c       	add    $0x4c040100,%eax
    504a:	15 00 00 03 30       	adc    $0x30030000,%eax
    504f:	00 00                	add    %al,(%eax)
    5051:	00 1d 77 01 00 00    	add    %bl,0x177
    5057:	00 00                	add    %al,(%eax)
    5059:	00 00                	add    %al,(%eax)
    505b:	40                   	inc    %eax
    505c:	2f                   	das
    505d:	10 00                	adc    %al,(%eax)
    505f:	b0 00                	mov    $0x0,%al
    5061:	00 00                	add    %al,(%eax)
    5063:	b6 32                	mov    $0x32,%dh
    5065:	00 00                	add    %al,(%eax)
    5067:	01 01                	add    %eax,(%ecx)
    5069:	08 a9 00 00 00 01    	or     %ch,0x1000000(%ecx)
    506f:	02 07                	add    (%edi),%al
    5071:	f3 00 00             	repz add %al,(%eax)
    5074:	00 04 b7             	add    %al,(%edi,%esi,4)
    5077:	00 00                	add    %al,(%eax)
    5079:	00 02                	add    %al,(%edx)
    507b:	06                   	push   %es
    507c:	16                   	push   %ss
    507d:	40                   	inc    %eax
    507e:	00 00                	add    %al,(%eax)
    5080:	00 01                	add    %al,(%ecx)
    5082:	04 07                	add    $0x7,%al
    5084:	2f                   	das
    5085:	04 00                	add    $0x0,%al
    5087:	00 01                	add    %al,(%ecx)
    5089:	04 07                	add    $0x7,%al
    508b:	2a 04 00             	sub    (%eax,%eax,1),%al
    508e:	00 01                	add    %al,(%ecx)
    5090:	01 06                	add    %eax,(%esi)
    5092:	b2 00                	mov    $0x0,%dl
    5094:	00 00                	add    %al,(%eax)
    5096:	01 02                	add    %eax,(%edx)
    5098:	05 1d 01 00 00       	add    $0x11d,%eax
    509d:	05 04 05 69 6e       	add    $0x6e690504,%eax
    50a2:	74 00                	je     50a4 <MBOOT_HEADER_FLAGS+0x50a1>
    50a4:	01 04 05 c0 00 00 00 	add    %eax,0xc0(,%eax,1)
    50ab:	06                   	push   %es
    50ac:	ad                   	lods   %ds:(%esi),%eax
    50ad:	0a 00                	or     (%eax),%al
    50af:	00 01                	add    %al,(%ecx)
    50b1:	03 06                	add    (%esi),%eax
    50b3:	40                   	inc    %eax
    50b4:	2f                   	das
    50b5:	10 00                	adc    %al,(%eax)
    50b7:	b0 00                	mov    $0x0,%al
    50b9:	00 00                	add    %al,(%eax)
    50bb:	01 9c d0 00 00 00 02 	add    %ebx,0x2000000(%eax,%edx,8)
    50c2:	6e                   	outsb  %ds:(%esi),(%dx)
    50c3:	75 6d                	jne    5132 <MBOOT_HEADER_FLAGS+0x512f>
    50c5:	00 1f                	add    %bl,(%edi)
    50c7:	34 00                	xor    $0x0,%al
    50c9:	00 00                	add    %al,(%eax)
    50cb:	93                   	xchg   %eax,%ebx
    50cc:	21 00                	and    %eax,(%eax)
    50ce:	00 89 21 00 00 02    	add    %cl,0x2000021(%ecx)
    50d4:	73 74                	jae    514a <MBOOT_HEADER_FLAGS+0x5147>
    50d6:	72 00                	jb     50d8 <MBOOT_HEADER_FLAGS+0x50d5>
    50d8:	2a d0                	sub    %al,%dl
    50da:	00 00                	add    %al,(%eax)
    50dc:	00 b5 21 00 00 b1    	add    %dh,-0x4effffdf(%ebp)
    50e2:	21 00                	and    %eax,(%eax)
    50e4:	00 07                	add    %al,(%edi)
    50e6:	69 00 01 0a 09 5c    	imul   $0x5c090a01,(%eax),%eax
    50ec:	00 00                	add    %al,(%eax)
    50ee:	00 c8                	add    %cl,%al
    50f0:	21 00                	and    %eax,(%eax)
    50f2:	00 c4                	add    %al,%ah
    50f4:	21 00                	and    %eax,(%eax)
    50f6:	00 08                	add    %cl,(%eax)
    50f8:	72 65                	jb     515f <MBOOT_HEADER_FLAGS+0x515c>
    50fa:	76 00                	jbe    50fc <MBOOT_HEADER_FLAGS+0x50f9>
    50fc:	01 0b                	add    %ecx,(%ebx)
    50fe:	0a d6                	or     %dh,%dl
    5100:	00 00                	add    %al,(%eax)
    5102:	00 02                	add    %al,(%edx)
    5104:	91                   	xchg   %eax,%ecx
    5105:	61                   	popa
    5106:	09 6a 00             	or     %ebp,0x0(%edx)
    5109:	01 12                	add    %edx,(%edx)
    510b:	09 5c 00 00          	or     %ebx,0x0(%eax,%eax,1)
    510f:	00 00                	add    %al,(%eax)
    5111:	0a 04 4e             	or     (%esi,%ecx,2),%al
    5114:	00 00                	add    %al,(%eax)
    5116:	00 0b                	add    %cl,(%ebx)
    5118:	4e                   	dec    %esi
    5119:	00 00                	add    %al,(%eax)
    511b:	00 0c 47             	add    %cl,(%edi,%eax,2)
    511e:	00 00                	add    %al,(%eax)
    5120:	00 0a                	add    %cl,(%edx)
    5122:	00 00                	add    %al,(%eax)
    5124:	b7 03                	mov    $0x3,%bh
    5126:	00 00                	add    %al,(%eax)
    5128:	05 00 01 04 03       	add    $0x3040100,%eax
    512d:	16                   	push   %ss
    512e:	00 00                	add    %al,(%eax)
    5130:	0f 30                	wrmsr
    5132:	00 00                	add    %al,(%eax)
    5134:	00 1d 97 01 00 00    	add    %bl,0x197
    513a:	00 00                	add    %al,(%eax)
    513c:	00 00                	add    %al,(%eax)
    513e:	00 30                	add    %dh,(%eax)
    5140:	10 00                	adc    %al,(%eax)
    5142:	3d 02 00 00 7d       	cmp    $0x7d000002,%eax
    5147:	33 00                	xor    (%eax),%eax
    5149:	00 0a                	add    %cl,(%edx)
    514b:	a1 00 00 00 04       	mov    0x4000000,%eax
    5150:	35 00 00 00 0b       	xor    $0xb000000,%eax
    5155:	26 00 00             	add    %al,%es:(%eax)
    5158:	00 03                	add    %al,(%ebx)
    515a:	01 08                	add    %ecx,(%eax)
    515c:	a9 00 00 00 03       	test   $0x3000000,%eax
    5161:	02 07                	add    (%edi),%al
    5163:	f3 00 00             	repz add %al,(%eax)
    5166:	00 03                	add    %al,(%ebx)
    5168:	04 07                	add    $0x7,%al
    516a:	2f                   	das
    516b:	04 00                	add    $0x0,%al
    516d:	00 03                	add    %al,(%ebx)
    516f:	04 07                	add    $0x7,%al
    5171:	2a 04 00             	sub    (%eax,%eax,1),%al
    5174:	00 03                	add    %al,(%ebx)
    5176:	01 06                	add    %eax,(%esi)
    5178:	b2 00                	mov    $0x0,%dl
    517a:	00 00                	add    %al,(%eax)
    517c:	0b 51 00             	or     0x0(%ecx),%edx
    517f:	00 00                	add    %al,(%eax)
    5181:	03 02                	add    (%edx),%eax
    5183:	05 1d 01 00 00       	add    $0x11d,%eax
    5188:	10 04 05 69 6e 74 00 	adc    %al,0x746e69(,%eax,1)
    518f:	03 04 05 c0 00 00 00 	add    0xc0(,%eax,1),%eax
    5196:	0a b6 02 00 00 0c    	or     0xc000002(%esi),%dh
    519c:	4a                   	dec    %edx
    519d:	00 00                	add    %al,(%eax)
    519f:	00 04 ed 0b 00 00 37 	add    %al,0x3700000b(,%ebp,8)
    51a6:	07                   	pop    %es
    51a7:	0e                   	push   %cs
    51a8:	01 00                	add    %eax,(%eax)
    51aa:	00 f0                	add    %dh,%al
    51ac:	31 10                	xor    %edx,(%eax)
    51ae:	00 4d 00             	add    %cl,0x0(%ebp)
    51b1:	00 00                	add    %al,(%eax)
    51b3:	01 9c 0e 01 00 00 07 	add    %ebx,0x7000001(%esi,%ecx,1)
    51ba:	e8 0b 00 00 37       	call   370051ca <MBOOT_HEADER_MAGIC+0x1b52a1c8>
    51bf:	15 0e 01 00 00       	adc    $0x10e,%eax
    51c4:	ed                   	in     (%dx),%eax
    51c5:	21 00                	and    %eax,(%eax)
    51c7:	00 e7                	add    %ah,%bh
    51c9:	21 00                	and    %eax,(%eax)
    51cb:	00 01                	add    %al,(%ecx)
    51cd:	73 72                	jae    5241 <MBOOT_HEADER_FLAGS+0x523e>
    51cf:	63 00                	arpl   %eax,(%eax)
    51d1:	37                   	aaa
    51d2:	27                   	daa
    51d3:	13 01                	adc    (%ecx),%eax
    51d5:	00 00                	add    %al,(%eax)
    51d7:	09 22                	or     %esp,(%edx)
    51d9:	00 00                	add    %al,(%eax)
    51db:	05 22 00 00 01       	add    $0x1000022,%eax
    51e0:	6e                   	outsb  %ds:(%esi),(%dx)
    51e1:	00 37                	add    %dh,(%edi)
    51e3:	33 72 00             	xor    0x0(%edx),%esi
    51e6:	00 00                	add    %al,(%eax)
    51e8:	1d 22 00 00 19       	sbb    $0x19000022,%eax
    51ed:	22 00                	and    (%eax),%al
    51ef:	00 02                	add    %al,(%edx)
    51f1:	64 00 38             	add    %bh,%fs:(%eax)
    51f4:	0b 0e                	or     (%esi),%ecx
    51f6:	01 00                	add    %eax,(%eax)
    51f8:	00 34 22             	add    %dh,(%edx,%eiz,1)
    51fb:	00 00                	add    %al,(%eax)
    51fd:	32 22                	xor    (%edx),%ah
    51ff:	00 00                	add    %al,(%eax)
    5201:	0c 68                	or     $0x68,%al
    5203:	03 00                	add    (%eax),%eax
    5205:	00 fa                	add    %bh,%dl
    5207:	31 10                	xor    %edx,(%eax)
    5209:	00 01                	add    %al,(%ecx)
    520b:	74 06                	je     5213 <MBOOT_HEADER_FLAGS+0x5210>
    520d:	00 00                	add    %al,(%eax)
    520f:	38 08                	cmp    %cl,(%eax)
    5211:	79 03                	jns    5216 <MBOOT_HEADER_FLAGS+0x5213>
    5213:	00 00                	add    %al,(%eax)
    5215:	40                   	inc    %eax
    5216:	22 00                	and    (%eax),%al
    5218:	00 3c 22             	add    %bh,(%edx,%eiz,1)
    521b:	00 00                	add    %al,(%eax)
    521d:	0d 74 06 00 00       	or     $0x674,%eax
    5222:	09 85 03 00 00 54    	or     %eax,0x54000003(%ebp)
    5228:	22 00                	and    (%eax),%al
    522a:	00 50 22             	add    %dl,0x22(%eax)
    522d:	00 00                	add    %al,(%eax)
    522f:	00 00                	add    %al,(%eax)
    5231:	00 05 51 00 00 00    	add    %al,0x51
    5237:	05 58 00 00 00       	add    $0x58,%eax
    523c:	04 de                	add    $0xde,%al
    523e:	07                   	pop    %es
    523f:	00 00                	add    %al,(%eax)
    5241:	31 07                	xor    %eax,(%edi)
    5243:	0e                   	push   %cs
    5244:	01 00                	add    %eax,(%eax)
    5246:	00 a0 31 10 00 44    	add    %ah,0x44001031(%eax)
    524c:	00 00                	add    %al,(%eax)
    524e:	00 01                	add    %al,(%ecx)
    5250:	9c                   	pushf
    5251:	99                   	cltd
    5252:	01 00                	add    %eax,(%eax)
    5254:	00 07                	add    %al,(%edi)
    5256:	e8 0b 00 00 31       	call   31005266 <MBOOT_HEADER_MAGIC+0x1552a264>
    525b:	14 0e                	adc    $0xe,%al
    525d:	01 00                	add    %eax,(%eax)
    525f:	00 6a 22             	add    %ch,0x22(%edx)
    5262:	00 00                	add    %al,(%eax)
    5264:	64 22 00             	and    %fs:(%eax),%al
    5267:	00 01                	add    %al,(%ecx)
    5269:	73 72                	jae    52dd <MBOOT_HEADER_FLAGS+0x52da>
    526b:	63 00                	arpl   %eax,(%eax)
    526d:	31 26                	xor    %esp,(%esi)
    526f:	13 01                	adc    (%ecx),%eax
    5271:	00 00                	add    %al,(%eax)
    5273:	8a 22                	mov    (%edx),%ah
    5275:	00 00                	add    %al,(%eax)
    5277:	82 22 00             	andb   $0x0,(%edx)
    527a:	00 02                	add    %al,(%edx)
    527c:	64 00 32             	add    %dh,%fs:(%edx)
    527f:	0b 0e                	or     (%esi),%ecx
    5281:	01 00                	add    %eax,(%eax)
    5283:	00 c2                	add    %al,%dl
    5285:	22 00                	and    (%eax),%al
    5287:	00 bc 22 00 00 0c 68 	add    %bh,0x680c0000(%edx,%eiz,1)
    528e:	03 00                	add    (%eax),%eax
    5290:	00 a7 31 10 00 00    	add    %ah,0x1031(%edi)
    5296:	69 06 00 00 32 08    	imul   $0x8320000,(%esi),%eax
    529c:	79 03                	jns    52a1 <MBOOT_HEADER_FLAGS+0x529e>
    529e:	00 00                	add    %al,(%eax)
    52a0:	ed                   	in     (%dx),%eax
    52a1:	22 00                	and    (%eax),%al
    52a3:	00 e9                	add    %ch,%cl
    52a5:	22 00                	and    (%eax),%al
    52a7:	00 0d 69 06 00 00    	add    %cl,0x669
    52ad:	09 85 03 00 00 01    	or     %eax,0x1000003(%ebp)
    52b3:	23 00                	and    (%eax),%eax
    52b5:	00 fd                	add    %bh,%ch
    52b7:	22 00                	and    (%eax),%al
    52b9:	00 00                	add    %al,(%eax)
    52bb:	00 00                	add    %al,(%eax)
    52bd:	04 3e                	add    $0x3e,%al
    52bf:	09 00                	or     %eax,(%eax)
    52c1:	00 2b                	add    %ch,(%ebx)
    52c3:	07                   	pop    %es
    52c4:	0e                   	push   %cs
    52c5:	01 00                	add    %eax,(%eax)
    52c7:	00 70 31             	add    %dh,0x31(%eax)
    52ca:	10 00                	adc    %al,(%eax)
    52cc:	25 00 00 00 01       	and    $0x1000000,%eax
    52d1:	9c                   	pushf
    52d2:	e5 01                	in     $0x1,%eax
    52d4:	00 00                	add    %al,(%eax)
    52d6:	0e                   	push   %cs
    52d7:	e8 0b 00 00 2b       	call   2b0052e7 <MBOOT_HEADER_MAGIC+0xf52a2e5>
    52dc:	14 0e                	adc    $0xe,%al
    52de:	01 00                	add    %eax,(%eax)
    52e0:	00 02                	add    %al,(%edx)
    52e2:	91                   	xchg   %eax,%ecx
    52e3:	00 01                	add    %al,(%ecx)
    52e5:	73 72                	jae    5359 <MBOOT_HEADER_FLAGS+0x5356>
    52e7:	63 00                	arpl   %eax,(%eax)
    52e9:	2b 26                	sub    (%esi),%esp
    52eb:	13 01                	adc    (%ecx),%eax
    52ed:	00 00                	add    %al,(%eax)
    52ef:	19 23                	sbb    %esp,(%ebx)
    52f1:	00 00                	add    %al,(%eax)
    52f3:	11 23                	adc    %esp,(%ebx)
    52f5:	00 00                	add    %al,(%eax)
    52f7:	02 64 00 2c          	add    0x2c(%eax,%eax,1),%ah
    52fb:	0b 0e                	or     (%esi),%ecx
    52fd:	01 00                	add    %eax,(%eax)
    52ff:	00 53 23             	add    %dl,0x23(%ebx)
    5302:	00 00                	add    %al,(%eax)
    5304:	4b                   	dec    %ebx
    5305:	23 00                	and    (%eax),%eax
    5307:	00 00                	add    %al,(%eax)
    5309:	04 29                	add    $0x29,%al
    530b:	05 00 00 23 05       	add    $0x5230000,%eax
    5310:	64 00 00             	add    %al,%fs:(%eax)
    5313:	00 10                	add    %dl,(%eax)
    5315:	31 10                	xor    %edx,(%eax)
    5317:	00 59 00             	add    %bl,0x0(%ecx)
    531a:	00 00                	add    %al,(%eax)
    531c:	01 9c 23 02 00 00 01 	add    %ebx,0x1000002(%ebx,%eiz,1)
    5323:	73 31                	jae    5356 <MBOOT_HEADER_FLAGS+0x5353>
    5325:	00 23                	add    %ah,(%ebx)
    5327:	18 13                	sbb    %dl,(%ebx)
    5329:	01 00                	add    %eax,(%eax)
    532b:	00 89 23 00 00 85    	add    %cl,-0x7affffdd(%ecx)
    5331:	23 00                	and    (%eax),%eax
    5333:	00 01                	add    %al,(%ecx)
    5335:	73 32                	jae    5369 <MBOOT_HEADER_FLAGS+0x5366>
    5337:	00 23                	add    %ah,(%ebx)
    5339:	28 13                	sub    %dl,(%ebx)
    533b:	01 00                	add    %eax,(%eax)
    533d:	00 9f 23 00 00 99    	add    %bl,-0x66ffffdd(%edi)
    5343:	23 00                	and    (%eax),%eax
    5345:	00 00                	add    %al,(%eax)
    5347:	04 e5                	add    $0xe5,%al
    5349:	07                   	pop    %es
    534a:	00 00                	add    %al,(%eax)
    534c:	16                   	push   %ss
    534d:	05 64 00 00 00       	add    $0x64,%eax
    5352:	b0 30                	mov    $0x30,%al
    5354:	10 00                	adc    %al,(%eax)
    5356:	56                   	push   %esi
    5357:	00 00                	add    %al,(%eax)
    5359:	00 01                	add    %al,(%ecx)
    535b:	9c                   	pushf
    535c:	8c 02                	mov    %es,(%edx)
    535e:	00 00                	add    %al,(%eax)
    5360:	06                   	push   %es
    5361:	73 31                	jae    5394 <MBOOT_HEADER_FLAGS+0x5391>
    5363:	00 16                	add    %dl,(%esi)
    5365:	18 8c 02 00 00 02 91 	sbb    %cl,-0x6efe0000(%edx,%eax,1)
    536c:	00 06                	add    %al,(%esi)
    536e:	73 32                	jae    53a2 <MBOOT_HEADER_FLAGS+0x539f>
    5370:	00 16                	add    %dl,(%esi)
    5372:	28 8c 02 00 00 02 91 	sub    %cl,-0x6efe0000(%edx,%eax,1)
    5379:	04 01                	add    $0x1,%al
    537b:	6e                   	outsb  %ds:(%esi),(%dx)
    537c:	00 16                	add    %dl,(%esi)
    537e:	33 72 00             	xor    0x0(%edx),%esi
    5381:	00 00                	add    %al,(%eax)
    5383:	ba 23 00 00 b6       	mov    $0xb6000023,%edx
    5388:	23 00                	and    (%eax),%eax
    538a:	00 02                	add    %al,(%edx)
    538c:	70 31                	jo     53bf <MBOOT_HEADER_FLAGS+0x53bc>
    538e:	00 17                	add    %dl,(%edi)
    5390:	14 92                	adc    $0x92,%al
    5392:	02 00                	add    (%eax),%al
    5394:	00 d5                	add    %dl,%ch
    5396:	23 00                	and    (%eax),%eax
    5398:	00 cf                	add    %cl,%bh
    539a:	23 00                	and    (%eax),%eax
    539c:	00 02                	add    %al,(%edx)
    539e:	70 32                	jo     53d2 <MBOOT_HEADER_FLAGS+0x53cf>
    53a0:	00 18                	add    %bl,(%eax)
    53a2:	14 92                	adc    $0x92,%al
    53a4:	02 00                	add    (%eax),%al
    53a6:	00 f0                	add    %dh,%al
    53a8:	23 00                	and    (%eax),%eax
    53aa:	00 ec                	add    %ch,%ah
    53ac:	23 00                	and    (%eax),%eax
    53ae:	00 00                	add    %al,(%eax)
    53b0:	05 91 02 00 00       	add    $0x291,%eax
    53b5:	11 05 30 00 00 00    	adc    %eax,0x30
    53bb:	04 43                	add    $0x43,%al
    53bd:	07                   	pop    %es
    53be:	00 00                	add    %al,(%eax)
    53c0:	0f 07                	sysret
    53c2:	07                   	pop    %es
    53c3:	03 00                	add    (%eax),%eax
    53c5:	00 80 30 10 00 2b    	add    %al,0x2b001030(%eax)
    53cb:	00 00                	add    %al,(%eax)
    53cd:	00 01                	add    %al,(%ecx)
    53cf:	9c                   	pushf
    53d0:	07                   	pop    %es
    53d1:	03 00                	add    (%eax),%eax
    53d3:	00 07                	add    %al,(%edi)
    53d5:	e8 0b 00 00 0f       	call   f0053e5 <stack_top+0xedf9775>
    53da:	14 07                	adc    $0x7,%al
    53dc:	03 00                	add    (%eax),%eax
    53de:	00 04 24             	add    %al,(%esp)
    53e1:	00 00                	add    %al,(%eax)
    53e3:	00 24 00             	add    %ah,(%eax,%eax,1)
    53e6:	00 06                	add    %al,(%esi)
    53e8:	73 72                	jae    545c <MBOOT_HEADER_FLAGS+0x5459>
    53ea:	63 00                	arpl   %eax,(%eax)
    53ec:	0f 26 8c             	mov    %esp,%tr1
    53ef:	02 00                	add    (%eax),%al
    53f1:	00 02                	add    %al,(%edx)
    53f3:	91                   	xchg   %eax,%ecx
    53f4:	04 01                	add    $0x1,%al
    53f6:	6e                   	outsb  %ds:(%esi),(%dx)
    53f7:	75 6d                	jne    5466 <MBOOT_HEADER_FLAGS+0x5463>
    53f9:	00 0f                	add    %cl,(%edi)
    53fb:	32 72 00             	xor    0x0(%edx),%dh
    53fe:	00 00                	add    %al,(%eax)
    5400:	1a 24 00             	sbb    (%eax,%eax,1),%ah
    5403:	00 14 24             	add    %dl,(%esp)
    5406:	00 00                	add    %al,(%eax)
    5408:	02 64 00 10          	add    0x10(%eax,%eax,1),%ah
    540c:	0e                   	push   %cs
    540d:	09 03                	or     %eax,(%ebx)
    540f:	00 00                	add    %al,(%eax)
    5411:	43                   	inc    %ebx
    5412:	24 00                	and    $0x0,%al
    5414:	00 3b                	add    %bh,(%ebx)
    5416:	24 00                	and    $0x0,%al
    5418:	00 02                	add    %al,(%edx)
    541a:	73 00                	jae    541c <MBOOT_HEADER_FLAGS+0x5419>
    541c:	11 14 92             	adc    %edx,(%edx,%edx,4)
    541f:	02 00                	add    (%eax),%al
    5421:	00 6b 24             	add    %ch,0x24(%ebx)
    5424:	00 00                	add    %al,(%eax)
    5426:	63 24 00             	arpl   %esp,(%eax,%eax,1)
    5429:	00 00                	add    %al,(%eax)
    542b:	12 04 05 26 00 00 00 	adc    0x26(,%eax,1),%al
    5432:	04 9c                	add    $0x9c,%al
    5434:	03 00                	add    (%eax),%eax
    5436:	00 09                	add    %cl,(%ecx)
    5438:	07                   	pop    %es
    5439:	07                   	pop    %es
    543a:	03 00                	add    (%eax),%eax
    543c:	00 30                	add    %dh,(%eax)
    543e:	30 10                	xor    %dl,(%eax)
    5440:	00 43 00             	add    %al,0x0(%ebx)
    5443:	00 00                	add    %al,(%eax)
    5445:	01 9c 68 03 00 00 06 	add    %ebx,0x6000003(%eax,%ebp,2)
    544c:	70 74                	jo     54c2 <MBOOT_HEADER_FLAGS+0x54bf>
    544e:	72 00                	jb     5450 <MBOOT_HEADER_FLAGS+0x544d>
    5450:	09 14 07             	or     %edx,(%edi,%eax,1)
    5453:	03 00                	add    (%eax),%eax
    5455:	00 02                	add    %al,(%edx)
    5457:	91                   	xchg   %eax,%ecx
    5458:	00 0e                	add    %cl,(%esi)
    545a:	37                   	aaa
    545b:	03 00                	add    (%eax),%eax
    545d:	00 09                	add    %cl,(%ecx)
    545f:	1d 64 00 00 00       	sbb    $0x64,%eax
    5464:	02 91 04 01 6e 75    	add    0x756e0104(%ecx),%dl
    546a:	6d                   	insl   (%dx),%es:(%edi)
    546b:	00 09                	add    %cl,(%ecx)
    546d:	2b 72 00             	sub    0x0(%edx),%esi
    5470:	00 00                	add    %al,(%eax)
    5472:	8f                   	(bad)
    5473:	24 00                	and    $0x0,%al
    5475:	00 8b 24 00 00 02    	add    %cl,0x2000024(%ebx)
    547b:	70 00                	jo     547d <MBOOT_HEADER_FLAGS+0x547a>
    547d:	0a 0e                	or     (%esi),%cl
    547f:	09 03                	or     %eax,(%ebx)
    5481:	00 00                	add    %al,(%eax)
    5483:	a8 24                	test   $0x24,%al
    5485:	00 00                	add    %al,(%eax)
    5487:	a0 24 00 00 00       	mov    0x24,%al
    548c:	13 91 04 00 00 01    	adc    0x1000004(%ecx),%edx
    5492:	03 08                	add    (%eax),%ecx
    5494:	72 00                	jb     5496 <MBOOT_HEADER_FLAGS+0x5493>
    5496:	00 00                	add    %al,(%eax)
    5498:	01 90 03 00 00 14    	add    %edx,0x14000003(%eax)
    549e:	73 74                	jae    5514 <MBOOT_HEADER_FLAGS+0x5511>
    54a0:	72 00                	jb     54a2 <MBOOT_HEADER_FLAGS+0x549f>
    54a2:	01 03                	add    %eax,(%ebx)
    54a4:	1b 13                	sbb    (%ebx),%edx
    54a6:	01 00                	add    %eax,(%eax)
    54a8:	00 15 73 00 01 04    	add    %dl,0x4010073
    54ae:	11 13                	adc    %edx,(%ebx)
    54b0:	01 00                	add    %eax,(%eax)
    54b2:	00 00                	add    %al,(%eax)
    54b4:	16                   	push   %ss
    54b5:	68 03 00 00 00       	push   $0x3
    54ba:	30 10                	xor    %dl,(%eax)
    54bc:	00 24 00             	add    %ah,(%eax,%eax,1)
    54bf:	00 00                	add    %al,(%eax)
    54c1:	01 9c 08 79 03 00 00 	add    %ebx,0x379(%eax,%ecx,1)
    54c8:	c4 24 00             	les    (%eax,%eax,1),%esp
    54cb:	00 c0                	add    %al,%al
    54cd:	24 00                	and    $0x0,%al
    54cf:	00 09                	add    %cl,(%ecx)
    54d1:	85 03                	test   %eax,(%ebx)
    54d3:	00 00                	add    %al,(%eax)
    54d5:	d6                   	(bad)
    54d6:	24 00                	and    $0x0,%al
    54d8:	00 d0                	add    %dl,%al
    54da:	24 00                	and    $0x0,%al
    54dc:	00 00                	add    %al,(%eax)
    54de:	00 60 00             	add    %ah,0x0(%eax)
    54e1:	00 00                	add    %al,(%eax)
    54e3:	02 00                	add    (%eax),%al
    54e5:	55                   	push   %ebp
    54e6:	17                   	pop    %ss
    54e7:	00 00                	add    %al,(%eax)
    54e9:	04 01                	add    $0x1,%al
    54eb:	40                   	inc    %eax
    54ec:	32 10                	xor    (%eax),%dl
    54ee:	00 f8                	add    %bh,%al
    54f0:	32 10                	xor    (%eax),%dl
    54f2:	00 01                	add    %al,(%ecx)
    54f4:	37                   	aaa
    54f5:	00 00                	add    %al,(%eax)
    54f7:	6b 65 72 6e          	imul   $0x6e,0x72(%ebp),%esp
    54fb:	65 6c                	gs insb (%dx),%es:(%edi)
    54fd:	2f                   	das
    54fe:	62 6f 6f             	bound  %ebp,0x6f(%edi)
    5501:	74 2e                	je     5531 <MBOOT_HEADER_FLAGS+0x552e>
    5503:	61                   	popa
    5504:	73 6d                	jae    5573 <MBOOT_HEADER_FLAGS+0x5570>
    5506:	00 2f                	add    %ch,(%edi)
    5508:	55                   	push   %ebp
    5509:	73 65                	jae    5570 <MBOOT_HEADER_FLAGS+0x556d>
    550b:	72 73                	jb     5580 <MBOOT_HEADER_FLAGS+0x557d>
    550d:	2f                   	das
    550e:	6d                   	insl   (%dx),%es:(%edi)
    550f:	69 63 6b 2f 44 65 73 	imul   $0x7365442f,0x6b(%ebx),%esp
    5516:	6b 74 6f 70 2f       	imul   $0x2f,0x70(%edi,%ebp,2),%esi
    551b:	52                   	push   %edx
    551c:	69 6e 67 4f 53 2f 6b 	imul   $0x6b2f534f,0x67(%esi),%ebp
    5523:	65 72 6e             	gs jb  5594 <MBOOT_HEADER_FLAGS+0x5591>
    5526:	65 6c                	gs insb (%dx),%es:(%edi)
    5528:	2f                   	das
    5529:	00 4e 41             	add    %cl,0x41(%esi)
    552c:	53                   	push   %ebx
    552d:	4d                   	dec    %ebp
    552e:	20 32                	and    %dh,(%edx)
    5530:	2e 31 36             	xor    %esi,%cs:(%esi)
    5533:	2e 30 33             	xor    %dh,%cs:(%ebx)
    5536:	00 01                	add    %al,(%ecx)
    5538:	80 02 40             	addb   $0x40,(%edx)
    553b:	32 10                	xor    (%eax),%dl
    553d:	00 00                	add    %al,(%eax)
    553f:	00 00                	add    %al,(%eax)
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
       0:	01 05 00 31 13 02    	add    %eax,0x2133100
       6:	17                   	pop    %ss
       7:	b7 42                	mov    $0x42,%bh
       9:	17                   	pop    %ss
       a:	00 00                	add    %al,(%eax)
       c:	02 0d 00 03 0e 3a    	add    0x3a0e0300,%cl
      12:	21 01                	and    %eax,(%ecx)
      14:	3b 0b                	cmp    (%ebx),%ecx
      16:	39 0b                	cmp    %ecx,(%ebx)
      18:	49                   	dec    %ecx
      19:	13 38                	adc    (%eax),%edi
      1b:	0b 00                	or     (%eax),%eax
      1d:	00 03                	add    %al,(%ebx)
      1f:	24 00                	and    $0x0,%al
      21:	0b 0b                	or     (%ebx),%ecx
      23:	3e 0b 03             	or     %ds:(%ebx),%eax
      26:	0e                   	push   %cs
      27:	00 00                	add    %al,(%eax)
      29:	04 05                	add    $0x5,%al
      2b:	00 31                	add    %dh,(%ecx)
      2d:	13 02                	adc    (%edx),%eax
      2f:	18 00                	sbb    %al,(%eax)
      31:	00 05 05 00 03 0e    	add    %al,0xe030005
      37:	3a 21                	cmp    (%ecx),%ah
      39:	01 3b                	add    %edi,(%ebx)
      3b:	21 1b                	and    %ebx,(%ebx)
      3d:	39 0b                	cmp    %ecx,(%ebx)
      3f:	49                   	dec    %ecx
      40:	13 00                	adc    (%eax),%eax
      42:	00 06                	add    %al,(%esi)
      44:	16                   	push   %ss
      45:	00 03                	add    %al,(%ebx)
      47:	0e                   	push   %cs
      48:	3a 21                	cmp    (%ecx),%ah
      4a:	02 3b                	add    (%ebx),%bh
      4c:	0b 39                	or     (%ecx),%edi
      4e:	0b 49 13             	or     0x13(%ecx),%ecx
      51:	00 00                	add    %al,(%eax)
      53:	07                   	pop    %es
      54:	13 01                	adc    (%ecx),%eax
      56:	03 0e                	add    (%esi),%ecx
      58:	0b 0b                	or     (%ebx),%ecx
      5a:	3a 21                	cmp    (%ecx),%ah
      5c:	01 3b                	add    %edi,(%ebx)
      5e:	0b 39                	or     (%ecx),%edi
      60:	21 08                	and    %ecx,(%eax)
      62:	01 13                	add    %edx,(%ebx)
      64:	00 00                	add    %al,(%eax)
      66:	08 34 00             	or     %dh,(%eax,%eax,1)
      69:	03 08                	add    (%eax),%ecx
      6b:	3a 21                	cmp    (%ecx),%ah
      6d:	01 3b                	add    %edi,(%ebx)
      6f:	0b 39                	or     (%ecx),%edi
      71:	0b 49 13             	or     0x13(%ecx),%ecx
      74:	3f                   	aas
      75:	19 02                	sbb    %eax,(%edx)
      77:	18 00                	sbb    %al,(%eax)
      79:	00 09                	add    %cl,(%ecx)
      7b:	1d 01 31 13 52       	sbb    $0x52133101,%eax
      80:	01 b8 42 0b 11 01    	add    %edi,0x1110b42(%eax)
      86:	12 06                	adc    (%esi),%al
      88:	58                   	pop    %eax
      89:	21 01                	and    %eax,(%ecx)
      8b:	59                   	pop    %ecx
      8c:	0b 57 21             	or     0x21(%edi),%edx
      8f:	05 01 13 00 00       	add    $0x1301,%eax
      94:	0a 11                	or     (%ecx),%dl
      96:	01 25 0e 13 0b 03    	add    %esp,0x30b130e
      9c:	1f                   	pop    %ds
      9d:	1b 1f                	sbb    (%edi),%ebx
      9f:	11 01                	adc    %eax,(%ecx)
      a1:	12 06                	adc    (%esi),%al
      a3:	10 17                	adc    %dl,(%edi)
      a5:	00 00                	add    %al,(%eax)
      a7:	0b 24 00             	or     (%eax,%eax,1),%esp
      aa:	0b 0b                	or     (%ebx),%ecx
      ac:	3e 0b 03             	or     %ds:(%ebx),%eax
      af:	08 00                	or     %al,(%eax)
      b1:	00 0c 01             	add    %cl,(%ecx,%eax,1)
      b4:	01 49 13             	add    %ecx,0x13(%ecx)
      b7:	01 13                	add    %edx,(%ebx)
      b9:	00 00                	add    %al,(%eax)
      bb:	0d 21 00 49 13       	or     $0x13490021,%eax
      c0:	2f                   	das
      c1:	0b 00                	or     (%eax),%eax
      c3:	00 0e                	add    %cl,(%esi)
      c5:	2e 01 3f             	add    %edi,%cs:(%edi)
      c8:	19 03                	sbb    %eax,(%ebx)
      ca:	0e                   	push   %cs
      cb:	3a 0b                	cmp    (%ebx),%cl
      cd:	3b 0b                	cmp    (%ebx),%ecx
      cf:	39 0b                	cmp    %ecx,(%ebx)
      d1:	27                   	daa
      d2:	19 3c 19             	sbb    %edi,(%ecx,%ebx,1)
      d5:	01 13                	add    %edx,(%ebx)
      d7:	00 00                	add    %al,(%eax)
      d9:	0f 05                	syscall
      db:	00 49 13             	add    %cl,0x13(%ecx)
      de:	00 00                	add    %al,(%eax)
      e0:	10 2e                	adc    %ch,(%esi)
      e2:	01 3f                	add    %edi,(%edi)
      e4:	19 03                	sbb    %eax,(%ebx)
      e6:	0e                   	push   %cs
      e7:	3a 0b                	cmp    (%ebx),%cl
      e9:	3b 0b                	cmp    (%ebx),%ecx
      eb:	39 0b                	cmp    %ecx,(%ebx)
      ed:	11 01                	adc    %eax,(%ecx)
      ef:	12 06                	adc    (%esi),%al
      f1:	40                   	inc    %eax
      f2:	18 7a 19             	sbb    %bh,0x19(%edx)
      f5:	01 13                	add    %edx,(%ebx)
      f7:	00 00                	add    %al,(%eax)
      f9:	11 1d 01 31 13 52    	adc    %ebx,0x52133101
      ff:	01 b8 42 0b 55 17    	add    %edi,0x17550b42(%eax)
     105:	58                   	pop    %eax
     106:	0b 59 0b             	or     0xb(%ecx),%ebx
     109:	57                   	push   %edi
     10a:	0b 01                	or     (%ecx),%eax
     10c:	13 00                	adc    (%eax),%eax
     10e:	00 12                	add    %dl,(%edx)
     110:	48                   	dec    %eax
     111:	00 7d 01             	add    %bh,0x1(%ebp)
     114:	7f 13                	jg     129 <MBOOT_HEADER_FLAGS+0x126>
     116:	00 00                	add    %al,(%eax)
     118:	13 2e                	adc    (%esi),%ebp
     11a:	01 3f                	add    %edi,(%edi)
     11c:	19 03                	sbb    %eax,(%ebx)
     11e:	0e                   	push   %cs
     11f:	3a 0b                	cmp    (%ebx),%cl
     121:	3b 0b                	cmp    (%ebx),%ecx
     123:	39 0b                	cmp    %ecx,(%ebx)
     125:	27                   	daa
     126:	19 20                	sbb    %esp,(%eax)
     128:	0b 01                	or     (%ecx),%eax
     12a:	13 00                	adc    (%eax),%eax
     12c:	00 14 05 00 03 08 3a 	add    %dl,0x3a080300(,%eax,1)
     133:	0b 3b                	or     (%ebx),%edi
     135:	0b 39                	or     (%ecx),%edi
     137:	0b 49 13             	or     0x13(%ecx),%ecx
     13a:	00 00                	add    %al,(%eax)
     13c:	15 2e 01 31 13       	adc    $0x1331012e,%eax
     141:	11 01                	adc    %eax,(%ecx)
     143:	12 06                	adc    (%esi),%al
     145:	40                   	inc    %eax
     146:	18 7a 19             	sbb    %bh,0x19(%edx)
     149:	00 00                	add    %al,(%eax)
     14b:	00 01                	add    %al,(%ecx)
     14d:	05 00 31 13 02       	add    $0x2133100,%eax
     152:	17                   	pop    %ss
     153:	b7 42                	mov    $0x42,%bh
     155:	17                   	pop    %ss
     156:	00 00                	add    %al,(%eax)
     158:	02 24 00             	add    (%eax,%eax,1),%ah
     15b:	0b 0b                	or     (%ebx),%ecx
     15d:	3e 0b 03             	or     %ds:(%ebx),%eax
     160:	0e                   	push   %cs
     161:	00 00                	add    %al,(%eax)
     163:	03 0d 00 03 0e 3a    	add    0x3a0e0300,%ecx
     169:	21 01                	and    %eax,(%ecx)
     16b:	3b 0b                	cmp    (%ebx),%ecx
     16d:	39 0b                	cmp    %ecx,(%ebx)
     16f:	49                   	dec    %ecx
     170:	13 38                	adc    (%eax),%edi
     172:	0b 00                	or     (%eax),%eax
     174:	00 04 2e             	add    %al,(%esi,%ebp,1)
     177:	01 3f                	add    %edi,(%edi)
     179:	19 03                	sbb    %eax,(%ebx)
     17b:	0e                   	push   %cs
     17c:	3a 21                	cmp    (%ecx),%ah
     17e:	01 3b                	add    %edi,(%ebx)
     180:	0b 39                	or     (%ecx),%edi
     182:	21 11                	and    %edx,(%ecx)
     184:	3c 19                	cmp    $0x19,%al
     186:	01 13                	add    %edx,(%ebx)
     188:	00 00                	add    %al,(%eax)
     18a:	05 18 00 00 00       	add    $0x18,%eax
     18f:	06                   	push   %es
     190:	16                   	push   %ss
     191:	00 03                	add    %al,(%ebx)
     193:	0e                   	push   %cs
     194:	3a 21                	cmp    (%ecx),%ah
     196:	02 3b                	add    (%ebx),%bh
     198:	0b 39                	or     (%ecx),%edi
     19a:	0b 49 13             	or     0x13(%ecx),%ecx
     19d:	00 00                	add    %al,(%eax)
     19f:	07                   	pop    %es
     1a0:	05 00 31 13 00       	add    $0x133100,%eax
     1a5:	00 08                	add    %cl,(%eax)
     1a7:	13 01                	adc    (%ecx),%eax
     1a9:	03 0e                	add    (%esi),%ecx
     1ab:	0b 0b                	or     (%ebx),%ecx
     1ad:	3a 21                	cmp    (%ecx),%ah
     1af:	01 3b                	add    %edi,(%ebx)
     1b1:	0b 39                	or     (%ecx),%edi
     1b3:	21 08                	and    %ecx,(%eax)
     1b5:	01 13                	add    %edx,(%ebx)
     1b7:	00 00                	add    %al,(%eax)
     1b9:	09 1d 01 31 13 52    	or     %ebx,0x52133101
     1bf:	01 b8 42 0b 55 17    	add    %edi,0x17550b42(%eax)
     1c5:	58                   	pop    %eax
     1c6:	21 01                	and    %eax,(%ecx)
     1c8:	59                   	pop    %ecx
     1c9:	0b 57 21             	or     0x21(%edi),%edx
     1cc:	05 01 13 00 00       	add    $0x1301,%eax
     1d1:	0a 05 00 03 08 3a    	or     0x3a080300,%al
     1d7:	21 01                	and    %eax,(%ecx)
     1d9:	3b 21                	cmp    (%ecx),%esp
     1db:	1a 39                	sbb    (%ecx),%bh
     1dd:	0b 49 13             	or     0x13(%ecx),%ecx
     1e0:	00 00                	add    %al,(%eax)
     1e2:	0b 05 00 03 0e 3a    	or     0x3a0e0300,%eax
     1e8:	21 01                	and    %eax,(%ecx)
     1ea:	3b 21                	cmp    (%ecx),%esp
     1ec:	1a 39                	sbb    (%ecx),%bh
     1ee:	0b 49 13             	or     0x13(%ecx),%ecx
     1f1:	00 00                	add    %al,(%eax)
     1f3:	0c 11                	or     $0x11,%al
     1f5:	01 25 0e 13 0b 03    	add    %esp,0x30b130e
     1fb:	1f                   	pop    %ds
     1fc:	1b 1f                	sbb    (%edi),%ebx
     1fe:	11 01                	adc    %eax,(%ecx)
     200:	12 06                	adc    (%esi),%al
     202:	10 17                	adc    %dl,(%edi)
     204:	00 00                	add    %al,(%eax)
     206:	0d 24 00 0b 0b       	or     $0xb0b0024,%eax
     20b:	3e 0b 03             	or     %ds:(%ebx),%eax
     20e:	08 00                	or     %al,(%eax)
     210:	00 0e                	add    %cl,(%esi)
     212:	01 01                	add    %eax,(%ecx)
     214:	49                   	dec    %ecx
     215:	13 01                	adc    (%ecx),%eax
     217:	13 00                	adc    (%eax),%eax
     219:	00 0f                	add    %cl,(%edi)
     21b:	21 00                	and    %eax,(%eax)
     21d:	49                   	dec    %ecx
     21e:	13 2f                	adc    (%edi),%ebp
     220:	0b 00                	or     (%eax),%eax
     222:	00 10                	add    %dl,(%eax)
     224:	34 00                	xor    $0x0,%al
     226:	03 08                	add    (%eax),%ecx
     228:	3a 0b                	cmp    (%ebx),%cl
     22a:	3b 0b                	cmp    (%ebx),%ecx
     22c:	39 0b                	cmp    %ecx,(%ebx)
     22e:	49                   	dec    %ecx
     22f:	13 3f                	adc    (%edi),%edi
     231:	19 02                	sbb    %eax,(%edx)
     233:	18 00                	sbb    %al,(%eax)
     235:	00 11                	add    %dl,(%ecx)
     237:	34 00                	xor    $0x0,%al
     239:	03 0e                	add    (%esi),%ecx
     23b:	3a 0b                	cmp    (%ebx),%cl
     23d:	3b 0b                	cmp    (%ebx),%ecx
     23f:	39 0b                	cmp    %ecx,(%ebx)
     241:	49                   	dec    %ecx
     242:	13 3f                	adc    (%edi),%edi
     244:	19 02                	sbb    %eax,(%edx)
     246:	18 00                	sbb    %al,(%eax)
     248:	00 12                	add    %dl,(%edx)
     24a:	2e 01 3f             	add    %edi,%cs:(%edi)
     24d:	19 03                	sbb    %eax,(%ebx)
     24f:	0e                   	push   %cs
     250:	3a 0b                	cmp    (%ebx),%cl
     252:	3b 0b                	cmp    (%ebx),%ecx
     254:	39 0b                	cmp    %ecx,(%ebx)
     256:	27                   	daa
     257:	19 3c 19             	sbb    %edi,(%ecx,%ebx,1)
     25a:	01 13                	add    %edx,(%ebx)
     25c:	00 00                	add    %al,(%eax)
     25e:	13 05 00 49 13 00    	adc    0x134900,%eax
     264:	00 14 2e             	add    %dl,(%esi,%ebp,1)
     267:	01 3f                	add    %edi,(%edi)
     269:	19 03                	sbb    %eax,(%ebx)
     26b:	0e                   	push   %cs
     26c:	3a 0b                	cmp    (%ebx),%cl
     26e:	3b 0b                	cmp    (%ebx),%ecx
     270:	39 0b                	cmp    %ecx,(%ebx)
     272:	11 01                	adc    %eax,(%ecx)
     274:	12 06                	adc    (%esi),%al
     276:	40                   	inc    %eax
     277:	18 7a 19             	sbb    %bh,0x19(%edx)
     27a:	01 13                	add    %edx,(%ebx)
     27c:	00 00                	add    %al,(%eax)
     27e:	15 0b 01 55 17       	adc    $0x1755010b,%eax
     283:	01 13                	add    %edx,(%ebx)
     285:	00 00                	add    %al,(%eax)
     287:	16                   	push   %ss
     288:	34 00                	xor    $0x0,%al
     28a:	03 08                	add    (%eax),%ecx
     28c:	3a 0b                	cmp    (%ebx),%cl
     28e:	3b 0b                	cmp    (%ebx),%ecx
     290:	39 0b                	cmp    %ecx,(%ebx)
     292:	49                   	dec    %ecx
     293:	13 02                	adc    (%edx),%eax
     295:	17                   	pop    %ss
     296:	b7 42                	mov    $0x42,%bh
     298:	17                   	pop    %ss
     299:	00 00                	add    %al,(%eax)
     29b:	17                   	pop    %ss
     29c:	1d 01 31 13 52       	sbb    $0x52133101,%eax
     2a1:	01 b8 42 0b 11 01    	add    %edi,0x1110b42(%eax)
     2a7:	12 06                	adc    (%esi),%al
     2a9:	58                   	pop    %eax
     2aa:	0b 59 0b             	or     0xb(%ecx),%ebx
     2ad:	57                   	push   %edi
     2ae:	0b 00                	or     (%eax),%eax
     2b0:	00 18                	add    %bl,(%eax)
     2b2:	48                   	dec    %eax
     2b3:	00 7d 01             	add    %bh,0x1(%ebp)
     2b6:	7f 13                	jg     2cb <MBOOT_HEADER_FLAGS+0x2c8>
     2b8:	00 00                	add    %al,(%eax)
     2ba:	19 2e                	sbb    %ebp,(%esi)
     2bc:	01 3f                	add    %edi,(%edi)
     2be:	19 03                	sbb    %eax,(%ebx)
     2c0:	0e                   	push   %cs
     2c1:	3a 0b                	cmp    (%ebx),%cl
     2c3:	3b 0b                	cmp    (%ebx),%ecx
     2c5:	39 0b                	cmp    %ecx,(%ebx)
     2c7:	27                   	daa
     2c8:	19 20                	sbb    %esp,(%eax)
     2ca:	0b 01                	or     (%ecx),%eax
     2cc:	13 00                	adc    (%eax),%eax
     2ce:	00 1a                	add    %bl,(%edx)
     2d0:	2e 01 31             	add    %esi,%cs:(%ecx)
     2d3:	13 11                	adc    (%ecx),%edx
     2d5:	01 12                	add    %edx,(%edx)
     2d7:	06                   	push   %es
     2d8:	40                   	inc    %eax
     2d9:	18 7a 19             	sbb    %bh,0x19(%edx)
     2dc:	00 00                	add    %al,(%eax)
     2de:	1b 05 00 31 13 02    	sbb    0x2133100,%eax
     2e4:	18 00                	sbb    %al,(%eax)
     2e6:	00 00                	add    %al,(%eax)
     2e8:	01 0d 00 03 08 3a    	add    %ecx,0x3a080300
     2ee:	21 02                	and    %eax,(%edx)
     2f0:	3b 0b                	cmp    (%ebx),%ecx
     2f2:	39 0b                	cmp    %ecx,(%ebx)
     2f4:	49                   	dec    %ecx
     2f5:	13 38                	adc    (%eax),%edi
     2f7:	0b 00                	or     (%eax),%eax
     2f9:	00 02                	add    %al,(%edx)
     2fb:	24 00                	and    $0x0,%al
     2fd:	0b 0b                	or     (%ebx),%ecx
     2ff:	3e 0b 03             	or     %ds:(%ebx),%eax
     302:	0e                   	push   %cs
     303:	00 00                	add    %al,(%eax)
     305:	03 0d 00 03 0e 3a    	add    0x3a0e0300,%ecx
     30b:	21 02                	and    %eax,(%edx)
     30d:	3b 0b                	cmp    (%ebx),%ecx
     30f:	39 0b                	cmp    %ecx,(%ebx)
     311:	49                   	dec    %ecx
     312:	13 38                	adc    (%eax),%edi
     314:	0b 00                	or     (%eax),%eax
     316:	00 04 48             	add    %al,(%eax,%ecx,2)
     319:	00 7d 01             	add    %bh,0x1(%ebp)
     31c:	82 01 19             	addb   $0x19,(%ecx)
     31f:	7f 13                	jg     334 <MBOOT_HEADER_FLAGS+0x331>
     321:	00 00                	add    %al,(%eax)
     323:	05 2e 01 3f 19       	add    $0x193f012e,%eax
     328:	03 0e                	add    (%esi),%ecx
     32a:	3a 21                	cmp    (%ecx),%ah
     32c:	03 3b                	add    (%ebx),%edi
     32e:	0b 39                	or     (%ecx),%edi
     330:	21 06                	and    %eax,(%esi)
     332:	27                   	daa
     333:	19 3c 19             	sbb    %edi,(%ecx,%ebx,1)
     336:	01 13                	add    %edx,(%ebx)
     338:	00 00                	add    %al,(%eax)
     33a:	06                   	push   %es
     33b:	05 00 49 13 00       	add    $0x134900,%eax
     340:	00 07                	add    %al,(%edi)
     342:	0f 00 0b             	str    (%ebx)
     345:	21 04 49             	and    %eax,(%ecx,%ecx,2)
     348:	13 00                	adc    (%eax),%eax
     34a:	00 08                	add    %cl,(%eax)
     34c:	34 00                	xor    $0x0,%al
     34e:	03 0e                	add    (%esi),%ecx
     350:	3a 21                	cmp    (%ecx),%ah
     352:	01 3b                	add    %edi,(%ebx)
     354:	0b 39                	or     (%ecx),%edi
     356:	21 0e                	and    %ecx,(%esi)
     358:	49                   	dec    %ecx
     359:	13 02                	adc    (%edx),%eax
     35b:	17                   	pop    %ss
     35c:	b7 42                	mov    $0x42,%bh
     35e:	17                   	pop    %ss
     35f:	00 00                	add    %al,(%eax)
     361:	09 48 00             	or     %ecx,0x0(%eax)
     364:	7d 01                	jge    367 <MBOOT_HEADER_FLAGS+0x364>
     366:	7f 13                	jg     37b <MBOOT_HEADER_FLAGS+0x378>
     368:	00 00                	add    %al,(%eax)
     36a:	0a 11                	or     (%ecx),%dl
     36c:	01 25 0e 13 0b 03    	add    %esp,0x30b130e
     372:	1f                   	pop    %ds
     373:	1b 1f                	sbb    (%edi),%ebx
     375:	11 01                	adc    %eax,(%ecx)
     377:	12 06                	adc    (%esi),%al
     379:	10 17                	adc    %dl,(%edi)
     37b:	00 00                	add    %al,(%eax)
     37d:	0b 16                	or     (%esi),%edx
     37f:	00 03                	add    %al,(%ebx)
     381:	0e                   	push   %cs
     382:	3a 0b                	cmp    (%ebx),%cl
     384:	3b 0b                	cmp    (%ebx),%ecx
     386:	39 0b                	cmp    %ecx,(%ebx)
     388:	49                   	dec    %ecx
     389:	13 00                	adc    (%eax),%eax
     38b:	00 0c 26             	add    %cl,(%esi,%eiz,1)
     38e:	00 49 13             	add    %cl,0x13(%ecx)
     391:	00 00                	add    %al,(%eax)
     393:	0d 24 00 0b 0b       	or     $0xb0b0024,%eax
     398:	3e 0b 03             	or     %ds:(%ebx),%eax
     39b:	08 00                	or     %al,(%eax)
     39d:	00 0e                	add    %cl,(%esi)
     39f:	13 01                	adc    (%ecx),%eax
     3a1:	03 0e                	add    (%esi),%ecx
     3a3:	0b 0b                	or     (%ebx),%ecx
     3a5:	3a 0b                	cmp    (%ebx),%cl
     3a7:	3b 0b                	cmp    (%ebx),%ecx
     3a9:	39 0b                	cmp    %ecx,(%ebx)
     3ab:	01 13                	add    %edx,(%ebx)
     3ad:	00 00                	add    %al,(%eax)
     3af:	0f 2e 01             	ucomiss (%ecx),%xmm0
     3b2:	3f                   	aas
     3b3:	19 03                	sbb    %eax,(%ebx)
     3b5:	0e                   	push   %cs
     3b6:	3a 0b                	cmp    (%ebx),%cl
     3b8:	3b 0b                	cmp    (%ebx),%ecx
     3ba:	39 0b                	cmp    %ecx,(%ebx)
     3bc:	27                   	daa
     3bd:	19 11                	sbb    %edx,(%ecx)
     3bf:	01 12                	add    %edx,(%edx)
     3c1:	06                   	push   %es
     3c2:	40                   	inc    %eax
     3c3:	18 7a 19             	sbb    %bh,0x19(%edx)
     3c6:	01 13                	add    %edx,(%ebx)
     3c8:	00 00                	add    %al,(%eax)
     3ca:	10 05 00 03 0e 3a    	adc    %al,0x3a0e0300
     3d0:	0b 3b                	or     (%ebx),%edi
     3d2:	0b 39                	or     (%ecx),%edi
     3d4:	0b 49 13             	or     0x13(%ecx),%ecx
     3d7:	02 17                	add    (%edi),%dl
     3d9:	b7 42                	mov    $0x42,%bh
     3db:	17                   	pop    %ss
     3dc:	00 00                	add    %al,(%eax)
     3de:	00 01                	add    %al,(%ecx)
     3e0:	48                   	dec    %eax
     3e1:	00 7d 01             	add    %bh,0x1(%ebp)
     3e4:	7f 13                	jg     3f9 <MBOOT_HEADER_FLAGS+0x3f6>
     3e6:	00 00                	add    %al,(%eax)
     3e8:	02 24 00             	add    (%eax,%eax,1),%ah
     3eb:	0b 0b                	or     (%ebx),%ecx
     3ed:	3e 0b 03             	or     %ds:(%ebx),%eax
     3f0:	0e                   	push   %cs
     3f1:	00 00                	add    %al,(%eax)
     3f3:	03 2e                	add    (%esi),%ebp
     3f5:	00 3f                	add    %bh,(%edi)
     3f7:	19 03                	sbb    %eax,(%ebx)
     3f9:	0e                   	push   %cs
     3fa:	3a 0b                	cmp    (%ebx),%cl
     3fc:	3b 0b                	cmp    (%ebx),%ecx
     3fe:	39 21                	cmp    %esp,(%ecx)
     400:	06                   	push   %es
     401:	27                   	daa
     402:	19 3c 19             	sbb    %edi,(%ecx,%ebx,1)
     405:	00 00                	add    %al,(%eax)
     407:	04 2e                	add    $0x2e,%al
     409:	00 3f                	add    %bh,(%edi)
     40b:	19 03                	sbb    %eax,(%ebx)
     40d:	0e                   	push   %cs
     40e:	3a 0b                	cmp    (%ebx),%cl
     410:	3b 0b                	cmp    (%ebx),%ecx
     412:	39 21                	cmp    %esp,(%ecx)
     414:	06                   	push   %es
     415:	27                   	daa
     416:	19 49 13             	sbb    %ecx,0x13(%ecx)
     419:	3c 19                	cmp    $0x19,%al
     41b:	00 00                	add    %al,(%eax)
     41d:	05 2e 01 3f 19       	add    $0x193f012e,%eax
     422:	03 0e                	add    (%esi),%ecx
     424:	3a 0b                	cmp    (%ebx),%cl
     426:	3b 0b                	cmp    (%ebx),%ecx
     428:	39 21                	cmp    %esp,(%ecx)
     42a:	06                   	push   %es
     42b:	3c 19                	cmp    $0x19,%al
     42d:	01 13                	add    %edx,(%ebx)
     42f:	00 00                	add    %al,(%eax)
     431:	06                   	push   %es
     432:	18 00                	sbb    %al,(%eax)
     434:	00 00                	add    %al,(%eax)
     436:	07                   	pop    %es
     437:	34 00                	xor    $0x0,%al
     439:	03 0e                	add    (%esi),%ecx
     43b:	3a 21                	cmp    (%ecx),%ah
     43d:	01 3b                	add    %edi,(%ebx)
     43f:	0b 39                	or     (%ecx),%edi
     441:	0b 49 13             	or     0x13(%ecx),%ecx
     444:	02 17                	add    (%edi),%dl
     446:	b7 42                	mov    $0x42,%bh
     448:	17                   	pop    %ss
     449:	00 00                	add    %al,(%eax)
     44b:	08 48 00             	or     %cl,0x0(%eax)
     44e:	7d 01                	jge    451 <MBOOT_HEADER_FLAGS+0x44e>
     450:	82 01 19             	addb   $0x19,(%ecx)
     453:	7f 13                	jg     468 <MBOOT_HEADER_FLAGS+0x465>
     455:	00 00                	add    %al,(%eax)
     457:	09 11                	or     %edx,(%ecx)
     459:	01 25 0e 13 0b 03    	add    %esp,0x30b130e
     45f:	1f                   	pop    %ds
     460:	1b 1f                	sbb    (%edi),%ebx
     462:	55                   	push   %ebp
     463:	17                   	pop    %ss
     464:	11 01                	adc    %eax,(%ecx)
     466:	10 17                	adc    %dl,(%edi)
     468:	00 00                	add    %al,(%eax)
     46a:	0a 26                	or     (%esi),%ah
     46c:	00 49 13             	add    %cl,0x13(%ecx)
     46f:	00 00                	add    %al,(%eax)
     471:	0b 24 00             	or     (%eax,%eax,1),%esp
     474:	0b 0b                	or     (%ebx),%ecx
     476:	3e 0b 03             	or     %ds:(%ebx),%eax
     479:	08 00                	or     %al,(%eax)
     47b:	00 0c 16             	add    %cl,(%esi,%edx,1)
     47e:	00 03                	add    %al,(%ebx)
     480:	0e                   	push   %cs
     481:	3a 0b                	cmp    (%ebx),%cl
     483:	3b 0b                	cmp    (%ebx),%ecx
     485:	39 0b                	cmp    %ecx,(%ebx)
     487:	49                   	dec    %ecx
     488:	13 00                	adc    (%eax),%eax
     48a:	00 0d 2e 01 3f 19    	add    %cl,0x193f012e
     490:	03 0e                	add    (%esi),%ecx
     492:	3a 0b                	cmp    (%ebx),%cl
     494:	3b 0b                	cmp    (%ebx),%ecx
     496:	39 0b                	cmp    %ecx,(%ebx)
     498:	27                   	daa
     499:	19 3c 19             	sbb    %edi,(%ecx,%ebx,1)
     49c:	01 13                	add    %edx,(%ebx)
     49e:	00 00                	add    %al,(%eax)
     4a0:	0e                   	push   %cs
     4a1:	05 00 49 13 00       	add    $0x134900,%eax
     4a6:	00 0f                	add    %cl,(%edi)
     4a8:	0f 00 0b             	str    (%ebx)
     4ab:	0b 49 13             	or     0x13(%ecx),%ecx
     4ae:	00 00                	add    %al,(%eax)
     4b0:	10 2e                	adc    %ch,(%esi)
     4b2:	01 3f                	add    %edi,(%edi)
     4b4:	19 03                	sbb    %eax,(%ebx)
     4b6:	0e                   	push   %cs
     4b7:	3a 0b                	cmp    (%ebx),%cl
     4b9:	3b 0b                	cmp    (%ebx),%ecx
     4bb:	39 0b                	cmp    %ecx,(%ebx)
     4bd:	27                   	daa
     4be:	19 11                	sbb    %edx,(%ecx)
     4c0:	01 12                	add    %edx,(%edx)
     4c2:	06                   	push   %es
     4c3:	40                   	inc    %eax
     4c4:	18 7a 19             	sbb    %bh,0x19(%edx)
     4c7:	00 00                	add    %al,(%eax)
     4c9:	00 01                	add    %al,(%ecx)
     4cb:	48                   	dec    %eax
     4cc:	00 7d 01             	add    %bh,0x1(%ebp)
     4cf:	7f 13                	jg     4e4 <MBOOT_HEADER_FLAGS+0x4e1>
     4d1:	00 00                	add    %al,(%eax)
     4d3:	02 05 00 49 13 00    	add    0x134900,%al
     4d9:	00 03                	add    %al,(%ebx)
     4db:	28 00                	sub    %al,(%eax)
     4dd:	03 0e                	add    (%esi),%ecx
     4df:	1c 0b                	sbb    $0xb,%al
     4e1:	00 00                	add    %al,(%eax)
     4e3:	04 2e                	add    $0x2e,%al
     4e5:	01 3f                	add    %edi,(%edi)
     4e7:	19 03                	sbb    %eax,(%ebx)
     4e9:	0e                   	push   %cs
     4ea:	3a 0b                	cmp    (%ebx),%cl
     4ec:	3b 0b                	cmp    (%ebx),%ecx
     4ee:	39 0b                	cmp    %ecx,(%ebx)
     4f0:	27                   	daa
     4f1:	19 49 13             	sbb    %ecx,0x13(%ecx)
     4f4:	3c 19                	cmp    $0x19,%al
     4f6:	01 13                	add    %edx,(%ebx)
     4f8:	00 00                	add    %al,(%eax)
     4fa:	05 34 00 03 08       	add    $0x8030034,%eax
     4ff:	3a 21                	cmp    (%ecx),%ah
     501:	01 3b                	add    %edi,(%ebx)
     503:	0b 39                	or     (%ecx),%edi
     505:	0b 49 13             	or     0x13(%ecx),%ecx
     508:	02 17                	add    (%edi),%dl
     50a:	b7 42                	mov    $0x42,%bh
     50c:	17                   	pop    %ss
     50d:	00 00                	add    %al,(%eax)
     50f:	06                   	push   %es
     510:	01 01                	add    %eax,(%ecx)
     512:	49                   	dec    %ecx
     513:	13 01                	adc    (%ecx),%eax
     515:	13 00                	adc    (%eax),%eax
     517:	00 07                	add    %al,(%edi)
     519:	34 00                	xor    $0x0,%al
     51b:	03 0e                	add    (%esi),%ecx
     51d:	3a 21                	cmp    (%ecx),%ah
     51f:	01 3b                	add    %edi,(%ebx)
     521:	0b 39                	or     (%ecx),%edi
     523:	0b 49 13             	or     0x13(%ecx),%ecx
     526:	02 18                	add    (%eax),%bl
     528:	00 00                	add    %al,(%eax)
     52a:	08 0b                	or     %cl,(%ebx)
     52c:	01 11                	add    %edx,(%ecx)
     52e:	01 12                	add    %edx,(%edx)
     530:	06                   	push   %es
     531:	01 13                	add    %edx,(%ebx)
     533:	00 00                	add    %al,(%eax)
     535:	09 24 00             	or     %esp,(%eax,%eax,1)
     538:	0b 0b                	or     (%ebx),%ecx
     53a:	3e 0b 03             	or     %ds:(%ebx),%eax
     53d:	0e                   	push   %cs
     53e:	00 00                	add    %al,(%eax)
     540:	0a 34 00             	or     (%eax,%eax,1),%dh
     543:	03 08                	add    (%eax),%ecx
     545:	3a 21                	cmp    (%ecx),%ah
     547:	01 3b                	add    %edi,(%ebx)
     549:	05 39 0b 49 13       	add    $0x13490b39,%eax
     54e:	02 17                	add    (%edi),%dl
     550:	b7 42                	mov    $0x42,%bh
     552:	17                   	pop    %ss
     553:	00 00                	add    %al,(%eax)
     555:	0b 21                	or     (%ecx),%esp
     557:	00 49 13             	add    %cl,0x13(%ecx)
     55a:	2f                   	das
     55b:	0b 00                	or     (%eax),%eax
     55d:	00 0c 48             	add    %cl,(%eax,%ecx,2)
     560:	00 7d 01             	add    %bh,0x1(%ebp)
     563:	82 01 19             	addb   $0x19,(%ecx)
     566:	7f 13                	jg     57b <MBOOT_HEADER_FLAGS+0x578>
     568:	00 00                	add    %al,(%eax)
     56a:	0d 1d 01 31 13       	or     $0x1331011d,%eax
     56f:	52                   	push   %edx
     570:	01 b8 42 0b 55 17    	add    %edi,0x17550b42(%eax)
     576:	58                   	pop    %eax
     577:	21 01                	and    %eax,(%ecx)
     579:	59                   	pop    %ecx
     57a:	05 57 0b 01 13       	add    $0x13010b57,%eax
     57f:	00 00                	add    %al,(%eax)
     581:	0e                   	push   %cs
     582:	34 00                	xor    $0x0,%al
     584:	03 0e                	add    (%esi),%ecx
     586:	3a 21                	cmp    (%ecx),%ah
     588:	01 3b                	add    %edi,(%ebx)
     58a:	0b 39                	or     (%ecx),%edi
     58c:	0b 49 13             	or     0x13(%ecx),%ecx
     58f:	02 17                	add    (%edi),%dl
     591:	b7 42                	mov    $0x42,%bh
     593:	17                   	pop    %ss
     594:	00 00                	add    %al,(%eax)
     596:	0f                   	(bad)
     597:	0f 00 0b             	str    (%ebx)
     59a:	21 04 49             	and    %eax,(%ecx,%ecx,2)
     59d:	13 00                	adc    (%eax),%eax
     59f:	00 10                	add    %dl,(%eax)
     5a1:	34 00                	xor    $0x0,%al
     5a3:	03 0e                	add    (%esi),%ecx
     5a5:	3a 21                	cmp    (%ecx),%ah
     5a7:	01 3b                	add    %edi,(%ebx)
     5a9:	05 39 0b 49 13       	add    $0x13490b39,%eax
     5ae:	02 18                	add    (%eax),%bl
     5b0:	00 00                	add    %al,(%eax)
     5b2:	11 05 00 31 13 02    	adc    %eax,0x2133100
     5b8:	17                   	pop    %ss
     5b9:	b7 42                	mov    $0x42,%bh
     5bb:	17                   	pop    %ss
     5bc:	00 00                	add    %al,(%eax)
     5be:	12 0b                	adc    (%ebx),%cl
     5c0:	01 55 17             	add    %edx,0x17(%ebp)
     5c3:	00 00                	add    %al,(%eax)
     5c5:	13 16                	adc    (%esi),%edx
     5c7:	00 03                	add    %al,(%ebx)
     5c9:	0e                   	push   %cs
     5ca:	3a 0b                	cmp    (%ebx),%cl
     5cc:	3b 0b                	cmp    (%ebx),%ecx
     5ce:	39 0b                	cmp    %ecx,(%ebx)
     5d0:	49                   	dec    %ecx
     5d1:	13 00                	adc    (%eax),%eax
     5d3:	00 14 05 00 03 0e 3a 	add    %dl,0x3a0e0300(,%eax,1)
     5da:	21 01                	and    %eax,(%ecx)
     5dc:	3b 0b                	cmp    (%ebx),%ecx
     5de:	39 0b                	cmp    %ecx,(%ebx)
     5e0:	49                   	dec    %ecx
     5e1:	13 02                	adc    (%edx),%eax
     5e3:	17                   	pop    %ss
     5e4:	b7 42                	mov    $0x42,%bh
     5e6:	17                   	pop    %ss
     5e7:	00 00                	add    %al,(%eax)
     5e9:	15 2e 01 3f 19       	adc    $0x193f012e,%eax
     5ee:	03 0e                	add    (%esi),%ecx
     5f0:	3a 0b                	cmp    (%ebx),%cl
     5f2:	3b 0b                	cmp    (%ebx),%ecx
     5f4:	39 21                	cmp    %esp,(%ecx)
     5f6:	06                   	push   %es
     5f7:	27                   	daa
     5f8:	19 3c 19             	sbb    %edi,(%ecx,%ebx,1)
     5fb:	01 13                	add    %edx,(%ebx)
     5fd:	00 00                	add    %al,(%eax)
     5ff:	16                   	push   %ss
     600:	0d 00 03 0e 3a       	or     $0x3a0e0300,%eax
     605:	21 03                	and    %eax,(%ebx)
     607:	3b 0b                	cmp    (%ebx),%ecx
     609:	39 0b                	cmp    %ecx,(%ebx)
     60b:	49                   	dec    %ecx
     60c:	13 38                	adc    (%eax),%edi
     60e:	0b 00                	or     (%eax),%eax
     610:	00 17                	add    %dl,(%edi)
     612:	2e 01 3f             	add    %edi,%cs:(%edi)
     615:	19 03                	sbb    %eax,(%ebx)
     617:	0e                   	push   %cs
     618:	3a 21                	cmp    (%ecx),%ah
     61a:	01 3b                	add    %edi,(%ebx)
     61c:	05 39 21 06 27       	add    $0x27062139,%eax
     621:	19 11                	sbb    %edx,(%ecx)
     623:	01 12                	add    %edx,(%edx)
     625:	06                   	push   %es
     626:	40                   	inc    %eax
     627:	18 7a 19             	sbb    %bh,0x19(%edx)
     62a:	01 13                	add    %edx,(%ebx)
     62c:	00 00                	add    %al,(%eax)
     62e:	18 0b                	sbb    %cl,(%ebx)
     630:	01 11                	add    %edx,(%ecx)
     632:	01 12                	add    %edx,(%edx)
     634:	06                   	push   %es
     635:	00 00                	add    %al,(%eax)
     637:	19 34 00             	sbb    %esi,(%eax,%eax,1)
     63a:	03 0e                	add    (%esi),%ecx
     63c:	3a 21                	cmp    (%ecx),%ah
     63e:	01 3b                	add    %edi,(%ebx)
     640:	05 39 0b 49 13       	add    $0x13490b39,%eax
     645:	02 17                	add    (%edi),%dl
     647:	b7 42                	mov    $0x42,%bh
     649:	17                   	pop    %ss
     64a:	00 00                	add    %al,(%eax)
     64c:	1a 34 00             	sbb    (%eax,%eax,1),%dh
     64f:	03 08                	add    (%eax),%ecx
     651:	3a 21                	cmp    (%ecx),%ah
     653:	01 3b                	add    %edi,(%ebx)
     655:	0b 39                	or     (%ecx),%edi
     657:	0b 49 13             	or     0x13(%ecx),%ecx
     65a:	02 18                	add    (%eax),%bl
     65c:	00 00                	add    %al,(%eax)
     65e:	1b 2e                	sbb    (%esi),%ebp
     660:	01 03                	add    %eax,(%ebx)
     662:	0e                   	push   %cs
     663:	3a 21                	cmp    (%ecx),%ah
     665:	01 3b                	add    %edi,(%ebx)
     667:	0b 39                	or     (%ecx),%edi
     669:	21 0d 27 19 20 21    	and    %ecx,0x21201927
     66f:	01 01                	add    %eax,(%ecx)
     671:	13 00                	adc    (%eax),%eax
     673:	00 1c 05 00 03 0e 3a 	add    %bl,0x3a0e0300(,%eax,1)
     67a:	21 01                	and    %eax,(%ecx)
     67c:	3b 0b                	cmp    (%ebx),%ecx
     67e:	39 0b                	cmp    %ecx,(%ebx)
     680:	49                   	dec    %ecx
     681:	13 00                	adc    (%eax),%eax
     683:	00 1d 2e 00 3f 19    	add    %bl,0x193f002e
     689:	03 0e                	add    (%esi),%ecx
     68b:	3a 0b                	cmp    (%ebx),%cl
     68d:	3b 0b                	cmp    (%ebx),%ecx
     68f:	39 0b                	cmp    %ecx,(%ebx)
     691:	27                   	daa
     692:	19 49 13             	sbb    %ecx,0x13(%ecx)
     695:	3c 19                	cmp    $0x19,%al
     697:	00 00                	add    %al,(%eax)
     699:	1e                   	push   %ds
     69a:	1d 01 31 13 52       	sbb    $0x52133101,%eax
     69f:	01 b8 42 0b 11 01    	add    %edi,0x1110b42(%eax)
     6a5:	12 06                	adc    (%esi),%al
     6a7:	58                   	pop    %eax
     6a8:	21 01                	and    %eax,(%ecx)
     6aa:	59                   	pop    %ecx
     6ab:	05 57 21 09 01       	add    $0x1092157,%eax
     6b0:	13 00                	adc    (%eax),%eax
     6b2:	00 1f                	add    %bl,(%edi)
     6b4:	48                   	dec    %eax
     6b5:	01 7d 01             	add    %edi,0x1(%ebp)
     6b8:	7f 13                	jg     6cd <MBOOT_HEADER_FLAGS+0x6ca>
     6ba:	01 13                	add    %edx,(%ebx)
     6bc:	00 00                	add    %al,(%eax)
     6be:	20 49 00             	and    %cl,0x0(%ecx)
     6c1:	02 18                	add    (%eax),%bl
     6c3:	7e 18                	jle    6dd <MBOOT_HEADER_FLAGS+0x6da>
     6c5:	00 00                	add    %al,(%eax)
     6c7:	21 2e                	and    %ebp,(%esi)
     6c9:	01 03                	add    %eax,(%ebx)
     6cb:	0e                   	push   %cs
     6cc:	3a 21                	cmp    (%ecx),%ah
     6ce:	01 3b                	add    %edi,(%ebx)
     6d0:	05 39 21 0d 27       	add    $0x270d2139,%eax
     6d5:	19 11                	sbb    %edx,(%ecx)
     6d7:	01 12                	add    %edx,(%edx)
     6d9:	06                   	push   %es
     6da:	40                   	inc    %eax
     6db:	18 7a 19             	sbb    %bh,0x19(%edx)
     6de:	01 13                	add    %edx,(%ebx)
     6e0:	00 00                	add    %al,(%eax)
     6e2:	22 05 00 03 0e 3a    	and    0x3a0e0300,%al
     6e8:	21 01                	and    %eax,(%ecx)
     6ea:	3b 05 39 0b 49 13    	cmp    0x13490b39,%eax
     6f0:	02 17                	add    (%edi),%dl
     6f2:	b7 42                	mov    $0x42,%bh
     6f4:	17                   	pop    %ss
     6f5:	00 00                	add    %al,(%eax)
     6f7:	23 21                	and    (%ecx),%esp
     6f9:	00 49 13             	add    %cl,0x13(%ecx)
     6fc:	2f                   	das
     6fd:	21 ff                	and    %edi,%edi
     6ff:	1f                   	pop    %ds
     700:	00 00                	add    %al,(%eax)
     702:	24 2e                	and    $0x2e,%al
     704:	00 03                	add    %al,(%ebx)
     706:	0e                   	push   %cs
     707:	3a 21                	cmp    (%ecx),%ah
     709:	01 3b                	add    %edi,(%ebx)
     70b:	05 39 21 0d 27       	add    $0x270d2139,%eax
     710:	19 20                	sbb    %esp,(%eax)
     712:	21 01                	and    %eax,(%ecx)
     714:	00 00                	add    %al,(%eax)
     716:	25 2e 00 03 0e       	and    $0xe03002e,%eax
     71b:	3a 21                	cmp    (%ecx),%ah
     71d:	01 3b                	add    %edi,(%ebx)
     71f:	0b 39                	or     (%ecx),%edi
     721:	21 0d 27 19 20 21    	and    %ecx,0x21201927
     727:	01 00                	add    %eax,(%eax)
     729:	00 26                	add    %ah,(%esi)
     72b:	2e 01 3f             	add    %edi,%cs:(%edi)
     72e:	19 03                	sbb    %eax,(%ebx)
     730:	0e                   	push   %cs
     731:	3a 21                	cmp    (%ecx),%ah
     733:	01 3b                	add    %edi,(%ebx)
     735:	0b 39                	or     (%ecx),%edi
     737:	21 06                	and    %eax,(%esi)
     739:	27                   	daa
     73a:	19 11                	sbb    %edx,(%ecx)
     73c:	01 12                	add    %edx,(%edx)
     73e:	06                   	push   %es
     73f:	40                   	inc    %eax
     740:	18 7a 19             	sbb    %bh,0x19(%edx)
     743:	01 13                	add    %edx,(%ebx)
     745:	00 00                	add    %al,(%eax)
     747:	27                   	daa
     748:	0b 01                	or     (%ecx),%eax
     74a:	55                   	push   %ebp
     74b:	17                   	pop    %ss
     74c:	01 13                	add    %edx,(%ebx)
     74e:	00 00                	add    %al,(%eax)
     750:	28 2e                	sub    %ch,(%esi)
     752:	01 03                	add    %eax,(%ebx)
     754:	0e                   	push   %cs
     755:	3a 21                	cmp    (%ecx),%ah
     757:	01 3b                	add    %edi,(%ebx)
     759:	0b 39                	or     (%ecx),%edi
     75b:	21 0d 27 19 11 01    	and    %ecx,0x1111927
     761:	12 06                	adc    (%esi),%al
     763:	40                   	inc    %eax
     764:	18 7a 19             	sbb    %bh,0x19(%edx)
     767:	01 13                	add    %edx,(%ebx)
     769:	00 00                	add    %al,(%eax)
     76b:	29 11                	sub    %edx,(%ecx)
     76d:	01 25 0e 13 0b 03    	add    %esp,0x30b130e
     773:	1f                   	pop    %ds
     774:	1b 1f                	sbb    (%edi),%ebx
     776:	11 01                	adc    %eax,(%ecx)
     778:	12 06                	adc    (%esi),%al
     77a:	10 17                	adc    %dl,(%edi)
     77c:	00 00                	add    %al,(%eax)
     77e:	2a 26                	sub    (%esi),%ah
     780:	00 49 13             	add    %cl,0x13(%ecx)
     783:	00 00                	add    %al,(%eax)
     785:	2b 24 00             	sub    (%eax,%eax,1),%esp
     788:	0b 0b                	or     (%ebx),%ecx
     78a:	3e 0b 03             	or     %ds:(%ebx),%eax
     78d:	08 00                	or     %al,(%eax)
     78f:	00 2c 04             	add    %ch,(%esp,%eax,1)
     792:	01 03                	add    %eax,(%ebx)
     794:	0e                   	push   %cs
     795:	3e 0b 0b             	or     %ds:(%ebx),%ecx
     798:	0b 49 13             	or     0x13(%ecx),%ecx
     79b:	3a 0b                	cmp    (%ebx),%cl
     79d:	3b 0b                	cmp    (%ebx),%ecx
     79f:	39 0b                	cmp    %ecx,(%ebx)
     7a1:	01 13                	add    %edx,(%ebx)
     7a3:	00 00                	add    %al,(%eax)
     7a5:	2d 13 01 0b 0b       	sub    $0xb0b0113,%eax
     7aa:	3a 0b                	cmp    (%ebx),%cl
     7ac:	3b 0b                	cmp    (%ebx),%ecx
     7ae:	39 0b                	cmp    %ecx,(%ebx)
     7b0:	01 13                	add    %edx,(%ebx)
     7b2:	00 00                	add    %al,(%eax)
     7b4:	2e 26 00 00          	cs add %al,%es:(%eax)
     7b8:	00 2f                	add    %ch,(%edi)
     7ba:	15 01 27 19 01       	adc    $0x1192701,%eax
     7bf:	13 00                	adc    (%eax),%eax
     7c1:	00 30                	add    %dh,(%eax)
     7c3:	2e 00 3f             	add    %bh,%cs:(%edi)
     7c6:	19 03                	sbb    %eax,(%ebx)
     7c8:	0e                   	push   %cs
     7c9:	3a 0b                	cmp    (%ebx),%cl
     7cb:	3b 0b                	cmp    (%ebx),%ecx
     7cd:	39 0b                	cmp    %ecx,(%ebx)
     7cf:	27                   	daa
     7d0:	19 3c 19             	sbb    %edi,(%ecx,%ebx,1)
     7d3:	00 00                	add    %al,(%eax)
     7d5:	31 0f                	xor    %ecx,(%edi)
     7d7:	00 0b                	add    %cl,(%ebx)
     7d9:	0b 00                	or     (%eax),%eax
     7db:	00 32                	add    %dh,(%edx)
     7dd:	2e 01 3f             	add    %edi,%cs:(%edi)
     7e0:	19 03                	sbb    %eax,(%ebx)
     7e2:	0e                   	push   %cs
     7e3:	3a 0b                	cmp    (%ebx),%cl
     7e5:	3b 05 39 0b 27 19    	cmp    0x19270b39,%eax
     7eb:	20 0b                	and    %cl,(%ebx)
     7ed:	01 13                	add    %edx,(%ebx)
     7ef:	00 00                	add    %al,(%eax)
     7f1:	33 05 00 03 08 3a    	xor    0x3a080300,%eax
     7f7:	0b 3b                	or     (%ebx),%edi
     7f9:	05 39 0b 49 13       	add    $0x13490b39,%eax
     7fe:	00 00                	add    %al,(%eax)
     800:	34 34                	xor    $0x34,%al
     802:	00 03                	add    %al,(%ebx)
     804:	08 3a                	or     %bh,(%edx)
     806:	0b 3b                	or     (%ebx),%edi
     808:	05 39 0b 49 13       	add    $0x13490b39,%eax
     80d:	02 18                	add    (%eax),%bl
     80f:	00 00                	add    %al,(%eax)
     811:	35 34 00 03 08       	xor    $0x8030034,%eax
     816:	3a 0b                	cmp    (%ebx),%cl
     818:	3b 05 39 0b 49 13    	cmp    0x13490b39,%eax
     81e:	00 00                	add    %al,(%eax)
     820:	36 2e 01 03          	ss add %eax,%cs:(%ebx)
     824:	0e                   	push   %cs
     825:	3a 0b                	cmp    (%ebx),%cl
     827:	3b 05 39 0b 27 19    	cmp    0x19270b39,%eax
     82d:	20 0b                	and    %cl,(%ebx)
     82f:	01 13                	add    %edx,(%ebx)
     831:	00 00                	add    %al,(%eax)
     833:	37                   	aaa
     834:	05 00 03 0e 3a       	add    $0x3a0e0300,%eax
     839:	0b 3b                	or     (%ebx),%edi
     83b:	05 39 0b 49 13       	add    $0x13490b39,%eax
     840:	00 00                	add    %al,(%eax)
     842:	38 34 00             	cmp    %dh,(%eax,%eax,1)
     845:	03 08                	add    (%eax),%ecx
     847:	3a 0b                	cmp    (%ebx),%cl
     849:	3b 0b                	cmp    (%ebx),%ecx
     84b:	39 0b                	cmp    %ecx,(%ebx)
     84d:	49                   	dec    %ecx
     84e:	13 00                	adc    (%eax),%eax
     850:	00 39                	add    %bh,(%ecx)
     852:	2e 01 31             	add    %esi,%cs:(%ecx)
     855:	13 11                	adc    (%ecx),%edx
     857:	01 12                	add    %edx,(%edx)
     859:	06                   	push   %es
     85a:	40                   	inc    %eax
     85b:	18 7a 19             	sbb    %bh,0x19(%edx)
     85e:	00 00                	add    %al,(%eax)
     860:	00 01                	add    %al,(%ecx)
     862:	05 00 31 13 02       	add    $0x2133100,%eax
     867:	17                   	pop    %ss
     868:	b7 42                	mov    $0x42,%bh
     86a:	17                   	pop    %ss
     86b:	00 00                	add    %al,(%eax)
     86d:	02 34 00             	add    (%eax,%eax,1),%dh
     870:	31 13                	xor    %edx,(%ebx)
     872:	00 00                	add    %al,(%eax)
     874:	03 1d 01 31 13 52    	add    0x52133101,%ebx
     87a:	01 b8 42 0b 11 01    	add    %edi,0x1110b42(%eax)
     880:	12 06                	adc    (%esi),%al
     882:	58                   	pop    %eax
     883:	21 01                	and    %eax,(%ecx)
     885:	59                   	pop    %ecx
     886:	0b 57 0b             	or     0xb(%edi),%edx
     889:	01 13                	add    %edx,(%ebx)
     88b:	00 00                	add    %al,(%eax)
     88d:	04 34                	add    $0x34,%al
     88f:	00 31                	add    %dh,(%ecx)
     891:	13 02                	adc    (%edx),%eax
     893:	17                   	pop    %ss
     894:	b7 42                	mov    $0x42,%bh
     896:	17                   	pop    %ss
     897:	00 00                	add    %al,(%eax)
     899:	05 1d 01 31 13       	add    $0x1331011d,%eax
     89e:	52                   	push   %edx
     89f:	01 b8 42 0b 55 17    	add    %edi,0x17550b42(%eax)
     8a5:	58                   	pop    %eax
     8a6:	21 01                	and    %eax,(%ecx)
     8a8:	59                   	pop    %ecx
     8a9:	0b 57 0b             	or     0xb(%edi),%edx
     8ac:	01 13                	add    %edx,(%ebx)
     8ae:	00 00                	add    %al,(%eax)
     8b0:	06                   	push   %es
     8b1:	0b 01                	or     (%ecx),%eax
     8b3:	55                   	push   %ebp
     8b4:	17                   	pop    %ss
     8b5:	00 00                	add    %al,(%eax)
     8b7:	07                   	pop    %es
     8b8:	1d 01 31 13 52       	sbb    $0x52133101,%eax
     8bd:	01 b8 42 0b 11 01    	add    %edi,0x1110b42(%eax)
     8c3:	12 06                	adc    (%esi),%al
     8c5:	58                   	pop    %eax
     8c6:	21 01                	and    %eax,(%ecx)
     8c8:	59                   	pop    %ecx
     8c9:	0b 57 0b             	or     0xb(%edi),%edx
     8cc:	00 00                	add    %al,(%eax)
     8ce:	08 48 00             	or     %cl,0x0(%eax)
     8d1:	7d 01                	jge    8d4 <MBOOT_HEADER_FLAGS+0x8d1>
     8d3:	7f 13                	jg     8e8 <MBOOT_HEADER_FLAGS+0x8e5>
     8d5:	00 00                	add    %al,(%eax)
     8d7:	09 24 00             	or     %esp,(%eax,%eax,1)
     8da:	0b 0b                	or     (%ebx),%ecx
     8dc:	3e 0b 03             	or     %ds:(%ebx),%eax
     8df:	0e                   	push   %cs
     8e0:	00 00                	add    %al,(%eax)
     8e2:	0a 0b                	or     (%ebx),%cl
     8e4:	01 31                	add    %esi,(%ecx)
     8e6:	13 55 17             	adc    0x17(%ebp),%edx
     8e9:	00 00                	add    %al,(%eax)
     8eb:	0b 05 00 03 0e 3a    	or     0x3a0e0300,%eax
     8f1:	21 02                	and    %eax,(%edx)
     8f3:	3b 0b                	cmp    (%ebx),%ecx
     8f5:	39 0b                	cmp    %ecx,(%ebx)
     8f7:	49                   	dec    %ecx
     8f8:	13 00                	adc    (%eax),%eax
     8fa:	00 0c 34             	add    %cl,(%esp,%esi,1)
     8fd:	00 03                	add    %al,(%ebx)
     8ff:	08 3a                	or     %bh,(%edx)
     901:	0b 3b                	or     (%ebx),%edi
     903:	0b 39                	or     (%ecx),%edi
     905:	0b 49 13             	or     0x13(%ecx),%ecx
     908:	00 00                	add    %al,(%eax)
     90a:	0d 16 00 03 0e       	or     $0xe030016,%eax
     90f:	3a 21                	cmp    (%ecx),%ah
     911:	03 3b                	add    (%ebx),%edi
     913:	0b 39                	or     (%ecx),%edi
     915:	0b 49 13             	or     0x13(%ecx),%ecx
     918:	00 00                	add    %al,(%eax)
     91a:	0e                   	push   %cs
     91b:	0f 00 0b             	str    (%ebx)
     91e:	21 04 49             	and    %eax,(%ecx,%ecx,2)
     921:	13 00                	adc    (%eax),%eax
     923:	00 0f                	add    %cl,(%edi)
     925:	05 00 03 0e 3a       	add    $0x3a0e0300,%eax
     92a:	21 01                	and    %eax,(%ecx)
     92c:	3b 0b                	cmp    (%ebx),%ecx
     92e:	39 0b                	cmp    %ecx,(%ebx)
     930:	49                   	dec    %ecx
     931:	13 02                	adc    (%edx),%eax
     933:	17                   	pop    %ss
     934:	b7 42                	mov    $0x42,%bh
     936:	17                   	pop    %ss
     937:	00 00                	add    %al,(%eax)
     939:	10 34 00             	adc    %dh,(%eax,%eax,1)
     93c:	03 08                	add    (%eax),%ecx
     93e:	3a 21                	cmp    (%ecx),%ah
     940:	01 3b                	add    %edi,(%ebx)
     942:	0b 39                	or     (%ecx),%edi
     944:	0b 49 13             	or     0x13(%ecx),%ecx
     947:	02 17                	add    (%edi),%dl
     949:	b7 42                	mov    $0x42,%bh
     94b:	17                   	pop    %ss
     94c:	00 00                	add    %al,(%eax)
     94e:	11 1d 01 31 13 55    	adc    %ebx,0x55133101
     954:	17                   	pop    %ss
     955:	58                   	pop    %eax
     956:	21 01                	and    %eax,(%ecx)
     958:	59                   	pop    %ecx
     959:	0b 57 0b             	or     0xb(%edi),%edx
     95c:	01 13                	add    %edx,(%ebx)
     95e:	00 00                	add    %al,(%eax)
     960:	12 1d 01 31 13 52    	adc    0x52133101,%bl
     966:	01 b8 42 0b 55 17    	add    %edi,0x17550b42(%eax)
     96c:	58                   	pop    %eax
     96d:	21 01                	and    %eax,(%ecx)
     96f:	59                   	pop    %ecx
     970:	0b 57 0b             	or     0xb(%edi),%edx
     973:	00 00                	add    %al,(%eax)
     975:	13 34 00             	adc    (%eax,%eax,1),%esi
     978:	03 0e                	add    (%esi),%ecx
     97a:	3a 21                	cmp    (%ecx),%ah
     97c:	01 3b                	add    %edi,(%ebx)
     97e:	0b 39                	or     (%ecx),%edi
     980:	0b 49 13             	or     0x13(%ecx),%ecx
     983:	00 00                	add    %al,(%eax)
     985:	14 2e                	adc    $0x2e,%al
     987:	01 3f                	add    %edi,(%edi)
     989:	19 03                	sbb    %eax,(%ebx)
     98b:	0e                   	push   %cs
     98c:	3a 21                	cmp    (%ecx),%ah
     98e:	01 3b                	add    %edi,(%ebx)
     990:	0b 39                	or     (%ecx),%edi
     992:	21 06                	and    %eax,(%esi)
     994:	27                   	daa
     995:	19 49 13             	sbb    %ecx,0x13(%ecx)
     998:	11 01                	adc    %eax,(%ecx)
     99a:	12 06                	adc    (%esi),%al
     99c:	40                   	inc    %eax
     99d:	18 7a 19             	sbb    %bh,0x19(%edx)
     9a0:	01 13                	add    %edx,(%ebx)
     9a2:	00 00                	add    %al,(%eax)
     9a4:	15 0b 01 55 17       	adc    $0x1755010b,%eax
     9a9:	01 13                	add    %edx,(%ebx)
     9ab:	00 00                	add    %al,(%eax)
     9ad:	16                   	push   %ss
     9ae:	26 00 49 13          	add    %cl,%es:0x13(%ecx)
     9b2:	00 00                	add    %al,(%eax)
     9b4:	17                   	pop    %ss
     9b5:	05 00 03 08 3a       	add    $0x3a080300,%eax
     9ba:	21 01                	and    %eax,(%ecx)
     9bc:	3b 0b                	cmp    (%ebx),%ecx
     9be:	39 0b                	cmp    %ecx,(%ebx)
     9c0:	49                   	dec    %ecx
     9c1:	13 02                	adc    (%edx),%eax
     9c3:	18 00                	sbb    %al,(%eax)
     9c5:	00 18                	add    %bl,(%eax)
     9c7:	0b 01                	or     (%ecx),%eax
     9c9:	11 01                	adc    %eax,(%ecx)
     9cb:	12 06                	adc    (%esi),%al
     9cd:	01 13                	add    %edx,(%ebx)
     9cf:	00 00                	add    %al,(%eax)
     9d1:	19 2e                	sbb    %ebp,(%esi)
     9d3:	01 03                	add    %eax,(%ebx)
     9d5:	0e                   	push   %cs
     9d6:	3a 21                	cmp    (%ecx),%ah
     9d8:	01 3b                	add    %edi,(%ebx)
     9da:	0b 39                	or     (%ecx),%edi
     9dc:	21 0d 27 19 49 13    	and    %ecx,0x13491927
     9e2:	20 21                	and    %ah,(%ecx)
     9e4:	01 01                	add    %eax,(%ecx)
     9e6:	13 00                	adc    (%eax),%eax
     9e8:	00 1a                	add    %bl,(%edx)
     9ea:	0b 01                	or     (%ecx),%eax
     9ec:	00 00                	add    %al,(%eax)
     9ee:	1b 2e                	sbb    (%esi),%ebp
     9f0:	01 03                	add    %eax,(%ebx)
     9f2:	0e                   	push   %cs
     9f3:	3a 21                	cmp    (%ecx),%ah
     9f5:	02 3b                	add    (%ebx),%bh
     9f7:	0b 39                	or     (%ecx),%edi
     9f9:	21 14 27             	and    %edx,(%edi,%eiz,1)
     9fc:	19 20                	sbb    %esp,(%eax)
     9fe:	21 03                	and    %eax,(%ebx)
     a00:	01 13                	add    %edx,(%ebx)
     a02:	00 00                	add    %al,(%eax)
     a04:	1c 11                	sbb    $0x11,%al
     a06:	01 25 0e 13 0b 03    	add    %esp,0x30b130e
     a0c:	1f                   	pop    %ds
     a0d:	1b 1f                	sbb    (%edi),%ebx
     a0f:	11 01                	adc    %eax,(%ecx)
     a11:	12 06                	adc    (%esi),%al
     a13:	10 17                	adc    %dl,(%edi)
     a15:	00 00                	add    %al,(%eax)
     a17:	1d 24 00 0b 0b       	sbb    $0xb0b0024,%eax
     a1c:	3e 0b 03             	or     %ds:(%ebx),%eax
     a1f:	08 00                	or     %al,(%eax)
     a21:	00 1e                	add    %bl,(%esi)
     a23:	34 00                	xor    $0x0,%al
     a25:	03 0e                	add    (%esi),%ecx
     a27:	3a 0b                	cmp    (%ebx),%cl
     a29:	3b 0b                	cmp    (%ebx),%ecx
     a2b:	39 0b                	cmp    %ecx,(%ebx)
     a2d:	49                   	dec    %ecx
     a2e:	13 02                	adc    (%edx),%eax
     a30:	18 00                	sbb    %al,(%eax)
     a32:	00 1f                	add    %bl,(%edi)
     a34:	2e 01 3f             	add    %edi,%cs:(%edi)
     a37:	19 03                	sbb    %eax,(%ebx)
     a39:	0e                   	push   %cs
     a3a:	3a 0b                	cmp    (%ebx),%cl
     a3c:	3b 0b                	cmp    (%ebx),%ecx
     a3e:	39 0b                	cmp    %ecx,(%ebx)
     a40:	27                   	daa
     a41:	19 3c 19             	sbb    %edi,(%ecx,%ebx,1)
     a44:	01 13                	add    %edx,(%ebx)
     a46:	00 00                	add    %al,(%eax)
     a48:	20 05 00 49 13 00    	and    %al,0x134900
     a4e:	00 21                	add    %ah,(%ecx)
     a50:	26 00 00             	add    %al,%es:(%eax)
     a53:	00 22                	add    %ah,(%edx)
     a55:	0f 00 0b             	str    (%ebx)
     a58:	0b 00                	or     (%eax),%eax
     a5a:	00 23                	add    %ah,(%ebx)
     a5c:	2e 00 03             	add    %al,%cs:(%ebx)
     a5f:	0e                   	push   %cs
     a60:	3a 0b                	cmp    (%ebx),%cl
     a62:	3b 0b                	cmp    (%ebx),%ecx
     a64:	39 0b                	cmp    %ecx,(%ebx)
     a66:	27                   	daa
     a67:	19 20                	sbb    %esp,(%eax)
     a69:	0b 00                	or     (%eax),%eax
     a6b:	00 24 2e             	add    %ah,(%esi,%ebp,1)
     a6e:	01 03                	add    %eax,(%ebx)
     a70:	08 3a                	or     %bh,(%edx)
     a72:	0b 3b                	or     (%ebx),%edi
     a74:	0b 39                	or     (%ecx),%edi
     a76:	0b 27                	or     (%edi),%esp
     a78:	19 49 13             	sbb    %ecx,0x13(%ecx)
     a7b:	20 0b                	and    %cl,(%ebx)
     a7d:	01 13                	add    %edx,(%ebx)
     a7f:	00 00                	add    %al,(%eax)
     a81:	25 2e 01 03 08       	and    $0x803012e,%eax
     a86:	3a 0b                	cmp    (%ebx),%cl
     a88:	3b 0b                	cmp    (%ebx),%ecx
     a8a:	39 0b                	cmp    %ecx,(%ebx)
     a8c:	27                   	daa
     a8d:	19 49 13             	sbb    %ecx,0x13(%ecx)
     a90:	20 0b                	and    %cl,(%ebx)
     a92:	00 00                	add    %al,(%eax)
     a94:	00 01                	add    %al,(%ecx)
     a96:	48                   	dec    %eax
     a97:	00 7d 01             	add    %bh,0x1(%ebp)
     a9a:	7f 13                	jg     aaf <MBOOT_HEADER_FLAGS+0xaac>
     a9c:	00 00                	add    %al,(%eax)
     a9e:	02 0d 00 03 0e 3a    	add    0x3a0e0300,%cl
     aa4:	21 03                	and    %eax,(%ebx)
     aa6:	3b 0b                	cmp    (%ebx),%ecx
     aa8:	39 0b                	cmp    %ecx,(%ebx)
     aaa:	49                   	dec    %ecx
     aab:	13 38                	adc    (%eax),%edi
     aad:	0b 00                	or     (%eax),%eax
     aaf:	00 03                	add    %al,(%ebx)
     ab1:	34 00                	xor    $0x0,%al
     ab3:	03 0e                	add    (%esi),%ecx
     ab5:	3a 21                	cmp    (%ecx),%ah
     ab7:	01 3b                	add    %edi,(%ebx)
     ab9:	05 39 0b 49 13       	add    $0x13490b39,%eax
     abe:	02 17                	add    (%edi),%dl
     ac0:	b7 42                	mov    $0x42,%bh
     ac2:	17                   	pop    %ss
     ac3:	00 00                	add    %al,(%eax)
     ac5:	04 05                	add    $0x5,%al
     ac7:	00 49 13             	add    %cl,0x13(%ecx)
     aca:	00 00                	add    %al,(%eax)
     acc:	05 34 00 31 13       	add    $0x13310034,%eax
     ad1:	02 17                	add    (%edi),%dl
     ad3:	b7 42                	mov    $0x42,%bh
     ad5:	17                   	pop    %ss
     ad6:	00 00                	add    %al,(%eax)
     ad8:	06                   	push   %es
     ad9:	0b 01                	or     (%ecx),%eax
     adb:	55                   	push   %ebp
     adc:	17                   	pop    %ss
     add:	01 13                	add    %edx,(%ebx)
     adf:	00 00                	add    %al,(%eax)
     ae1:	07                   	pop    %es
     ae2:	05 00 31 13 02       	add    $0x2133100,%eax
     ae7:	17                   	pop    %ss
     ae8:	b7 42                	mov    $0x42,%bh
     aea:	17                   	pop    %ss
     aeb:	00 00                	add    %al,(%eax)
     aed:	08 34 00             	or     %dh,(%eax,%eax,1)
     af0:	03 08                	add    (%eax),%ecx
     af2:	3a 21                	cmp    (%ecx),%ah
     af4:	01 3b                	add    %edi,(%ebx)
     af6:	0b 39                	or     (%ecx),%edi
     af8:	0b 49 13             	or     0x13(%ecx),%ecx
     afb:	00 00                	add    %al,(%eax)
     afd:	09 0b                	or     %ecx,(%ebx)
     aff:	01 55 17             	add    %edx,0x17(%ebp)
     b02:	00 00                	add    %al,(%eax)
     b04:	0a 34 00             	or     (%eax,%eax,1),%dh
     b07:	03 08                	add    (%eax),%ecx
     b09:	3a 21                	cmp    (%ecx),%ah
     b0b:	01 3b                	add    %edi,(%ebx)
     b0d:	05 39 0b 49 13       	add    $0x13490b39,%eax
     b12:	02 17                	add    (%edi),%dl
     b14:	b7 42                	mov    $0x42,%bh
     b16:	17                   	pop    %ss
     b17:	00 00                	add    %al,(%eax)
     b19:	0b 01                	or     (%ecx),%eax
     b1b:	01 49 13             	add    %ecx,0x13(%ecx)
     b1e:	01 13                	add    %edx,(%ebx)
     b20:	00 00                	add    %al,(%eax)
     b22:	0c 21                	or     $0x21,%al
     b24:	00 49 13             	add    %cl,0x13(%ecx)
     b27:	2f                   	das
     b28:	0b 00                	or     (%eax),%eax
     b2a:	00 0d 34 00 03 0e    	add    %cl,0xe030034
     b30:	3a 21                	cmp    (%ecx),%ah
     b32:	01 3b                	add    %edi,(%ebx)
     b34:	05 39 0b 49 13       	add    $0x13490b39,%eax
     b39:	02 18                	add    (%eax),%bl
     b3b:	00 00                	add    %al,(%eax)
     b3d:	0e                   	push   %cs
     b3e:	34 00                	xor    $0x0,%al
     b40:	03 0e                	add    (%esi),%ecx
     b42:	3a 21                	cmp    (%ecx),%ah
     b44:	01 3b                	add    %edi,(%ebx)
     b46:	0b 39                	or     (%ecx),%edi
     b48:	0b 49 13             	or     0x13(%ecx),%ecx
     b4b:	02 18                	add    (%eax),%bl
     b4d:	00 00                	add    %al,(%eax)
     b4f:	0f 34                	sysenter
     b51:	00 31                	add    %dh,(%ecx)
     b53:	13 02                	adc    (%edx),%eax
     b55:	18 00                	sbb    %al,(%eax)
     b57:	00 10                	add    %dl,(%eax)
     b59:	16                   	push   %ss
     b5a:	00 03                	add    %al,(%ebx)
     b5c:	0e                   	push   %cs
     b5d:	3a 0b                	cmp    (%ebx),%cl
     b5f:	3b 0b                	cmp    (%ebx),%ecx
     b61:	39 0b                	cmp    %ecx,(%ebx)
     b63:	49                   	dec    %ecx
     b64:	13 00                	adc    (%eax),%eax
     b66:	00 11                	add    %dl,(%ecx)
     b68:	2e 01 3f             	add    %edi,%cs:(%edi)
     b6b:	19 03                	sbb    %eax,(%ebx)
     b6d:	0e                   	push   %cs
     b6e:	3a 0b                	cmp    (%ebx),%cl
     b70:	3b 0b                	cmp    (%ebx),%ecx
     b72:	39 0b                	cmp    %ecx,(%ebx)
     b74:	27                   	daa
     b75:	19 49 13             	sbb    %ecx,0x13(%ecx)
     b78:	3c 19                	cmp    $0x19,%al
     b7a:	01 13                	add    %edx,(%ebx)
     b7c:	00 00                	add    %al,(%eax)
     b7e:	12 2e                	adc    (%esi),%ch
     b80:	01 3f                	add    %edi,(%edi)
     b82:	19 03                	sbb    %eax,(%ebx)
     b84:	0e                   	push   %cs
     b85:	3a 21                	cmp    (%ecx),%ah
     b87:	01 3b                	add    %edi,(%ebx)
     b89:	05 39 0b 27 19       	add    $0x19270b39,%eax
     b8e:	49                   	dec    %ecx
     b8f:	13 11                	adc    (%ecx),%edx
     b91:	01 12                	add    %edx,(%edx)
     b93:	06                   	push   %es
     b94:	40                   	inc    %eax
     b95:	18 7a 19             	sbb    %bh,0x19(%edx)
     b98:	01 13                	add    %edx,(%ebx)
     b9a:	00 00                	add    %al,(%eax)
     b9c:	13 05 00 03 0e 3a    	adc    0x3a0e0300,%eax
     ba2:	21 01                	and    %eax,(%ecx)
     ba4:	3b 05 39 0b 49 13    	cmp    0x13490b39,%eax
     baa:	02 18                	add    (%eax),%bl
     bac:	00 00                	add    %al,(%eax)
     bae:	14 34                	adc    $0x34,%al
     bb0:	00 03                	add    %al,(%ebx)
     bb2:	08 3a                	or     %bh,(%edx)
     bb4:	21 01                	and    %eax,(%ecx)
     bb6:	3b 05 39 0b 49 13    	cmp    0x13490b39,%eax
     bbc:	00 00                	add    %al,(%eax)
     bbe:	15 0b 01 11 01       	adc    $0x111010b,%eax
     bc3:	12 06                	adc    (%esi),%al
     bc5:	01 13                	add    %edx,(%ebx)
     bc7:	00 00                	add    %al,(%eax)
     bc9:	16                   	push   %ss
     bca:	24 00                	and    $0x0,%al
     bcc:	0b 0b                	or     (%ebx),%ecx
     bce:	3e 0b 03             	or     %ds:(%ebx),%eax
     bd1:	0e                   	push   %cs
     bd2:	00 00                	add    %al,(%eax)
     bd4:	17                   	pop    %ss
     bd5:	0f 00 0b             	str    (%ebx)
     bd8:	21 04 49             	and    %eax,(%ecx,%ecx,2)
     bdb:	13 00                	adc    (%eax),%eax
     bdd:	00 18                	add    %bl,(%eax)
     bdf:	05 00 31 13 00       	add    $0x133100,%eax
     be4:	00 19                	add    %bl,(%ecx)
     be6:	34 00                	xor    $0x0,%al
     be8:	03 0e                	add    (%esi),%ecx
     bea:	3a 21                	cmp    (%ecx),%ah
     bec:	01 3b                	add    %edi,(%ebx)
     bee:	05 39 0b 49 13       	add    $0x13490b39,%eax
     bf3:	00 00                	add    %al,(%eax)
     bf5:	1a 05 00 03 0e 3a    	sbb    0x3a0e0300,%al
     bfb:	21 01                	and    %eax,(%ecx)
     bfd:	3b 0b                	cmp    (%ebx),%ecx
     bff:	39 0b                	cmp    %ecx,(%ebx)
     c01:	49                   	dec    %ecx
     c02:	13 00                	adc    (%eax),%eax
     c04:	00 1b                	add    %bl,(%ebx)
     c06:	0b 01                	or     (%ecx),%eax
     c08:	00 00                	add    %al,(%eax)
     c0a:	1c 34                	sbb    $0x34,%al
     c0c:	00 03                	add    %al,(%ebx)
     c0e:	0e                   	push   %cs
     c0f:	3a 21                	cmp    (%ecx),%ah
     c11:	01 3b                	add    %edi,(%ebx)
     c13:	0b 39                	or     (%ecx),%edi
     c15:	0b 49 13             	or     0x13(%ecx),%ecx
     c18:	00 00                	add    %al,(%eax)
     c1a:	1d 05 00 03 0e       	sbb    $0xe030005,%eax
     c1f:	3a 21                	cmp    (%ecx),%ah
     c21:	01 3b                	add    %edi,(%ebx)
     c23:	05 39 0b 49 13       	add    $0x13490b39,%eax
     c28:	02 17                	add    (%edi),%dl
     c2a:	b7 42                	mov    $0x42,%bh
     c2c:	17                   	pop    %ss
     c2d:	00 00                	add    %al,(%eax)
     c2f:	1e                   	push   %ds
     c30:	1d 01 31 13 52       	sbb    $0x52133101,%eax
     c35:	01 b8 42 05 55 17    	add    %edi,0x17550542(%eax)
     c3b:	58                   	pop    %eax
     c3c:	21 01                	and    %eax,(%ecx)
     c3e:	59                   	pop    %ecx
     c3f:	05 57 0b 01 13       	add    $0x13010b57,%eax
     c44:	00 00                	add    %al,(%eax)
     c46:	1f                   	pop    %ds
     c47:	1d 01 31 13 52       	sbb    $0x52133101,%eax
     c4c:	01 b8 42 05 11 01    	add    %edi,0x1110542(%eax)
     c52:	12 06                	adc    (%esi),%al
     c54:	58                   	pop    %eax
     c55:	21 01                	and    %eax,(%ecx)
     c57:	59                   	pop    %ecx
     c58:	05 57 21 23 01       	add    $0x1232157,%eax
     c5d:	13 00                	adc    (%eax),%eax
     c5f:	00 20                	add    %ah,(%eax)
     c61:	0b 01                	or     (%ecx),%eax
     c63:	01 13                	add    %edx,(%ebx)
     c65:	00 00                	add    %al,(%eax)
     c67:	21 1d 01 31 13 52    	and    %ebx,0x52133101
     c6d:	01 b8 42 05 55 17    	add    %edi,0x17550542(%eax)
     c73:	58                   	pop    %eax
     c74:	21 01                	and    %eax,(%ecx)
     c76:	59                   	pop    %ecx
     c77:	05 57 0b 00 00       	add    $0xb57,%eax
     c7c:	22 1d 01 31 13 52    	and    0x52133101,%bl
     c82:	01 b8 42 05 11 01    	add    %edi,0x1110542(%eax)
     c88:	12 06                	adc    (%esi),%al
     c8a:	58                   	pop    %eax
     c8b:	21 01                	and    %eax,(%ecx)
     c8d:	59                   	pop    %ecx
     c8e:	05 57 0b 00 00       	add    $0xb57,%eax
     c93:	23 0b                	and    (%ebx),%ecx
     c95:	01 11                	add    %edx,(%ecx)
     c97:	01 12                	add    %edx,(%edx)
     c99:	06                   	push   %es
     c9a:	00 00                	add    %al,(%eax)
     c9c:	24 2e                	and    $0x2e,%al
     c9e:	01 03                	add    %eax,(%ebx)
     ca0:	0e                   	push   %cs
     ca1:	3a 21                	cmp    (%ecx),%ah
     ca3:	01 3b                	add    %edi,(%ebx)
     ca5:	0b 39                	or     (%ecx),%edi
     ca7:	0b 27                	or     (%edi),%esp
     ca9:	19 49 13             	sbb    %ecx,0x13(%ecx)
     cac:	20 21                	and    %ah,(%ecx)
     cae:	01 01                	add    %eax,(%ecx)
     cb0:	13 00                	adc    (%eax),%eax
     cb2:	00 25 34 00 03 08    	add    %ah,0x8030034
     cb8:	3a 21                	cmp    (%ecx),%ah
     cba:	01 3b                	add    %edi,(%ebx)
     cbc:	0b 39                	or     (%ecx),%edi
     cbe:	0b 49 13             	or     0x13(%ecx),%ecx
     cc1:	02 17                	add    (%edi),%dl
     cc3:	b7 42                	mov    $0x42,%bh
     cc5:	17                   	pop    %ss
     cc6:	00 00                	add    %al,(%eax)
     cc8:	26 26 00 49 13       	es add %cl,%es:0x13(%ecx)
     ccd:	00 00                	add    %al,(%eax)
     ccf:	27                   	daa
     cd0:	13 01                	adc    (%ecx),%eax
     cd2:	0b 0b                	or     (%ebx),%ecx
     cd4:	3a 21                	cmp    (%ecx),%ah
     cd6:	03 3b                	add    (%ebx),%edi
     cd8:	0b 39                	or     (%ecx),%edi
     cda:	21 09                	and    %ecx,(%ecx)
     cdc:	01 13                	add    %edx,(%ebx)
     cde:	00 00                	add    %al,(%eax)
     ce0:	28 2e                	sub    %ch,(%esi)
     ce2:	01 3f                	add    %edi,(%edi)
     ce4:	19 03                	sbb    %eax,(%ebx)
     ce6:	0e                   	push   %cs
     ce7:	3a 0b                	cmp    (%ebx),%cl
     ce9:	3b 0b                	cmp    (%ebx),%ecx
     ceb:	39 21                	cmp    %esp,(%ecx)
     ced:	06                   	push   %es
     cee:	27                   	daa
     cef:	19 3c 19             	sbb    %edi,(%ecx,%ebx,1)
     cf2:	01 13                	add    %edx,(%ebx)
     cf4:	00 00                	add    %al,(%eax)
     cf6:	29 1d 01 31 13 55    	sub    %ebx,0x55133101
     cfc:	17                   	pop    %ss
     cfd:	58                   	pop    %eax
     cfe:	21 01                	and    %eax,(%ecx)
     d00:	59                   	pop    %ecx
     d01:	05 57 0b 00 00       	add    $0xb57,%eax
     d06:	2a 0b                	sub    (%ebx),%cl
     d08:	01 31                	add    %esi,(%ecx)
     d0a:	13 11                	adc    (%ecx),%edx
     d0c:	01 12                	add    %edx,(%edx)
     d0e:	06                   	push   %es
     d0f:	01 13                	add    %edx,(%ebx)
     d11:	00 00                	add    %al,(%eax)
     d13:	2b 0b                	sub    (%ebx),%ecx
     d15:	01 31                	add    %esi,(%ecx)
     d17:	13 55 17             	adc    0x17(%ebp),%edx
     d1a:	00 00                	add    %al,(%eax)
     d1c:	2c 34                	sub    $0x34,%al
     d1e:	00 03                	add    %al,(%ebx)
     d20:	08 3a                	or     %bh,(%edx)
     d22:	21 01                	and    %eax,(%ecx)
     d24:	3b 05 39 0b 49 13    	cmp    0x13490b39,%eax
     d2a:	02 18                	add    (%eax),%bl
     d2c:	00 00                	add    %al,(%eax)
     d2e:	2d 2e 01 3f 19       	sub    $0x193f012e,%eax
     d33:	03 0e                	add    (%esi),%ecx
     d35:	3a 21                	cmp    (%ecx),%ah
     d37:	01 3b                	add    %edi,(%ebx)
     d39:	0b 39                	or     (%ecx),%edi
     d3b:	21 06                	and    %eax,(%esi)
     d3d:	27                   	daa
     d3e:	19 49 13             	sbb    %ecx,0x13(%ecx)
     d41:	11 01                	adc    %eax,(%ecx)
     d43:	12 06                	adc    (%esi),%al
     d45:	40                   	inc    %eax
     d46:	18 7a 19             	sbb    %bh,0x19(%edx)
     d49:	01 13                	add    %edx,(%ebx)
     d4b:	00 00                	add    %al,(%eax)
     d4d:	2e 2e 00 3f          	cs add %bh,%cs:(%edi)
     d51:	19 03                	sbb    %eax,(%ebx)
     d53:	0e                   	push   %cs
     d54:	3a 21                	cmp    (%ecx),%ah
     d56:	01 3b                	add    %edi,(%ebx)
     d58:	0b 39                	or     (%ecx),%edi
     d5a:	0b 27                	or     (%edi),%esp
     d5c:	19 49 13             	sbb    %ecx,0x13(%ecx)
     d5f:	11 01                	adc    %eax,(%ecx)
     d61:	12 06                	adc    (%esi),%al
     d63:	40                   	inc    %eax
     d64:	18 7a 19             	sbb    %bh,0x19(%edx)
     d67:	00 00                	add    %al,(%eax)
     d69:	2f                   	das
     d6a:	11 01                	adc    %eax,(%ecx)
     d6c:	25 0e 13 0b 03       	and    $0x30b130e,%eax
     d71:	1f                   	pop    %ds
     d72:	1b 1f                	sbb    (%edi),%ebx
     d74:	11 01                	adc    %eax,(%ecx)
     d76:	12 06                	adc    (%esi),%al
     d78:	10 17                	adc    %dl,(%edi)
     d7a:	00 00                	add    %al,(%eax)
     d7c:	30 24 00             	xor    %ah,(%eax,%eax,1)
     d7f:	0b 0b                	or     (%ebx),%ecx
     d81:	3e 0b 03             	or     %ds:(%ebx),%eax
     d84:	08 00                	or     %al,(%eax)
     d86:	00 31                	add    %dh,(%ecx)
     d88:	13 01                	adc    (%ecx),%eax
     d8a:	0b 05 3a 0b 3b 0b    	or     0xb3b0b3a,%eax
     d90:	39 0b                	cmp    %ecx,(%ebx)
     d92:	01 13                	add    %edx,(%ebx)
     d94:	00 00                	add    %al,(%eax)
     d96:	32 26                	xor    (%esi),%ah
     d98:	00 00                	add    %al,(%eax)
     d9a:	00 33                	add    %dh,(%ebx)
     d9c:	0f 00 0b             	str    (%ebx)
     d9f:	0b 00                	or     (%eax),%eax
     da1:	00 34 21             	add    %dh,(%ecx,%eiz,1)
     da4:	00 49 13             	add    %cl,0x13(%ecx)
     da7:	2f                   	das
     da8:	05 00 00 35 2e       	add    $0x2e350000,%eax
     dad:	01 3f                	add    %edi,(%edi)
     daf:	19 03                	sbb    %eax,(%ebx)
     db1:	0e                   	push   %cs
     db2:	3a 0b                	cmp    (%ebx),%cl
     db4:	3b 05 39 0b 27 19    	cmp    0x19270b39,%eax
     dba:	49                   	dec    %ecx
     dbb:	13 11                	adc    (%ecx),%edx
     dbd:	01 12                	add    %edx,(%edx)
     dbf:	06                   	push   %es
     dc0:	40                   	inc    %eax
     dc1:	18 7c 19 01          	sbb    %bh,0x1(%ecx,%ebx,1)
     dc5:	13 00                	adc    (%eax),%eax
     dc7:	00 36                	add    %dh,(%esi)
     dc9:	15 01 27 19 01       	adc    $0x1192701,%eax
     dce:	13 00                	adc    (%eax),%eax
     dd0:	00 37                	add    %dh,(%edi)
     dd2:	05 00 03 0e 3a       	add    $0x3a0e0300,%eax
     dd7:	0b 3b                	or     (%ebx),%edi
     dd9:	0b 39                	or     (%ecx),%edi
     ddb:	0b 49 13             	or     0x13(%ecx),%ecx
     dde:	02 17                	add    (%edi),%dl
     de0:	b7 42                	mov    $0x42,%bh
     de2:	17                   	pop    %ss
     de3:	00 00                	add    %al,(%eax)
     de5:	38 2e                	cmp    %ch,(%esi)
     de7:	01 3f                	add    %edi,(%edi)
     de9:	19 03                	sbb    %eax,(%ebx)
     deb:	0e                   	push   %cs
     dec:	3a 0b                	cmp    (%ebx),%cl
     dee:	3b 0b                	cmp    (%ebx),%ecx
     df0:	39 0b                	cmp    %ecx,(%ebx)
     df2:	27                   	daa
     df3:	19 49 13             	sbb    %ecx,0x13(%ecx)
     df6:	20 0b                	and    %cl,(%ebx)
     df8:	01 13                	add    %edx,(%ebx)
     dfa:	00 00                	add    %al,(%eax)
     dfc:	39 2e                	cmp    %ebp,(%esi)
     dfe:	01 03                	add    %eax,(%ebx)
     e00:	0e                   	push   %cs
     e01:	3a 0b                	cmp    (%ebx),%cl
     e03:	3b 0b                	cmp    (%ebx),%ecx
     e05:	39 0b                	cmp    %ecx,(%ebx)
     e07:	27                   	daa
     e08:	19 11                	sbb    %edx,(%ecx)
     e0a:	01 12                	add    %edx,(%edx)
     e0c:	06                   	push   %es
     e0d:	40                   	inc    %eax
     e0e:	18 7a 19             	sbb    %bh,0x19(%edx)
     e11:	01 13                	add    %edx,(%ebx)
     e13:	00 00                	add    %al,(%eax)
     e15:	3a 2e                	cmp    (%esi),%ch
     e17:	01 31                	add    %esi,(%ecx)
     e19:	13 11                	adc    (%ecx),%edx
     e1b:	01 12                	add    %edx,(%edx)
     e1d:	06                   	push   %es
     e1e:	40                   	inc    %eax
     e1f:	18 7a 19             	sbb    %bh,0x19(%edx)
     e22:	00 00                	add    %al,(%eax)
     e24:	3b 05 00 31 13 02    	cmp    0x2133100,%eax
     e2a:	18 00                	sbb    %al,(%eax)
     e2c:	00 00                	add    %al,(%eax)
     e2e:	01 24 00             	add    %esp,(%eax,%eax,1)
     e31:	0b 0b                	or     (%ebx),%ecx
     e33:	3e 0b 03             	or     %ds:(%ebx),%eax
     e36:	0e                   	push   %cs
     e37:	00 00                	add    %al,(%eax)
     e39:	02 34 00             	add    (%eax,%eax,1),%dh
     e3c:	03 0e                	add    (%esi),%ecx
     e3e:	3a 21                	cmp    (%ecx),%ah
     e40:	01 3b                	add    %edi,(%ebx)
     e42:	0b 39                	or     (%ecx),%edi
     e44:	0b 49 13             	or     0x13(%ecx),%ecx
     e47:	02 18                	add    (%eax),%bl
     e49:	00 00                	add    %al,(%eax)
     e4b:	03 05 00 31 13 02    	add    0x2133100,%eax
     e51:	17                   	pop    %ss
     e52:	b7 42                	mov    $0x42,%bh
     e54:	17                   	pop    %ss
     e55:	00 00                	add    %al,(%eax)
     e57:	04 34                	add    $0x34,%al
     e59:	00 31                	add    %dh,(%ecx)
     e5b:	13 02                	adc    (%edx),%eax
     e5d:	17                   	pop    %ss
     e5e:	b7 42                	mov    $0x42,%bh
     e60:	17                   	pop    %ss
     e61:	00 00                	add    %al,(%eax)
     e63:	05 16 00 03 0e       	add    $0xe030016,%eax
     e68:	3a 21                	cmp    (%ecx),%ah
     e6a:	03 3b                	add    (%ebx),%edi
     e6c:	0b 39                	or     (%ecx),%edi
     e6e:	0b 49 13             	or     0x13(%ecx),%ecx
     e71:	00 00                	add    %al,(%eax)
     e73:	06                   	push   %es
     e74:	26 00 49 13          	add    %cl,%es:0x13(%ecx)
     e78:	00 00                	add    %al,(%eax)
     e7a:	07                   	pop    %es
     e7b:	2e 00 3f             	add    %bh,%cs:(%edi)
     e7e:	19 03                	sbb    %eax,(%ebx)
     e80:	0e                   	push   %cs
     e81:	3a 21                	cmp    (%ecx),%ah
     e83:	01 3b                	add    %edi,(%ebx)
     e85:	0b 39                	or     (%ecx),%edi
     e87:	21 06                	and    %eax,(%esi)
     e89:	27                   	daa
     e8a:	19 49 13             	sbb    %ecx,0x13(%ecx)
     e8d:	11 01                	adc    %eax,(%ecx)
     e8f:	12 06                	adc    (%esi),%al
     e91:	40                   	inc    %eax
     e92:	18 7a 19             	sbb    %bh,0x19(%edx)
     e95:	00 00                	add    %al,(%eax)
     e97:	08 0b                	or     %cl,(%ebx)
     e99:	01 55 17             	add    %edx,0x17(%ebp)
     e9c:	00 00                	add    %al,(%eax)
     e9e:	09 1d 01 31 13 52    	or     %ebx,0x52133101
     ea4:	01 b8 42 0b 11 01    	add    %edi,0x1110b42(%eax)
     eaa:	12 06                	adc    (%esi),%al
     eac:	58                   	pop    %eax
     ead:	21 01                	and    %eax,(%ecx)
     eaf:	59                   	pop    %ecx
     eb0:	0b 57 0b             	or     0xb(%edi),%edx
     eb3:	01 13                	add    %edx,(%ebx)
     eb5:	00 00                	add    %al,(%eax)
     eb7:	0a 05 00 03 0e 3a    	or     0x3a0e0300,%al
     ebd:	0b 3b                	or     (%ebx),%edi
     ebf:	0b 39                	or     (%ecx),%edi
     ec1:	0b 49 13             	or     0x13(%ecx),%ecx
     ec4:	00 00                	add    %al,(%eax)
     ec6:	0b 34 00             	or     (%eax,%eax,1),%esi
     ec9:	03 08                	add    (%eax),%ecx
     ecb:	3a 0b                	cmp    (%ebx),%cl
     ecd:	3b 0b                	cmp    (%ebx),%ecx
     ecf:	39 0b                	cmp    %ecx,(%ebx)
     ed1:	49                   	dec    %ecx
     ed2:	13 00                	adc    (%eax),%eax
     ed4:	00 0c 11             	add    %cl,(%ecx,%edx,1)
     ed7:	01 25 0e 13 0b 03    	add    %esp,0x30b130e
     edd:	1f                   	pop    %ds
     ede:	1b 1f                	sbb    (%edi),%ebx
     ee0:	55                   	push   %ebp
     ee1:	17                   	pop    %ss
     ee2:	11 01                	adc    %eax,(%ecx)
     ee4:	10 17                	adc    %dl,(%edi)
     ee6:	00 00                	add    %al,(%eax)
     ee8:	0d 24 00 0b 0b       	or     $0xb0b0024,%eax
     eed:	3e 0b 03             	or     %ds:(%ebx),%eax
     ef0:	08 00                	or     %al,(%eax)
     ef2:	00 0e                	add    %cl,(%esi)
     ef4:	01 01                	add    %eax,(%ecx)
     ef6:	49                   	dec    %ecx
     ef7:	13 01                	adc    (%ecx),%eax
     ef9:	13 00                	adc    (%eax),%eax
     efb:	00 0f                	add    %cl,(%edi)
     efd:	21 00                	and    %eax,(%eax)
     eff:	49                   	dec    %ecx
     f00:	13 2f                	adc    (%edi),%ebp
     f02:	0b 00                	or     (%eax),%eax
     f04:	00 10                	add    %dl,(%eax)
     f06:	2e 01 3f             	add    %edi,%cs:(%edi)
     f09:	19 03                	sbb    %eax,(%ebx)
     f0b:	0e                   	push   %cs
     f0c:	3a 0b                	cmp    (%ebx),%cl
     f0e:	3b 0b                	cmp    (%ebx),%ecx
     f10:	39 0b                	cmp    %ecx,(%ebx)
     f12:	27                   	daa
     f13:	19 49 13             	sbb    %ecx,0x13(%ecx)
     f16:	11 01                	adc    %eax,(%ecx)
     f18:	12 06                	adc    (%esi),%al
     f1a:	40                   	inc    %eax
     f1b:	18 7a 19             	sbb    %bh,0x19(%edx)
     f1e:	01 13                	add    %edx,(%ebx)
     f20:	00 00                	add    %al,(%eax)
     f22:	11 34 00             	adc    %esi,(%eax,%eax,1)
     f25:	03 08                	add    (%eax),%ecx
     f27:	3a 0b                	cmp    (%ebx),%cl
     f29:	3b 0b                	cmp    (%ebx),%ecx
     f2b:	39 0b                	cmp    %ecx,(%ebx)
     f2d:	49                   	dec    %ecx
     f2e:	13 02                	adc    (%edx),%eax
     f30:	17                   	pop    %ss
     f31:	b7 42                	mov    $0x42,%bh
     f33:	17                   	pop    %ss
     f34:	00 00                	add    %al,(%eax)
     f36:	12 34 00             	adc    (%eax,%eax,1),%dh
     f39:	03 0e                	add    (%esi),%ecx
     f3b:	3a 0b                	cmp    (%ebx),%cl
     f3d:	3b 0b                	cmp    (%ebx),%ecx
     f3f:	39 0b                	cmp    %ecx,(%ebx)
     f41:	49                   	dec    %ecx
     f42:	13 02                	adc    (%edx),%eax
     f44:	17                   	pop    %ss
     f45:	b7 42                	mov    $0x42,%bh
     f47:	17                   	pop    %ss
     f48:	00 00                	add    %al,(%eax)
     f4a:	13 1d 01 31 13 52    	adc    0x52133101,%ebx
     f50:	01 b8 42 0b 55 17    	add    %edi,0x17550b42(%eax)
     f56:	58                   	pop    %eax
     f57:	0b 59 0b             	or     0xb(%ecx),%ebx
     f5a:	57                   	push   %edi
     f5b:	0b 00                	or     (%eax),%eax
     f5d:	00 14 2e             	add    %dl,(%esi,%ebp,1)
     f60:	01 03                	add    %eax,(%ebx)
     f62:	0e                   	push   %cs
     f63:	3a 0b                	cmp    (%ebx),%cl
     f65:	3b 0b                	cmp    (%ebx),%ecx
     f67:	39 0b                	cmp    %ecx,(%ebx)
     f69:	27                   	daa
     f6a:	19 49 13             	sbb    %ecx,0x13(%ecx)
     f6d:	20 0b                	and    %cl,(%ebx)
     f6f:	01 13                	add    %edx,(%ebx)
     f71:	00 00                	add    %al,(%eax)
     f73:	15 2e 01 3f 19       	adc    $0x193f012e,%eax
     f78:	03 0e                	add    (%esi),%ecx
     f7a:	3a 0b                	cmp    (%ebx),%cl
     f7c:	3b 0b                	cmp    (%ebx),%ecx
     f7e:	39 0b                	cmp    %ecx,(%ebx)
     f80:	27                   	daa
     f81:	19 11                	sbb    %edx,(%ecx)
     f83:	01 12                	add    %edx,(%edx)
     f85:	06                   	push   %es
     f86:	40                   	inc    %eax
     f87:	18 7a 19             	sbb    %bh,0x19(%edx)
     f8a:	01 13                	add    %edx,(%ebx)
     f8c:	00 00                	add    %al,(%eax)
     f8e:	16                   	push   %ss
     f8f:	1d 01 31 13 52       	sbb    $0x52133101,%eax
     f94:	01 b8 42 0b 11 01    	add    %edi,0x1110b42(%eax)
     f9a:	12 06                	adc    (%esi),%al
     f9c:	58                   	pop    %eax
     f9d:	0b 59 0b             	or     0xb(%ecx),%ebx
     fa0:	57                   	push   %edi
     fa1:	0b 00                	or     (%eax),%eax
     fa3:	00 17                	add    %dl,(%edi)
     fa5:	2e 01 03             	add    %eax,%cs:(%ebx)
     fa8:	08 3a                	or     %bh,(%edx)
     faa:	0b 3b                	or     (%ebx),%edi
     fac:	0b 39                	or     (%ecx),%edi
     fae:	0b 27                	or     (%edi),%esp
     fb0:	19 49 13             	sbb    %ecx,0x13(%ecx)
     fb3:	20 0b                	and    %cl,(%ebx)
     fb5:	00 00                	add    %al,(%eax)
     fb7:	00 01                	add    %al,(%ecx)
     fb9:	24 00                	and    $0x0,%al
     fbb:	0b 0b                	or     (%ebx),%ecx
     fbd:	3e 0b 03             	or     %ds:(%ebx),%eax
     fc0:	0e                   	push   %cs
     fc1:	00 00                	add    %al,(%eax)
     fc3:	02 05 00 49 13 00    	add    0x134900,%al
     fc9:	00 03                	add    %al,(%ebx)
     fcb:	48                   	dec    %eax
     fcc:	00 7d 01             	add    %bh,0x1(%ebp)
     fcf:	7f 13                	jg     fe4 <MBOOT_HEADER_FLAGS+0xfe1>
     fd1:	00 00                	add    %al,(%eax)
     fd3:	04 16                	add    $0x16,%al
     fd5:	00 03                	add    %al,(%ebx)
     fd7:	0e                   	push   %cs
     fd8:	3a 0b                	cmp    (%ebx),%cl
     fda:	3b 0b                	cmp    (%ebx),%ecx
     fdc:	39 0b                	cmp    %ecx,(%ebx)
     fde:	49                   	dec    %ecx
     fdf:	13 00                	adc    (%eax),%eax
     fe1:	00 05 0f 00 0b 21    	add    %al,0x210b000f
     fe7:	04 49                	add    $0x49,%al
     fe9:	13 00                	adc    (%eax),%eax
     feb:	00 06                	add    %al,(%esi)
     fed:	0d 00 03 0e 3a       	or     $0x3a0e0300,%eax
     ff2:	21 03                	and    %eax,(%ebx)
     ff4:	3b 0b                	cmp    (%ebx),%ecx
     ff6:	39 0b                	cmp    %ecx,(%ebx)
     ff8:	49                   	dec    %ecx
     ff9:	13 38                	adc    (%eax),%edi
     ffb:	0b 00                	or     (%eax),%eax
     ffd:	00 07                	add    %al,(%edi)
     fff:	05 00 03 0e 3a       	add    $0x3a0e0300,%eax
    1004:	21 01                	and    %eax,(%ecx)
    1006:	3b 0b                	cmp    (%ebx),%ecx
    1008:	39 0b                	cmp    %ecx,(%ebx)
    100a:	49                   	dec    %ecx
    100b:	13 02                	adc    (%edx),%eax
    100d:	17                   	pop    %ss
    100e:	b7 42                	mov    $0x42,%bh
    1010:	17                   	pop    %ss
    1011:	00 00                	add    %al,(%eax)
    1013:	08 2e                	or     %ch,(%esi)
    1015:	01 3f                	add    %edi,(%edi)
    1017:	19 03                	sbb    %eax,(%ebx)
    1019:	0e                   	push   %cs
    101a:	3a 0b                	cmp    (%ebx),%cl
    101c:	3b 0b                	cmp    (%ebx),%ecx
    101e:	39 0b                	cmp    %ecx,(%ebx)
    1020:	27                   	daa
    1021:	19 49 13             	sbb    %ecx,0x13(%ecx)
    1024:	3c 19                	cmp    $0x19,%al
    1026:	01 13                	add    %edx,(%ebx)
    1028:	00 00                	add    %al,(%eax)
    102a:	09 34 00             	or     %esi,(%eax,%eax,1)
    102d:	03 0e                	add    (%esi),%ecx
    102f:	3a 21                	cmp    (%ecx),%ah
    1031:	01 3b                	add    %edi,(%ebx)
    1033:	0b 39                	or     (%ecx),%edi
    1035:	0b 49 13             	or     0x13(%ecx),%ecx
    1038:	02 17                	add    (%edi),%dl
    103a:	b7 42                	mov    $0x42,%bh
    103c:	17                   	pop    %ss
    103d:	00 00                	add    %al,(%eax)
    103f:	0a 34 00             	or     (%eax,%eax,1),%dh
    1042:	03 08                	add    (%eax),%ecx
    1044:	3a 21                	cmp    (%ecx),%ah
    1046:	01 3b                	add    %edi,(%ebx)
    1048:	0b 39                	or     (%ecx),%edi
    104a:	21 0e                	and    %ecx,(%esi)
    104c:	49                   	dec    %ecx
    104d:	13 02                	adc    (%edx),%eax
    104f:	17                   	pop    %ss
    1050:	b7 42                	mov    $0x42,%bh
    1052:	17                   	pop    %ss
    1053:	00 00                	add    %al,(%eax)
    1055:	0b 11                	or     (%ecx),%edx
    1057:	01 25 0e 13 0b 03    	add    %esp,0x30b130e
    105d:	1f                   	pop    %ds
    105e:	1b 1f                	sbb    (%edi),%ebx
    1060:	11 01                	adc    %eax,(%ecx)
    1062:	12 06                	adc    (%esi),%al
    1064:	10 17                	adc    %dl,(%edi)
    1066:	00 00                	add    %al,(%eax)
    1068:	0c 26                	or     $0x26,%al
    106a:	00 49 13             	add    %cl,0x13(%ecx)
    106d:	00 00                	add    %al,(%eax)
    106f:	0d 24 00 0b 0b       	or     $0xb0b0024,%eax
    1074:	3e 0b 03             	or     %ds:(%ebx),%eax
    1077:	08 00                	or     %al,(%eax)
    1079:	00 0e                	add    %cl,(%esi)
    107b:	13 01                	adc    (%ecx),%eax
    107d:	0b 0b                	or     (%ebx),%ecx
    107f:	3a 0b                	cmp    (%ebx),%cl
    1081:	3b 0b                	cmp    (%ebx),%ecx
    1083:	39 0b                	cmp    %ecx,(%ebx)
    1085:	01 13                	add    %edx,(%ebx)
    1087:	00 00                	add    %al,(%eax)
    1089:	0f                   	(bad)
    108a:	0f 00 0b             	str    (%ebx)
    108d:	0b 00                	or     (%eax),%eax
    108f:	00 10                	add    %dl,(%eax)
    1091:	2e 01 3f             	add    %edi,%cs:(%edi)
    1094:	19 03                	sbb    %eax,(%ebx)
    1096:	0e                   	push   %cs
    1097:	3a 0b                	cmp    (%ebx),%cl
    1099:	3b 0b                	cmp    (%ebx),%ecx
    109b:	39 0b                	cmp    %ecx,(%ebx)
    109d:	27                   	daa
    109e:	19 3c 19             	sbb    %edi,(%ecx,%ebx,1)
    10a1:	01 13                	add    %edx,(%ebx)
    10a3:	00 00                	add    %al,(%eax)
    10a5:	11 2e                	adc    %ebp,(%esi)
    10a7:	01 3f                	add    %edi,(%edi)
    10a9:	19 03                	sbb    %eax,(%ebx)
    10ab:	0e                   	push   %cs
    10ac:	3a 0b                	cmp    (%ebx),%cl
    10ae:	3b 0b                	cmp    (%ebx),%ecx
    10b0:	39 0b                	cmp    %ecx,(%ebx)
    10b2:	27                   	daa
    10b3:	19 11                	sbb    %edx,(%ecx)
    10b5:	01 12                	add    %edx,(%edx)
    10b7:	06                   	push   %es
    10b8:	40                   	inc    %eax
    10b9:	18 7a 19             	sbb    %bh,0x19(%edx)
    10bc:	01 13                	add    %edx,(%ebx)
    10be:	00 00                	add    %al,(%eax)
    10c0:	12 0b                	adc    (%ebx),%cl
    10c2:	01 55 17             	add    %edx,0x17(%ebp)
    10c5:	01 13                	add    %edx,(%ebx)
    10c7:	00 00                	add    %al,(%eax)
    10c9:	13 0b                	adc    (%ebx),%ecx
    10cb:	01 55 17             	add    %edx,0x17(%ebp)
    10ce:	00 00                	add    %al,(%eax)
    10d0:	14 34                	adc    $0x34,%al
    10d2:	00 03                	add    %al,(%ebx)
    10d4:	08 3a                	or     %bh,(%edx)
    10d6:	0b 3b                	or     (%ebx),%edi
    10d8:	0b 39                	or     (%ecx),%edi
    10da:	0b 49 13             	or     0x13(%ecx),%ecx
    10dd:	02 18                	add    (%eax),%bl
    10df:	00 00                	add    %al,(%eax)
    10e1:	15 48 00 7d 01       	adc    $0x17d0048,%eax
    10e6:	82 01 19             	addb   $0x19,(%ecx)
    10e9:	7f 13                	jg     10fe <MBOOT_HEADER_FLAGS+0x10fb>
    10eb:	00 00                	add    %al,(%eax)
    10ed:	16                   	push   %ss
    10ee:	15 00 27 19 00       	adc    $0x192700,%eax
    10f3:	00 17                	add    %dl,(%edi)
    10f5:	01 01                	add    %eax,(%ecx)
    10f7:	49                   	dec    %ecx
    10f8:	13 01                	adc    (%ecx),%eax
    10fa:	13 00                	adc    (%eax),%eax
    10fc:	00 18                	add    %bl,(%eax)
    10fe:	21 00                	and    %eax,(%eax)
    1100:	49                   	dec    %ecx
    1101:	13 2f                	adc    (%edi),%ebp
    1103:	0b 00                	or     (%eax),%eax
    1105:	00 19                	add    %bl,(%ecx)
    1107:	2e 01 3f             	add    %edi,%cs:(%edi)
    110a:	19 03                	sbb    %eax,(%ebx)
    110c:	0e                   	push   %cs
    110d:	3a 0b                	cmp    (%ebx),%cl
    110f:	3b 0b                	cmp    (%ebx),%ecx
    1111:	39 0b                	cmp    %ecx,(%ebx)
    1113:	27                   	daa
    1114:	19 49 13             	sbb    %ecx,0x13(%ecx)
    1117:	11 01                	adc    %eax,(%ecx)
    1119:	12 06                	adc    (%esi),%al
    111b:	40                   	inc    %eax
    111c:	18 7a 19             	sbb    %bh,0x19(%edx)
    111f:	01 13                	add    %edx,(%ebx)
    1121:	00 00                	add    %al,(%eax)
    1123:	1a 05 00 03 0e 3a    	sbb    0x3a0e0300,%al
    1129:	0b 3b                	or     (%ebx),%edi
    112b:	0b 39                	or     (%ecx),%edi
    112d:	0b 49 13             	or     0x13(%ecx),%ecx
    1130:	02 18                	add    (%eax),%bl
    1132:	00 00                	add    %al,(%eax)
    1134:	1b 34 00             	sbb    (%eax,%eax,1),%esi
    1137:	03 0e                	add    (%esi),%ecx
    1139:	3a 0b                	cmp    (%ebx),%cl
    113b:	3b 0b                	cmp    (%ebx),%ecx
    113d:	39 0b                	cmp    %ecx,(%ebx)
    113f:	49                   	dec    %ecx
    1140:	13 02                	adc    (%edx),%eax
    1142:	18 00                	sbb    %al,(%eax)
    1144:	00 00                	add    %al,(%eax)
    1146:	01 24 00             	add    %esp,(%eax,%eax,1)
    1149:	0b 0b                	or     (%ebx),%ecx
    114b:	3e 0b 03             	or     %ds:(%ebx),%eax
    114e:	0e                   	push   %cs
    114f:	00 00                	add    %al,(%eax)
    1151:	02 05 00 49 13 00    	add    0x134900,%al
    1157:	00 03                	add    %al,(%ebx)
    1159:	16                   	push   %ss
    115a:	00 03                	add    %al,(%ebx)
    115c:	0e                   	push   %cs
    115d:	3a 21                	cmp    (%ecx),%ah
    115f:	02 3b                	add    (%ebx),%bh
    1161:	0b 39                	or     (%ecx),%edi
    1163:	21 17                	and    %edx,(%edi)
    1165:	49                   	dec    %ecx
    1166:	13 00                	adc    (%eax),%eax
    1168:	00 04 34             	add    %al,(%esp,%esi,1)
    116b:	00 03                	add    %al,(%ebx)
    116d:	0e                   	push   %cs
    116e:	3a 21                	cmp    (%ecx),%ah
    1170:	01 3b                	add    %edi,(%ebx)
    1172:	0b 39                	or     (%ecx),%edi
    1174:	0b 49 13             	or     0x13(%ecx),%ecx
    1177:	02 18                	add    (%eax),%bl
    1179:	00 00                	add    %al,(%eax)
    117b:	05 11 01 25 0e       	add    $0xe250111,%eax
    1180:	13 0b                	adc    (%ebx),%ecx
    1182:	03 1f                	add    (%edi),%ebx
    1184:	1b 1f                	sbb    (%edi),%ebx
    1186:	11 01                	adc    %eax,(%ecx)
    1188:	12 06                	adc    (%esi),%al
    118a:	10 17                	adc    %dl,(%edi)
    118c:	00 00                	add    %al,(%eax)
    118e:	06                   	push   %es
    118f:	24 00                	and    $0x0,%al
    1191:	0b 0b                	or     (%ebx),%ecx
    1193:	3e 0b 03             	or     %ds:(%ebx),%eax
    1196:	08 00                	or     %al,(%eax)
    1198:	00 07                	add    %al,(%edi)
    119a:	01 01                	add    %eax,(%ecx)
    119c:	49                   	dec    %ecx
    119d:	13 01                	adc    (%ecx),%eax
    119f:	13 00                	adc    (%eax),%eax
    11a1:	00 08                	add    %cl,(%eax)
    11a3:	21 00                	and    %eax,(%eax)
    11a5:	49                   	dec    %ecx
    11a6:	13 2f                	adc    (%edi),%ebp
    11a8:	06                   	push   %es
    11a9:	00 00                	add    %al,(%eax)
    11ab:	09 2e                	or     %ebp,(%esi)
    11ad:	01 3f                	add    %edi,(%edi)
    11af:	19 03                	sbb    %eax,(%ebx)
    11b1:	0e                   	push   %cs
    11b2:	3a 0b                	cmp    (%ebx),%cl
    11b4:	3b 0b                	cmp    (%ebx),%ecx
    11b6:	39 0b                	cmp    %ecx,(%ebx)
    11b8:	27                   	daa
    11b9:	19 49 13             	sbb    %ecx,0x13(%ecx)
    11bc:	3c 19                	cmp    $0x19,%al
    11be:	01 13                	add    %edx,(%ebx)
    11c0:	00 00                	add    %al,(%eax)
    11c2:	0a 0f                	or     (%edi),%cl
    11c4:	00 0b                	add    %cl,(%ebx)
    11c6:	0b 00                	or     (%eax),%eax
    11c8:	00 0b                	add    %cl,(%ebx)
    11ca:	2e 01 3f             	add    %edi,%cs:(%edi)
    11cd:	19 03                	sbb    %eax,(%ebx)
    11cf:	0e                   	push   %cs
    11d0:	3a 0b                	cmp    (%ebx),%cl
    11d2:	3b 0b                	cmp    (%ebx),%ecx
    11d4:	39 0b                	cmp    %ecx,(%ebx)
    11d6:	27                   	daa
    11d7:	19 11                	sbb    %edx,(%ecx)
    11d9:	01 12                	add    %edx,(%edx)
    11db:	06                   	push   %es
    11dc:	40                   	inc    %eax
    11dd:	18 7a 19             	sbb    %bh,0x19(%edx)
    11e0:	01 13                	add    %edx,(%ebx)
    11e2:	00 00                	add    %al,(%eax)
    11e4:	0c 05                	or     $0x5,%al
    11e6:	00 03                	add    %al,(%ebx)
    11e8:	08 3a                	or     %bh,(%edx)
    11ea:	0b 3b                	or     (%ebx),%edi
    11ec:	0b 39                	or     (%ecx),%edi
    11ee:	0b 49 13             	or     0x13(%ecx),%ecx
    11f1:	02 18                	add    (%eax),%bl
    11f3:	00 00                	add    %al,(%eax)
    11f5:	0d 2e 01 3f 19       	or     $0x193f012e,%eax
    11fa:	03 0e                	add    (%esi),%ecx
    11fc:	3a 0b                	cmp    (%ebx),%cl
    11fe:	3b 0b                	cmp    (%ebx),%ecx
    1200:	39 0b                	cmp    %ecx,(%ebx)
    1202:	27                   	daa
    1203:	19 49 13             	sbb    %ecx,0x13(%ecx)
    1206:	11 01                	adc    %eax,(%ecx)
    1208:	12 06                	adc    (%esi),%al
    120a:	40                   	inc    %eax
    120b:	18 7a 19             	sbb    %bh,0x19(%edx)
    120e:	01 13                	add    %edx,(%ebx)
    1210:	00 00                	add    %al,(%eax)
    1212:	0e                   	push   %cs
    1213:	05 00 03 0e 3a       	add    $0x3a0e0300,%eax
    1218:	0b 3b                	or     (%ebx),%edi
    121a:	0b 39                	or     (%ecx),%edi
    121c:	0b 49 13             	or     0x13(%ecx),%ecx
    121f:	02 18                	add    (%eax),%bl
    1221:	00 00                	add    %al,(%eax)
    1223:	0f 34                	sysenter
    1225:	00 03                	add    %al,(%ebx)
    1227:	08 3a                	or     %bh,(%edx)
    1229:	0b 3b                	or     (%ebx),%edi
    122b:	0b 39                	or     (%ecx),%edi
    122d:	0b 49 13             	or     0x13(%ecx),%ecx
    1230:	02 17                	add    (%edi),%dl
    1232:	b7 42                	mov    $0x42,%bh
    1234:	17                   	pop    %ss
    1235:	00 00                	add    %al,(%eax)
    1237:	10 2e                	adc    %ch,(%esi)
    1239:	01 3f                	add    %edi,(%edi)
    123b:	19 03                	sbb    %eax,(%ebx)
    123d:	0e                   	push   %cs
    123e:	3a 0b                	cmp    (%ebx),%cl
    1240:	3b 0b                	cmp    (%ebx),%ecx
    1242:	39 0b                	cmp    %ecx,(%ebx)
    1244:	27                   	daa
    1245:	19 11                	sbb    %edx,(%ecx)
    1247:	01 12                	add    %edx,(%edx)
    1249:	06                   	push   %es
    124a:	40                   	inc    %eax
    124b:	18 7a 19             	sbb    %bh,0x19(%edx)
    124e:	00 00                	add    %al,(%eax)
    1250:	11 48 00             	adc    %ecx,0x0(%eax)
    1253:	7d 01                	jge    1256 <MBOOT_HEADER_FLAGS+0x1253>
    1255:	7f 13                	jg     126a <MBOOT_HEADER_FLAGS+0x1267>
    1257:	00 00                	add    %al,(%eax)
    1259:	00 01                	add    %al,(%ecx)
    125b:	24 00                	and    $0x0,%al
    125d:	0b 0b                	or     (%ebx),%ecx
    125f:	3e 0b 03             	or     %ds:(%ebx),%eax
    1262:	0e                   	push   %cs
    1263:	00 00                	add    %al,(%eax)
    1265:	02 48 00             	add    0x0(%eax),%cl
    1268:	7d 01                	jge    126b <MBOOT_HEADER_FLAGS+0x1268>
    126a:	82 01 19             	addb   $0x19,(%ecx)
    126d:	7f 13                	jg     1282 <MBOOT_HEADER_FLAGS+0x127f>
    126f:	00 00                	add    %al,(%eax)
    1271:	03 2e                	add    (%esi),%ebp
    1273:	01 3f                	add    %edi,(%edi)
    1275:	19 03                	sbb    %eax,(%ebx)
    1277:	0e                   	push   %cs
    1278:	3a 21                	cmp    (%ecx),%ah
    127a:	02 3b                	add    (%ebx),%bh
    127c:	0b 39                	or     (%ecx),%edi
    127e:	21 06                	and    %eax,(%esi)
    1280:	27                   	daa
    1281:	19 3c 19             	sbb    %edi,(%ecx,%ebx,1)
    1284:	01 13                	add    %edx,(%ebx)
    1286:	00 00                	add    %al,(%eax)
    1288:	04 05                	add    $0x5,%al
    128a:	00 49 13             	add    %cl,0x13(%ecx)
    128d:	00 00                	add    %al,(%eax)
    128f:	05 2e 01 3f 19       	add    $0x193f012e,%eax
    1294:	03 0e                	add    (%esi),%ecx
    1296:	3a 21                	cmp    (%ecx),%ah
    1298:	01 3b                	add    %edi,(%ebx)
    129a:	0b 39                	or     (%ecx),%edi
    129c:	21 06                	and    %eax,(%esi)
    129e:	27                   	daa
    129f:	19 11                	sbb    %edx,(%ecx)
    12a1:	01 12                	add    %edx,(%edx)
    12a3:	06                   	push   %es
    12a4:	40                   	inc    %eax
    12a5:	18 7a 19             	sbb    %bh,0x19(%edx)
    12a8:	01 13                	add    %edx,(%ebx)
    12aa:	00 00                	add    %al,(%eax)
    12ac:	06                   	push   %es
    12ad:	05 00 03 08 3a       	add    $0x3a080300,%eax
    12b2:	21 01                	and    %eax,(%ecx)
    12b4:	3b 0b                	cmp    (%ebx),%ecx
    12b6:	39 0b                	cmp    %ecx,(%ebx)
    12b8:	49                   	dec    %ecx
    12b9:	13 02                	adc    (%edx),%eax
    12bb:	17                   	pop    %ss
    12bc:	b7 42                	mov    $0x42,%bh
    12be:	17                   	pop    %ss
    12bf:	00 00                	add    %al,(%eax)
    12c1:	07                   	pop    %es
    12c2:	11 01                	adc    %eax,(%ecx)
    12c4:	25 0e 13 0b 03       	and    $0x30b130e,%eax
    12c9:	1f                   	pop    %ds
    12ca:	1b 1f                	sbb    (%edi),%ebx
    12cc:	11 01                	adc    %eax,(%ecx)
    12ce:	12 06                	adc    (%esi),%al
    12d0:	10 17                	adc    %dl,(%edi)
    12d2:	00 00                	add    %al,(%eax)
    12d4:	08 26                	or     %ah,(%esi)
    12d6:	00 49 13             	add    %cl,0x13(%ecx)
    12d9:	00 00                	add    %al,(%eax)
    12db:	09 24 00             	or     %esp,(%eax,%eax,1)
    12de:	0b 0b                	or     (%ebx),%ecx
    12e0:	3e 0b 03             	or     %ds:(%ebx),%eax
    12e3:	08 00                	or     %al,(%eax)
    12e5:	00 0a                	add    %cl,(%edx)
    12e7:	2e 00 3f             	add    %bh,%cs:(%edi)
    12ea:	19 03                	sbb    %eax,(%ebx)
    12ec:	0e                   	push   %cs
    12ed:	3a 0b                	cmp    (%ebx),%cl
    12ef:	3b 0b                	cmp    (%ebx),%ecx
    12f1:	39 0b                	cmp    %ecx,(%ebx)
    12f3:	27                   	daa
    12f4:	19 3c 19             	sbb    %edi,(%ecx,%ebx,1)
    12f7:	00 00                	add    %al,(%eax)
    12f9:	0b 0f                	or     (%edi),%ecx
    12fb:	00 0b                	add    %cl,(%ebx)
    12fd:	0b 49 13             	or     0x13(%ecx),%ecx
    1300:	00 00                	add    %al,(%eax)
    1302:	0c 2e                	or     $0x2e,%al
    1304:	01 3f                	add    %edi,(%edi)
    1306:	19 03                	sbb    %eax,(%ebx)
    1308:	0e                   	push   %cs
    1309:	3a 0b                	cmp    (%ebx),%cl
    130b:	3b 0b                	cmp    (%ebx),%ecx
    130d:	39 0b                	cmp    %ecx,(%ebx)
    130f:	11 01                	adc    %eax,(%ecx)
    1311:	12 06                	adc    (%esi),%al
    1313:	40                   	inc    %eax
    1314:	18 7a 19             	sbb    %bh,0x19(%edx)
    1317:	01 13                	add    %edx,(%ebx)
    1319:	00 00                	add    %al,(%eax)
    131b:	0d 48 00 7d 01       	or     $0x17d0048,%eax
    1320:	7f 13                	jg     1335 <MBOOT_HEADER_FLAGS+0x1332>
    1322:	00 00                	add    %al,(%eax)
    1324:	0e                   	push   %cs
    1325:	2e 01 3f             	add    %edi,%cs:(%edi)
    1328:	19 03                	sbb    %eax,(%ebx)
    132a:	0e                   	push   %cs
    132b:	3a 0b                	cmp    (%ebx),%cl
    132d:	3b 0b                	cmp    (%ebx),%ecx
    132f:	39 0b                	cmp    %ecx,(%ebx)
    1331:	27                   	daa
    1332:	19 11                	sbb    %edx,(%ecx)
    1334:	01 12                	add    %edx,(%edx)
    1336:	06                   	push   %es
    1337:	40                   	inc    %eax
    1338:	18 7a 19             	sbb    %bh,0x19(%edx)
    133b:	00 00                	add    %al,(%eax)
    133d:	0f 05                	syscall
    133f:	00 03                	add    %al,(%ebx)
    1341:	08 3a                	or     %bh,(%edx)
    1343:	0b 3b                	or     (%ebx),%edi
    1345:	0b 39                	or     (%ecx),%edi
    1347:	0b 49 13             	or     0x13(%ecx),%ecx
    134a:	02 18                	add    (%eax),%bl
    134c:	00 00                	add    %al,(%eax)
    134e:	10 48 01             	adc    %cl,0x1(%eax)
    1351:	7d 01                	jge    1354 <MBOOT_HEADER_FLAGS+0x1351>
    1353:	82 01 19             	addb   $0x19,(%ecx)
    1356:	7f 13                	jg     136b <MBOOT_HEADER_FLAGS+0x1368>
    1358:	00 00                	add    %al,(%eax)
    135a:	11 49 00             	adc    %ecx,0x0(%ecx)
    135d:	02 18                	add    (%eax),%bl
    135f:	7e 18                	jle    1379 <MBOOT_HEADER_FLAGS+0x1376>
    1361:	00 00                	add    %al,(%eax)
    1363:	00 01                	add    %al,(%ecx)
    1365:	05 00 31 13 02       	add    $0x2133100,%eax
    136a:	17                   	pop    %ss
    136b:	b7 42                	mov    $0x42,%bh
    136d:	17                   	pop    %ss
    136e:	00 00                	add    %al,(%eax)
    1370:	02 1d 01 31 13 52    	add    0x52133101,%bl
    1376:	01 b8 42 0b 11 01    	add    %edi,0x1110b42(%eax)
    137c:	12 06                	adc    (%esi),%al
    137e:	58                   	pop    %eax
    137f:	21 01                	and    %eax,(%ecx)
    1381:	59                   	pop    %ecx
    1382:	0b 57 21             	or     0x21(%edi),%edx
    1385:	05 01 13 00 00       	add    $0x1301,%eax
    138a:	03 34 00             	add    (%eax,%eax,1),%esi
    138d:	31 13                	xor    %edx,(%ebx)
    138f:	02 17                	add    (%edi),%dl
    1391:	b7 42                	mov    $0x42,%bh
    1393:	17                   	pop    %ss
    1394:	00 00                	add    %al,(%eax)
    1396:	04 24                	add    $0x24,%al
    1398:	00 0b                	add    %cl,(%ebx)
    139a:	0b 3e                	or     (%esi),%edi
    139c:	0b 03                	or     (%ebx),%eax
    139e:	0e                   	push   %cs
    139f:	00 00                	add    %al,(%eax)
    13a1:	05 2e 01 3f 19       	add    $0x193f012e,%eax
    13a6:	03 0e                	add    (%esi),%ecx
    13a8:	3a 21                	cmp    (%ecx),%ah
    13aa:	01 3b                	add    %edi,(%ebx)
    13ac:	0b 39                	or     (%ecx),%edi
    13ae:	21 06                	and    %eax,(%esi)
    13b0:	27                   	daa
    13b1:	19 11                	sbb    %edx,(%ecx)
    13b3:	01 12                	add    %edx,(%edx)
    13b5:	06                   	push   %es
    13b6:	40                   	inc    %eax
    13b7:	18 7a 19             	sbb    %bh,0x19(%edx)
    13ba:	01 13                	add    %edx,(%ebx)
    13bc:	00 00                	add    %al,(%eax)
    13be:	06                   	push   %es
    13bf:	1d 01 31 13 52       	sbb    $0x52133101,%eax
    13c4:	01 b8 42 0b 55 17    	add    %edi,0x17550b42(%eax)
    13ca:	58                   	pop    %eax
    13cb:	21 01                	and    %eax,(%ecx)
    13cd:	59                   	pop    %ecx
    13ce:	0b 57 0b             	or     0xb(%edi),%edx
    13d1:	00 00                	add    %al,(%eax)
    13d3:	07                   	pop    %es
    13d4:	0b 01                	or     (%ecx),%eax
    13d6:	55                   	push   %ebp
    13d7:	17                   	pop    %ss
    13d8:	00 00                	add    %al,(%eax)
    13da:	08 05 00 03 08 3a    	or     %al,0x3a080300
    13e0:	21 01                	and    %eax,(%ecx)
    13e2:	3b 0b                	cmp    (%ebx),%ecx
    13e4:	39 0b                	cmp    %ecx,(%ebx)
    13e6:	49                   	dec    %ecx
    13e7:	13 02                	adc    (%edx),%eax
    13e9:	18 00                	sbb    %al,(%eax)
    13eb:	00 09                	add    %cl,(%ecx)
    13ed:	34 00                	xor    $0x0,%al
    13ef:	03 08                	add    (%eax),%ecx
    13f1:	3a 21                	cmp    (%ecx),%ah
    13f3:	01 3b                	add    %edi,(%ebx)
    13f5:	0b 39                	or     (%ecx),%edi
    13f7:	0b 49 13             	or     0x13(%ecx),%ecx
    13fa:	02 17                	add    (%edi),%dl
    13fc:	b7 42                	mov    $0x42,%bh
    13fe:	17                   	pop    %ss
    13ff:	00 00                	add    %al,(%eax)
    1401:	0a 1d 01 31 13 52    	or     0x52133101,%bl
    1407:	01 b8 42 0b 55 17    	add    %edi,0x17550b42(%eax)
    140d:	58                   	pop    %eax
    140e:	21 01                	and    %eax,(%ecx)
    1410:	59                   	pop    %ecx
    1411:	0b 57 0b             	or     0xb(%edi),%edx
    1414:	01 13                	add    %edx,(%ebx)
    1416:	00 00                	add    %al,(%eax)
    1418:	0b 1d 01 31 13 52    	or     0x52133101,%ebx
    141e:	01 b8 42 0b 11 01    	add    %edi,0x1110b42(%eax)
    1424:	12 06                	adc    (%esi),%al
    1426:	58                   	pop    %eax
    1427:	21 01                	and    %eax,(%ecx)
    1429:	59                   	pop    %ecx
    142a:	0b 57 21             	or     0x21(%edi),%edx
    142d:	05 00 00 0c 16       	add    $0x160c0000,%eax
    1432:	00 03                	add    %al,(%ebx)
    1434:	0e                   	push   %cs
    1435:	3a 21                	cmp    (%ecx),%ah
    1437:	03 3b                	add    (%ebx),%edi
    1439:	0b 39                	or     (%ecx),%edi
    143b:	0b 49 13             	or     0x13(%ecx),%ecx
    143e:	00 00                	add    %al,(%eax)
    1440:	0d 0b 01 11 01       	or     $0x111010b,%eax
    1445:	12 06                	adc    (%esi),%al
    1447:	01 13                	add    %edx,(%ebx)
    1449:	00 00                	add    %al,(%eax)
    144b:	0e                   	push   %cs
    144c:	34 00                	xor    $0x0,%al
    144e:	03 08                	add    (%eax),%ecx
    1450:	3a 21                	cmp    (%ecx),%ah
    1452:	01 3b                	add    %edi,(%ebx)
    1454:	0b 39                	or     (%ecx),%edi
    1456:	0b 49 13             	or     0x13(%ecx),%ecx
    1459:	00 00                	add    %al,(%eax)
    145b:	0f 05                	syscall
    145d:	00 03                	add    %al,(%ebx)
    145f:	0e                   	push   %cs
    1460:	3a 0b                	cmp    (%ebx),%cl
    1462:	3b 0b                	cmp    (%ebx),%ecx
    1464:	39 0b                	cmp    %ecx,(%ebx)
    1466:	49                   	dec    %ecx
    1467:	13 00                	adc    (%eax),%eax
    1469:	00 10                	add    %dl,(%eax)
    146b:	26 00 49 13          	add    %cl,%es:0x13(%ecx)
    146f:	00 00                	add    %al,(%eax)
    1471:	11 0f                	adc    %ecx,(%edi)
    1473:	00 0b                	add    %cl,(%ebx)
    1475:	21 04 49             	and    %eax,(%ecx,%ecx,2)
    1478:	13 00                	adc    (%eax),%eax
    147a:	00 12                	add    %dl,(%edx)
    147c:	34 00                	xor    $0x0,%al
    147e:	03 0e                	add    (%esi),%ecx
    1480:	3a 21                	cmp    (%ecx),%ah
    1482:	01 3b                	add    %edi,(%ebx)
    1484:	0b 39                	or     (%ecx),%edi
    1486:	0b 49 13             	or     0x13(%ecx),%ecx
    1489:	02 18                	add    (%eax),%bl
    148b:	00 00                	add    %al,(%eax)
    148d:	13 05 00 03 08 3a    	adc    0x3a080300,%eax
    1493:	21 01                	and    %eax,(%ecx)
    1495:	3b 0b                	cmp    (%ebx),%ecx
    1497:	39 0b                	cmp    %ecx,(%ebx)
    1499:	49                   	dec    %ecx
    149a:	13 00                	adc    (%eax),%eax
    149c:	00 14 11             	add    %dl,(%ecx,%edx,1)
    149f:	01 25 0e 13 0b 03    	add    %esp,0x30b130e
    14a5:	1f                   	pop    %ds
    14a6:	1b 1f                	sbb    (%edi),%ebx
    14a8:	11 01                	adc    %eax,(%ecx)
    14aa:	12 06                	adc    (%esi),%al
    14ac:	10 17                	adc    %dl,(%edi)
    14ae:	00 00                	add    %al,(%eax)
    14b0:	15 24 00 0b 0b       	adc    $0xb0b0024,%eax
    14b5:	3e 0b 03             	or     %ds:(%ebx),%eax
    14b8:	08 00                	or     %al,(%eax)
    14ba:	00 16                	add    %dl,(%esi)
    14bc:	34 00                	xor    $0x0,%al
    14be:	03 0e                	add    (%esi),%ecx
    14c0:	3a 0b                	cmp    (%ebx),%cl
    14c2:	3b 0b                	cmp    (%ebx),%ecx
    14c4:	39 0b                	cmp    %ecx,(%ebx)
    14c6:	49                   	dec    %ecx
    14c7:	13 1c 06             	adc    (%esi,%eax,1),%ebx
    14ca:	00 00                	add    %al,(%eax)
    14cc:	17                   	pop    %ss
    14cd:	2e 01 3f             	add    %edi,%cs:(%edi)
    14d0:	19 03                	sbb    %eax,(%ebx)
    14d2:	0e                   	push   %cs
    14d3:	3a 0b                	cmp    (%ebx),%cl
    14d5:	3b 0b                	cmp    (%ebx),%ecx
    14d7:	39 0b                	cmp    %ecx,(%ebx)
    14d9:	27                   	daa
    14da:	19 20                	sbb    %esp,(%eax)
    14dc:	0b 01                	or     (%ecx),%eax
    14de:	13 00                	adc    (%eax),%eax
    14e0:	00 18                	add    %bl,(%eax)
    14e2:	48                   	dec    %eax
    14e3:	00 7d 01             	add    %bh,0x1(%ebp)
    14e6:	7f 13                	jg     14fb <MBOOT_HEADER_FLAGS+0x14f8>
    14e8:	00 00                	add    %al,(%eax)
    14ea:	19 0b                	sbb    %ecx,(%ebx)
    14ec:	01 11                	add    %edx,(%ecx)
    14ee:	01 12                	add    %edx,(%edx)
    14f0:	06                   	push   %es
    14f1:	00 00                	add    %al,(%eax)
    14f3:	1a 0b                	sbb    (%ebx),%cl
    14f5:	01 55 17             	add    %edx,0x17(%ebp)
    14f8:	01 13                	add    %edx,(%ebx)
    14fa:	00 00                	add    %al,(%eax)
    14fc:	1b 2e                	sbb    (%esi),%ebp
    14fe:	01 03                	add    %eax,(%ebx)
    1500:	0e                   	push   %cs
    1501:	3a 0b                	cmp    (%ebx),%cl
    1503:	3b 0b                	cmp    (%ebx),%ecx
    1505:	39 0b                	cmp    %ecx,(%ebx)
    1507:	27                   	daa
    1508:	19 49 13             	sbb    %ecx,0x13(%ecx)
    150b:	20 0b                	and    %cl,(%ebx)
    150d:	01 13                	add    %edx,(%ebx)
    150f:	00 00                	add    %al,(%eax)
    1511:	1c 34                	sbb    $0x34,%al
    1513:	00 03                	add    %al,(%ebx)
    1515:	0e                   	push   %cs
    1516:	3a 0b                	cmp    (%ebx),%cl
    1518:	3b 0b                	cmp    (%ebx),%ecx
    151a:	39 0b                	cmp    %ecx,(%ebx)
    151c:	49                   	dec    %ecx
    151d:	13 00                	adc    (%eax),%eax
    151f:	00 1d 2e 01 03 0e    	add    %bl,0xe03012e
    1525:	3a 0b                	cmp    (%ebx),%cl
    1527:	3b 0b                	cmp    (%ebx),%ecx
    1529:	39 0b                	cmp    %ecx,(%ebx)
    152b:	27                   	daa
    152c:	19 20                	sbb    %esp,(%eax)
    152e:	0b 01                	or     (%ecx),%eax
    1530:	13 00                	adc    (%eax),%eax
    1532:	00 1e                	add    %bl,(%esi)
    1534:	2e 01 31             	add    %esi,%cs:(%ecx)
    1537:	13 11                	adc    (%ecx),%edx
    1539:	01 12                	add    %edx,(%edx)
    153b:	06                   	push   %es
    153c:	40                   	inc    %eax
    153d:	18 7a 19             	sbb    %bh,0x19(%edx)
    1540:	00 00                	add    %al,(%eax)
    1542:	1f                   	pop    %ds
    1543:	05 00 31 13 02       	add    $0x2133100,%eax
    1548:	18 00                	sbb    %al,(%eax)
    154a:	00 00                	add    %al,(%eax)
    154c:	01 24 00             	add    %esp,(%eax,%eax,1)
    154f:	0b 0b                	or     (%ebx),%ecx
    1551:	3e 0b 03             	or     %ds:(%ebx),%eax
    1554:	0e                   	push   %cs
    1555:	00 00                	add    %al,(%eax)
    1557:	02 05 00 03 08 3a    	add    0x3a080300,%al
    155d:	21 01                	and    %eax,(%ecx)
    155f:	3b 21                	cmp    (%ecx),%esp
    1561:	03 39                	add    (%ecx),%edi
    1563:	0b 49 13             	or     0x13(%ecx),%ecx
    1566:	02 17                	add    (%edi),%dl
    1568:	b7 42                	mov    $0x42,%bh
    156a:	17                   	pop    %ss
    156b:	00 00                	add    %al,(%eax)
    156d:	03 11                	add    (%ecx),%edx
    156f:	01 25 0e 13 0b 03    	add    %esp,0x30b130e
    1575:	1f                   	pop    %ds
    1576:	1b 1f                	sbb    (%edi),%ebx
    1578:	11 01                	adc    %eax,(%ecx)
    157a:	12 06                	adc    (%esi),%al
    157c:	10 17                	adc    %dl,(%edi)
    157e:	00 00                	add    %al,(%eax)
    1580:	04 16                	add    $0x16,%al
    1582:	00 03                	add    %al,(%ebx)
    1584:	0e                   	push   %cs
    1585:	3a 0b                	cmp    (%ebx),%cl
    1587:	3b 0b                	cmp    (%ebx),%ecx
    1589:	39 0b                	cmp    %ecx,(%ebx)
    158b:	49                   	dec    %ecx
    158c:	13 00                	adc    (%eax),%eax
    158e:	00 05 24 00 0b 0b    	add    %al,0xb0b0024
    1594:	3e 0b 03             	or     %ds:(%ebx),%eax
    1597:	08 00                	or     %al,(%eax)
    1599:	00 06                	add    %al,(%esi)
    159b:	2e 01 3f             	add    %edi,%cs:(%edi)
    159e:	19 03                	sbb    %eax,(%ebx)
    15a0:	0e                   	push   %cs
    15a1:	3a 0b                	cmp    (%ebx),%cl
    15a3:	3b 0b                	cmp    (%ebx),%ecx
    15a5:	39 0b                	cmp    %ecx,(%ebx)
    15a7:	27                   	daa
    15a8:	19 11                	sbb    %edx,(%ecx)
    15aa:	01 12                	add    %edx,(%edx)
    15ac:	06                   	push   %es
    15ad:	40                   	inc    %eax
    15ae:	18 7a 19             	sbb    %bh,0x19(%edx)
    15b1:	01 13                	add    %edx,(%ebx)
    15b3:	00 00                	add    %al,(%eax)
    15b5:	07                   	pop    %es
    15b6:	34 00                	xor    $0x0,%al
    15b8:	03 08                	add    (%eax),%ecx
    15ba:	3a 0b                	cmp    (%ebx),%cl
    15bc:	3b 0b                	cmp    (%ebx),%ecx
    15be:	39 0b                	cmp    %ecx,(%ebx)
    15c0:	49                   	dec    %ecx
    15c1:	13 02                	adc    (%edx),%eax
    15c3:	17                   	pop    %ss
    15c4:	b7 42                	mov    $0x42,%bh
    15c6:	17                   	pop    %ss
    15c7:	00 00                	add    %al,(%eax)
    15c9:	08 34 00             	or     %dh,(%eax,%eax,1)
    15cc:	03 08                	add    (%eax),%ecx
    15ce:	3a 0b                	cmp    (%ebx),%cl
    15d0:	3b 0b                	cmp    (%ebx),%ecx
    15d2:	39 0b                	cmp    %ecx,(%ebx)
    15d4:	49                   	dec    %ecx
    15d5:	13 02                	adc    (%edx),%eax
    15d7:	18 00                	sbb    %al,(%eax)
    15d9:	00 09                	add    %cl,(%ecx)
    15db:	34 00                	xor    $0x0,%al
    15dd:	03 08                	add    (%eax),%ecx
    15df:	3a 0b                	cmp    (%ebx),%cl
    15e1:	3b 0b                	cmp    (%ebx),%ecx
    15e3:	39 0b                	cmp    %ecx,(%ebx)
    15e5:	49                   	dec    %ecx
    15e6:	13 00                	adc    (%eax),%eax
    15e8:	00 0a                	add    %cl,(%edx)
    15ea:	0f 00 0b             	str    (%ebx)
    15ed:	0b 49 13             	or     0x13(%ecx),%ecx
    15f0:	00 00                	add    %al,(%eax)
    15f2:	0b 01                	or     (%ecx),%eax
    15f4:	01 49 13             	add    %ecx,0x13(%ecx)
    15f7:	00 00                	add    %al,(%eax)
    15f9:	0c 21                	or     $0x21,%al
    15fb:	00 49 13             	add    %cl,0x13(%ecx)
    15fe:	2f                   	das
    15ff:	0b 00                	or     (%eax),%eax
    1601:	00 00                	add    %al,(%eax)
    1603:	01 05 00 03 08 3a    	add    %eax,0x3a080300
    1609:	21 01                	and    %eax,(%ecx)
    160b:	3b 0b                	cmp    (%ebx),%ecx
    160d:	39 0b                	cmp    %ecx,(%ebx)
    160f:	49                   	dec    %ecx
    1610:	13 02                	adc    (%edx),%eax
    1612:	17                   	pop    %ss
    1613:	b7 42                	mov    $0x42,%bh
    1615:	17                   	pop    %ss
    1616:	00 00                	add    %al,(%eax)
    1618:	02 34 00             	add    (%eax,%eax,1),%dh
    161b:	03 08                	add    (%eax),%ecx
    161d:	3a 21                	cmp    (%ecx),%ah
    161f:	01 3b                	add    %edi,(%ebx)
    1621:	0b 39                	or     (%ecx),%edi
    1623:	0b 49 13             	or     0x13(%ecx),%ecx
    1626:	02 17                	add    (%edi),%dl
    1628:	b7 42                	mov    $0x42,%bh
    162a:	17                   	pop    %ss
    162b:	00 00                	add    %al,(%eax)
    162d:	03 24 00             	add    (%eax,%eax,1),%esp
    1630:	0b 0b                	or     (%ebx),%ecx
    1632:	3e 0b 03             	or     %ds:(%ebx),%eax
    1635:	0e                   	push   %cs
    1636:	00 00                	add    %al,(%eax)
    1638:	04 2e                	add    $0x2e,%al
    163a:	01 3f                	add    %edi,(%edi)
    163c:	19 03                	sbb    %eax,(%ebx)
    163e:	0e                   	push   %cs
    163f:	3a 21                	cmp    (%ecx),%ah
    1641:	01 3b                	add    %edi,(%ebx)
    1643:	0b 39                	or     (%ecx),%edi
    1645:	0b 27                	or     (%edi),%esp
    1647:	19 49 13             	sbb    %ecx,0x13(%ecx)
    164a:	11 01                	adc    %eax,(%ecx)
    164c:	12 06                	adc    (%esi),%al
    164e:	40                   	inc    %eax
    164f:	18 7a 19             	sbb    %bh,0x19(%edx)
    1652:	01 13                	add    %edx,(%ebx)
    1654:	00 00                	add    %al,(%eax)
    1656:	05 0f 00 0b 21       	add    $0x210b000f,%eax
    165b:	04 49                	add    $0x49,%al
    165d:	13 00                	adc    (%eax),%eax
    165f:	00 06                	add    %al,(%esi)
    1661:	05 00 03 08 3a       	add    $0x3a080300,%eax
    1666:	21 01                	and    %eax,(%ecx)
    1668:	3b 0b                	cmp    (%ebx),%ecx
    166a:	39 0b                	cmp    %ecx,(%ebx)
    166c:	49                   	dec    %ecx
    166d:	13 02                	adc    (%edx),%eax
    166f:	18 00                	sbb    %al,(%eax)
    1671:	00 07                	add    %al,(%edi)
    1673:	05 00 03 0e 3a       	add    $0x3a0e0300,%eax
    1678:	21 01                	and    %eax,(%ecx)
    167a:	3b 0b                	cmp    (%ebx),%ecx
    167c:	39 0b                	cmp    %ecx,(%ebx)
    167e:	49                   	dec    %ecx
    167f:	13 02                	adc    (%edx),%eax
    1681:	17                   	pop    %ss
    1682:	b7 42                	mov    $0x42,%bh
    1684:	17                   	pop    %ss
    1685:	00 00                	add    %al,(%eax)
    1687:	08 05 00 31 13 02    	or     %al,0x2133100
    168d:	17                   	pop    %ss
    168e:	b7 42                	mov    $0x42,%bh
    1690:	17                   	pop    %ss
    1691:	00 00                	add    %al,(%eax)
    1693:	09 34 00             	or     %esi,(%eax,%eax,1)
    1696:	31 13                	xor    %edx,(%ebx)
    1698:	02 17                	add    (%edi),%dl
    169a:	b7 42                	mov    $0x42,%bh
    169c:	17                   	pop    %ss
    169d:	00 00                	add    %al,(%eax)
    169f:	0a 16                	or     (%esi),%dl
    16a1:	00 03                	add    %al,(%ebx)
    16a3:	0e                   	push   %cs
    16a4:	3a 21                	cmp    (%ecx),%ah
    16a6:	02 3b                	add    (%ebx),%bh
    16a8:	0b 39                	or     (%ecx),%edi
    16aa:	21 17                	and    %edx,(%edi)
    16ac:	49                   	dec    %ecx
    16ad:	13 00                	adc    (%eax),%eax
    16af:	00 0b                	add    %cl,(%ebx)
    16b1:	26 00 49 13          	add    %cl,%es:0x13(%ecx)
    16b5:	00 00                	add    %al,(%eax)
    16b7:	0c 1d                	or     $0x1d,%al
    16b9:	01 31                	add    %esi,(%ecx)
    16bb:	13 52 01             	adc    0x1(%edx),%edx
    16be:	b8 42 0b 55 17       	mov    $0x17550b42,%eax
    16c3:	58                   	pop    %eax
    16c4:	21 01                	and    %eax,(%ecx)
    16c6:	59                   	pop    %ecx
    16c7:	0b 57 21             	or     0x21(%edi),%edx
    16ca:	16                   	push   %ss
    16cb:	00 00                	add    %al,(%eax)
    16cd:	0d 0b 01 55 17       	or     $0x1755010b,%eax
    16d2:	00 00                	add    %al,(%eax)
    16d4:	0e                   	push   %cs
    16d5:	05 00 03 0e 3a       	add    $0x3a0e0300,%eax
    16da:	21 01                	and    %eax,(%ecx)
    16dc:	3b 0b                	cmp    (%ebx),%ecx
    16de:	39 0b                	cmp    %ecx,(%ebx)
    16e0:	49                   	dec    %ecx
    16e1:	13 02                	adc    (%edx),%eax
    16e3:	18 00                	sbb    %al,(%eax)
    16e5:	00 0f                	add    %cl,(%edi)
    16e7:	11 01                	adc    %eax,(%ecx)
    16e9:	25 0e 13 0b 03       	and    $0x30b130e,%eax
    16ee:	1f                   	pop    %ds
    16ef:	1b 1f                	sbb    (%edi),%ebx
    16f1:	11 01                	adc    %eax,(%ecx)
    16f3:	12 06                	adc    (%esi),%al
    16f5:	10 17                	adc    %dl,(%edi)
    16f7:	00 00                	add    %al,(%eax)
    16f9:	10 24 00             	adc    %ah,(%eax,%eax,1)
    16fc:	0b 0b                	or     (%ebx),%ecx
    16fe:	3e 0b 03             	or     %ds:(%ebx),%eax
    1701:	08 00                	or     %al,(%eax)
    1703:	00 11                	add    %dl,(%ecx)
    1705:	26 00 00             	add    %al,%es:(%eax)
    1708:	00 12                	add    %dl,(%edx)
    170a:	0f 00 0b             	str    (%ebx)
    170d:	0b 00                	or     (%eax),%eax
    170f:	00 13                	add    %dl,(%ebx)
    1711:	2e 01 3f             	add    %edi,%cs:(%edi)
    1714:	19 03                	sbb    %eax,(%ebx)
    1716:	0e                   	push   %cs
    1717:	3a 0b                	cmp    (%ebx),%cl
    1719:	3b 0b                	cmp    (%ebx),%ecx
    171b:	39 0b                	cmp    %ecx,(%ebx)
    171d:	27                   	daa
    171e:	19 49 13             	sbb    %ecx,0x13(%ecx)
    1721:	20 0b                	and    %cl,(%ebx)
    1723:	01 13                	add    %edx,(%ebx)
    1725:	00 00                	add    %al,(%eax)
    1727:	14 05                	adc    $0x5,%al
    1729:	00 03                	add    %al,(%ebx)
    172b:	08 3a                	or     %bh,(%edx)
    172d:	0b 3b                	or     (%ebx),%edi
    172f:	0b 39                	or     (%ecx),%edi
    1731:	0b 49 13             	or     0x13(%ecx),%ecx
    1734:	00 00                	add    %al,(%eax)
    1736:	15 34 00 03 08       	adc    $0x8030034,%eax
    173b:	3a 0b                	cmp    (%ebx),%cl
    173d:	3b 0b                	cmp    (%ebx),%ecx
    173f:	39 0b                	cmp    %ecx,(%ebx)
    1741:	49                   	dec    %ecx
    1742:	13 00                	adc    (%eax),%eax
    1744:	00 16                	add    %dl,(%esi)
    1746:	2e 01 31             	add    %esi,%cs:(%ecx)
    1749:	13 11                	adc    (%ecx),%edx
    174b:	01 12                	add    %edx,(%edx)
    174d:	06                   	push   %es
    174e:	40                   	inc    %eax
    174f:	18 7a 19             	sbb    %bh,0x19(%edx)
    1752:	00 00                	add    %al,(%eax)
    1754:	00 01                	add    %al,(%ecx)
    1756:	11 01                	adc    %eax,(%ecx)
    1758:	11 01                	adc    %eax,(%ecx)
    175a:	12 01                	adc    (%ecx),%al
    175c:	10 06                	adc    %al,(%esi)
    175e:	03 08                	add    (%eax),%ecx
    1760:	1b 08                	sbb    (%eax),%ecx
    1762:	25 08 13 05 00       	and    $0x51308,%eax
    1767:	00 02                	add    %al,(%edx)
    1769:	2e 00 11             	add    %dl,%cs:(%ecx)
    176c:	01 40 06             	add    %eax,0x6(%eax)
    176f:	00 00                	add    %al,(%eax)
	...

Disassembly of section .debug_loclists:

00000000 <.debug_loclists>:
       0:	8d 00                	lea    (%eax),%eax
       2:	00 00                	add    %al,(%eax)
       4:	05 00 04 00 00       	add    $0x400,%eax
       9:	00 00                	add    %al,(%eax)
       b:	00 01                	add    %al,(%ecx)
       d:	00 04 86             	add    %al,(%esi,%eax,4)
      10:	01 a1 01 02 30 9f    	add    %esp,-0x60cffdff(%ecx)
      16:	00 02                	add    %al,(%edx)
      18:	00 04 a1             	add    %al,(%ecx,%eiz,4)
      1b:	01 b5 01 02 31 9f    	add    %esi,-0x60cefdff(%ebp)
      21:	00 02                	add    %al,(%edx)
      23:	00 04 a1             	add    %al,(%ecx,%eiz,4)
      26:	01 b5 01 02 30 9f    	add    %esi,-0x60cffdff(%ebp)
      2c:	00 02                	add    %al,(%edx)
      2e:	00 04 a1             	add    %al,(%ecx,%eiz,4)
      31:	01 b5 01 06 0c ff    	add    %esi,-0xf3f9ff(%ebp)
      37:	ff 0f                	decl   (%edi)
      39:	00 9f 00 02 00 04    	add    %bl,0x4000200(%edi)
      3f:	a1 01 b5 01 03       	mov    0x301b501,%eax
      44:	09 9a 9f 00 02 00    	or     %ebx,0x2009f(%edx)
      4a:	04 a1                	add    $0xa1,%al
      4c:	01 b5 01 03 09 cf    	add    %esi,-0x30f6fcff(%ebp)
      52:	9f                   	lahf
      53:	00 02                	add    %al,(%edx)
      55:	00 04 b5 01 c9 01 02 	add    %al,0x201c901(,%esi,4)
      5c:	32 9f 00 02 00 04    	xor    0x4000200(%edi),%bl
      62:	b5 01                	mov    $0x1,%ch
      64:	c9                   	leave
      65:	01 02                	add    %eax,(%edx)
      67:	30 9f 00 02 00 04    	xor    %bl,0x4000200(%edi)
      6d:	b5 01                	mov    $0x1,%ch
      6f:	c9                   	leave
      70:	01 06                	add    %eax,(%esi)
      72:	0c ff                	or     $0xff,%al
      74:	ff 0f                	decl   (%edi)
      76:	00 9f 00 02 00 04    	add    %bl,0x4000200(%edi)
      7c:	b5 01                	mov    $0x1,%ch
      7e:	c9                   	leave
      7f:	01 03                	add    %eax,(%ebx)
      81:	09 92 9f 00 02 00    	or     %edx,0x2009f(%edx)
      87:	04 b5                	add    $0xb5,%al
      89:	01 c9                	add    %ecx,%ecx
      8b:	01 03                	add    %eax,(%ebx)
      8d:	09 cf                	or     %ecx,%edi
      8f:	9f                   	lahf
      90:	00 9d 00 00 00 05    	add    %bl,0x5000000(%ebp)
      96:	00 04 00             	add    %al,(%eax,%eax,1)
      99:	00 00                	add    %al,(%eax)
      9b:	00 00                	add    %al,(%eax)
      9d:	03 00                	add    (%eax),%eax
      9f:	04 62                	add    $0x62,%al
      a1:	69 02 30 9f 00 01    	imul   $0x1009f30,(%edx),%eax
      a7:	00 04 69             	add    %al,(%ecx,%ebp,2)
      aa:	b7 01                	mov    $0x1,%bh
      ac:	02 30                	add    (%eax),%dh
      ae:	9f                   	lahf
      af:	00 01                	add    %al,(%ecx)
      b1:	00 04 69             	add    %al,(%ecx,%ebp,2)
      b4:	b7 01                	mov    $0x1,%bh
      b6:	02 38                	add    (%eax),%bh
      b8:	9f                   	lahf
      b9:	00 00                	add    %al,(%eax)
      bb:	01 04 c0             	add    %eax,(%eax,%eax,8)
      be:	01 f2                	add    %esi,%edx
      c0:	01 02                	add    %eax,(%edx)
      c2:	30 9f 00 00 01 04    	xor    %bl,0x4010000(%edi)
      c8:	c0 01 f2             	rolb   $0xf2,(%ecx)
      cb:	01 02                	add    %eax,(%edx)
      cd:	38 9f 00 00 01 04    	cmp    %bl,0x4010000(%edi)
      d3:	c0 01 f2             	rolb   $0xf2,(%ecx)
      d6:	01 03                	add    %eax,(%ebx)
      d8:	09 8e 9f 00 03 01    	or     %ecx,0x103009f(%esi)
      de:	04 f2                	add    $0xf2,%al
      e0:	01 fc                	add    %edi,%esp
      e2:	01 03                	add    %eax,(%ebx)
      e4:	08 80 9f 00 03 01    	or     %al,0x103009f(%eax)
      ea:	04 f2                	add    $0xf2,%al
      ec:	01 fc                	add    %edi,%esp
      ee:	01 02                	add    %eax,(%edx)
      f0:	38 9f 00 03 01 04    	cmp    %bl,0x4010300(%edi)
      f6:	f2 01 fc             	repnz add %edi,%esp
      f9:	01 03                	add    %eax,(%ebx)
      fb:	09 8e 9f 00 00 00    	or     %ecx,0x9f(%esi)
     101:	00 00                	add    %al,(%eax)
     103:	04 00                	add    $0x0,%al
     105:	3e 02 91 04 04 3e 3f 	add    %ds:0x3f3e0404(%ecx),%dl
     10c:	02 74 08 00          	add    0x0(%eax,%ecx,1),%dh
     110:	00 00                	add    %al,(%eax)
     112:	00 00                	add    %al,(%eax)
     114:	04 00                	add    $0x0,%al
     116:	3e 02 91 08 04 3e 3f 	add    %ds:0x3f3e0408(%ecx),%dl
     11d:	02 74 0c 00          	add    0x0(%esp,%ecx,1),%dh
     121:	00 00                	add    %al,(%eax)
     123:	00 00                	add    %al,(%eax)
     125:	04 00                	add    $0x0,%al
     127:	3e 02 91 0c 04 3e 3f 	add    %ds:0x3f3e040c(%ecx),%dl
     12e:	02 74 10 00          	add    0x0(%eax,%edx,1),%dh
     132:	77 00                	ja     134 <MBOOT_HEADER_FLAGS+0x131>
     134:	00 00                	add    %al,(%eax)
     136:	05 00 04 00 00       	add    $0x400,%eax
	...
     147:	00 04 00             	add    %al,(%eax,%eax,1)
     14a:	2b 02                	sub    (%edx),%eax
     14c:	91                   	xchg   %eax,%ecx
     14d:	00 04 31             	add    %al,(%ecx,%esi,1)
     150:	3a 01                	cmp    (%ecx),%al
     152:	52                   	push   %edx
     153:	04 3a                	add    $0x3a,%al
     155:	3e 02 91 00 04 3e 4c 	add    %ds:0x4c3e0400(%ecx),%dl
     15c:	01 52 04             	add    %edx,0x4(%edx)
     15f:	4d                   	dec    %ebp
     160:	59                   	pop    %ecx
     161:	01 52 00             	add    %edx,0x0(%edx)
	...
     16c:	00 00                	add    %al,(%eax)
     16e:	04 09                	add    $0x9,%al
     170:	22 01                	and    (%ecx),%al
     172:	50                   	push   %eax
     173:	04 31                	add    $0x31,%al
     175:	3a 01                	cmp    (%ecx),%al
     177:	50                   	push   %eax
     178:	04 3e                	add    $0x3e,%al
     17a:	4c                   	dec    %esp
     17b:	01 50 04             	add    %edx,0x4(%eax)
     17e:	4d                   	dec    %ebp
     17f:	51                   	push   %ecx
     180:	01 50 04             	add    %edx,0x4(%eax)
     183:	51                   	push   %ecx
     184:	54                   	push   %esp
     185:	02 72 30             	add    0x30(%edx),%dh
     188:	00 01                	add    %al,(%ecx)
     18a:	00 00                	add    %al,(%eax)
     18c:	00 00                	add    %al,(%eax)
     18e:	00 00                	add    %al,(%eax)
     190:	00 04 09             	add    %al,(%ecx,%ecx,1)
     193:	1e                   	push   %ds
     194:	05 91 00 06 23       	add    $0x23060091,%eax
     199:	20 04 31             	and    %al,(%ecx,%esi,1)
     19c:	36 02 72 20          	add    %ss:0x20(%edx),%dh
     1a0:	04 3e                	add    $0x3e,%al
     1a2:	47                   	inc    %edi
     1a3:	02 72 20             	add    0x20(%edx),%dh
     1a6:	04 4d                	add    $0x4d,%al
     1a8:	54                   	push   %esp
     1a9:	02 72 20             	add    0x20(%edx),%dh
     1ac:	00 43 00             	add    %al,0x0(%ebx)
     1af:	00 00                	add    %al,(%eax)
     1b1:	05 00 04 00 00       	add    $0x400,%eax
     1b6:	00 00                	add    %al,(%eax)
     1b8:	00 01                	add    %al,(%ecx)
     1ba:	04 04                	add    $0x4,%al
     1bc:	00 06                	add    %al,(%esi)
     1be:	af                   	scas   %es:(%edi),%eax
     1bf:	02 10                	add    (%eax),%dl
     1c1:	00 04 00             	add    %al,(%eax,%eax,1)
     1c4:	00 02                	add    %al,(%edx)
     1c6:	33 9f 04 00 03 02    	xor    0x2030004(%edi),%ebx
     1cc:	32 9f 00 02 00 00    	xor    0x200(%edi),%bl
     1d2:	00 00                	add    %al,(%eax)
     1d4:	00 00                	add    %al,(%eax)
     1d6:	00 06                	add    %al,(%esi)
     1d8:	af                   	scas   %es:(%edi),%eax
     1d9:	02 10                	add    (%eax),%dl
     1db:	00 04 00             	add    %al,(%eax,%eax,1)
     1de:	12 02                	adc    (%edx),%al
     1e0:	30 9f 04 12 20 01    	xor    %bl,0x1201204(%edi)
     1e6:	50                   	push   %eax
     1e7:	04 5a                	add    $0x5a,%al
     1e9:	6a 01                	push   $0x1
     1eb:	50                   	push   %eax
     1ec:	04 6b                	add    $0x6b,%al
     1ee:	89 01                	mov    %eax,(%ecx)
     1f0:	02 30                	add    (%eax),%dh
     1f2:	9f                   	lahf
     1f3:	00 d6                	add    %dl,%dh
     1f5:	06                   	push   %es
     1f6:	00 00                	add    %al,(%eax)
     1f8:	05 00 04 00 00       	add    $0x400,%eax
     1fd:	00 00                	add    %al,(%eax)
     1ff:	00 00                	add    %al,(%eax)
     201:	00 04 e5 1a f1 1a 01 	add    %al,0x11af11a(,%eiz,8)
     208:	50                   	push   %eax
     209:	00 02                	add    %al,(%edx)
	...
     22b:	00 04 b1             	add    %al,(%ecx,%esi,4)
     22e:	0f e2 0f             	psrad  (%edi),%mm1
     231:	02 30                	add    (%eax),%dh
     233:	9f                   	lahf
     234:	04 e2                	add    $0xe2,%al
     236:	0f e4 0f             	pmulhuw (%edi),%mm1
     239:	01 53 04             	add    %edx,0x4(%ebx)
     23c:	e4 0f                	in     $0xf,%al
     23e:	ea 0f 02 30 9f 04 ea 	ljmp   $0xea04,$0x9f30020f
     245:	0f 9a 11             	setp   (%ecx)
     248:	01 53 04             	add    %edx,0x4(%ebx)
     24b:	a9 11 d2 11 01       	test   $0x111d211,%eax
     250:	53                   	push   %ebx
     251:	04 de                	add    $0xde,%al
     253:	11 a8 12 01 53 04    	adc    %ebp,0x4530112(%eax)
     259:	b2 12                	mov    $0x12,%dl
     25b:	cd 12                	int    $0x12
     25d:	01 53 04             	add    %edx,0x4(%ebx)
     260:	dd 12                	fstl   (%edx)
     262:	fa                   	cli
     263:	13 01                	adc    (%ecx),%eax
     265:	53                   	push   %ebx
     266:	04 ff                	add    $0xff,%al
     268:	13 99 14 01 53 04    	adc    0x4530114(%ecx),%ebx
     26e:	9f                   	lahf
     26f:	14 80                	adc    $0x80,%al
     271:	15 01 53 04 86       	adc    $0x86045301,%eax
     276:	15 ba 15 01 53       	adc    $0x530115ba,%eax
     27b:	04 bf                	add    $0xbf,%al
     27d:	15 d4 15 01 53       	adc    $0x530115d4,%eax
     282:	04 da                	add    $0xda,%al
     284:	15 e5 15 01 53       	adc    $0x530115e5,%eax
     289:	04 ea                	add    $0xea,%al
     28b:	15 b3 16 01 53       	adc    $0x530116b3,%eax
     290:	04 b8                	add    $0xb8,%al
     292:	16                   	push   %ss
     293:	ec                   	in     (%dx),%al
     294:	16                   	push   %ss
     295:	01 53 04             	add    %edx,0x4(%ebx)
     298:	f1                   	int1
     299:	16                   	push   %ss
     29a:	e2 17                	loop   2b3 <MBOOT_HEADER_FLAGS+0x2b0>
     29c:	01 53 04             	add    %edx,0x4(%ebx)
     29f:	e7 17                	out    %eax,$0x17
     2a1:	fb                   	sti
     2a2:	18 01                	sbb    %al,(%ecx)
     2a4:	53                   	push   %ebx
     2a5:	00 04 00             	add    %al,(%eax,%eax,1)
     2a8:	00 01                	add    %al,(%ecx)
     2aa:	01 00                	add    %eax,(%eax)
     2ac:	00 00                	add    %al,(%eax)
     2ae:	00 00                	add    %al,(%eax)
     2b0:	00 00                	add    %al,(%eax)
     2b2:	04 b1                	add    $0xb1,%al
     2b4:	0f b9 0f             	ud1    (%edi),%ecx
     2b7:	02 30                	add    (%eax),%dh
     2b9:	9f                   	lahf
     2ba:	04 b9                	add    $0xb9,%al
     2bc:	0f c0 0f             	xadd   %cl,(%edi)
     2bf:	01 53 04             	add    %edx,0x4(%ebx)
     2c2:	c0 0f c4             	rorb   $0xc4,(%edi)
     2c5:	0f 03 73 01          	lsl    0x1(%ebx),%esi
     2c9:	9f                   	lahf
     2ca:	04 c4                	add    $0xc4,%al
     2cc:	0f d0                	(bad)
     2ce:	0f 01 50 04          	lgdtl  0x4(%eax)
     2d2:	d0 0f                	rorb   $1,(%edi)
     2d4:	e2 0f                	loop   2e5 <MBOOT_HEADER_FLAGS+0x2e2>
     2d6:	01 53 04             	add    %edx,0x4(%ebx)
     2d9:	e2 0f                	loop   2ea <MBOOT_HEADER_FLAGS+0x2e7>
     2db:	e4 0f                	in     $0xf,%al
     2dd:	03 70 7f             	add    0x7f(%eax),%esi
     2e0:	9f                   	lahf
     2e1:	00 01                	add    %al,(%ecx)
     2e3:	00 00                	add    %al,(%eax)
     2e5:	00 00                	add    %al,(%eax)
     2e7:	00 04 8b             	add    %al,(%ebx,%ecx,4)
     2ea:	13 c1                	adc    %ecx,%eax
     2ec:	13 01                	adc    (%ecx),%eax
     2ee:	53                   	push   %ebx
     2ef:	04 e6                	add    $0xe6,%al
     2f1:	14 80                	adc    $0x80,%al
     2f3:	15 01 53 04 da       	adc    $0xda045301,%eax
     2f8:	15 e5 15 01 53       	adc    $0x530115e5,%eax
     2fd:	00 02                	add    %al,(%edx)
     2ff:	00 00                	add    %al,(%eax)
     301:	00 00                	add    %al,(%eax)
     303:	00 04 c1             	add    %al,(%ecx,%eax,8)
     306:	13 ef                	adc    %edi,%ebp
     308:	13 01                	adc    (%ecx),%eax
     30a:	53                   	push   %ebx
     30b:	04 ff                	add    $0xff,%al
     30d:	13 99 14 01 53 04    	adc    0x4530114(%ecx),%ebx
     313:	af                   	scas   %es:(%edi),%eax
     314:	15 ba 15 01 53       	adc    $0x530115ba,%eax
     319:	00 01                	add    %al,(%ecx)
     31b:	00 00                	add    %al,(%eax)
     31d:	00 00                	add    %al,(%eax)
     31f:	00 04 b4             	add    %al,(%esp,%esi,4)
     322:	14 e6                	adc    $0xe6,%al
     324:	14 01                	adc    $0x1,%al
     326:	53                   	push   %ebx
     327:	04 bf                	add    $0xbf,%al
     329:	15 d4 15 01 53       	adc    $0x530115d4,%eax
     32e:	04 e1                	add    $0xe1,%al
     330:	16                   	push   %ss
     331:	ec                   	in     (%dx),%al
     332:	16                   	push   %ss
     333:	01 53 00             	add    %edx,0x0(%ebx)
     336:	01 00                	add    %eax,(%eax)
     338:	04 86                	add    $0x86,%al
     33a:	17                   	pop    %ss
     33b:	c6                   	(bad)
     33c:	17                   	pop    %ss
     33d:	01 53 00             	add    %edx,0x0(%ebx)
     340:	00 00                	add    %al,(%eax)
     342:	00 00                	add    %al,(%eax)
     344:	04 00                	add    $0x0,%al
     346:	29 01                	sub    %eax,(%ecx)
     348:	50                   	push   %eax
     349:	04 29                	add    $0x29,%al
     34b:	bb 01 0a a3 03       	mov    $0x3a30a01,%ebx
     350:	a5                   	movsl  %ds:(%esi),%es:(%edi)
     351:	00 26                	add    %ah,(%esi)
     353:	a8 2d                	test   $0x2d,%al
     355:	a8 00                	test   $0x0,%al
     357:	9f                   	lahf
     358:	00 02                	add    %al,(%edx)
     35a:	00 00                	add    %al,(%eax)
     35c:	00 00                	add    %al,(%eax)
     35e:	01 01                	add    %eax,(%ecx)
     360:	00 04 3b             	add    %al,(%ebx,%edi,1)
     363:	4e                   	dec    %esi
     364:	02 30                	add    (%eax),%dh
     366:	9f                   	lahf
     367:	04 4e                	add    $0x4e,%al
     369:	5e                   	pop    %esi
     36a:	01 57 04             	add    %edx,0x4(%edi)
     36d:	5e                   	pop    %esi
     36e:	89 01                	mov    %eax,(%ecx)
     370:	03 77 7f             	add    0x7f(%edi),%esi
     373:	9f                   	lahf
     374:	04 89                	add    $0x89,%al
     376:	01 92 01 01 57 00    	add    %edx,0x570101(%edx)
	...
     384:	04 a0                	add    $0xa0,%al
     386:	03 aa 03 01 50 04    	add    0x4500103(%edx),%ebp
     38c:	aa                   	stos   %al,%es:(%edi)
     38d:	03 be 04 01 52 04    	add    0x4520104(%esi),%edi
     393:	be 04 db 06 0a       	mov    $0xa06db04,%esi
     398:	a3 03 a5 00 26       	mov    %eax,0x2600a503
     39d:	a8 2d                	test   $0x2d,%al
     39f:	a8 00                	test   $0x0,%al
     3a1:	9f                   	lahf
     3a2:	04 db                	add    $0xdb,%al
     3a4:	06                   	push   %es
     3a5:	f2 06                	repnz push %es
     3a7:	01 52 00             	add    %edx,0x0(%edx)
     3aa:	03 00                	add    (%eax),%eax
     3ac:	00 01                	add    %al,(%ecx)
     3ae:	01 00                	add    %eax,(%eax)
	...
     3b8:	00 00                	add    %al,(%eax)
     3ba:	04 eb                	add    $0xeb,%al
     3bc:	03 88 05 02 30 9f    	add    -0x60cffdfb(%eax),%ecx
     3c2:	04 88                	add    $0x88,%al
     3c4:	05 b9 05 0b 91       	add    $0x910b05b9,%eax
     3c9:	dc 7c 06 91          	fdivrl -0x6f(%esi,%eax,1)
     3cd:	00 1c 23             	add    %bl,(%ebx,%eiz,1)
     3d0:	94                   	xchg   %eax,%esp
     3d1:	03 9f 04 b9 05 c7    	add    -0x38fa46fc(%edi),%ebx
     3d7:	05 09 72 00 91       	add    $0x91007209,%eax
     3dc:	00 1c 23             	add    %bl,(%ebx,%eiz,1)
     3df:	95                   	xchg   %eax,%ebp
     3e0:	03 9f 04 c7 05 cb    	add    -0x34fa38fc(%edi),%ebx
     3e6:	05 0b 91 dc 7c       	add    $0x7cdc910b,%eax
     3eb:	06                   	push   %es
     3ec:	91                   	xchg   %eax,%ecx
     3ed:	00 1c 23             	add    %bl,(%ebx,%eiz,1)
     3f0:	95                   	xchg   %eax,%ebp
     3f1:	03 9f 04 cb 05 dd    	add    -0x22fa34fc(%edi),%ebx
     3f7:	05 09 72 00 91       	add    $0x91007209,%eax
     3fc:	00 1c 23             	add    %bl,(%ebx,%eiz,1)
     3ff:	94                   	xchg   %eax,%esp
     400:	03 9f 04 dd 05 f7    	add    -0x8fa22fc(%edi),%ebx
     406:	05 0b 91 dc 7c       	add    $0x7cdc910b,%eax
     40b:	06                   	push   %es
     40c:	91                   	xchg   %eax,%ecx
     40d:	00 1c 23             	add    %bl,(%ebx,%eiz,1)
     410:	94                   	xchg   %eax,%esp
     411:	03 9f 04 f7 05 94    	add    -0x6bfa08fc(%edi),%ebx
     417:	06                   	push   %es
     418:	0b 91 dc 7c 06 91    	or     -0x6ef98324(%ecx),%edx
     41e:	00 1c 23             	add    %bl,(%ebx,%eiz,1)
     421:	95                   	xchg   %eax,%ebp
     422:	03 9f 04 db 06 f2    	add    -0xdf924fc(%edi),%ebx
     428:	06                   	push   %es
     429:	02 30                	add    (%eax),%dh
     42b:	9f                   	lahf
     42c:	00 04 00             	add    %al,(%eax,%eax,1)
     42f:	01 00                	add    %eax,(%eax)
     431:	00 00                	add    %al,(%eax)
     433:	01 00                	add    %eax,(%eax)
     435:	00 00                	add    %al,(%eax)
     437:	00 00                	add    %al,(%eax)
     439:	00 01                	add    %al,(%ecx)
     43b:	01 00                	add    %eax,(%eax)
     43d:	00 00                	add    %al,(%eax)
     43f:	00 00                	add    %al,(%eax)
     441:	04 eb                	add    $0xeb,%al
     443:	03 f9                	add    %ecx,%edi
     445:	03 02                	add    (%edx),%eax
     447:	30 9f 04 88 04 8b    	xor    %bl,-0x74fb77fc(%edi)
     44d:	04 03                	add    $0x3,%al
     44f:	71 01                	jno    452 <MBOOT_HEADER_FLAGS+0x44f>
     451:	9f                   	lahf
     452:	04 8b                	add    $0x8b,%al
     454:	04 9b                	add    $0x9b,%al
     456:	04 01                	add    $0x1,%al
     458:	51                   	push   %ecx
     459:	04 a0                	add    $0xa0,%al
     45b:	04 a3                	add    $0xa3,%al
     45d:	04 03                	add    $0x3,%al
     45f:	71 01                	jno    462 <MBOOT_HEADER_FLAGS+0x45f>
     461:	9f                   	lahf
     462:	04 a3                	add    $0xa3,%al
     464:	04 c0                	add    $0xc0,%al
     466:	04 01                	add    $0x1,%al
     468:	51                   	push   %ecx
     469:	04 c0                	add    $0xc0,%al
     46b:	04 c7                	add    $0xc7,%al
     46d:	04 06                	add    $0x6,%al
     46f:	70 00                	jo     471 <MBOOT_HEADER_FLAGS+0x46e>
     471:	71 00                	jno    473 <MBOOT_HEADER_FLAGS+0x470>
     473:	22 9f 04 c7 04 c7    	and    -0x38fb38fc(%edi),%bl
     479:	04 06                	add    $0x6,%al
     47b:	71 00                	jno    47d <MBOOT_HEADER_FLAGS+0x47a>
     47d:	70 00                	jo     47f <MBOOT_HEADER_FLAGS+0x47c>
     47f:	22 9f 04 c7 04 ca    	and    -0x35fb38fc(%edi),%bl
     485:	04 08                	add    $0x8,%al
     487:	70 00                	jo     489 <MBOOT_HEADER_FLAGS+0x486>
     489:	71 00                	jno    48b <MBOOT_HEADER_FLAGS+0x488>
     48b:	22 23                	and    (%ebx),%ah
     48d:	01 9f 04 ca 04 d5    	add    %ebx,-0x2afb35fc(%edi)
     493:	04 06                	add    $0x6,%al
     495:	70 00                	jo     497 <MBOOT_HEADER_FLAGS+0x494>
     497:	71 00                	jno    499 <MBOOT_HEADER_FLAGS+0x496>
     499:	22 9f 04 db 06 eb    	and    -0x14f924fc(%edi),%bl
     49f:	06                   	push   %es
     4a0:	02 30                	add    (%eax),%dh
     4a2:	9f                   	lahf
     4a3:	00 00                	add    %al,(%eax)
     4a5:	00 00                	add    %al,(%eax)
     4a7:	00 04 ac             	add    %al,(%esp,%ebp,4)
     4aa:	04 c0                	add    $0xc0,%al
     4ac:	04 02                	add    $0x2,%al
     4ae:	30 9f 04 c0 04 d5    	xor    %bl,-0x2afb3ffc(%edi)
     4b4:	04 01                	add    $0x1,%al
     4b6:	50                   	push   %eax
     4b7:	00 00                	add    %al,(%eax)
     4b9:	00 00                	add    %al,(%eax)
     4bb:	00 04 ef             	add    %al,(%edi,%ebp,8)
     4be:	04 88                	add    $0x88,%al
     4c0:	05 01 50 04 88       	add    $0x88045001,%eax
     4c5:	05 94 06 03 91       	add    $0x91030694,%eax
     4ca:	d8 7c 00 02          	fdivrs 0x2(%eax,%eax,1)
     4ce:	00 00                	add    %al,(%eax)
     4d0:	00 00                	add    %al,(%eax)
     4d2:	01 01                	add    %eax,(%ecx)
     4d4:	00 04 ef             	add    %al,(%edi,%ebp,8)
     4d7:	04 88                	add    $0x88,%al
     4d9:	05 02 30 9f 04       	add    $0x49f3002,%eax
     4de:	88 05 bc 05 01 56    	mov    %al,0x560105bc
     4e4:	04 bc                	add    $0xbc,%al
     4e6:	05 be 05 03 76       	add    $0x760305be,%eax
     4eb:	7e 9f                	jle    48c <MBOOT_HEADER_FLAGS+0x489>
     4ed:	04 be                	add    $0xbe,%al
     4ef:	05 94 06 01 56       	add    $0x56010694,%eax
	...
     500:	00 00                	add    %al,(%eax)
     502:	00 04 88             	add    %al,(%eax,%ecx,4)
     505:	05 c4 05 01 50       	add    $0x500105c4,%eax
     50a:	04 c4                	add    $0xc4,%al
     50c:	05 c7 05 02 72       	add    $0x720205c7,%eax
     511:	00 04 c7             	add    %al,(%edi,%eax,8)
     514:	05 cb 05 04 91       	add    $0x910405cb,%eax
     519:	dc 7c 06 04          	fdivrl 0x4(%esi,%eax,1)
     51d:	cb                   	lret
     51e:	05 dd 05 02 30       	add    $0x300205dd,%eax
     523:	9f                   	lahf
     524:	04 dd                	add    $0xdd,%al
     526:	05 ee 05 01 50       	add    $0x500105ee,%eax
     52b:	04 f0                	add    $0xf0,%al
     52d:	05 f7 05 01 50       	add    $0x500105f7,%eax
     532:	04 f7                	add    $0xf7,%al
     534:	05 94 06 04 91       	add    $0x91040694,%eax
     539:	dc 7c 06 00          	fdivrl 0x0(%esi,%eax,1)
	...
     545:	04 88                	add    $0x88,%al
     547:	05 a9 05 01 51       	add    $0x510105a9,%eax
     54c:	04 a9                	add    $0xa9,%al
     54e:	05 b9 05 01 52       	add    $0x520105b9,%eax
     553:	04 cb                	add    $0xcb,%al
     555:	05 dd 05 02 30       	add    $0x300205dd,%eax
     55a:	9f                   	lahf
     55b:	04 dd                	add    $0xdd,%al
     55d:	05 f7 05 01 51       	add    $0x510105f7,%eax
     562:	00 00                	add    %al,(%eax)
     564:	00 00                	add    %al,(%eax)
     566:	00 04 f0             	add    %al,(%eax,%esi,8)
     569:	0b 8c 0c 02 91 00 04 	or     0x4009102(%esp,%ecx,1),%ecx
     570:	98                   	cwtl
     571:	0c 93                	or     $0x93,%al
     573:	0f 02 91 00 00 01 00 	lar    0x10000(%ecx),%edx
     57a:	00 00                	add    %al,(%eax)
     57c:	00 00                	add    %al,(%eax)
     57e:	00 00                	add    %al,(%eax)
     580:	04 b6                	add    $0xb6,%al
     582:	0c ab                	or     $0xab,%al
     584:	0d 01 57 04 ab       	or     $0xab045701,%eax
     589:	0d bb 0e 02 91       	or     $0x91020ebb,%eax
     58e:	00 04 bb             	add    %al,(%ebx,%edi,4)
     591:	0e                   	push   %cs
     592:	d2 0e                	rorb   %cl,(%esi)
     594:	01 57 04             	add    %edx,0x4(%edi)
     597:	d2 0e                	rorb   %cl,(%esi)
     599:	93                   	xchg   %eax,%ebx
     59a:	0f 02 91 00 00 02 00 	lar    0x20000(%ecx),%edx
     5a1:	00 03                	add    %al,(%ebx)
     5a3:	03 00                	add    (%eax),%eax
     5a5:	04 b6                	add    $0xb6,%al
     5a7:	0c c2                	or     $0xc2,%al
     5a9:	0c 02                	or     $0x2,%al
     5ab:	30 9f 04 d0 0c f4    	xor    %bl,-0xbf32ffc(%edi)
     5b1:	0c 01                	or     $0x1,%al
     5b3:	53                   	push   %ebx
     5b4:	04 f4                	add    $0xf4,%al
     5b6:	0c a2                	or     $0xa2,%al
     5b8:	0d 02 91 4c 00       	or     $0x4c9102,%eax
     5bd:	00 03                	add    %al,(%ebx)
     5bf:	03 00                	add    (%eax),%eax
     5c1:	04 f4                	add    $0xf4,%al
     5c3:	0c f4                	or     $0xf4,%al
     5c5:	0c 01                	or     $0x1,%al
     5c7:	50                   	push   %eax
     5c8:	04 f4                	add    $0xf4,%al
     5ca:	0c a2                	or     $0xa2,%al
     5cc:	0d 01 56 00 02       	or     $0x2005601,%eax
     5d1:	03 00                	add    (%eax),%eax
     5d3:	00 04 f4             	add    %al,(%esp,%esi,8)
     5d6:	0c f4                	or     $0xf4,%al
     5d8:	0c 02                	or     $0x2,%al
     5da:	30 9f 04 80 0d a2    	xor    %bl,-0x5df27ffc(%edi)
     5e0:	0d 01 52 00 00       	or     $0x5201,%eax
     5e5:	00 04 84             	add    %al,(%esp,%eax,4)
     5e8:	0d a2 0d 01 50       	or     $0x50010da2,%eax
     5ed:	00 00                	add    %al,(%eax)
     5ef:	00 04 d4             	add    %al,(%esp,%edx,8)
     5f2:	0e                   	push   %cs
     5f3:	fc                   	cld
     5f4:	0e                   	push   %cs
     5f5:	01 52 00             	add    %edx,0x0(%edx)
     5f8:	01 00                	add    %eax,(%eax)
     5fa:	04 e0                	add    $0xe0,%al
     5fc:	0e                   	push   %cs
     5fd:	fc                   	cld
     5fe:	0e                   	push   %cs
     5ff:	01 50 00             	add    %edx,0x0(%eax)
     602:	02 00                	add    (%eax),%al
     604:	00 00                	add    %al,(%eax)
     606:	00 01                	add    %al,(%ecx)
     608:	00 00                	add    %al,(%eax)
     60a:	00 01                	add    %al,(%ecx)
     60c:	04 bb                	add    $0xbb,%al
     60e:	0d c1 0d 02 30       	or     $0x30020dc1,%eax
     613:	9f                   	lahf
     614:	04 c1                	add    $0xc1,%al
     616:	0d ce 0d 08 77       	or     $0x77080dce,%eax
     61b:	00 91 00 1c 23 20    	add    %dl,0x20231c00(%ecx)
     621:	9f                   	lahf
     622:	04 ce                	add    $0xce,%al
     624:	0d d9 0d 08 77       	or     $0x77080dd9,%eax
     629:	00 91 00 1c 23 1f    	add    %dl,0x1f231c00(%ecx)
     62f:	9f                   	lahf
     630:	04 dd                	add    $0xdd,%al
     632:	0d ec 0d 08 77       	or     $0x77080dec,%eax
     637:	00 91 00 1c 23 20    	add    %dl,0x20231c00(%ecx)
     63d:	9f                   	lahf
     63e:	04 ec                	add    $0xec,%al
     640:	0d f2 0d 08 77       	or     $0x77080df2,%eax
     645:	00 91 00 1c 23 1f    	add    %dl,0x1f231c00(%ecx)
     64b:	9f                   	lahf
     64c:	00 00                	add    %al,(%eax)
     64e:	00 00                	add    %al,(%eax)
     650:	00 04 e0             	add    %al,(%eax,%eiz,8)
     653:	07                   	pop    %es
     654:	fc                   	cld
     655:	07                   	pop    %es
     656:	02 91 00 04 88 08    	add    0x8880400(%ecx),%dl
     65c:	ed                   	in     (%dx),%eax
     65d:	0b 02                	or     (%edx),%eax
     65f:	91                   	xchg   %eax,%ecx
     660:	00 00                	add    %al,(%eax)
     662:	01 00                	add    %eax,(%eax)
     664:	00 00                	add    %al,(%eax)
     666:	00 00                	add    %al,(%eax)
     668:	00 00                	add    %al,(%eax)
     66a:	00 01                	add    %al,(%ecx)
     66c:	01 00                	add    %eax,(%eax)
     66e:	00 00                	add    %al,(%eax)
     670:	04 9d                	add    $0x9d,%al
     672:	08 b6 08 01 53 04    	or     %dh,0x4530108(%esi)
     678:	b6 08                	mov    $0x8,%dh
     67a:	d7                   	xlat   %ds:(%ebx)
     67b:	08 02                	or     %al,(%edx)
     67d:	91                   	xchg   %eax,%ecx
     67e:	44                   	inc    %esp
     67f:	04 dd                	add    $0xdd,%al
     681:	08 e3                	or     %ah,%bl
     683:	08 01                	or     %al,(%ecx)
     685:	50                   	push   %eax
     686:	04 e3                	add    $0xe3,%al
     688:	08 f8                	or     %bh,%al
     68a:	08 02                	or     %al,(%edx)
     68c:	91                   	xchg   %eax,%ecx
     68d:	44                   	inc    %esp
     68e:	04 93                	add    $0x93,%al
     690:	0a a2 0a 08 77 00    	or     0x77080a(%edx),%ah
     696:	72 00                	jb     698 <MBOOT_HEADER_FLAGS+0x695>
     698:	22 37                	and    (%edi),%dh
     69a:	1c 9f                	sbb    $0x9f,%al
     69c:	04 a2                	add    $0xa2,%al
     69e:	0a a5 0a 08 77 00    	or     0x77080a(%ebp),%ah
     6a4:	72 00                	jb     6a6 <MBOOT_HEADER_FLAGS+0x6a3>
     6a6:	22 36                	and    (%esi),%dh
     6a8:	1c 9f                	sbb    $0x9f,%al
     6aa:	04 a5                	add    $0xa5,%al
     6ac:	0a bc 0a 08 77 00 72 	or     0x72007708(%edx,%ecx,1),%bh
     6b3:	00 22                	add    %ah,(%edx)
     6b5:	37                   	aaa
     6b6:	1c 9f                	sbb    $0x9f,%al
     6b8:	00 02                	add    %al,(%edx)
     6ba:	00 00                	add    %al,(%eax)
     6bc:	00 04 9d 08 b6 08 02 	add    %al,0x208b608(,%ebx,4)
     6c3:	30 9f 04 b6 08 f8    	xor    %bl,-0x7f749fc(%edi)
     6c9:	08 01                	or     %al,(%ecx)
     6cb:	52                   	push   %edx
     6cc:	00 00                	add    %al,(%eax)
     6ce:	00 04 93             	add    %al,(%ebx,%edx,4)
     6d1:	0a bc 0a 01 52 00 02 	or     0x2005201(%edx,%ecx,1),%bh
     6d8:	00 00                	add    %al,(%eax)
     6da:	00 00                	add    %al,(%eax)
     6dc:	01 04 8f             	add    %eax,(%edi,%ecx,4)
     6df:	09 90 09 02 30 9f    	or     %edx,-0x60cffdf7(%eax)
     6e5:	04 90                	add    $0x90,%al
     6e7:	09 9a 09 08 77 00    	or     %ebx,0x770809(%edx)
     6ed:	91                   	xchg   %eax,%ecx
     6ee:	00 1c 23             	add    %bl,(%ebx,%eiz,1)
     6f1:	2f                   	das
     6f2:	9f                   	lahf
     6f3:	04 9a                	add    $0x9a,%al
     6f5:	09 a3 09 08 77 00    	or     %esp,0x770809(%ebx)
     6fb:	91                   	xchg   %eax,%ecx
     6fc:	00 1c 23             	add    %bl,(%ebx,%eiz,1)
     6ff:	2e 9f                	cs lahf
     701:	00 02                	add    %al,(%edx)
	...
     70b:	00 00                	add    %al,(%eax)
     70d:	01 01                	add    %eax,(%ecx)
     70f:	00 00                	add    %al,(%eax)
     711:	00 00                	add    %al,(%eax)
     713:	00 04 ca             	add    %al,(%edx,%ecx,8)
     716:	0a ce                	or     %dh,%cl
     718:	0a 02                	or     (%edx),%al
     71a:	30 9f 04 80 0b 88    	xor    %bl,-0x77f47ffc(%edi)
     720:	0b 01                	or     (%ecx),%eax
     722:	56                   	push   %esi
     723:	04 88                	add    $0x88,%al
     725:	0b 8b 0b 06 91 44    	or     0x4491060b(%ebx),%ecx
     72b:	06                   	push   %es
     72c:	23 01                	and    (%ecx),%eax
     72e:	9f                   	lahf
     72f:	04 8b                	add    $0x8b,%al
     731:	0b b1 0b 01 56 04    	or     0x456010b(%ecx),%esi
     737:	b1 0b                	mov    $0xb,%cl
     739:	b6 0b                	mov    $0xb,%dh
     73b:	06                   	push   %es
     73c:	91                   	xchg   %eax,%ecx
     73d:	44                   	inc    %esp
     73e:	06                   	push   %es
     73f:	23 01                	and    (%ecx),%eax
     741:	9f                   	lahf
     742:	04 b6                	add    $0xb6,%al
     744:	0b b6 0b 08 76 00    	or     0x76080b(%esi),%esi
     74a:	91                   	xchg   %eax,%ecx
     74b:	00 1c 23             	add    %bl,(%ebx,%eiz,1)
     74e:	25 9f 04 b6 0b       	and    $0xbb6049f,%eax
     753:	d6                   	(bad)
     754:	0b 08                	or     (%eax),%ecx
     756:	76 00                	jbe    758 <MBOOT_HEADER_FLAGS+0x755>
     758:	91                   	xchg   %eax,%ecx
     759:	00 1c 23             	add    %bl,(%ebx,%eiz,1)
     75c:	24 9f                	and    $0x9f,%al
     75e:	04 d6                	add    $0xd6,%al
     760:	0b e3                	or     %ebx,%esp
     762:	0b 08                	or     (%eax),%ecx
     764:	70 00                	jo     766 <MBOOT_HEADER_FLAGS+0x763>
     766:	91                   	xchg   %eax,%ecx
     767:	00 1c 23             	add    %bl,(%ebx,%eiz,1)
     76a:	24 9f                	and    $0x9f,%al
     76c:	04 e3                	add    $0xe3,%al
     76e:	0b ea                	or     %edx,%ebp
     770:	0b 08                	or     (%eax),%ecx
     772:	76 00                	jbe    774 <MBOOT_HEADER_FLAGS+0x771>
     774:	91                   	xchg   %eax,%ecx
     775:	00 1c 23             	add    %bl,(%ebx,%eiz,1)
     778:	25 9f 00 00 00       	and    $0x9f,%eax
     77d:	00 00                	add    %al,(%eax)
     77f:	00 00                	add    %al,(%eax)
     781:	04 cd                	add    $0xcd,%al
     783:	0a ce                	or     %dh,%cl
     785:	0a 01                	or     (%ecx),%al
     787:	51                   	push   %ecx
     788:	04 80                	add    $0x80,%al
     78a:	0b a4 0b 01 51 04 a4 	or     -0x5bfbaeff(%ebx,%ecx,1),%esp
     791:	0b b6 0b 01 52 00    	or     0x52010b(%esi),%esi
     797:	00 00                	add    %al,(%eax)
     799:	00 00                	add    %al,(%eax)
     79b:	04 c0                	add    $0xc0,%al
     79d:	01 fe                	add    %edi,%esi
     79f:	02 02                	add    (%edx),%al
     7a1:	91                   	xchg   %eax,%ecx
     7a2:	00 04 8a             	add    %al,(%edx,%ecx,4)
     7a5:	03 9d 03 02 91 00    	add    0x910203(%ebp),%ebx
     7ab:	00 00                	add    %al,(%eax)
     7ad:	00 00                	add    %al,(%eax)
     7af:	00 00                	add    %al,(%eax)
     7b1:	00 04 c0             	add    %al,(%eax,%eax,8)
     7b4:	01 85 03 02 91 04    	add    %eax,0x4910203(%ebp)
     7ba:	04 85                	add    $0x85,%al
     7bc:	03 8a 03 02 74 08    	add    0x8740203(%edx),%ecx
     7c2:	04 8a                	add    $0x8a,%al
     7c4:	03 9d 03 02 91 04    	add    0x4910203(%ebp),%ebx
     7ca:	00 00                	add    %al,(%eax)
     7cc:	00 00                	add    %al,(%eax)
     7ce:	00 00                	add    %al,(%eax)
     7d0:	00 04 c0             	add    %al,(%eax,%eax,8)
     7d3:	01 85 03 02 91 08    	add    %eax,0x8910203(%ebp)
     7d9:	04 85                	add    $0x85,%al
     7db:	03 8a 03 02 74 0c    	add    0xc740203(%edx),%ecx
     7e1:	04 8a                	add    $0x8a,%al
     7e3:	03 9d 03 02 91 08    	add    0x8910203(%ebp),%ebx
     7e9:	00 03                	add    %al,(%ebx)
	...
     7f3:	01 01                	add    %eax,(%ecx)
     7f5:	00 00                	add    %al,(%eax)
     7f7:	00 00                	add    %al,(%eax)
     7f9:	00 00                	add    %al,(%eax)
     7fb:	00 04 c0             	add    %al,(%eax,%eax,8)
     7fe:	01 dd                	add    %ebx,%ebp
     800:	01 02                	add    %eax,(%edx)
     802:	30 9f 04 88 02 8b    	xor    %bl,-0x74fd77fc(%edi)
     808:	02 03                	add    (%ebx),%al
     80a:	76 01                	jbe    80d <MBOOT_HEADER_FLAGS+0x80a>
     80c:	9f                   	lahf
     80d:	04 8b                	add    $0x8b,%al
     80f:	02 c7                	add    %bh,%al
     811:	02 01                	add    (%ecx),%al
     813:	56                   	push   %esi
     814:	04 c7                	add    $0xc7,%al
     816:	02 ca                	add    %dl,%cl
     818:	02 06                	add    (%esi),%al
     81a:	91                   	xchg   %eax,%ecx
     81b:	58                   	pop    %eax
     81c:	06                   	push   %es
     81d:	23 01                	and    (%ecx),%eax
     81f:	9f                   	lahf
     820:	04 ca                	add    $0xca,%al
     822:	02 ca                	add    %dl,%cl
     824:	02 08                	add    (%eax),%cl
     826:	73 00                	jae    828 <MBOOT_HEADER_FLAGS+0x825>
     828:	91                   	xchg   %eax,%ecx
     829:	00 1c 23             	add    %bl,(%ebx,%eiz,1)
     82c:	25 9f 04 ca 02       	and    $0x2ca049f,%eax
     831:	e2 02                	loop   835 <MBOOT_HEADER_FLAGS+0x832>
     833:	08 73 00             	or     %dh,0x0(%ebx)
     836:	91                   	xchg   %eax,%ecx
     837:	00 1c 23             	add    %bl,(%ebx,%eiz,1)
     83a:	24 9f                	and    $0x9f,%al
     83c:	04 e2                	add    $0xe2,%al
     83e:	02 ef                	add    %bh,%ch
     840:	02 08                	add    (%eax),%cl
     842:	70 00                	jo     844 <MBOOT_HEADER_FLAGS+0x841>
     844:	91                   	xchg   %eax,%ecx
     845:	00 1c 23             	add    %bl,(%ebx,%eiz,1)
     848:	24 9f                	and    $0x9f,%al
     84a:	04 ef                	add    $0xef,%al
     84c:	02 82 03 08 73 00    	add    0x730803(%edx),%al
     852:	91                   	xchg   %eax,%ecx
     853:	00 1c 23             	add    %bl,(%ebx,%eiz,1)
     856:	25 9f 04 8a 03       	and    $0x38a049f,%eax
     85b:	9d                   	popf
     85c:	03 08                	add    (%eax),%ecx
     85e:	73 00                	jae    860 <MBOOT_HEADER_FLAGS+0x85d>
     860:	91                   	xchg   %eax,%ecx
     861:	00 1c 23             	add    %bl,(%ebx,%eiz,1)
     864:	25 9f 00 00 00       	and    $0x9f,%eax
     869:	00 00                	add    %al,(%eax)
     86b:	00 00                	add    %al,(%eax)
     86d:	04 d7                	add    $0xd7,%al
     86f:	01 dd                	add    %ebx,%ebp
     871:	01 01                	add    %eax,(%ecx)
     873:	51                   	push   %ecx
     874:	04 80                	add    $0x80,%al
     876:	02 a3 02 01 51 04    	add    0x4510102(%ebx),%ah
     87c:	a3 02 b5 02 01       	mov    %eax,0x102b502
     881:	52                   	push   %edx
     882:	00 00                	add    %al,(%eax)
     884:	00 00                	add    %al,(%eax)
     886:	00 04 b5 07 b9 07 01 	add    %al,0x107b907(,%esi,4)
     88d:	50                   	push   %eax
     88e:	04 b9                	add    $0xb9,%al
     890:	07                   	pop    %es
     891:	d9 07                	flds   (%edi)
     893:	01 53 00             	add    %edx,0x0(%ebx)
     896:	00 00                	add    %al,(%eax)
     898:	00 00                	add    %al,(%eax)
     89a:	04 80                	add    $0x80,%al
     89c:	19 ab 19 02 91 00    	sbb    %ebp,0x910219(%ebx)
     8a2:	04 b6                	add    $0xb6,%al
     8a4:	19 f3                	sbb    %esi,%ebx
     8a6:	19 02                	sbb    %eax,(%edx)
     8a8:	91                   	xchg   %eax,%ecx
	...
     8b1:	04 ce                	add    $0xce,%al
     8b3:	19 ea                	sbb    %ebp,%edx
     8b5:	19 01                	sbb    %eax,(%ecx)
     8b7:	50                   	push   %eax
     8b8:	04 ea                	add    $0xea,%al
     8ba:	19 f3                	sbb    %esi,%ebx
     8bc:	19 08                	sbb    %ecx,(%eax)
     8be:	72 00                	jb     8c0 <MBOOT_HEADER_FLAGS+0x8bd>
     8c0:	03 60 68             	add    0x68(%eax),%esp
     8c3:	10 00                	adc    %al,(%eax)
     8c5:	22 04 f3             	and    (%ebx,%esi,8),%al
     8c8:	19 f8                	sbb    %edi,%eax
     8ca:	19 01                	sbb    %eax,(%ecx)
     8cc:	50                   	push   %eax
     8cd:	00 66 06             	add    %ah,0x6(%esi)
     8d0:	00 00                	add    %al,(%eax)
     8d2:	05 00 04 00 00       	add    $0x400,%eax
	...
     8e3:	00 04 a0             	add    %al,(%eax,%eiz,4)
     8e6:	04 ca                	add    $0xca,%al
     8e8:	06                   	push   %es
     8e9:	02 91 04 04 ca 06    	add    0x6ca0404(%ecx),%dl
     8ef:	cb                   	lret
     8f0:	06                   	push   %es
     8f1:	02 74 08 04          	add    0x4(%eax,%ecx,1),%dh
     8f5:	cb                   	lret
     8f6:	06                   	push   %es
     8f7:	df 06                	filds  (%esi)
     8f9:	02 91 04 04 df 06    	add    0x6df0404(%ecx),%dl
     8ff:	e0 06                	loopne 907 <MBOOT_HEADER_FLAGS+0x904>
     901:	02 74 08 04          	add    0x4(%eax,%ecx,1),%dh
     905:	e0 06                	loopne 90d <MBOOT_HEADER_FLAGS+0x90a>
     907:	94                   	xchg   %eax,%esp
     908:	07                   	pop    %es
     909:	02 91 04 00 00 00    	add    0x4(%ecx),%dl
	...
     917:	04 a0                	add    $0xa0,%al
     919:	04 ca                	add    $0xca,%al
     91b:	06                   	push   %es
     91c:	02 91 08 04 ca 06    	add    0x6ca0408(%ecx),%dl
     922:	cb                   	lret
     923:	06                   	push   %es
     924:	02 74 0c 04          	add    0x4(%esp,%ecx,1),%dh
     928:	cb                   	lret
     929:	06                   	push   %es
     92a:	df 06                	filds  (%esi)
     92c:	02 91 08 04 df 06    	add    0x6df0408(%ecx),%dl
     932:	e0 06                	loopne 93a <MBOOT_HEADER_FLAGS+0x937>
     934:	02 74 0c 04          	add    0x4(%esp,%ecx,1),%dh
     938:	e0 06                	loopne 940 <MBOOT_HEADER_FLAGS+0x93d>
     93a:	94                   	xchg   %eax,%esp
     93b:	07                   	pop    %es
     93c:	02 91 08 00 02 00    	add    0x20008(%ecx),%dl
     942:	00 00                	add    %al,(%eax)
     944:	00 00                	add    %al,(%eax)
     946:	04 b0                	add    $0xb0,%al
     948:	05 ca 06 02 91       	add    $0x910206ca,%eax
     94d:	08 04 ca             	or     %al,(%edx,%ecx,8)
     950:	06                   	push   %es
     951:	cb                   	lret
     952:	06                   	push   %es
     953:	02 74 0c 04          	add    0x4(%esp,%ecx,1),%dh
     957:	e0 06                	loopne 95f <MBOOT_HEADER_FLAGS+0x95c>
     959:	fa                   	cli
     95a:	06                   	push   %es
     95b:	02 91 08 00 04 00    	add    0x40008(%ecx),%dl
     961:	00 00                	add    %al,(%eax)
     963:	00 00                	add    %al,(%eax)
     965:	04 b0                	add    $0xb0,%al
     967:	05 ce 05 02 30       	add    $0x300205ce,%eax
     96c:	9f                   	lahf
     96d:	04 ce                	add    $0xce,%al
     96f:	05 be 06 01 57       	add    $0x570106be,%eax
     974:	04 e0                	add    $0xe0,%al
     976:	06                   	push   %es
     977:	fa                   	cli
     978:	06                   	push   %es
     979:	01 57 00             	add    %edx,0x0(%edi)
     97c:	02 00                	add    (%eax),%al
     97e:	04 f6                	add    $0xf6,%al
     980:	05 8a 06 04 0a       	add    $0xa04068a,%eax
     985:	f0 01 9f 00 02 00 04 	lock add %ebx,0x4000200(%edi)
     98c:	f6 05 8a 06 02 76 00 	testb  $0x0,0x7602068a
     993:	00 00                	add    %al,(%eax)
     995:	01 01                	add    %eax,(%ecx)
     997:	00 04 ce             	add    %al,(%esi,%ecx,8)
     99a:	05 ce 05 06 0c       	add    $0xc0605ce,%eax
     99f:	a0 86 01 00 9f       	mov    0x9f000186,%al
     9a4:	04 ce                	add    $0xce,%al
     9a6:	05 d7 05 06 0c       	add    $0xc0605d7,%eax
     9ab:	9f                   	lahf
     9ac:	86 01                	xchg   %al,(%ecx)
     9ae:	00 9f 00 00 00 01    	add    %bl,0x1000000(%edi)
     9b4:	00 04 d7             	add    %al,(%edi,%edx,8)
     9b7:	05 e1 05 01 50       	add    $0x500105e1,%eax
     9bc:	04 ec                	add    $0xec,%al
     9be:	05 f6 05 01 50       	add    $0x500105f6,%eax
     9c3:	00 01                	add    %al,(%ecx)
     9c5:	01 04 e9             	add    %eax,(%ecx,%ebp,8)
     9c8:	05 ec 05 04 0a       	add    $0xa0405ec,%eax
     9cd:	f7 01 9f 00 00 01    	testl  $0x100009f,(%ecx)
     9d3:	04 ec                	add    $0xec,%al
     9d5:	05 ec 05 01 50       	add    $0x500105ec,%eax
     9da:	00 03                	add    %al,(%ebx)
     9dc:	01 04 d7             	add    %eax,(%edi,%edx,8)
     9df:	05 e1 05 04 0a       	add    $0xa0405e1,%eax
     9e4:	f7 01 9f 00 03 01    	testl  $0x103009f,(%ecx)
     9ea:	04 e1                	add    $0xe1,%al
     9ec:	05 e2 05 04 0a       	add    $0xa0405e2,%eax
     9f1:	f7 01 9f 00 03 01    	testl  $0x103009f,(%ecx)
     9f7:	04 e2                	add    $0xe2,%al
     9f9:	05 e3 05 04 0a       	add    $0xa0405e3,%eax
     9fe:	f7 01 9f 00 03 01    	testl  $0x103009f,(%ecx)
     a04:	04 e3                	add    $0xe3,%al
     a06:	05 e4 05 04 0a       	add    $0xa0405e4,%eax
     a0b:	f7 01 9f 00 01 00    	testl  $0x1009f,(%ecx)
     a11:	04 91                	add    $0x91,%al
     a13:	06                   	push   %es
     a14:	99                   	cltd
     a15:	06                   	push   %es
     a16:	04 0a                	add    $0xa,%al
     a18:	f7 01 9f 00 01 00    	testl  $0x1009f,(%ecx)
     a1e:	04 91                	add    $0x91,%al
     a20:	06                   	push   %es
     a21:	99                   	cltd
     a22:	06                   	push   %es
     a23:	03 09                	add    (%ecx),%ecx
     a25:	e7 9f                	out    %eax,$0x9f
     a27:	00 04 06             	add    %al,(%esi,%eax,1)
     a2a:	06                   	push   %es
     a2b:	00 04 99             	add    %al,(%ecx,%ebx,4)
     a2e:	06                   	push   %es
     a2f:	99                   	cltd
     a30:	06                   	push   %es
     a31:	06                   	push   %es
     a32:	0c a0                	or     $0xa0,%al
     a34:	86 01                	xchg   %al,(%ecx)
     a36:	00 9f 04 99 06 a0    	add    %bl,-0x5ff966fc(%edi)
     a3c:	06                   	push   %es
     a3d:	06                   	push   %es
     a3e:	0c 9f                	or     $0x9f,%al
     a40:	86 01                	xchg   %al,(%ecx)
     a42:	00 9f 00 00 00 01    	add    %bl,0x1000000(%edi)
     a48:	00 04 a0             	add    %al,(%eax,%eiz,4)
     a4b:	06                   	push   %es
     a4c:	a1 06 01 50 04       	mov    0x4500106,%eax
     a51:	ac                   	lods   %ds:(%esi),%al
     a52:	06                   	push   %es
     a53:	be 06 01 50 00       	mov    $0x500106,%esi
     a58:	04 01                	add    $0x1,%al
     a5a:	04 a0                	add    $0xa0,%al
     a5c:	06                   	push   %es
     a5d:	a1 06 04 0a f7       	mov    0xf70a0406,%eax
     a62:	01 9f 00 03 01 04    	add    %ebx,0x4010300(%edi)
     a68:	a1 06 a2 06 04       	mov    0x406a206,%eax
     a6d:	0a f7                	or     %bh,%dh
     a6f:	01 9f 00 03 01 04    	add    %ebx,0x4010300(%edi)
     a75:	a2 06 a3 06 04       	mov    %al,0x406a306
     a7a:	0a f7                	or     %bh,%dh
     a7c:	01 9f 00 03 01 04    	add    %ebx,0x4010300(%edi)
     a82:	a3 06 a4 06 04       	mov    %eax,0x406a406
     a87:	0a f7                	or     %bh,%dh
     a89:	01 9f 00 01 01 04    	add    %ebx,0x4010100(%edi)
     a8f:	a9 06 ac 06 04       	test   $0x406ac06,%eax
     a94:	0a f7                	or     %bh,%dh
     a96:	01 9f 00 00 01 04    	add    %ebx,0x4010000(%edi)
     a9c:	ac                   	lods   %ds:(%esi),%al
     a9d:	06                   	push   %es
     a9e:	ac                   	lods   %ds:(%esi),%al
     a9f:	06                   	push   %es
     aa0:	01 50 00             	add    %edx,0x0(%eax)
     aa3:	00 00                	add    %al,(%eax)
     aa5:	01 00                	add    %eax,(%eax)
     aa7:	04 d1                	add    $0xd1,%al
     aa9:	04 d9                	add    $0xd9,%al
     aab:	04 01                	add    $0x1,%al
     aad:	50                   	push   %eax
     aae:	04 e8                	add    $0xe8,%al
     ab0:	04 ef                	add    $0xef,%al
     ab2:	04 01                	add    $0x1,%al
     ab4:	50                   	push   %eax
     ab5:	00 01                	add    %al,(%ecx)
     ab7:	01 04 e5 04 e8 04 04 	add    %eax,0x404e804(,%eiz,8)
     abe:	0a f7                	or     %bh,%dh
     ac0:	01 9f 00 00 01 04    	add    %ebx,0x4010000(%edi)
     ac6:	e8 04 e8 04 01       	call   104f2cf <stack_top+0xe4365f>
     acb:	50                   	push   %eax
     acc:	00 03                	add    %al,(%ebx)
     ace:	01 04 d1             	add    %eax,(%ecx,%edx,8)
     ad1:	04 d9                	add    $0xd9,%al
     ad3:	04 04                	add    $0x4,%al
     ad5:	0a f7                	or     %bh,%dh
     ad7:	01 9f 00 03 01 04    	add    %ebx,0x4010300(%edi)
     add:	d9 04 da             	flds   (%edx,%ebx,8)
     ae0:	04 04                	add    $0x4,%al
     ae2:	0a f7                	or     %bh,%dh
     ae4:	01 9f 00 03 01 04    	add    %ebx,0x4010300(%edi)
     aea:	da 04 db             	fiaddl (%ebx,%ebx,8)
     aed:	04 04                	add    $0x4,%al
     aef:	0a f7                	or     %bh,%dh
     af1:	01 9f 00 03 01 04    	add    %ebx,0x4010300(%edi)
     af7:	db 04 dc             	fildl  (%esp,%ebx,8)
     afa:	04 04                	add    $0x4,%al
     afc:	0a f7                	or     %bh,%dh
     afe:	01 9f 00 01 00 04    	add    %ebx,0x4000100(%edi)
     b04:	ec                   	in     (%dx),%al
     b05:	04 fe                	add    $0xfe,%al
     b07:	04 04                	add    $0x4,%al
     b09:	0a f6                	or     %dh,%dh
     b0b:	01 9f 00 01 00 04    	add    %ebx,0x4000100(%edi)
     b11:	ec                   	in     (%dx),%al
     b12:	04 fe                	add    $0xfe,%al
     b14:	04 0a                	add    $0xa,%al
     b16:	91                   	xchg   %eax,%ecx
     b17:	03 94 01 3f 1a 09 e0 	add    -0x1ff6e5c1(%ecx,%eax,1),%edx
     b1e:	21 9f 00 02 00 04    	and    %ebx,0x4000200(%edi)
     b24:	fe 04 86             	incb   (%esi,%eax,4)
     b27:	05 04 0a f2 01       	add    $0x1f20a04,%eax
     b2c:	9f                   	lahf
     b2d:	00 02                	add    %al,(%edx)
     b2f:	00 04 fe             	add    %al,(%esi,%edi,8)
     b32:	04 86                	add    $0x86,%al
     b34:	05 01 56 00 02       	add    $0x2005601,%eax
     b39:	00 04 86             	add    %al,(%esi,%eax,4)
     b3c:	05 90 05 04 0a       	add    $0xa040590,%eax
     b41:	f3 01 9f 00 02 00 04 	repz add %ebx,0x4000200(%edi)
     b48:	86 05 90 05 02 91    	xchg   %al,0x91020590
     b4e:	00 00                	add    %al,(%eax)
     b50:	02 00                	add    (%eax),%al
     b52:	04 90                	add    $0x90,%al
     b54:	05 9c 05 04 0a       	add    $0xa04059c,%eax
     b59:	f4                   	hlt
     b5a:	01 9f 00 02 00 04    	add    %ebx,0x4000200(%edi)
     b60:	90                   	nop
     b61:	05 9c 05 02 91       	add    $0x9102059c,%eax
     b66:	01 00                	add    %eax,(%eax)
     b68:	02 00                	add    (%eax),%al
     b6a:	04 9c                	add    $0x9c,%al
     b6c:	05 a8 05 04 0a       	add    $0xa0405a8,%eax
     b71:	f5                   	cmc
     b72:	01 9f 00 02 00 04    	add    %ebx,0x4000200(%edi)
     b78:	9c                   	pushf
     b79:	05 a8 05 02 91       	add    $0x910205a8,%eax
     b7e:	02 00                	add    (%eax),%al
     b80:	02 00                	add    (%eax),%al
     b82:	04 a8                	add    $0xa8,%al
     b84:	05 b0 05 04 0a       	add    $0xa0405b0,%eax
     b89:	f7 01 9f 00 02 00    	testl  $0x2009f,(%ecx)
     b8f:	04 a8                	add    $0xa8,%al
     b91:	05 b0 05 03 08       	add    $0x80305b0,%eax
     b96:	30 9f 00 00 00 00    	xor    %bl,0x0(%edi)
     b9c:	00 00                	add    %al,(%eax)
     b9e:	00 00                	add    %al,(%eax)
     ba0:	00 00                	add    %al,(%eax)
     ba2:	00 04 c0             	add    %al,(%eax,%eax,8)
     ba5:	01 dc                	add    %ebx,%esp
     ba7:	03 02                	add    (%edx),%eax
     ba9:	91                   	xchg   %eax,%ecx
     baa:	04 04                	add    $0x4,%al
     bac:	dc 03                	faddl  (%ebx)
     bae:	dd 03                	fldl   (%ebx)
     bb0:	02 74 08 04          	add    0x4(%eax,%ecx,1),%dh
     bb4:	dd 03                	fldl   (%ebx)
     bb6:	f1                   	int1
     bb7:	03 02                	add    (%edx),%eax
     bb9:	91                   	xchg   %eax,%ecx
     bba:	04 04                	add    $0x4,%al
     bbc:	f1                   	int1
     bbd:	03 f2                	add    %edx,%esi
     bbf:	03 02                	add    (%edx),%eax
     bc1:	74 08                	je     bcb <MBOOT_HEADER_FLAGS+0xbc8>
     bc3:	04 f2                	add    $0xf2,%al
     bc5:	03 9f 04 02 91 04    	add    0x4910204(%edi),%ebx
	...
     bd3:	00 00                	add    %al,(%eax)
     bd5:	00 04 c0             	add    %al,(%eax,%eax,8)
     bd8:	01 dc                	add    %ebx,%esp
     bda:	03 02                	add    (%edx),%eax
     bdc:	91                   	xchg   %eax,%ecx
     bdd:	08 04 dc             	or     %al,(%esp,%ebx,8)
     be0:	03 dd                	add    %ebp,%ebx
     be2:	03 02                	add    (%edx),%eax
     be4:	74 0c                	je     bf2 <MBOOT_HEADER_FLAGS+0xbef>
     be6:	04 dd                	add    $0xdd,%al
     be8:	03 f1                	add    %ecx,%esi
     bea:	03 02                	add    (%edx),%eax
     bec:	91                   	xchg   %eax,%ecx
     bed:	08 04 f1             	or     %al,(%ecx,%esi,8)
     bf0:	03 f2                	add    %edx,%esi
     bf2:	03 02                	add    (%edx),%eax
     bf4:	74 0c                	je     c02 <MBOOT_HEADER_FLAGS+0xbff>
     bf6:	04 f2                	add    $0xf2,%al
     bf8:	03 9f 04 02 91 08    	add    0x8910204(%edi),%ebx
     bfe:	00 02                	add    %al,(%edx)
     c00:	00 00                	add    %al,(%eax)
     c02:	00 00                	add    %al,(%eax)
     c04:	00 04 d0             	add    %al,(%eax,%edx,8)
     c07:	02 dc                	add    %ah,%bl
     c09:	03 02                	add    (%edx),%eax
     c0b:	91                   	xchg   %eax,%ecx
     c0c:	08 04 dc             	or     %al,(%esp,%ebx,8)
     c0f:	03 dd                	add    %ebp,%ebx
     c11:	03 02                	add    (%edx),%eax
     c13:	74 0c                	je     c21 <MBOOT_HEADER_FLAGS+0xc1e>
     c15:	04 dd                	add    $0xdd,%al
     c17:	03 ea                	add    %edx,%ebp
     c19:	03 02                	add    (%edx),%eax
     c1b:	91                   	xchg   %eax,%ecx
     c1c:	08 00                	or     %al,(%eax)
     c1e:	04 00                	add    $0x0,%al
     c20:	00 00                	add    %al,(%eax)
     c22:	00 00                	add    %al,(%eax)
     c24:	00 00                	add    %al,(%eax)
     c26:	04 d0                	add    $0xd0,%al
     c28:	02 f4                	add    %ah,%dh
     c2a:	02 02                	add    (%edx),%al
     c2c:	30 9f 04 f4 02 c2    	xor    %bl,-0x3dfd0bfc(%edi)
     c32:	03 02                	add    (%edx),%eax
     c34:	91                   	xchg   %eax,%ecx
     c35:	68 04 cb 03 d0       	push   $0xd003cb04
     c3a:	03 01                	add    (%ecx),%eax
     c3c:	50                   	push   %eax
     c3d:	04 dd                	add    $0xdd,%al
     c3f:	03 ea                	add    %edx,%ebp
     c41:	03 02                	add    (%edx),%eax
     c43:	91                   	xchg   %eax,%ecx
     c44:	68 00 02 01 04       	push   $0x4010200
     c49:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
     c4a:	03 b4 03 04 0a f0 01 	add    0x1f00a04(%ebx,%eax,1),%esi
     c51:	9f                   	lahf
     c52:	00 00                	add    %al,(%eax)
     c54:	01 04 b4             	add    %eax,(%esp,%esi,4)
     c57:	03 b4 03 01 50 00 00 	add    0x5001(%ebx,%eax,1),%esi
     c5e:	01 01                	add    %eax,(%ecx)
     c60:	00 04 f4             	add    %al,(%esp,%esi,8)
     c63:	02 f4                	add    %ah,%dh
     c65:	02 06                	add    (%esi),%al
     c67:	0c a0                	or     $0xa0,%al
     c69:	86 01                	xchg   %al,(%ecx)
     c6b:	00 9f 04 f4 02 87    	add    %bl,-0x78fd0bfc(%edi)
     c71:	03 06                	add    (%esi),%eax
     c73:	0c 9f                	or     $0x9f,%al
     c75:	86 01                	xchg   %al,(%ecx)
     c77:	00 9f 00 00 00 01    	add    %bl,0x1000000(%edi)
     c7d:	00 04 87             	add    %al,(%edi,%eax,4)
     c80:	03 91 03 01 50 04    	add    0x4500103(%ecx),%edx
     c86:	9c                   	pushf
     c87:	03 a6 03 01 50 00    	add    0x500103(%esi),%esp
     c8d:	01 01                	add    %eax,(%ecx)
     c8f:	04 99                	add    $0x99,%al
     c91:	03 9c 03 04 0a f7 01 	add    0x1f70a04(%ebx,%eax,1),%ebx
     c98:	9f                   	lahf
     c99:	00 00                	add    %al,(%eax)
     c9b:	01 04 9c             	add    %eax,(%esp,%ebx,4)
     c9e:	03 9c 03 01 50 00 03 	add    0x3005001(%ebx,%eax,1),%ebx
     ca5:	01 04 87             	add    %eax,(%edi,%eax,4)
     ca8:	03 91 03 04 0a f7    	add    -0x8f5fbfd(%ecx),%edx
     cae:	01 9f 00 03 01 04    	add    %ebx,0x4010300(%edi)
     cb4:	91                   	xchg   %eax,%ecx
     cb5:	03 92 03 04 0a f7    	add    -0x8f5fbfd(%edx),%edx
     cbb:	01 9f 00 03 01 04    	add    %ebx,0x4010300(%edi)
     cc1:	92                   	xchg   %eax,%edx
     cc2:	03 93 03 04 0a f7    	add    -0x8f5fbfd(%ebx),%edx
     cc8:	01 9f 00 03 01 04    	add    %ebx,0x4010300(%edi)
     cce:	93                   	xchg   %eax,%ebx
     ccf:	03 94 03 04 0a f7 01 	add    0x1f70a04(%ebx,%eax,1),%edx
     cd6:	9f                   	lahf
     cd7:	00 00                	add    %al,(%eax)
     cd9:	00 01                	add    %al,(%ecx)
     cdb:	00 04 f1             	add    %al,(%ecx,%esi,8)
     cde:	01 f9                	add    %edi,%ecx
     ce0:	01 01                	add    %eax,(%ecx)
     ce2:	50                   	push   %eax
     ce3:	04 88                	add    $0x88,%al
     ce5:	02 8f 02 01 50 00    	add    0x500102(%edi),%cl
     ceb:	01 01                	add    %eax,(%ecx)
     ced:	04 85                	add    $0x85,%al
     cef:	02 88 02 04 0a f7    	add    -0x8f5fbfe(%eax),%cl
     cf5:	01 9f 00 00 01 04    	add    %ebx,0x4010000(%edi)
     cfb:	88 02                	mov    %al,(%edx)
     cfd:	88 02                	mov    %al,(%edx)
     cff:	01 50 00             	add    %edx,0x0(%eax)
     d02:	03 01                	add    (%ecx),%eax
     d04:	04 f1                	add    $0xf1,%al
     d06:	01 f9                	add    %edi,%ecx
     d08:	01 04 0a             	add    %eax,(%edx,%ecx,1)
     d0b:	f7 01 9f 00 03 01    	testl  $0x103009f,(%ecx)
     d11:	04 f9                	add    $0xf9,%al
     d13:	01 fa                	add    %edi,%edx
     d15:	01 04 0a             	add    %eax,(%edx,%ecx,1)
     d18:	f7 01 9f 00 03 01    	testl  $0x103009f,(%ecx)
     d1e:	04 fa                	add    $0xfa,%al
     d20:	01 fb                	add    %edi,%ebx
     d22:	01 04 0a             	add    %eax,(%edx,%ecx,1)
     d25:	f7 01 9f 00 03 01    	testl  $0x103009f,(%ecx)
     d2b:	04 fb                	add    $0xfb,%al
     d2d:	01 fc                	add    %edi,%esp
     d2f:	01 04 0a             	add    %eax,(%edx,%ecx,1)
     d32:	f7 01 9f 00 01 00    	testl  $0x1009f,(%ecx)
     d38:	04 8c                	add    $0x8c,%al
     d3a:	02 9e 02 04 0a f6    	add    -0x9f5fbfe(%esi),%bl
     d40:	01 9f 00 01 00 04    	add    %ebx,0x4000100(%edi)
     d46:	8c 02                	mov    %es,(%edx)
     d48:	9e                   	sahf
     d49:	02 0a                	add    (%edx),%cl
     d4b:	91                   	xchg   %eax,%ecx
     d4c:	03 94 01 3f 1a 09 e0 	add    -0x1ff6e5c1(%ecx,%eax,1),%edx
     d53:	21 9f 00 02 00 04    	and    %ebx,0x4000200(%edi)
     d59:	9e                   	sahf
     d5a:	02 a6 02 04 0a f2    	add    -0xdf5fbfe(%esi),%ah
     d60:	01 9f 00 02 00 04    	add    %ebx,0x4000200(%edi)
     d66:	9e                   	sahf
     d67:	02 a6 02 01 51 00    	add    0x510102(%esi),%ah
     d6d:	02 00                	add    (%eax),%al
     d6f:	04 a6                	add    $0xa6,%al
     d71:	02 b0 02 04 0a f3    	add    -0xcf5fbfe(%eax),%dh
     d77:	01 9f 00 02 00 04    	add    %ebx,0x4000200(%edi)
     d7d:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
     d7e:	02 b0 02 02 91 00    	add    0x910202(%eax),%dh
     d84:	00 02                	add    %al,(%edx)
     d86:	00 04 b0             	add    %al,(%eax,%esi,4)
     d89:	02 bc 02 04 0a f4 01 	add    0x1f40a04(%edx,%eax,1),%bh
     d90:	9f                   	lahf
     d91:	00 02                	add    %al,(%edx)
     d93:	00 04 b0             	add    %al,(%eax,%esi,4)
     d96:	02 bc 02 02 91 01 00 	add    0x19102(%edx,%eax,1),%bh
     d9d:	02 00                	add    (%eax),%al
     d9f:	04 bc                	add    $0xbc,%al
     da1:	02 c8                	add    %al,%cl
     da3:	02 04 0a             	add    (%edx,%ecx,1),%al
     da6:	f5                   	cmc
     da7:	01 9f 00 02 00 04    	add    %ebx,0x4000200(%edi)
     dad:	bc 02 c8 02 02       	mov    $0x202c802,%esp
     db2:	91                   	xchg   %eax,%ecx
     db3:	02 00                	add    (%eax),%al
     db5:	02 00                	add    (%eax),%al
     db7:	04 c8                	add    $0xc8,%al
     db9:	02 d0                	add    %al,%dl
     dbb:	02 04 0a             	add    (%edx,%ecx,1),%al
     dbe:	f7 01 9f 00 02 00    	testl  $0x2009f,(%ecx)
     dc4:	04 c8                	add    $0xc8,%al
     dc6:	02 d0                	add    %al,%dl
     dc8:	02 03                	add    (%ebx),%al
     dca:	08 20                	or     %ah,(%eax)
     dcc:	9f                   	lahf
     dcd:	00 02                	add    %al,(%edx)
     dcf:	01 05 01 04 80 01    	add    %eax,0x1800401
     dd5:	82 01 04             	addb   $0x4,(%ecx)
     dd8:	0a f0                	or     %al,%dh
     dda:	01 9f 04 82 01 84    	add    %ebx,-0x7bfe7dfc(%edi)
     de0:	01 04 0a             	add    %eax,(%edx,%ecx,1)
     de3:	f0 01 9f 00 01 00 04 	lock add %ebx,0x4000100(%edi)
     dea:	20 2b                	and    %ch,(%ebx)
     dec:	04 0a                	add    $0xa,%al
     dee:	f6 01 9f             	testb  $0x9f,(%ecx)
     df1:	00 01                	add    %al,(%ecx)
     df3:	00 04 20             	add    %al,(%eax,%eiz,1)
     df6:	2b 03                	sub    (%ebx),%eax
     df8:	09 a0 9f 00 04 01    	or     %esp,0x104009f(%eax)
     dfe:	04 2b                	add    $0x2b,%al
     e00:	31 04 0a             	xor    %eax,(%edx,%ecx,1)
     e03:	f7 01 9f 00 03 01    	testl  $0x103009f,(%ecx)
     e09:	04 31                	add    $0x31,%al
     e0b:	32 04 0a             	xor    (%edx,%ecx,1),%al
     e0e:	f7 01 9f 00 03 01    	testl  $0x103009f,(%ecx)
     e14:	04 32                	add    $0x32,%al
     e16:	33 04 0a             	xor    (%edx,%ecx,1),%eax
     e19:	f7 01 9f 00 03 01    	testl  $0x103009f,(%ecx)
     e1f:	04 33                	add    $0x33,%al
     e21:	34 04                	xor    $0x4,%al
     e23:	0a f7                	or     %bh,%dh
     e25:	01 9f 00 05 07 07    	add    %ebx,0x7070500(%edi)
     e2b:	00 04 34             	add    %al,(%esp,%esi,1)
     e2e:	34 06                	xor    $0x6,%al
     e30:	0c a0                	or     $0xa0,%al
     e32:	86 01                	xchg   %al,(%ecx)
     e34:	00 9f 04 34 3b 06    	add    %bl,0x63b3404(%edi)
     e3a:	0c 9f                	or     $0x9f,%al
     e3c:	86 01                	xchg   %al,(%ecx)
     e3e:	00 9f 00 00 00 01    	add    %bl,0x1000000(%edi)
     e44:	00 04 3b             	add    %al,(%ebx,%edi,1)
     e47:	41                   	inc    %ecx
     e48:	01 50 04             	add    %edx,0x4(%eax)
     e4b:	4a                   	dec    %edx
     e4c:	53                   	push   %ebx
     e4d:	01 50 00             	add    %edx,0x0(%eax)
     e50:	04 01                	add    $0x1,%al
     e52:	04 3b                	add    $0x3b,%al
     e54:	41                   	inc    %ecx
     e55:	04 0a                	add    $0xa,%al
     e57:	f7 01 9f 00 03 01    	testl  $0x103009f,(%ecx)
     e5d:	04 41                	add    $0x41,%al
     e5f:	42                   	inc    %edx
     e60:	04 0a                	add    $0xa,%al
     e62:	f7 01 9f 00 03 01    	testl  $0x103009f,(%ecx)
     e68:	04 42                	add    $0x42,%al
     e6a:	43                   	inc    %ebx
     e6b:	04 0a                	add    $0xa,%al
     e6d:	f7 01 9f 00 03 01    	testl  $0x103009f,(%ecx)
     e73:	04 43                	add    $0x43,%al
     e75:	44                   	inc    %esp
     e76:	04 0a                	add    $0xa,%al
     e78:	f7 01 9f 00 01 01    	testl  $0x101009f,(%ecx)
     e7e:	04 49                	add    $0x49,%al
     e80:	4a                   	dec    %edx
     e81:	04 0a                	add    $0xa,%al
     e83:	f7 01 9f 00 00 01    	testl  $0x100009f,(%ecx)
     e89:	04 4a                	add    $0x4a,%al
     e8b:	4a                   	dec    %edx
     e8c:	01 50 00             	add    %edx,0x0(%eax)
     e8f:	01 00                	add    %eax,(%eax)
     e91:	04 4e                	add    $0x4e,%al
     e93:	54                   	push   %esp
     e94:	04 0a                	add    $0xa,%al
     e96:	f7 01 9f 00 01 00    	testl  $0x1009f,(%ecx)
     e9c:	04 4e                	add    $0x4e,%al
     e9e:	54                   	push   %esp
     e9f:	03 09                	add    (%ecx),%ecx
     ea1:	ec                   	in     (%dx),%al
     ea2:	9f                   	lahf
     ea3:	00 04 01             	add    %al,(%ecx,%eax,1)
     ea6:	04 54                	add    $0x54,%al
     ea8:	55                   	push   %ebp
     ea9:	04 0a                	add    $0xa,%al
     eab:	f7 01 9f 00 03 01    	testl  $0x103009f,(%ecx)
     eb1:	04 55                	add    $0x55,%al
     eb3:	56                   	push   %esi
     eb4:	04 0a                	add    $0xa,%al
     eb6:	f7 01 9f 00 03 01    	testl  $0x103009f,(%ecx)
     ebc:	04 56                	add    $0x56,%al
     ebe:	57                   	push   %edi
     ebf:	04 0a                	add    $0xa,%al
     ec1:	f7 01 9f 00 03 01    	testl  $0x103009f,(%ecx)
     ec7:	04 57                	add    $0x57,%al
     ec9:	58                   	pop    %eax
     eca:	04 0a                	add    $0xa,%al
     ecc:	f7 01 9f 00 05 07    	testl  $0x705009f,(%ecx)
     ed2:	07                   	pop    %es
     ed3:	00 04 58             	add    %al,(%eax,%ebx,2)
     ed6:	58                   	pop    %eax
     ed7:	06                   	push   %es
     ed8:	0c a0                	or     $0xa0,%al
     eda:	86 01                	xchg   %al,(%ecx)
     edc:	00 9f 04 58 64 06    	add    %bl,0x6645804(%edi)
     ee2:	0c 9f                	or     $0x9f,%al
     ee4:	86 01                	xchg   %al,(%ecx)
     ee6:	00 9f 00 00 00 01    	add    %bl,0x1000000(%edi)
     eec:	00 04 64             	add    %al,(%esp,%eiz,2)
     eef:	69 01 50 04 72 80    	imul   $0x80720450,(%ecx),%eax
     ef5:	01 01                	add    %eax,(%ecx)
     ef7:	50                   	push   %eax
     ef8:	00 01                	add    %al,(%ecx)
     efa:	01 04 71             	add    %eax,(%ecx,%esi,2)
     efd:	72 04                	jb     f03 <MBOOT_HEADER_FLAGS+0xf00>
     eff:	0a f7                	or     %bh,%dh
     f01:	01 9f 00 00 01 04    	add    %ebx,0x4010000(%edi)
     f07:	72 72                	jb     f7b <MBOOT_HEADER_FLAGS+0xf78>
     f09:	01 50 00             	add    %edx,0x0(%eax)
     f0c:	04 01                	add    $0x1,%al
     f0e:	04 64                	add    $0x64,%al
     f10:	69 04 0a f7 01 9f 00 	imul   $0x9f01f7,(%edx,%ecx,1),%eax
     f17:	03 01                	add    (%ecx),%eax
     f19:	04 69                	add    $0x69,%al
     f1b:	6a 04                	push   $0x4
     f1d:	0a f7                	or     %bh,%dh
     f1f:	01 9f 00 03 01 04    	add    %ebx,0x4010300(%edi)
     f25:	6a 6b                	push   $0x6b
     f27:	04 0a                	add    $0xa,%al
     f29:	f7 01 9f 00 03 01    	testl  $0x103009f,(%ecx)
     f2f:	04 6b                	add    $0x6b,%al
     f31:	6c                   	insb   (%dx),%es:(%edi)
     f32:	04 0a                	add    $0xa,%al
     f34:	f7 01 9f 00 11 0d    	testl  $0xd11009f,(%ecx)
     f3a:	00 00                	add    %al,(%eax)
     f3c:	05 00 04 00 00       	add    $0x400,%eax
	...
     f49:	00 04 f0             	add    %al,(%eax,%esi,8)
     f4c:	1d cd 25 02 91       	sbb    $0x910225cd,%eax
     f51:	04 04                	add    $0x4,%al
     f53:	cd 25                	int    $0x25
     f55:	ce                   	into
     f56:	25 02 74 08 04       	and    $0x4087402,%eax
     f5b:	ce                   	into
     f5c:	25 e5 27 02 91       	and    $0x910227e5,%eax
     f61:	04 00                	add    $0x0,%al
     f63:	00 00                	add    %al,(%eax)
     f65:	00 00                	add    %al,(%eax)
     f67:	00 00                	add    %al,(%eax)
     f69:	04 f0                	add    $0xf0,%al
     f6b:	1d cd 25 02 91       	sbb    $0x910225cd,%eax
     f70:	08 04 cd 25 ce 25 02 	or     %al,0x225ce25(,%ecx,8)
     f77:	74 0c                	je     f85 <MBOOT_HEADER_FLAGS+0xf82>
     f79:	04 ce                	add    $0xce,%al
     f7b:	25 e5 27 02 91       	and    $0x910227e5,%eax
     f80:	08 00                	or     %al,(%eax)
     f82:	00 00                	add    %al,(%eax)
     f84:	00 00                	add    %al,(%eax)
     f86:	00 00                	add    %al,(%eax)
     f88:	04 a5                	add    $0xa5,%al
     f8a:	1e                   	push   %ds
     f8b:	b1 1e                	mov    $0x1e,%cl
     f8d:	01 52 04             	add    %edx,0x4(%edx)
     f90:	b7 26                	mov    $0x26,%bh
     f92:	bc 26 09 70 00       	mov    $0x700926,%esp
     f97:	0c ff                	or     $0xff,%al
     f99:	ff                   	(bad)
     f9a:	ff 0f                	decl   (%edi)
     f9c:	1a 9f 04 bc 26 ce    	sbb    -0x31d943fc(%edi),%bl
     fa2:	26 01 50 00          	add    %edx,%es:0x0(%eax)
     fa6:	02 00                	add    (%eax),%al
	...
     fb4:	04 a5                	add    $0xa5,%al
     fb6:	1e                   	push   %ds
     fb7:	b1 1e                	mov    $0x1e,%cl
     fb9:	02 30                	add    (%eax),%dh
     fbb:	9f                   	lahf
     fbc:	04 db                	add    $0xdb,%al
     fbe:	20 bd 22 01 57 04    	and    %bh,0x4570122(%ebp)
     fc4:	bd 22 89 25 03       	mov    $0x3258922,%ebp
     fc9:	91                   	xchg   %eax,%ecx
     fca:	c0 77 04 b9          	shlb   $0xb9,0x4(%edi)
     fce:	25 c4 25 03 91       	and    $0x910325c4,%eax
     fd3:	c0 77 04 e4          	shlb   $0xe4,0x4(%edi)
     fd7:	25 f9 25 04 91       	and    $0x910425f9,%eax
     fdc:	ec                   	in     (%dx),%al
     fdd:	7b 9f                	jnp    f7e <MBOOT_HEADER_FLAGS+0xf7b>
     fdf:	04 bf                	add    $0xbf,%al
     fe1:	27                   	daa
     fe2:	d0 27                	shlb   $1,(%edi)
     fe4:	03 91 c0 77 04 d0    	add    -0x2ffb8840(%ecx),%edx
     fea:	27                   	daa
     feb:	e5 27                	in     $0x27,%eax
     fed:	01 57 00             	add    %edx,0x0(%edi)
     ff0:	03 00                	add    (%eax),%eax
     ff2:	00 00                	add    %al,(%eax)
     ff4:	00 00                	add    %al,(%eax)
     ff6:	00 00                	add    %al,(%eax)
     ff8:	04 a5                	add    $0xa5,%al
     ffa:	1e                   	push   %ds
     ffb:	db 20                	(bad) (%eax)
     ffd:	02 30                	add    (%eax),%dh
     fff:	9f                   	lahf
    1000:	04 db                	add    $0xdb,%al
    1002:	20 c4                	and    %al,%ah
    1004:	25 02 31 9f 04       	and    $0x49f3102,%eax
    1009:	ce                   	into
    100a:	25 bf 27 02 30       	and    $0x300227bf,%eax
    100f:	9f                   	lahf
    1010:	04 bf                	add    $0xbf,%al
    1012:	27                   	daa
    1013:	e5 27                	in     $0x27,%eax
    1015:	02 31                	add    (%ecx),%dh
    1017:	9f                   	lahf
    1018:	00 00                	add    %al,(%eax)
    101a:	03 04 a6             	add    (%esi,%eiz,4),%eax
    101d:	21 a6 21 01 52 00    	and    %esp,0x520121(%esi)
    1023:	01 00                	add    %eax,(%eax)
    1025:	00 00                	add    %al,(%eax)
    1027:	00 00                	add    %al,(%eax)
    1029:	00 00                	add    %al,(%eax)
    102b:	04 93                	add    $0x93,%al
    102d:	22 bd 22 02 30 9f    	and    -0x60cffdde(%ebp),%bh
    1033:	04 bd                	add    $0xbd,%al
    1035:	22 b0 24 03 91 c4    	and    -0x3b6efcdc(%eax),%dh
    103b:	77 04                	ja     1041 <MBOOT_HEADER_FLAGS+0x103e>
    103d:	f0 24 89             	lock and $0x89,%al
    1040:	25 03 91 c4 77       	and    $0x77c49103,%eax
    1045:	04 b9                	add    $0xb9,%al
    1047:	25 c4 25 03 91       	and    $0x910325c4,%eax
    104c:	c4 77 00             	les    0x0(%edi),%esi
    104f:	02 00                	add    (%eax),%al
    1051:	00 00                	add    %al,(%eax)
    1053:	00 00                	add    %al,(%eax)
    1055:	04 93                	add    $0x93,%al
    1057:	22 e1                	and    %cl,%ah
    1059:	22 01                	and    (%ecx),%al
    105b:	52                   	push   %edx
    105c:	04 e1                	add    $0xe1,%al
    105e:	22 c5                	and    %ch,%al
    1060:	23 03                	and    (%ebx),%eax
    1062:	91                   	xchg   %eax,%ecx
    1063:	b8 77 04 f0 24       	mov    $0x24f00477,%eax
    1068:	92                   	xchg   %eax,%edx
    1069:	25 01 52 00 00       	and    $0x5201,%eax
    106e:	00 00                	add    %al,(%eax)
    1070:	03 00                	add    (%eax),%eax
    1072:	00 04 ca             	add    %al,(%edx,%ecx,8)
    1075:	1e                   	push   %ds
    1076:	d8 1e                	fcomps (%esi)
    1078:	01 51 04             	add    %edx,0x4(%ecx)
    107b:	d8 1e                	fcomps (%esi)
    107d:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
    107e:	21 03                	and    %eax,(%ebx)
    1080:	91                   	xchg   %eax,%ecx
    1081:	c0 77 04 ce          	shlb   $0xce,0x4(%edi)
    1085:	25 bf 27 03 91       	and    $0x910327bf,%eax
    108a:	c0 77 00 03          	shlb   $0x3,0x0(%edi)
    108e:	00 01                	add    %al,(%ecx)
    1090:	00 00                	add    %al,(%eax)
    1092:	00 04 ca             	add    %al,(%edx,%ecx,8)
    1095:	1e                   	push   %ds
    1096:	d8 1e                	fcomps (%esi)
    1098:	02 30                	add    (%eax),%dh
    109a:	9f                   	lahf
    109b:	04 e4                	add    $0xe4,%al
    109d:	25 e7 25 03 76       	and    $0x760325e7,%eax
    10a2:	01 9f 04 e7 25 f9    	add    %ebx,-0x6da18fc(%edi)
    10a8:	25 01 56 00 01       	and    $0x1005601,%eax
    10ad:	00 00                	add    %al,(%eax)
    10af:	00 04 c4             	add    %al,(%esp,%eax,8)
    10b2:	1f                   	pop    %ds
    10b3:	ca 1f 03             	lret   $0x31f
    10b6:	72 01                	jb     10b9 <MBOOT_HEADER_FLAGS+0x10b6>
    10b8:	9f                   	lahf
    10b9:	04 ca                	add    $0xca,%al
    10bb:	1f                   	pop    %ds
    10bc:	e9 1f 01 52 00       	jmp    5211e0 <stack_top+0x315570>
    10c1:	01 00                	add    %eax,(%eax)
	...
    10cb:	00 01                	add    %al,(%ecx)
    10cd:	01 00                	add    %eax,(%eax)
    10cf:	00 00                	add    %al,(%eax)
    10d1:	00 01                	add    %al,(%ecx)
    10d3:	01 02                	add    %eax,(%edx)
    10d5:	02 00                	add    (%eax),%al
    10d7:	00 00                	add    %al,(%eax)
    10d9:	00 00                	add    %al,(%eax)
    10db:	00 01                	add    %al,(%ecx)
    10dd:	01 00                	add    %eax,(%eax)
    10df:	00 00                	add    %al,(%eax)
    10e1:	04 c4                	add    $0xc4,%al
    10e3:	1f                   	pop    %ds
    10e4:	ca 1f 03             	lret   $0x31f
    10e7:	72 01                	jb     10ea <MBOOT_HEADER_FLAGS+0x10e7>
    10e9:	9f                   	lahf
    10ea:	04 ca                	add    $0xca,%al
    10ec:	1f                   	pop    %ds
    10ed:	e3 1f                	jecxz  110e <MBOOT_HEADER_FLAGS+0x110b>
    10ef:	01 52 04             	add    %edx,0x4(%edx)
    10f2:	e3 1f                	jecxz  1113 <MBOOT_HEADER_FLAGS+0x1110>
    10f4:	e9 1f 02 38 9f       	jmp    9f381318 <MBOOT_HEADER_MAGIC+0x838a6316>
    10f9:	04 f9                	add    $0xf9,%al
    10fb:	1f                   	pop    %ds
    10fc:	83 20 02             	andl   $0x2,(%eax)
    10ff:	38 9f 04 83 20 b3    	cmp    %bl,-0x4cdf7cfc(%edi)
    1105:	20 01                	and    %al,(%ecx)
    1107:	50                   	push   %eax
    1108:	04 e4                	add    $0xe4,%al
    110a:	26 e4 26             	es in  $0x26,%al
    110d:	09 73 00             	or     %esi,0x0(%ebx)
    1110:	91                   	xchg   %eax,%ecx
    1111:	00 1c 23             	add    %bl,(%ebx,%eiz,1)
    1114:	94                   	xchg   %eax,%esp
    1115:	08 9f 04 e4 26 ea    	or     %bl,-0x15d91bfc(%edi)
    111b:	26 09 73 00          	or     %esi,%es:0x0(%ebx)
    111f:	91                   	xchg   %eax,%ecx
    1120:	00 1c 23             	add    %bl,(%ebx,%eiz,1)
    1123:	95                   	xchg   %eax,%ebp
    1124:	08 9f 04 ea 26 f2    	or     %bl,-0xdd915fc(%edi)
    112a:	26 09 73 00          	or     %esi,%es:0x0(%ebx)
    112e:	91                   	xchg   %eax,%ecx
    112f:	00 1c 23             	add    %bl,(%ebx,%eiz,1)
    1132:	94                   	xchg   %eax,%esp
    1133:	08 9f 04 80 27 80    	or     %bl,-0x7fd87ffc(%edi)
    1139:	27                   	daa
    113a:	09 73 00             	or     %esi,0x0(%ebx)
    113d:	91                   	xchg   %eax,%ecx
    113e:	00 1c 23             	add    %bl,(%ebx,%eiz,1)
    1141:	94                   	xchg   %eax,%esp
    1142:	08 9f 04 80 27 83    	or     %bl,-0x7cd87ffc(%edi)
    1148:	27                   	daa
    1149:	09 73 00             	or     %esi,0x0(%ebx)
    114c:	91                   	xchg   %eax,%ecx
    114d:	00 1c 23             	add    %bl,(%ebx,%eiz,1)
    1150:	95                   	xchg   %eax,%ebp
    1151:	08 9f 04 83 27 86    	or     %bl,-0x79d87cfc(%edi)
    1157:	27                   	daa
    1158:	09 73 00             	or     %esi,0x0(%ebx)
    115b:	91                   	xchg   %eax,%ecx
    115c:	00 1c 23             	add    %bl,(%ebx,%eiz,1)
    115f:	96                   	xchg   %eax,%esi
    1160:	08 9f 04 86 27 93    	or     %bl,-0x6cd879fc(%edi)
    1166:	27                   	daa
    1167:	09 73 00             	or     %esi,0x0(%ebx)
    116a:	91                   	xchg   %eax,%ecx
    116b:	00 1c 23             	add    %bl,(%ebx,%eiz,1)
    116e:	94                   	xchg   %eax,%esp
    116f:	08 9f 04 93 27 a8    	or     %bl,-0x57d86cfc(%edi)
    1175:	27                   	daa
    1176:	01 50 04             	add    %edx,0x4(%eax)
    1179:	b0 27                	mov    $0x27,%al
    117b:	b0 27                	mov    $0x27,%al
    117d:	09 70 00             	or     %esi,0x0(%eax)
    1180:	91                   	xchg   %eax,%ecx
    1181:	00 1c 23             	add    %bl,(%ebx,%eiz,1)
    1184:	94                   	xchg   %eax,%esp
    1185:	08 9f 04 b0 27 b6    	or     %bl,-0x49d84ffc(%edi)
    118b:	27                   	daa
    118c:	09 70 00             	or     %esi,0x0(%eax)
    118f:	91                   	xchg   %eax,%ecx
    1190:	00 1c 23             	add    %bl,(%ebx,%eiz,1)
    1193:	95                   	xchg   %eax,%ebp
    1194:	08 9f 04 b6 27 bf    	or     %bl,-0x40d849fc(%edi)
    119a:	27                   	daa
    119b:	09 70 00             	or     %esi,0x0(%eax)
    119e:	91                   	xchg   %eax,%ecx
    119f:	00 1c 23             	add    %bl,(%ebx,%eiz,1)
    11a2:	94                   	xchg   %eax,%esp
    11a3:	08 9f 00 00 00 00    	or     %bl,0x0(%edi)
    11a9:	00 04 ca             	add    %al,(%edx,%ecx,8)
    11ac:	1f                   	pop    %ds
    11ad:	e3 1f                	jecxz  11ce <MBOOT_HEADER_FLAGS+0x11cb>
    11af:	01 50 04             	add    %edx,0x4(%eax)
    11b2:	e3 1f                	jecxz  11d3 <MBOOT_HEADER_FLAGS+0x11d0>
    11b4:	e9 1f 09 91 00       	jmp    911ad8 <stack_top+0x705e68>
    11b9:	72 00                	jb     11bb <MBOOT_HEADER_FLAGS+0x11b8>
    11bb:	22 0a                	and    (%edx),%cl
    11bd:	15 04 1c 00 01       	adc    $0x1001c04,%eax
    11c2:	00 04 90             	add    %al,(%eax,%edx,4)
    11c5:	20 b3 20 01 52 00    	and    %dh,0x520120(%ebx)
    11cb:	00 00                	add    %al,(%eax)
    11cd:	00 00                	add    %al,(%eax)
    11cf:	04 b3                	add    $0xb3,%al
    11d1:	20 b8 20 02 30 9f    	and    %bh,-0x60cffde0(%eax)
    11d7:	04 c0                	add    $0xc0,%al
    11d9:	20 db                	and    %bl,%bl
    11db:	20 01                	and    %al,(%ecx)
    11dd:	50                   	push   %eax
    11de:	00 00                	add    %al,(%eax)
    11e0:	00 00                	add    %al,(%eax)
    11e2:	00 04 b7             	add    %al,(%edi,%esi,4)
    11e5:	26 bc 26 09 70 00    	es mov $0x700926,%esp
    11eb:	0c ff                	or     $0xff,%al
    11ed:	ff                   	(bad)
    11ee:	ff 0f                	decl   (%edi)
    11f0:	1a 9f 04 bc 26 be    	sbb    -0x41d943fc(%edi),%bl
    11f6:	26 01 50 00          	add    %edx,%es:0x0(%eax)
    11fa:	00 00                	add    %al,(%eax)
    11fc:	04 80                	add    $0x80,%al
    11fe:	26 99                	es cltd
    1200:	26 0c 76             	es or  $0x76,%al
    1203:	00 39                	add    %bh,(%ecx)
    1205:	25 03 b8 7b 10       	and    $0x107bb803,%eax
    120a:	00 06                	add    %al,(%esi)
    120c:	22 9f 00 01 00 00    	and    0x100(%edi),%bl
    1212:	00 04 80             	add    %al,(%eax,%eax,4)
    1215:	26 b0 26             	es mov $0x26,%al
    1218:	07                   	pop    %es
    1219:	76 00                	jbe    121b <MBOOT_HEADER_FLAGS+0x1218>
    121b:	0a fc                	or     %ah,%bh
    121d:	01 1a                	add    %ebx,(%edx)
    121f:	9f                   	lahf
    1220:	04 b0                	add    $0xb0,%al
    1222:	26 ce                	es into
    1224:	26 01 56 00          	add    %edx,%es:0x0(%esi)
    1228:	02 03                	add    (%ebx),%al
    122a:	04 a6                	add    $0xa6,%al
    122c:	21 a6 21 02 37 9f    	and    %esp,-0x60c8fddf(%esi)
    1232:	00 04 00             	add    %al,(%eax,%eax,1)
    1235:	04 a6                	add    $0xa6,%al
    1237:	21 d7                	and    %edx,%edi
    1239:	21 0d 72 00 71 00    	and    %ecx,0x710072
    123f:	25 3f 1a 03 43       	and    $0x43031a3f,%eax
    1244:	41                   	inc    %ecx
    1245:	10 00                	adc    %al,(%eax)
    1247:	22 00                	and    (%eax),%al
    1249:	00 00                	add    %al,(%eax)
    124b:	00 00                	add    %al,(%eax)
    124d:	00 00                	add    %al,(%eax)
    124f:	04 d8                	add    $0xd8,%al
    1251:	22 89 25 01 53 04    	and    0x4530125(%ecx),%cl
    1257:	b9 25 c4 25 01       	mov    $0x125c425,%ecx
    125c:	53                   	push   %ebx
    125d:	04 bf                	add    $0xbf,%al
    125f:	27                   	daa
    1260:	d0 27                	shlb   $1,(%edi)
    1262:	01 53 00             	add    %edx,0x0(%ebx)
    1265:	01 00                	add    %eax,(%eax)
    1267:	00 00                	add    %al,(%eax)
    1269:	00 00                	add    %al,(%eax)
    126b:	04 aa                	add    $0xaa,%al
    126d:	23 df                	and    %edi,%ebx
    126f:	23 0d 91 c0 77 06    	and    0x677c091,%ecx
    1275:	23 1c 06             	and    (%esi,%eax,1),%ebx
    1278:	91                   	xchg   %eax,%ecx
    1279:	c4 77 06             	les    0x6(%edi),%esi
    127c:	1c 9f                	sbb    $0x9f,%al
    127e:	04 df                	add    $0xdf,%al
    1280:	23 b0 24 0a 91 b8    	and    -0x476ef5dc(%eax),%esi
    1286:	77 06                	ja     128e <MBOOT_HEADER_FLAGS+0x128b>
    1288:	91                   	xchg   %eax,%ecx
    1289:	c4 77 06             	les    0x6(%edi),%esi
    128c:	1c 9f                	sbb    $0x9f,%al
    128e:	04 b9                	add    $0xb9,%al
    1290:	25 c4 25 0a 91       	and    $0x910a25c4,%eax
    1295:	b8 77 06 91 c4       	mov    $0xc4910677,%eax
    129a:	77 06                	ja     12a2 <MBOOT_HEADER_FLAGS+0x129f>
    129c:	1c 9f                	sbb    $0x9f,%al
    129e:	00 02                	add    %al,(%edx)
    12a0:	00 00                	add    %al,(%eax)
    12a2:	00 00                	add    %al,(%eax)
    12a4:	00 00                	add    %al,(%eax)
    12a6:	00 04 aa             	add    %al,(%edx,%ebp,4)
    12a9:	23 db                	and    %ebx,%ebx
    12ab:	23 12                	and    (%edx),%edx
    12ad:	91                   	xchg   %eax,%ecx
    12ae:	c0 77 06 23          	shlb   $0x23,0x6(%edi)
    12b2:	1c 06                	sbb    $0x6,%al
    12b4:	91                   	xchg   %eax,%ecx
    12b5:	c4 77 06             	les    0x6(%edi),%esi
    12b8:	1c 23                	sbb    $0x23,%al
    12ba:	ff 03                	incl   (%ebx)
    12bc:	39 25 9f 04 db 23    	cmp    %esp,0x23db049f
    12c2:	a7                   	cmpsl  %es:(%edi),%ds:(%esi)
    12c3:	24 01                	and    $0x1,%al
    12c5:	57                   	push   %edi
    12c6:	04 a7                	add    $0xa7,%al
    12c8:	24 aa                	and    $0xaa,%al
    12ca:	24 01                	and    $0x1,%al
    12cc:	50                   	push   %eax
    12cd:	04 b9                	add    $0xb9,%al
    12cf:	25 c4 25 01 57       	and    $0x570125c4,%eax
    12d4:	00 02                	add    %al,(%edx)
    12d6:	00 04 e2             	add    %al,(%edx,%eiz,8)
    12d9:	22 e3                	and    %bl,%ah
    12db:	22 02                	and    (%edx),%al
    12dd:	37                   	aaa
    12de:	9f                   	lahf
    12df:	00 01                	add    %al,(%ecx)
    12e1:	00 00                	add    %al,(%eax)
    12e3:	00 04 e3             	add    %al,(%ebx,%eiz,8)
    12e6:	22 f1                	and    %cl,%dh
    12e8:	22 0d 73 00 77 00    	and    0x770073,%cl
    12ee:	25 3f 1a 03 43       	and    $0x43031a3f,%eax
    12f3:	41                   	inc    %ecx
    12f4:	10 00                	adc    %al,(%eax)
    12f6:	22 04 f1             	and    (%ecx,%esi,8),%al
    12f9:	22 8d 23 0d 73 00    	and    0x730d23(%ebp),%cl
    12ff:	77 04                	ja     1305 <MBOOT_HEADER_FLAGS+0x1302>
    1301:	25 3f 1a 03 43       	and    $0x43031a3f,%eax
    1306:	41                   	inc    %ecx
    1307:	10 00                	adc    %al,(%eax)
    1309:	22 00                	and    (%eax),%al
    130b:	01 00                	add    %eax,(%eax)
    130d:	04 bd                	add    $0xbd,%al
    130f:	22 d8                	and    %al,%bl
    1311:	22 01                	and    (%ecx),%al
    1313:	52                   	push   %edx
    1314:	00 02                	add    %al,(%edx)
    1316:	00 00                	add    %al,(%eax)
    1318:	00 00                	add    %al,(%eax)
    131a:	00 04 9e             	add    %al,(%esi,%ebx,4)
    131d:	24 c8                	and    $0xc8,%al
    131f:	24 01                	and    $0x1,%al
    1321:	52                   	push   %edx
    1322:	04 c8                	add    $0xc8,%al
    1324:	24 f0                	and    $0xf0,%al
    1326:	24 03                	and    $0x3,%al
    1328:	91                   	xchg   %eax,%ecx
    1329:	b4 77                	mov    $0x77,%ah
    132b:	04 bf                	add    $0xbf,%al
    132d:	27                   	daa
    132e:	d0 27                	shlb   $1,(%edi)
    1330:	03 91 b4 77 00 00    	add    0x77b4(%ecx),%edx
    1336:	00 04 a7             	add    %al,(%edi,%eiz,4)
    1339:	24 c8                	and    $0xc8,%al
    133b:	24 0c                	and    $0xc,%al
    133d:	77 00                	ja     133f <MBOOT_HEADER_FLAGS+0x133c>
    133f:	39 25 03 b8 7b 10    	cmp    %esp,0x107bb803
    1345:	00 06                	add    %al,(%esi)
    1347:	22 9f 00 01 00 00    	and    0x100(%edi),%bl
    134d:	00 00                	add    %al,(%eax)
    134f:	00 00                	add    %al,(%eax)
    1351:	00 04 a7             	add    %al,(%edi,%eiz,4)
    1354:	24 da                	and    $0xda,%al
    1356:	24 07                	and    $0x7,%al
    1358:	77 00                	ja     135a <MBOOT_HEADER_FLAGS+0x1357>
    135a:	0a fc                	or     %ah,%bh
    135c:	01 1a                	add    %ebx,(%edx)
    135e:	9f                   	lahf
    135f:	04 da                	add    $0xda,%al
    1361:	24 f0                	and    $0xf0,%al
    1363:	24 01                	and    $0x1,%al
    1365:	57                   	push   %edi
    1366:	04 f0                	add    $0xf0,%al
    1368:	24 89                	and    $0x89,%al
    136a:	25 0b 91 b4 77       	and    $0x77b4910b,%eax
    136f:	06                   	push   %es
    1370:	32 24 0a             	xor    (%edx,%ecx,1),%ah
    1373:	fc                   	cld
    1374:	01 1a                	add    %ebx,(%edx)
    1376:	9f                   	lahf
    1377:	04 bf                	add    $0xbf,%al
    1379:	27                   	daa
    137a:	d0 27                	shlb   $1,(%edi)
    137c:	07                   	pop    %es
    137d:	77 00                	ja     137f <MBOOT_HEADER_FLAGS+0x137c>
    137f:	0a fc                	or     %ah,%bh
    1381:	01 1a                	add    %ebx,(%edx)
    1383:	9f                   	lahf
	...
    138c:	00 00                	add    %al,(%eax)
    138e:	00 04 e0             	add    %al,(%eax,%eiz,8)
    1391:	19 e9                	sbb    %ebp,%ecx
    1393:	1b 02                	sbb    (%edx),%eax
    1395:	91                   	xchg   %eax,%ecx
    1396:	04 04                	add    $0x4,%al
    1398:	e9 1b ea 1b 02       	jmp    21bfdb8 <stack_top+0x1fb4148>
    139d:	74 08                	je     13a7 <MBOOT_HEADER_FLAGS+0x13a4>
    139f:	04 ea                	add    $0xea,%al
    13a1:	1b bb 1d 02 91 04    	sbb    0x491021d(%ebx),%edi
    13a7:	04 bb                	add    $0xbb,%al
    13a9:	1d bc 1d 02 74       	sbb    $0x74021dbc,%eax
    13ae:	08 04 bc             	or     %al,(%esp,%edi,4)
    13b1:	1d f0 1d 02 91       	sbb    $0x91021df0,%eax
    13b6:	04 00                	add    $0x0,%al
	...
    13c0:	00 00                	add    %al,(%eax)
    13c2:	04 e0                	add    $0xe0,%al
    13c4:	19 e9                	sbb    %ebp,%ecx
    13c6:	1b 02                	sbb    (%edx),%eax
    13c8:	91                   	xchg   %eax,%ecx
    13c9:	08 04 e9             	or     %al,(%ecx,%ebp,8)
    13cc:	1b ea                	sbb    %edx,%ebp
    13ce:	1b 02                	sbb    (%edx),%eax
    13d0:	74 0c                	je     13de <MBOOT_HEADER_FLAGS+0x13db>
    13d2:	04 ea                	add    $0xea,%al
    13d4:	1b bb 1d 02 91 08    	sbb    0x891021d(%ebx),%edi
    13da:	04 bb                	add    $0xbb,%al
    13dc:	1d bc 1d 02 74       	sbb    $0x74021dbc,%eax
    13e1:	0c 04                	or     $0x4,%al
    13e3:	bc 1d f0 1d 02       	mov    $0x21df01d,%esp
    13e8:	91                   	xchg   %eax,%ecx
    13e9:	08 00                	or     %al,(%eax)
	...
    13f3:	04 89                	add    $0x89,%al
    13f5:	1a 94 1a 01 50 04 d0 	sbb    -0x2ffbafff(%edx,%ebx,1),%dl
    13fc:	1b d5                	sbb    %ebp,%edx
    13fe:	1b 09                	sbb    (%ecx),%ecx
    1400:	70 00                	jo     1402 <MBOOT_HEADER_FLAGS+0x13ff>
    1402:	0c ff                	or     $0xff,%al
    1404:	ff                   	(bad)
    1405:	ff 0f                	decl   (%edi)
    1407:	1a 9f 04 d5 1b e0    	sbb    -0x1fe42afc(%edi),%bl
    140d:	1b 01                	sbb    (%ecx),%eax
    140f:	50                   	push   %eax
    1410:	04 bf                	add    $0xbf,%al
    1412:	1d c9 1d 06 0c       	sbb    $0xc061dc9,%eax
    1417:	f7 ff                	idiv   %edi
    1419:	ff 0f                	decl   (%edi)
    141b:	9f                   	lahf
    141c:	00 02                	add    %al,(%edx)
    141e:	00 00                	add    %al,(%eax)
    1420:	00 00                	add    %al,(%eax)
    1422:	00 04 89             	add    %al,(%ecx,%ecx,4)
    1425:	1a 94 1a 02 30 9f 04 	sbb    0x49f3002(%edx,%ebx,1),%dl
    142c:	85 1b                	test   %ebx,(%ebx)
    142e:	96                   	xchg   %eax,%esi
    142f:	1b 04 91             	sbb    (%ecx,%edx,4),%eax
    1432:	ec                   	in     (%dx),%al
    1433:	7b 9f                	jnp    13d4 <MBOOT_HEADER_FLAGS+0x13d1>
    1435:	04 f7                	add    $0xf7,%al
    1437:	1b e8                	sbb    %eax,%ebp
    1439:	1c 01                	sbb    $0x1,%al
    143b:	53                   	push   %ebx
    143c:	00 03                	add    %al,(%ebx)
	...
    1446:	00 04 89             	add    %al,(%ecx,%ecx,4)
    1449:	1a e0                	sbb    %al,%ah
    144b:	1b 02                	sbb    (%edx),%eax
    144d:	30 9f 04 ea 1b f7    	xor    %bl,-0x8e415fc(%edi)
    1453:	1b 02                	sbb    (%edx),%eax
    1455:	30 9f 04 f7 1b fd    	xor    %bl,-0x2e408fc(%edi)
    145b:	1b 01                	sbb    (%ecx),%eax
    145d:	57                   	push   %edi
    145e:	04 fd                	add    $0xfd,%al
    1460:	1b de                	sbb    %esi,%ebx
    1462:	1c 01                	sbb    $0x1,%al
    1464:	56                   	push   %esi
    1465:	04 bf                	add    $0xbf,%al
    1467:	1d c9 1d 02 30       	sbb    $0x30021dc9,%eax
    146c:	9f                   	lahf
    146d:	00 04 00             	add    %al,(%eax,%eax,1)
    1470:	04 89                	add    $0x89,%al
    1472:	1a 94 1a 02 30 9f 00 	sbb    0x9f3002(%edx,%ebx,1),%dl
    1479:	05 00 00 00 00       	add    $0x0,%eax
    147e:	00 00                	add    %al,(%eax)
    1480:	00 00                	add    %al,(%eax)
    1482:	00 04 89             	add    %al,(%ecx,%ecx,4)
    1485:	1a e0                	sbb    %al,%ah
    1487:	1b 02                	sbb    (%edx),%eax
    1489:	30 9f 04 ea 1b f7    	xor    %bl,-0x8e415fc(%edi)
    148f:	1b 02                	sbb    (%edx),%eax
    1491:	30 9f 04 f7 1b bc    	xor    %bl,-0x43e408fc(%edi)
    1497:	1d 02 31 9f 04       	sbb    $0x49f3102,%eax
    149c:	bf 1d c9 1d 02       	mov    $0x21dc91d,%edi
    14a1:	30 9f 04 c9 1d f0    	xor    %bl,-0xfe236fc(%edi)
    14a7:	1d 02 31 9f 00       	sbb    $0x9f3102,%eax
    14ac:	00 00                	add    %al,(%eax)
    14ae:	00 00                	add    %al,(%eax)
    14b0:	04 f9                	add    $0xf9,%al
    14b2:	1b 8c 1c 01 50 04 8c 	sbb    -0x73fbafff(%esp,%ebx,1),%ecx
    14b9:	1c e6                	sbb    $0xe6,%al
    14bb:	1c 03                	sbb    $0x3,%al
    14bd:	91                   	xchg   %eax,%ecx
    14be:	e8 77 00 00 00       	call   153a <MBOOT_HEADER_FLAGS+0x1537>
    14c3:	00 00                	add    %al,(%eax)
    14c5:	00 00                	add    %al,(%eax)
    14c7:	04 cb                	add    $0xcb,%al
    14c9:	1c e8                	sbb    $0xe8,%al
    14cb:	1c 02                	sbb    $0x2,%al
    14cd:	30 9f 04 e8 1c af    	xor    %bl,-0x50e317fc(%edi)
    14d3:	1d 01 57 04 c9       	sbb    $0xc9045701,%eax
    14d8:	1d f0 1d 01 57       	sbb    $0x57011df0,%eax
	...
    14e5:	00 04 cb             	add    %al,(%ebx,%ecx,8)
    14e8:	1c e6                	sbb    $0xe6,%al
    14ea:	1c 03                	sbb    $0x3,%al
    14ec:	91                   	xchg   %eax,%ecx
    14ed:	e8 77 04 e6 1c       	call   1ce61969 <MBOOT_HEADER_MAGIC+0x1386967>
    14f2:	e8 1c 01 52 04       	call   4521613 <stack_top+0x43159a3>
    14f7:	e8 1c af 1d 01       	call   11dc418 <stack_top+0xfd07a8>
    14fc:	56                   	push   %esi
    14fd:	04 c9                	add    $0xc9,%al
    14ff:	1d eb 1d 01 56       	sbb    $0x56011deb,%eax
    1504:	00 00                	add    %al,(%eax)
    1506:	00 00                	add    %al,(%eax)
    1508:	00 00                	add    %al,(%eax)
    150a:	00 04 a6             	add    %al,(%esi,%eiz,4)
    150d:	1a b8 1a 01 51 04    	sbb    0x451011a(%eax),%bh
    1513:	b8 1a 96 1b 03       	mov    $0x31b961a,%eax
    1518:	91                   	xchg   %eax,%ecx
    1519:	e8 77 04 ea 1b       	call   1bea1995 <MBOOT_HEADER_MAGIC+0x3c6993>
    151e:	83 1c 03 91          	sbbl   $0xffffff91,(%ebx,%eax,1)
    1522:	e8 77 00 03 00       	call   3159e <MBOOT_HEADER_FLAGS+0x3159b>
    1527:	02 00                	add    (%eax),%al
    1529:	00 00                	add    %al,(%eax)
    152b:	04 a6                	add    $0xa6,%al
    152d:	1a b8 1a 02 30 9f    	sbb    -0x60cffde6(%eax),%bh
    1533:	04 85                	add    $0x85,%al
    1535:	1b 88 1b 03 77 01    	sbb    0x177031b(%eax),%ecx
    153b:	9f                   	lahf
    153c:	04 88                	add    $0x88,%al
    153e:	1b 96 1b 01 57 00    	sbb    0x57011b(%esi),%edx
    1544:	00 00                	add    %al,(%eax)
    1546:	04 d0                	add    $0xd0,%al
    1548:	1b d5                	sbb    %ebp,%edx
    154a:	1b 09                	sbb    (%ecx),%ecx
    154c:	70 00                	jo     154e <MBOOT_HEADER_FLAGS+0x154b>
    154e:	0c ff                	or     $0xff,%al
    1550:	ff                   	(bad)
    1551:	ff 0f                	decl   (%edi)
    1553:	1a 9f 00 00 00 04    	sbb    0x4000000(%edi),%bl
    1559:	9d                   	popf
    155a:	1b b6 1b 0c 73 00    	sbb    0x730c1b(%esi),%esi
    1560:	39 25 03 b8 7b 10    	cmp    %esp,0x107bb803
    1566:	00 06                	add    %al,(%esi)
    1568:	22 9f 00 01 00 00    	and    0x100(%edi),%bl
    156e:	00 00                	add    %al,(%eax)
    1570:	00 00                	add    %al,(%eax)
    1572:	00 04 9d 1b c9 1b 07 	add    %al,0x71bc91b(,%ebx,4)
    1579:	73 00                	jae    157b <MBOOT_HEADER_FLAGS+0x1578>
    157b:	0a fc                	or     %ah,%bh
    157d:	01 1a                	add    %ebx,(%edx)
    157f:	9f                   	lahf
    1580:	04 c9                	add    $0xc9,%al
    1582:	1b d0                	sbb    %eax,%edx
    1584:	1b 01                	sbb    (%ecx),%eax
    1586:	50                   	push   %eax
    1587:	04 d0                	add    $0xd0,%al
    1589:	1b e0                	sbb    %eax,%esp
    158b:	1b 07                	sbb    (%edi),%eax
    158d:	73 00                	jae    158f <MBOOT_HEADER_FLAGS+0x158c>
    158f:	0a fc                	or     %ah,%bh
    1591:	01 1a                	add    %ebx,(%edx)
    1593:	9f                   	lahf
    1594:	04 bf                	add    $0xbf,%al
    1596:	1d c9 1d 07 73       	sbb    $0x73071dc9,%eax
    159b:	00 0a                	add    %cl,(%edx)
    159d:	fc                   	cld
    159e:	01 1a                	add    %ebx,(%edx)
    15a0:	9f                   	lahf
    15a1:	00 00                	add    %al,(%eax)
    15a3:	00 04 f4             	add    %al,(%esp,%esi,8)
    15a6:	1c 99                	sbb    $0x99,%al
    15a8:	1d 0d 76 7e 71       	sbb    $0x717e760d,%eax
    15ad:	00 1e                	add    %bl,(%esi)
    15af:	03 b4 7b 10 00 06 22 	add    0x22060010(%ebx,%edi,2),%esi
    15b6:	9f                   	lahf
    15b7:	00 03                	add    %al,(%ebx)
    15b9:	00 00                	add    %al,(%eax)
    15bb:	00 00                	add    %al,(%eax)
    15bd:	00 04 f4             	add    %al,(%esp,%esi,8)
    15c0:	1c f9                	sbb    $0xf9,%al
    15c2:	1c 08                	sbb    $0x8,%al
    15c4:	73 00                	jae    15c6 <MBOOT_HEADER_FLAGS+0x15c3>
    15c6:	77 00                	ja     15c8 <MBOOT_HEADER_FLAGS+0x15c5>
    15c8:	1c 39                	sbb    $0x39,%al
    15ca:	25 9f 04 f9 1c       	and    $0x1cf9049f,%eax
    15cf:	fc                   	cld
    15d0:	1c 0a                	sbb    $0xa,%al
    15d2:	91                   	xchg   %eax,%ecx
    15d3:	e8 77 06 77 00       	call   771c4f <stack_top+0x565fdf>
    15d8:	1c 39                	sbb    $0x39,%al
    15da:	25 9f 04 fc 1c       	and    $0x1cfc049f,%eax
    15df:	a8 1d                	test   $0x1d,%al
    15e1:	01 53 00             	add    %edx,0x0(%ebx)
    15e4:	00 00                	add    %al,(%eax)
    15e6:	00 00                	add    %al,(%eax)
    15e8:	04 d0                	add    $0xd0,%al
    15ea:	1d de 1d 01 50       	sbb    $0x50011dde,%eax
    15ef:	04 de                	add    $0xde,%al
    15f1:	1d f0 1d 01 53       	sbb    $0x53011df0,%eax
    15f6:	00 01                	add    %al,(%ecx)
    15f8:	00 04 e8             	add    %al,(%eax,%ebp,8)
    15fb:	1c f4                	sbb    $0xf4,%al
    15fd:	1c 01                	sbb    $0x1,%al
    15ff:	56                   	push   %esi
	...
    1608:	00 04 90             	add    %al,(%eax,%edx,4)
    160b:	17                   	pop    %ss
    160c:	99                   	cltd
    160d:	18 02                	sbb    %al,(%edx)
    160f:	91                   	xchg   %eax,%ecx
    1610:	04 04                	add    $0x4,%al
    1612:	99                   	cltd
    1613:	18 9a 18 02 74 08    	sbb    %bl,0x8740218(%edx)
    1619:	04 9a                	add    $0x9a,%al
    161b:	18 ac 18 02 91 04 04 	sbb    %ch,0x4049102(%eax,%ebx,1)
    1622:	ac                   	lods   %ds:(%esi),%al
    1623:	18 ad 18 02 74 08    	sbb    %ch,0x8740218(%ebp)
    1629:	00 00                	add    %al,(%eax)
    162b:	00 00                	add    %al,(%eax)
    162d:	00 04 b7             	add    %al,(%edi,%esi,4)
    1630:	17                   	pop    %ss
    1631:	96                   	xchg   %eax,%esi
    1632:	18 01                	sbb    %al,(%ecx)
    1634:	53                   	push   %ebx
    1635:	04 9a                	add    $0x9a,%al
    1637:	18 a9 18 01 53 00    	sbb    %ch,0x530118(%ecx)
    163d:	01 00                	add    %eax,(%eax)
    163f:	00 00                	add    %al,(%eax)
    1641:	00 00                	add    %al,(%eax)
    1643:	04 b7                	add    $0xb7,%al
    1645:	17                   	pop    %ss
    1646:	d0 17                	rclb   $1,(%edi)
    1648:	07                   	pop    %es
    1649:	77 00                	ja     164b <MBOOT_HEADER_FLAGS+0x1648>
    164b:	0a fc                	or     %ah,%bh
    164d:	01 1a                	add    %ebx,(%edx)
    164f:	9f                   	lahf
    1650:	04 d0                	add    $0xd0,%al
    1652:	17                   	pop    %ss
    1653:	d9 17                	fsts   (%edi)
    1655:	01 57 04             	add    %edx,0x4(%edi)
    1658:	d9 17                	fsts   (%edi)
    165a:	ad                   	lods   %ds:(%esi),%eax
    165b:	18 0a                	sbb    %cl,(%edx)
    165d:	91                   	xchg   %eax,%ecx
    165e:	00 06                	add    %al,(%esi)
    1660:	32 24 0a             	xor    (%edx,%ecx,1),%ah
    1663:	fc                   	cld
    1664:	01 1a                	add    %ebx,(%edx)
    1666:	9f                   	lahf
    1667:	00 02                	add    %al,(%edx)
    1669:	00 00                	add    %al,(%eax)
    166b:	00 04 d7             	add    %al,(%edi,%edx,8)
    166e:	17                   	pop    %ss
    166f:	e4 17                	in     $0x17,%al
    1671:	02 30                	add    (%eax),%dh
    1673:	9f                   	lahf
    1674:	04 e4                	add    $0xe4,%al
    1676:	17                   	pop    %ss
    1677:	90                   	nop
    1678:	18 01                	sbb    %al,(%ecx)
    167a:	57                   	push   %edi
    167b:	00 01                	add    %al,(%ecx)
    167d:	00 04 f6             	add    %al,(%esi,%esi,8)
    1680:	17                   	pop    %ss
    1681:	88 18                	mov    %bl,(%eax)
    1683:	0d 03 e4 7b 10       	or     $0x107be403,%eax
    1688:	00 06                	add    %al,(%esi)
    168a:	77 00                	ja     168c <MBOOT_HEADER_FLAGS+0x1689>
    168c:	1e                   	push   %ds
    168d:	73 00                	jae    168f <MBOOT_HEADER_FLAGS+0x168c>
    168f:	22 9f 00 04 00 00    	and    0x400(%edi),%bl
    1695:	00 00                	add    %al,(%eax)
    1697:	00 04 b0             	add    %al,(%eax,%esi,4)
    169a:	18 cb                	sbb    %cl,%bl
    169c:	18 02                	sbb    %al,(%edx)
    169e:	30 9f 04 cb 18 b0    	xor    %bl,-0x4fe734fc(%edi)
    16a4:	19 01                	sbb    %eax,(%ecx)
    16a6:	56                   	push   %esi
    16a7:	04 b3                	add    $0xb3,%al
    16a9:	19 c7                	sbb    %eax,%edi
    16ab:	19 01                	sbb    %eax,(%ecx)
    16ad:	56                   	push   %esi
    16ae:	00 01                	add    %al,(%ecx)
    16b0:	00 00                	add    %al,(%eax)
    16b2:	00 04 93             	add    %al,(%ebx,%edx,4)
    16b5:	19 b1 19 01 57 04    	sbb    %esi,0x4570119(%ecx)
    16bb:	b1 19                	mov    $0x19,%cl
    16bd:	b3 19                	mov    $0x19,%bl
    16bf:	01 50 00             	add    %edx,0x0(%eax)
	...
    16ce:	04 d2                	add    $0xd2,%al
    16d0:	14 93                	adc    $0x93,%al
    16d2:	15 01 50 04 93       	adc    $0x93045001,%eax
    16d7:	15 e6 15 03 91       	adc    $0x910315e6,%eax
    16dc:	e0 77                	loopne 1755 <MBOOT_HEADER_FLAGS+0x1752>
    16de:	04 a0                	add    $0xa0,%al
    16e0:	16                   	push   %ss
    16e1:	ab                   	stos   %eax,%es:(%edi)
    16e2:	16                   	push   %ss
    16e3:	01 50 04             	add    %edx,0x4(%eax)
    16e6:	b5 16                	mov    $0x16,%ch
    16e8:	f5                   	cmc
    16e9:	16                   	push   %ss
    16ea:	03 91 e0 77 04 f5    	add    -0xafb8820(%ecx),%edx
    16f0:	16                   	push   %ss
    16f1:	f6 16                	notb   (%esi)
    16f3:	03 74 e4 77          	add    0x77(%esp,%eiz,8),%esi
    16f7:	04 83                	add    $0x83,%al
    16f9:	17                   	pop    %ss
    16fa:	8d 17                	lea    (%edi),%edx
    16fc:	06                   	push   %es
    16fd:	0c f7                	or     $0xf7,%al
    16ff:	ff                   	(bad)
    1700:	ff 0f                	decl   (%edi)
    1702:	9f                   	lahf
	...
    170b:	00 04 fb             	add    %al,(%ebx,%edi,8)
    170e:	14 93                	adc    $0x93,%al
    1710:	15 01 51 04 93       	adc    $0x93045101,%eax
    1715:	15 e6 15 03 91       	adc    $0x910315e6,%eax
    171a:	e4 77                	in     $0x77,%al
    171c:	04 b5                	add    $0xb5,%al
    171e:	16                   	push   %ss
    171f:	f5                   	cmc
    1720:	16                   	push   %ss
    1721:	03 91 e4 77 04 f5    	add    -0xafb881c(%ecx),%edx
    1727:	16                   	push   %ss
    1728:	f6 16                	notb   (%esi)
    172a:	03 74 e8 77          	add    0x77(%eax,%ebp,8),%esi
    172e:	00 03                	add    %al,(%ebx)
    1730:	00 00                	add    %al,(%eax)
    1732:	00 00                	add    %al,(%eax)
    1734:	00 04 fb             	add    %al,(%ebx,%edi,8)
    1737:	14 93                	adc    $0x93,%al
    1739:	15 02 30 9f 04       	adc    $0x49f3002,%eax
    173e:	93                   	xchg   %eax,%ebx
    173f:	15 e6 15 01 57       	adc    $0x570115e6,%eax
    1744:	04 b5                	add    $0xb5,%al
    1746:	16                   	push   %ss
    1747:	bc 16 01 57 00       	mov    $0x570116,%esp
    174c:	01 00                	add    %eax,(%eax)
    174e:	04 e9                	add    $0xe9,%al
    1750:	14 fb                	adc    $0xfb,%al
    1752:	14 01                	adc    $0x1,%al
    1754:	50                   	push   %eax
    1755:	00 02                	add    %al,(%edx)
    1757:	00 04 e6             	add    %al,(%esi,%eiz,8)
    175a:	15 f3 15 01 50       	adc    $0x500115f3,%eax
    175f:	00 00                	add    %al,(%eax)
    1761:	00 04 ed 15 86 16 0c 	add    %al,0xc168615(,%ebp,8)
    1768:	73 00                	jae    176a <MBOOT_HEADER_FLAGS+0x1767>
    176a:	39 25 03 b8 7b 10    	cmp    %esp,0x107bb803
    1770:	00 06                	add    %al,(%esi)
    1772:	22 9f 00 01 00 00    	and    0x100(%edi),%bl
    1778:	00 00                	add    %al,(%eax)
    177a:	00 04 ed 15 94 16 07 	add    %al,0x7169415(,%ebp,8)
    1781:	73 00                	jae    1783 <MBOOT_HEADER_FLAGS+0x1780>
    1783:	0a fc                	or     %ah,%bh
    1785:	01 1a                	add    %ebx,(%edx)
    1787:	9f                   	lahf
    1788:	04 94                	add    $0x94,%al
    178a:	16                   	push   %ss
    178b:	ab                   	stos   %eax,%es:(%edi)
    178c:	16                   	push   %ss
    178d:	01 53 04             	add    %edx,0x4(%ebx)
    1790:	83 17 8d             	adcl   $0xffffff8d,(%edi)
    1793:	17                   	pop    %ss
    1794:	07                   	pop    %es
    1795:	73 00                	jae    1797 <MBOOT_HEADER_FLAGS+0x1794>
    1797:	0a fc                	or     %ah,%bh
    1799:	01 1a                	add    %ebx,(%edx)
    179b:	9f                   	lahf
	...
    17a8:	00 04 a1             	add    %al,(%ecx,%eiz,4)
    17ab:	12 d0                	adc    %al,%dl
    17ad:	12 01                	adc    (%ecx),%al
    17af:	50                   	push   %eax
    17b0:	04 d0                	add    $0xd0,%al
    17b2:	12 b6 13 03 91 e0    	adc    -0x1f6efced(%esi),%dh
    17b8:	77 04                	ja     17be <MBOOT_HEADER_FLAGS+0x17bb>
    17ba:	f0 13 fb             	lock adc %ebx,%edi
    17bd:	13 01                	adc    (%ecx),%eax
    17bf:	50                   	push   %eax
    17c0:	04 85                	add    $0x85,%al
    17c2:	14 b1                	adc    $0xb1,%al
    17c4:	14 03                	adc    $0x3,%al
    17c6:	91                   	xchg   %eax,%ecx
    17c7:	e0 77                	loopne 1840 <MBOOT_HEADER_FLAGS+0x183d>
    17c9:	04 b1                	add    $0xb1,%al
    17cb:	14 b2                	adc    $0xb2,%al
    17cd:	14 03                	adc    $0x3,%al
    17cf:	74 e4                	je     17b5 <MBOOT_HEADER_FLAGS+0x17b2>
    17d1:	77 04                	ja     17d7 <MBOOT_HEADER_FLAGS+0x17d4>
    17d3:	b2 14                	mov    $0x14,%dl
    17d5:	bc 14 06 0c f7       	mov    $0xf70c0614,%esp
    17da:	ff                   	(bad)
    17db:	ff 0f                	decl   (%edi)
    17dd:	9f                   	lahf
	...
    17e6:	00 04 be             	add    %al,(%esi,%edi,4)
    17e9:	12 d0                	adc    %al,%dl
    17eb:	12 01                	adc    (%ecx),%al
    17ed:	51                   	push   %ecx
    17ee:	04 d0                	add    $0xd0,%al
    17f0:	12 b6 13 03 91 e8    	adc    -0x176efced(%esi),%dh
    17f6:	77 04                	ja     17fc <MBOOT_HEADER_FLAGS+0x17f9>
    17f8:	85 14 b1             	test   %edx,(%ecx,%esi,4)
    17fb:	14 03                	adc    $0x3,%al
    17fd:	91                   	xchg   %eax,%ecx
    17fe:	e8 77 04 b1 14       	call   14b11c7a <stack_top+0x1490600a>
    1803:	b2 14                	mov    $0x14,%dl
    1805:	03 74 ec 77          	add    0x77(%esp,%ebp,8),%esi
    1809:	00 03                	add    %al,(%ebx)
    180b:	00 00                	add    %al,(%eax)
    180d:	00 00                	add    %al,(%eax)
    180f:	00 04 be             	add    %al,(%esi,%edi,4)
    1812:	12 d0                	adc    %al,%dl
    1814:	12 02                	adc    (%edx),%al
    1816:	30 9f 04 d0 12 b6    	xor    %bl,-0x49ed2ffc(%edi)
    181c:	13 01                	adc    (%ecx),%eax
    181e:	56                   	push   %esi
    181f:	04 85                	add    $0x85,%al
    1821:	14 af                	adc    $0xaf,%al
    1823:	14 01                	adc    $0x1,%al
    1825:	56                   	push   %esi
    1826:	00 01                	add    %al,(%ecx)
    1828:	00 04 ac             	add    %al,(%esp,%ebp,4)
    182b:	12 be 12 01 50 00    	adc    0x500112(%esi),%bh
    1831:	02 00                	add    (%eax),%al
    1833:	04 b6                	add    $0xb6,%al
    1835:	13 c3                	adc    %ebx,%eax
    1837:	13 01                	adc    (%ecx),%eax
    1839:	50                   	push   %eax
    183a:	00 00                	add    %al,(%eax)
    183c:	00 04 bd 13 d6 13 0c 	add    %al,0xc13d613(,%edi,4)
    1843:	76 00                	jbe    1845 <MBOOT_HEADER_FLAGS+0x1842>
    1845:	39 25 03 b8 7b 10    	cmp    %esp,0x107bb803
    184b:	00 06                	add    %al,(%esi)
    184d:	22 9f 00 01 00 00    	and    0x100(%edi),%bl
    1853:	00 00                	add    %al,(%eax)
    1855:	00 04 bd 13 e4 13 07 	add    %al,0x713e413(,%edi,4)
    185c:	76 00                	jbe    185e <MBOOT_HEADER_FLAGS+0x185b>
    185e:	0a fc                	or     %ah,%bh
    1860:	01 1a                	add    %ebx,(%edx)
    1862:	9f                   	lahf
    1863:	04 e4                	add    $0xe4,%al
    1865:	13 fb                	adc    %ebx,%edi
    1867:	13 01                	adc    (%ecx),%eax
    1869:	56                   	push   %esi
    186a:	04 b2                	add    $0xb2,%al
    186c:	14 bc                	adc    $0xbc,%al
    186e:	14 07                	adc    $0x7,%al
    1870:	76 00                	jbe    1872 <MBOOT_HEADER_FLAGS+0x186f>
    1872:	0a fc                	or     %ah,%bh
    1874:	01 1a                	add    %ebx,(%edx)
    1876:	9f                   	lahf
	...
    1883:	00 04 c2             	add    %al,(%edx,%eax,8)
    1886:	0f 83 10 01 50 04    	jae    450199c <stack_top+0x42f5d2c>
    188c:	83 10 d6             	adcl   $0xffffffd6,(%eax)
    188f:	10 03                	adc    %al,(%ebx)
    1891:	91                   	xchg   %eax,%ecx
    1892:	e0 77                	loopne 190b <MBOOT_HEADER_FLAGS+0x1908>
    1894:	04 90                	add    $0x90,%al
    1896:	11 9b 11 01 50 04    	adc    %ebx,0x4500111(%ebx)
    189c:	a5                   	movsl  %ds:(%esi),%es:(%edi)
    189d:	11 e5                	adc    %esp,%ebp
    189f:	11 03                	adc    %eax,(%ebx)
    18a1:	91                   	xchg   %eax,%ecx
    18a2:	e0 77                	loopne 191b <MBOOT_HEADER_FLAGS+0x1918>
    18a4:	04 e5                	add    $0xe5,%al
    18a6:	11 e6                	adc    %esp,%esi
    18a8:	11 03                	adc    %eax,(%ebx)
    18aa:	74 e4                	je     1890 <MBOOT_HEADER_FLAGS+0x188d>
    18ac:	77 04                	ja     18b2 <MBOOT_HEADER_FLAGS+0x18af>
    18ae:	f3 11 fd             	repz adc %edi,%ebp
    18b1:	11 06                	adc    %eax,(%esi)
    18b3:	0c f7                	or     $0xf7,%al
    18b5:	ff                   	(bad)
    18b6:	ff 0f                	decl   (%edi)
    18b8:	9f                   	lahf
	...
    18c1:	00 04 eb             	add    %al,(%ebx,%ebp,8)
    18c4:	0f 83 10 01 51 04    	jae    45119da <stack_top+0x4305d6a>
    18ca:	83 10 d6             	adcl   $0xffffffd6,(%eax)
    18cd:	10 03                	adc    %al,(%ebx)
    18cf:	91                   	xchg   %eax,%ecx
    18d0:	e4 77                	in     $0x77,%al
    18d2:	04 a5                	add    $0xa5,%al
    18d4:	11 e5                	adc    %esp,%ebp
    18d6:	11 03                	adc    %eax,(%ebx)
    18d8:	91                   	xchg   %eax,%ecx
    18d9:	e4 77                	in     $0x77,%al
    18db:	04 e5                	add    $0xe5,%al
    18dd:	11 e6                	adc    %esp,%esi
    18df:	11 03                	adc    %eax,(%ebx)
    18e1:	74 e8                	je     18cb <MBOOT_HEADER_FLAGS+0x18c8>
    18e3:	77 00                	ja     18e5 <MBOOT_HEADER_FLAGS+0x18e2>
    18e5:	03 00                	add    (%eax),%eax
    18e7:	00 00                	add    %al,(%eax)
    18e9:	00 00                	add    %al,(%eax)
    18eb:	04 eb                	add    $0xeb,%al
    18ed:	0f 83 10 02 30 9f    	jae    9f301b03 <MBOOT_HEADER_MAGIC+0x83826b01>
    18f3:	04 83                	add    $0x83,%al
    18f5:	10 d6                	adc    %dl,%dh
    18f7:	10 01                	adc    %al,(%ecx)
    18f9:	57                   	push   %edi
    18fa:	04 a5                	add    $0xa5,%al
    18fc:	11 ac 11 01 57 00 01 	adc    %ebp,0x1005701(%ecx,%edx,1)
    1903:	00 04 d9             	add    %al,(%ecx,%ebx,8)
    1906:	0f eb 0f             	por    (%edi),%mm1
    1909:	01 50 00             	add    %edx,0x0(%eax)
    190c:	02 00                	add    (%eax),%al
    190e:	04 d6                	add    $0xd6,%al
    1910:	10 e3                	adc    %ah,%bl
    1912:	10 01                	adc    %al,(%ecx)
    1914:	50                   	push   %eax
    1915:	00 00                	add    %al,(%eax)
    1917:	00 04 dd 10 f6 10 0c 	add    %al,0xc10f610(,%ebx,8)
    191e:	73 00                	jae    1920 <MBOOT_HEADER_FLAGS+0x191d>
    1920:	39 25 03 b8 7b 10    	cmp    %esp,0x107bb803
    1926:	00 06                	add    %al,(%esi)
    1928:	22 9f 00 01 00 00    	and    0x100(%edi),%bl
    192e:	00 00                	add    %al,(%eax)
    1930:	00 04 dd 10 84 11 07 	add    %al,0x7118410(,%ebx,8)
    1937:	73 00                	jae    1939 <MBOOT_HEADER_FLAGS+0x1936>
    1939:	0a fc                	or     %ah,%bh
    193b:	01 1a                	add    %ebx,(%edx)
    193d:	9f                   	lahf
    193e:	04 84                	add    $0x84,%al
    1940:	11 9b 11 01 53 04    	adc    %ebx,0x4530111(%ebx)
    1946:	f3 11 fd             	repz adc %edi,%ebp
    1949:	11 07                	adc    %eax,(%edi)
    194b:	73 00                	jae    194d <MBOOT_HEADER_FLAGS+0x194a>
    194d:	0a fc                	or     %ah,%bh
    194f:	01 1a                	add    %ebx,(%edx)
    1951:	9f                   	lahf
	...
    195a:	00 04 82             	add    %al,(%edx,%eax,4)
    195d:	0d 8f 0d 01 50       	or     $0x50010d8f,%eax
    1962:	04 d6                	add    $0xd6,%al
    1964:	0e                   	push   %cs
    1965:	db 0e                	fisttpl (%esi)
    1967:	09 70 00             	or     %esi,0x0(%eax)
    196a:	0c ff                	or     $0xff,%al
    196c:	ff                   	(bad)
    196d:	ff 0f                	decl   (%edi)
    196f:	1a 9f 04 db 0e e1    	sbb    -0x1ef124fc(%edi),%bl
    1975:	0e                   	push   %cs
    1976:	01 50 04             	add    %edx,0x4(%eax)
    1979:	fd                   	std
    197a:	0e                   	push   %cs
    197b:	87 0f                	xchg   %ecx,(%edi)
    197d:	06                   	push   %es
    197e:	0c f7                	or     $0xf7,%al
    1980:	ff                   	(bad)
    1981:	ff 0f                	decl   (%edi)
    1983:	9f                   	lahf
    1984:	00 00                	add    %al,(%eax)
    1986:	00 00                	add    %al,(%eax)
    1988:	00 00                	add    %al,(%eax)
    198a:	00 04 a7             	add    %al,(%edi,%eiz,4)
    198d:	0d b3 0d 01 50       	or     $0x50010db3,%eax
    1992:	04 b3                	add    $0xb3,%al
    1994:	0d e1 0e 03 91       	or     $0x91030ee1,%eax
    1999:	e8 77 04 fd 0e       	call   efd1e15 <stack_top+0xedc61a5>
    199e:	87 0f                	xchg   %ecx,(%edi)
    19a0:	03 91 e8 77 00 03    	add    0x30077e8(%ecx),%edx
    19a6:	00 00                	add    %al,(%eax)
    19a8:	00 04 a7             	add    %al,(%edi,%eiz,4)
    19ab:	0d b3 0d 02 30       	or     $0x30020db3,%eax
    19b0:	9f                   	lahf
    19b1:	04 b3                	add    $0xb3,%al
    19b3:	0d a1 0e 01 53       	or     $0x53010ea1,%eax
    19b8:	00 01                	add    %al,(%ecx)
    19ba:	00 04 8f             	add    %al,(%edi,%ecx,4)
    19bd:	0d a7 0d 01 52       	or     $0x52010da7,%eax
    19c2:	00 02                	add    %al,(%edx)
    19c4:	00 04 a1             	add    %al,(%ecx,%eiz,4)
    19c7:	0e                   	push   %cs
    19c8:	c1 0e 01             	rorl   $0x1,(%esi)
    19cb:	52                   	push   %edx
    19cc:	00 00                	add    %al,(%eax)
    19ce:	00 04 a8             	add    %al,(%eax,%ebp,4)
    19d1:	0e                   	push   %cs
    19d2:	c1 0e 0c             	rorl   $0xc,(%esi)
    19d5:	73 00                	jae    19d7 <MBOOT_HEADER_FLAGS+0x19d4>
    19d7:	39 25 03 b8 7b 10    	cmp    %esp,0x107bb803
    19dd:	00 06                	add    %al,(%esi)
    19df:	22 9f 00 01 00 00    	and    0x100(%edi),%bl
    19e5:	00 00                	add    %al,(%eax)
    19e7:	00 04 a8             	add    %al,(%eax,%ebp,4)
    19ea:	0e                   	push   %cs
    19eb:	cf                   	iret
    19ec:	0e                   	push   %cs
    19ed:	07                   	pop    %es
    19ee:	73 00                	jae    19f0 <MBOOT_HEADER_FLAGS+0x19ed>
    19f0:	0a fc                	or     %ah,%bh
    19f2:	01 1a                	add    %ebx,(%edx)
    19f4:	9f                   	lahf
    19f5:	04 cf                	add    $0xcf,%al
    19f7:	0e                   	push   %cs
    19f8:	e1 0e                	loope  1a08 <MBOOT_HEADER_FLAGS+0x1a05>
    19fa:	01 53 04             	add    %edx,0x4(%ebx)
    19fd:	fd                   	std
    19fe:	0e                   	push   %cs
    19ff:	87 0f                	xchg   %ecx,(%edi)
    1a01:	07                   	pop    %es
    1a02:	73 00                	jae    1a04 <MBOOT_HEADER_FLAGS+0x1a01>
    1a04:	0a fc                	or     %ah,%bh
    1a06:	01 1a                	add    %ebx,(%edx)
    1a08:	9f                   	lahf
    1a09:	00 00                	add    %al,(%eax)
    1a0b:	00 00                	add    %al,(%eax)
    1a0d:	01 00                	add    %eax,(%eax)
    1a0f:	00 04 a0             	add    %al,(%eax,%eiz,4)
    1a12:	05 b9 05 02 91       	add    $0x910205b9,%eax
    1a17:	00 04 c3             	add    %al,(%ebx,%eax,8)
    1a1a:	05 98 06 02 91       	add    $0x91020698,%eax
    1a1f:	00 04 a5 06 8e 07 02 	add    %al,0x2078e06(,%eiz,4)
    1a26:	91                   	xchg   %eax,%ecx
    1a27:	00 00                	add    %al,(%eax)
    1a29:	01 00                	add    %eax,(%eax)
    1a2b:	00 00                	add    %al,(%eax)
    1a2d:	01 00                	add    %eax,(%eax)
    1a2f:	00 00                	add    %al,(%eax)
    1a31:	00 01                	add    %al,(%ecx)
    1a33:	01 00                	add    %eax,(%eax)
    1a35:	00 00                	add    %al,(%eax)
    1a37:	04 f9                	add    $0xf9,%al
    1a39:	06                   	push   %es
    1a3a:	92                   	xchg   %eax,%edx
    1a3b:	07                   	pop    %es
    1a3c:	01 53 04             	add    %edx,0x4(%ebx)
    1a3f:	92                   	xchg   %eax,%edx
    1a40:	07                   	pop    %es
    1a41:	d7                   	xlat   %ds:(%ebx)
    1a42:	07                   	pop    %es
    1a43:	02 91 00 04 da 07    	add    0x7da0400(%ecx),%dl
    1a49:	fc                   	cld
    1a4a:	07                   	pop    %es
    1a4b:	02 91 00 04 86 0c    	add    0xc860400(%ecx),%dl
    1a51:	a3 0c 02 91 00       	mov    %eax,0x91020c
    1a56:	04 a3                	add    $0xa3,%al
    1a58:	0c b2                	or     $0xb2,%al
    1a5a:	0c 08                	or     $0x8,%al
    1a5c:	76 00                	jbe    1a5e <MBOOT_HEADER_FLAGS+0x1a5b>
    1a5e:	72 00                	jb     1a60 <MBOOT_HEADER_FLAGS+0x1a5d>
    1a60:	22 37                	and    (%edi),%dh
    1a62:	1c 9f                	sbb    $0x9f,%al
    1a64:	04 b2                	add    $0xb2,%al
    1a66:	0c b5                	or     $0xb5,%al
    1a68:	0c 08                	or     $0x8,%al
    1a6a:	76 00                	jbe    1a6c <MBOOT_HEADER_FLAGS+0x1a69>
    1a6c:	72 00                	jb     1a6e <MBOOT_HEADER_FLAGS+0x1a6b>
    1a6e:	22 36                	and    (%esi),%dh
    1a70:	1c 9f                	sbb    $0x9f,%al
    1a72:	04 b5                	add    $0xb5,%al
    1a74:	0c cc                	or     $0xcc,%al
    1a76:	0c 08                	or     $0x8,%al
    1a78:	76 00                	jbe    1a7a <MBOOT_HEADER_FLAGS+0x1a77>
    1a7a:	72 00                	jb     1a7c <MBOOT_HEADER_FLAGS+0x1a79>
    1a7c:	22 37                	and    (%edi),%dh
    1a7e:	1c 9f                	sbb    $0x9f,%al
    1a80:	00 02                	add    %al,(%edx)
    1a82:	00 00                	add    %al,(%eax)
    1a84:	00 04 f9             	add    %al,(%ecx,%edi,8)
    1a87:	06                   	push   %es
    1a88:	92                   	xchg   %eax,%edx
    1a89:	07                   	pop    %es
    1a8a:	02 30                	add    (%eax),%dh
    1a8c:	9f                   	lahf
    1a8d:	04 92                	add    $0x92,%al
    1a8f:	07                   	pop    %es
    1a90:	f4                   	hlt
    1a91:	07                   	pop    %es
    1a92:	01 52 00             	add    %edx,0x0(%edx)
	...
    1a9d:	04 81                	add    $0x81,%al
    1a9f:	08 8c 08 01 50 04 f6 	or     %cl,-0x9fbafff(%eax,%ecx,1)
    1aa6:	0b fb                	or     %ebx,%edi
    1aa8:	0b 09                	or     (%ecx),%ecx
    1aaa:	70 00                	jo     1aac <MBOOT_HEADER_FLAGS+0x1aa9>
    1aac:	0c ff                	or     $0xff,%al
    1aae:	ff                   	(bad)
    1aaf:	ff 0f                	decl   (%edi)
    1ab1:	1a 9f 04 fb 0b 86    	sbb    -0x79f404fc(%edi),%bl
    1ab7:	0c 01                	or     $0x1,%al
    1ab9:	50                   	push   %eax
    1aba:	04 cc                	add    $0xcc,%al
    1abc:	0c d6                	or     $0xd6,%al
    1abe:	0c 06                	or     $0x6,%al
    1ac0:	0c f7                	or     $0xf7,%al
    1ac2:	ff                   	(bad)
    1ac3:	ff 0f                	decl   (%edi)
    1ac5:	9f                   	lahf
    1ac6:	00 00                	add    %al,(%eax)
    1ac8:	00 04 a3             	add    %al,(%ebx,%eiz,4)
    1acb:	0c cc                	or     $0xcc,%al
    1acd:	0c 01                	or     $0x1,%al
    1acf:	52                   	push   %edx
    1ad0:	00 00                	add    %al,(%eax)
    1ad2:	00 04 a2             	add    %al,(%edx,%eiz,4)
    1ad5:	08 b0 08 01 52 00    	or     %dh,0x520108(%eax)
    1adb:	03 00                	add    (%eax),%eax
    1add:	00 00                	add    %al,(%eax)
    1adf:	00 00                	add    %al,(%eax)
    1ae1:	00 00                	add    %al,(%eax)
    1ae3:	04 a2                	add    $0xa2,%al
    1ae5:	08 b0 08 02 30 9f    	or     %dh,-0x60cffdf8(%eax)
    1aeb:	04 b0                	add    $0xb0,%al
    1aed:	08 e5                	or     %ah,%ch
    1aef:	08 01                	or     %al,(%ecx)
    1af1:	53                   	push   %ebx
    1af2:	04 e5                	add    $0xe5,%al
    1af4:	08 af 0b 03 91 d4    	or     %ch,-0x2b6efcf5(%edi)
    1afa:	77 04                	ja     1b00 <MBOOT_HEADER_FLAGS+0x1afd>
    1afc:	af                   	scas   %es:(%edi),%eax
    1afd:	0b c1                	or     %ecx,%eax
    1aff:	0b 01                	or     (%ecx),%eax
    1b01:	53                   	push   %ebx
    1b02:	00 01                	add    %al,(%ecx)
    1b04:	00 04 a8             	add    %al,(%eax,%ebp,4)
    1b07:	0a cc                	or     %ah,%cl
    1b09:	0a 1c 91             	or     (%ecx,%edx,4),%bl
    1b0c:	dc 77 06             	fdivl  0x6(%edi)
    1b0f:	23 14 94             	and    (%esp,%edx,4),%edx
    1b12:	02 0a                	add    (%edx),%cl
    1b14:	ff                   	(bad)
    1b15:	ff 1a                	lcall  *(%edx)
    1b17:	40                   	inc    %eax
    1b18:	24 91                	and    $0x91,%al
    1b1a:	dc 77 06             	fdivl  0x6(%edi)
    1b1d:	23 1a                	and    (%edx),%ebx
    1b1f:	94                   	xchg   %eax,%esp
    1b20:	02 0a                	add    (%edx),%cl
    1b22:	ff                   	(bad)
    1b23:	ff 1a                	lcall  *(%edx)
    1b25:	21 9f 00 00 00 00    	and    %ebx,0x0(%edi)
    1b2b:	00 04 a0             	add    %al,(%eax,%eiz,4)
    1b2e:	09 fc                	or     %edi,%esp
    1b30:	09 01                	or     %eax,(%ecx)
    1b32:	52                   	push   %edx
    1b33:	04 e1                	add    $0xe1,%al
    1b35:	0a 83 0b 01 52 00    	or     0x52010b(%ebx),%al
    1b3b:	01 00                	add    %eax,(%eax)
    1b3d:	00 00                	add    %al,(%eax)
    1b3f:	04 b6                	add    $0xb6,%al
    1b41:	09 c2                	or     %eax,%edx
    1b43:	09 09                	or     %ecx,(%ecx)
    1b45:	91                   	xchg   %eax,%ecx
    1b46:	00 72 00             	add    %dh,0x0(%edx)
    1b49:	22 0a                	and    (%edx),%cl
    1b4b:	1f                   	pop    %ds
    1b4c:	04 1c                	add    $0x1c,%al
    1b4e:	04 d4                	add    $0xd4,%al
    1b50:	09 fc                	or     %edi,%esp
    1b52:	09 01                	or     %eax,(%ecx)
    1b54:	51                   	push   %ecx
    1b55:	00 02                	add    %al,(%edx)
    1b57:	00 04 b6             	add    %al,(%esi,%esi,4)
    1b5a:	09 fc                	or     %edi,%esp
    1b5c:	09 01                	or     %eax,(%ecx)
    1b5e:	50                   	push   %eax
    1b5f:	00 01                	add    %al,(%ecx)
    1b61:	00 04 8c             	add    %al,(%esp,%ecx,4)
    1b64:	08 a2 08 01 50 00    	or     %ah,0x500108(%edx)
    1b6a:	02 00                	add    (%eax),%al
    1b6c:	04 c1                	add    $0xc1,%al
    1b6e:	0b ce                	or     %esi,%ecx
    1b70:	0b 01                	or     (%ecx),%eax
    1b72:	50                   	push   %eax
    1b73:	00 00                	add    %al,(%eax)
    1b75:	00 04 c8             	add    %al,(%eax,%ecx,8)
    1b78:	0b e1                	or     %ecx,%esp
    1b7a:	0b 0c 73             	or     (%ebx,%esi,2),%ecx
    1b7d:	00 39                	add    %bh,(%ecx)
    1b7f:	25 03 b8 7b 10       	and    $0x107bb803,%eax
    1b84:	00 06                	add    %al,(%esi)
    1b86:	22 9f 00 01 00 00    	and    0x100(%edi),%bl
    1b8c:	00 00                	add    %al,(%eax)
    1b8e:	00 04 c8             	add    %al,(%eax,%ecx,8)
    1b91:	0b ef                	or     %edi,%ebp
    1b93:	0b 07                	or     (%edi),%eax
    1b95:	73 00                	jae    1b97 <MBOOT_HEADER_FLAGS+0x1b94>
    1b97:	0a fc                	or     %ah,%bh
    1b99:	01 1a                	add    %ebx,(%edx)
    1b9b:	9f                   	lahf
    1b9c:	04 ef                	add    $0xef,%al
    1b9e:	0b 86 0c 01 53 04    	or     0x453010c(%esi),%eax
    1ba4:	cc                   	int3
    1ba5:	0c d6                	or     $0xd6,%al
    1ba7:	0c 07                	or     $0x7,%al
    1ba9:	73 00                	jae    1bab <MBOOT_HEADER_FLAGS+0x1ba8>
    1bab:	0a fc                	or     %ah,%bh
    1bad:	01 1a                	add    %ebx,(%edx)
    1baf:	9f                   	lahf
    1bb0:	00 02                	add    %al,(%edx)
    1bb2:	00 00                	add    %al,(%eax)
    1bb4:	00 00                	add    %al,(%eax)
    1bb6:	02 02                	add    (%edx),%al
    1bb8:	00 00                	add    %al,(%eax)
    1bba:	00 04 1b             	add    %al,(%ebx,%ebx,1)
    1bbd:	26 02 30             	add    %es:(%eax),%dh
    1bc0:	9f                   	lahf
    1bc1:	04 26                	add    $0x26,%al
    1bc3:	80 01 01             	addb   $0x1,(%ecx)
    1bc6:	53                   	push   %ebx
    1bc7:	04 80                	add    $0x80,%al
    1bc9:	01 91 01 03 73 7f    	add    %edx,0x7f730301(%ecx)
    1bcf:	9f                   	lahf
    1bd0:	04 91                	add    $0x91,%al
    1bd2:	01 9b 01 01 53 04    	add    %ebx,0x4530101(%ebx)
    1bd8:	b8 01 d6 01 01       	mov    $0x101d601,%eax
    1bdd:	53                   	push   %ebx
    1bde:	00 00                	add    %al,(%eax)
    1be0:	00 00                	add    %al,(%eax)
    1be2:	00 04 45 47 02 30 9f 	add    %al,-0x60cffdb9(,%eax,2)
    1be9:	04 60                	add    $0x60,%al
    1beb:	90                   	nop
    1bec:	01 01                	add    %eax,(%ecx)
    1bee:	50                   	push   %eax
    1bef:	00 00                	add    %al,(%eax)
    1bf1:	00 00                	add    %al,(%eax)
    1bf3:	00 04 eb             	add    %al,(%ebx,%ebp,8)
    1bf6:	01 f0                	add    %esi,%eax
    1bf8:	01 02                	add    %eax,(%edx)
    1bfa:	30 9f 04 80 02 a6    	xor    %bl,-0x59fd7ffc(%edi)
    1c00:	02 01                	add    (%ecx),%al
    1c02:	50                   	push   %eax
    1c03:	00 00                	add    %al,(%eax)
    1c05:	00 00                	add    %al,(%eax)
    1c07:	00 04 d4             	add    %al,(%esp,%edx,8)
    1c0a:	04 e6                	add    $0xe6,%al
    1c0c:	04 0c                	add    $0xc,%al
    1c0e:	73 00                	jae    1c10 <MBOOT_HEADER_FLAGS+0x1c0d>
    1c10:	39 25 03 b8 7b 10    	cmp    %esp,0x107bb803
    1c16:	00 06                	add    %al,(%esi)
    1c18:	22 9f 04 e6 04 ed    	and    -0x12fb19fc(%edi),%bl
    1c1e:	04 01                	add    $0x1,%al
    1c20:	50                   	push   %eax
    1c21:	00 01                	add    %al,(%ecx)
    1c23:	00 00                	add    %al,(%eax)
    1c25:	00 00                	add    %al,(%eax)
    1c27:	00 04 d4             	add    %al,(%esp,%edx,8)
    1c2a:	04 82                	add    $0x82,%al
    1c2c:	05 07 73 00 0a       	add    $0xa007307,%eax
    1c31:	fc                   	cld
    1c32:	01 1a                	add    %ebx,(%edx)
    1c34:	9f                   	lahf
    1c35:	04 82                	add    $0x82,%al
    1c37:	05 8e 05 01 53       	add    $0x5301058e,%eax
    1c3c:	04 8e                	add    $0x8e,%al
    1c3e:	05 93 05 0a 91       	add    $0x910a0593,%eax
    1c43:	00 06                	add    %al,(%esi)
    1c45:	32 24 0a             	xor    (%edx,%ecx,1),%ah
    1c48:	fc                   	cld
    1c49:	01 1a                	add    %ebx,(%edx)
    1c4b:	9f                   	lahf
    1c4c:	00 e3                	add    %ah,%bl
    1c4e:	00 00                	add    %al,(%eax)
    1c50:	00 05 00 04 00 00    	add    %al,0x400
    1c56:	00 00                	add    %al,(%eax)
    1c58:	00 00                	add    %al,(%eax)
    1c5a:	00 01                	add    %al,(%ecx)
    1c5c:	00 00                	add    %al,(%eax)
    1c5e:	00 00                	add    %al,(%eax)
    1c60:	00 06                	add    %al,(%esi)
    1c62:	4a                   	dec    %edx
    1c63:	29 10                	sub    %edx,(%eax)
    1c65:	00 04 00             	add    %al,(%eax,%eax,1)
    1c68:	24 01                	and    $0x1,%al
    1c6a:	50                   	push   %eax
    1c6b:	04 63                	add    $0x63,%al
    1c6d:	68 02 30 9f 04       	push   $0x49f3002
    1c72:	92                   	xchg   %eax,%edx
    1c73:	01 97 01 01 50 04    	add    %edx,0x4500101(%edi)
    1c79:	b5 01                	mov    $0x1,%ch
    1c7b:	ba 01 01 50 00       	mov    $0x500101,%edx
    1c80:	01 00                	add    %eax,(%eax)
    1c82:	00 00                	add    %al,(%eax)
    1c84:	00 00                	add    %al,(%eax)
    1c86:	06                   	push   %es
    1c87:	f8                   	clc
    1c88:	28 10                	sub    %dl,(%eax)
    1c8a:	00 04 00             	add    %al,(%eax,%eax,1)
    1c8d:	32 01                	xor    (%ecx),%al
    1c8f:	50                   	push   %eax
    1c90:	04 76                	add    $0x76,%al
    1c92:	7b 01                	jnp    1c95 <MBOOT_HEADER_FLAGS+0x1c92>
    1c94:	50                   	push   %eax
    1c95:	04 97                	add    $0x97,%al
    1c97:	01 c1                	add    %eax,%ecx
    1c99:	01 01                	add    %eax,(%ecx)
    1c9b:	50                   	push   %eax
    1c9c:	00 01                	add    %al,(%ecx)
    1c9e:	01 08                	add    %ecx,(%eax)
    1ca0:	f0 28 10             	lock sub %dl,(%eax)
    1ca3:	00 02                	add    %al,(%edx)
    1ca5:	03 08                	add    (%eax),%ecx
    1ca7:	64 9f                	fs lahf
    1ca9:	00 00                	add    %al,(%eax)
    1cab:	01 08                	add    %ecx,(%eax)
    1cad:	f2 28 10             	repnz sub %dl,(%eax)
    1cb0:	00 00                	add    %al,(%eax)
    1cb2:	01 50 00             	add    %edx,0x0(%eax)
    1cb5:	01 01                	add    %eax,(%ecx)
    1cb7:	08 f6                	or     %dh,%dh
    1cb9:	28 10                	sub    %dl,(%eax)
    1cbb:	00 02                	add    %al,(%edx)
    1cbd:	03 08                	add    (%eax),%ecx
    1cbf:	60                   	pusha
    1cc0:	9f                   	lahf
    1cc1:	00 00                	add    %al,(%eax)
    1cc3:	01 08                	add    %ecx,(%eax)
    1cc5:	f8                   	clc
    1cc6:	28 10                	sub    %dl,(%eax)
    1cc8:	00 00                	add    %al,(%eax)
    1cca:	01 50 00             	add    %edx,0x0(%eax)
    1ccd:	03 00                	add    (%eax),%eax
    1ccf:	00 00                	add    %al,(%eax)
    1cd1:	00 00                	add    %al,(%eax)
    1cd3:	00 01                	add    %al,(%ecx)
    1cd5:	00 00                	add    %al,(%eax)
    1cd7:	06                   	push   %es
    1cd8:	f8                   	clc
    1cd9:	28 10                	sub    %dl,(%eax)
    1cdb:	00 04 00             	add    %al,(%eax,%eax,1)
    1cde:	32 01                	xor    (%ecx),%al
    1ce0:	50                   	push   %eax
    1ce1:	04 76                	add    $0x76,%al
    1ce3:	85 01                	test   %eax,(%ecx)
    1ce5:	01 50 04             	add    %edx,0x4(%eax)
    1ce8:	97                   	xchg   %eax,%edi
    1ce9:	01 a1 01 01 50 04    	add    %esp,0x4500101(%ecx)
    1cef:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
    1cf0:	01 b5 01 01 50 04    	add    %esi,0x4500101(%ebp)
    1cf6:	ba 01 c1 01 01       	mov    $0x101c101,%edx
    1cfb:	50                   	push   %eax
    1cfc:	00 00                	add    %al,(%eax)
    1cfe:	00 00                	add    %al,(%eax)
    1d00:	00 00                	add    %al,(%eax)
    1d02:	00 06                	add    %al,(%esi)
    1d04:	2a 29                	sub    (%ecx),%ch
    1d06:	10 00                	adc    %al,(%eax)
    1d08:	04 00                	add    $0x0,%al
    1d0a:	20 01                	and    %al,(%ecx)
    1d0c:	50                   	push   %eax
    1d0d:	04 94                	add    $0x94,%al
    1d0f:	01 b2 01 01 50 04    	add    %esi,0x4500101(%edx)
    1d15:	b7 01                	mov    $0x1,%bh
    1d17:	d5 01                	aad    $0x1
    1d19:	01 50 00             	add    %edx,0x0(%eax)
    1d1c:	02 01                	add    (%ecx),%al
    1d1e:	08 b0 28 10 00 02    	or     %dh,0x2001028(%eax)
    1d24:	03 08                	add    (%eax),%ecx
    1d26:	64 9f                	fs lahf
    1d28:	00 00                	add    %al,(%eax)
    1d2a:	01 08                	add    %ecx,(%eax)
    1d2c:	b2 28                	mov    $0x28,%dl
    1d2e:	10 00                	adc    %al,(%eax)
    1d30:	00 01                	add    %al,(%ecx)
    1d32:	50                   	push   %eax
    1d33:	00 97 00 00 00 05    	add    %dl,0x5000000(%edi)
    1d39:	00 04 00             	add    %al,(%eax,%eax,1)
    1d3c:	00 00                	add    %al,(%eax)
    1d3e:	00 00                	add    %al,(%eax)
    1d40:	00 00                	add    %al,(%eax)
    1d42:	04 90                	add    $0x90,%al
    1d44:	01 ff                	add    %edi,%edi
    1d46:	01 02                	add    %eax,(%edx)
    1d48:	91                   	xchg   %eax,%ecx
    1d49:	00 00                	add    %al,(%eax)
    1d4b:	00 00                	add    %al,(%eax)
    1d4d:	00 00                	add    %al,(%eax)
    1d4f:	04 90                	add    $0x90,%al
    1d51:	01 86 02 02 91 04    	add    %eax,0x4910202(%esi)
    1d57:	04 86                	add    $0x86,%al
    1d59:	02 8b 02 02 74 08    	add    0x8740202(%ebx),%cl
    1d5f:	00 00                	add    %al,(%eax)
    1d61:	00 04 a7             	add    %al,(%edi,%eiz,4)
    1d64:	01 83 02 01 53 00    	add    %eax,0x530102(%ebx)
    1d6a:	02 00                	add    (%eax),%al
    1d6c:	04 b4                	add    $0xb4,%al
    1d6e:	01 b5 01 02 37 9f    	add    %esi,-0x60c8fdff(%ebp)
    1d74:	00 01                	add    %al,(%ecx)
    1d76:	00 00                	add    %al,(%eax)
    1d78:	00 04 b5 01 cb 01 0d 	add    %al,0xd01cb01(,%esi,4)
    1d7f:	73 00                	jae    1d81 <MBOOT_HEADER_FLAGS+0x1d7e>
    1d81:	77 00                	ja     1d83 <MBOOT_HEADER_FLAGS+0x1d80>
    1d83:	25 3f 1a 03 43       	and    $0x43031a3f,%eax
    1d88:	41                   	inc    %ecx
    1d89:	10 00                	adc    %al,(%eax)
    1d8b:	22 04 cb             	and    (%ebx,%ecx,8),%al
    1d8e:	01 df                	add    %ebx,%edi
    1d90:	01 0d 73 00 77 04    	add    %ecx,0x4770073
    1d96:	25 3f 1a 03 43       	and    $0x43031a3f,%eax
    1d9b:	41                   	inc    %ecx
    1d9c:	10 00                	adc    %al,(%eax)
    1d9e:	22 00                	and    (%eax),%al
	...
    1da8:	04 00                	add    $0x0,%al
    1daa:	66 02 91 04 04 66 67 	data16 add 0x67660404(%ecx),%dl
    1db1:	02 74 08 04          	add    0x4(%eax,%ecx,1),%dh
    1db5:	67 81 01 02 91 04 04 	addl   $0x4049102,(%bx,%di)
    1dbc:	81 01 82 01 02 74    	addl   $0x74020182,(%ecx)
    1dc2:	08 00                	or     %al,(%eax)
    1dc4:	01 00                	add    %eax,(%eax)
    1dc6:	04 2c                	add    $0x2c,%al
    1dc8:	7b 04                	jnp    1dce <MBOOT_HEADER_FLAGS+0x1dcb>
    1dca:	0a 00                	or     (%eax),%al
    1dcc:	10 9f 00 10 00 00    	adc    %bl,0x1000(%edi)
    1dd2:	00 05 00 04 00 00    	add    %al,0x400
    1dd8:	00 00                	add    %al,(%eax)
    1dda:	00 00                	add    %al,(%eax)
    1ddc:	00 04 4d 58 01 50 00 	add    %al,0x500158(,%ecx,2)
    1de3:	21 00                	and    %eax,(%eax)
    1de5:	00 00                	add    %al,(%eax)
    1de7:	05 00 04 00 00       	add    $0x400,%eax
    1dec:	00 00                	add    %al,(%eax)
    1dee:	00 00                	add    %al,(%eax)
    1df0:	00 00                	add    %al,(%eax)
    1df2:	00 04 30             	add    %al,(%eax,%esi,1)
    1df5:	3a 02                	cmp    (%edx),%al
    1df7:	91                   	xchg   %eax,%ecx
    1df8:	00 04 3a             	add    %al,(%edx,%edi,1)
    1dfb:	3f                   	aas
    1dfc:	01 50 00             	add    %edx,0x0(%eax)
    1dff:	00 00                	add    %al,(%eax)
    1e01:	04 10                	add    $0x10,%al
    1e03:	23 02                	and    (%edx),%eax
    1e05:	91                   	xchg   %eax,%ecx
    1e06:	00 00                	add    %al,(%eax)
    1e08:	71 03                	jno    1e0d <MBOOT_HEADER_FLAGS+0x1e0a>
    1e0a:	00 00                	add    %al,(%eax)
    1e0c:	05 00 04 00 00       	add    $0x400,%eax
    1e11:	00 00                	add    %al,(%eax)
    1e13:	00 03                	add    %al,(%ebx)
    1e15:	00 04 90             	add    %al,(%eax,%edx,4)
    1e18:	04 a2                	add    $0xa2,%al
    1e1a:	04 02                	add    $0x2,%al
    1e1c:	30 9f 00 01 05 03    	xor    %bl,0x3050100(%edi)
    1e22:	07                   	pop    %es
    1e23:	04 c0                	add    $0xc0,%al
    1e25:	04 c0                	add    $0xc0,%al
    1e27:	04 03                	add    $0x3,%al
    1e29:	08 20                	or     %ah,(%eax)
    1e2b:	9f                   	lahf
    1e2c:	04 c3                	add    $0xc3,%al
    1e2e:	04 c3                	add    $0xc3,%al
    1e30:	04 03                	add    $0x3,%al
    1e32:	08 20                	or     %ah,(%eax)
    1e34:	9f                   	lahf
    1e35:	00 01                	add    %al,(%ecx)
    1e37:	05 03 07 04 c0       	add    $0xc0040703,%eax
    1e3c:	04 c0                	add    $0xc0,%al
    1e3e:	04 05                	add    $0x5,%al
    1e40:	03 62 7c             	add    0x7c(%edx),%esp
    1e43:	20 00                	and    %al,(%eax)
    1e45:	04 c3                	add    $0xc3,%al
    1e47:	04 c3                	add    $0xc3,%al
    1e49:	04 05                	add    $0x5,%al
    1e4b:	03 62 7c             	add    0x7c(%edx),%esp
    1e4e:	20 00                	and    %al,(%eax)
    1e50:	00 03                	add    %al,(%ebx)
    1e52:	02 05 00 04 c0 04    	add    0x4c00400,%al
    1e58:	c3                   	ret
    1e59:	04 03                	add    $0x3,%al
    1e5b:	08 20                	or     %ah,(%eax)
    1e5d:	9f                   	lahf
    1e5e:	04 c3                	add    $0xc3,%al
    1e60:	04 82                	add    $0x82,%al
    1e62:	05 03 08 20 9f       	add    $0x9f200803,%eax
    1e67:	00 04 02             	add    %al,(%edx,%eax,1)
    1e6a:	06                   	push   %es
    1e6b:	00 04 c0             	add    %al,(%eax,%eax,8)
    1e6e:	04 c3                	add    $0xc3,%al
    1e70:	04 0b                	add    $0xb,%al
    1e72:	03 62 7c             	add    0x7c(%edx),%esp
    1e75:	20 00                	and    %al,(%eax)
    1e77:	94                   	xchg   %eax,%esp
    1e78:	01 08                	add    %ecx,(%eax)
    1e7a:	ff 1a                	lcall  *(%edx)
    1e7c:	9f                   	lahf
    1e7d:	04 c3                	add    $0xc3,%al
    1e7f:	04 82                	add    $0x82,%al
    1e81:	05 0b 03 62 7c       	add    $0x7c62030b,%eax
    1e86:	20 00                	and    %al,(%eax)
    1e88:	94                   	xchg   %eax,%esp
    1e89:	01 08                	add    %ecx,(%eax)
    1e8b:	ff 1a                	lcall  *(%edx)
    1e8d:	9f                   	lahf
    1e8e:	00 01                	add    %al,(%ecx)
    1e90:	00 04 de             	add    %al,(%esi,%ebx,8)
    1e93:	04 81                	add    $0x81,%al
    1e95:	05 02 30 9f 00       	add    $0x9f3002,%eax
    1e9a:	04 00                	add    $0x0,%al
    1e9c:	04 de                	add    $0xde,%al
    1e9e:	04 e4                	add    $0xe4,%al
    1ea0:	04 04                	add    $0x4,%al
    1ea2:	0a d4                	or     %ah,%dl
    1ea4:	03 9f 00 04 00 04    	add    0x4000400(%edi),%ebx
    1eaa:	de 04 e4             	fiadds (%esp,%eiz,8)
    1ead:	04 02                	add    $0x2,%al
    1eaf:	3f                   	aas
    1eb0:	9f                   	lahf
    1eb1:	00 02                	add    %al,(%edx)
    1eb3:	00 04 e4             	add    %al,(%esp,%eiz,8)
    1eb6:	04 ee                	add    $0xee,%al
    1eb8:	04 04                	add    $0x4,%al
    1eba:	0a d5                	or     %ch,%dl
    1ebc:	03 9f 00 02 00 04    	add    0x4000200(%edi),%ebx
    1ec2:	e4 04                	in     $0x4,%al
    1ec4:	ee                   	out    %al,(%dx)
    1ec5:	04 02                	add    $0x2,%al
    1ec7:	30 9f 00 02 00 04    	xor    %bl,0x4000200(%edi)
    1ecd:	ee                   	out    %al,(%dx)
    1ece:	04 f9                	add    $0xf9,%al
    1ed0:	04 04                	add    $0x4,%al
    1ed2:	0a d4                	or     %ah,%dl
    1ed4:	03 9f 00 02 00 04    	add    0x4000200(%edi),%ebx
    1eda:	ee                   	out    %al,(%dx)
    1edb:	04 f9                	add    $0xf9,%al
    1edd:	04 02                	add    $0x2,%al
    1edf:	3e 9f                	ds lahf
    1ee1:	00 02                	add    %al,(%edx)
    1ee3:	00 04 f9             	add    %al,(%ecx,%edi,8)
    1ee6:	04 81                	add    $0x81,%al
    1ee8:	05 04 0a d5 03       	add    $0x3d50a04,%eax
    1eed:	9f                   	lahf
    1eee:	00 02                	add    %al,(%edx)
    1ef0:	00 04 f9             	add    %al,(%ecx,%edi,8)
    1ef3:	04 81                	add    $0x81,%al
    1ef5:	05 02 30 9f 00       	add    $0x9f3002,%eax
    1efa:	02 00                	add    (%eax),%al
    1efc:	00 00                	add    %al,(%eax)
    1efe:	00 01                	add    %al,(%ecx)
    1f00:	04 d3                	add    $0xd3,%al
    1f02:	03 e1                	add    %ecx,%esp
    1f04:	03 02                	add    (%edx),%eax
    1f06:	30 9f 04 e1 03 f4    	xor    %bl,-0xbfc1efc(%edi)
    1f0c:	03 08                	add    (%eax),%ecx
    1f0e:	91                   	xchg   %eax,%ecx
    1f0f:	00 06                	add    %al,(%esi)
    1f11:	20 73 00             	and    %dh,0x0(%ebx)
    1f14:	22 9f 04 f4 03 f9    	and    -0x6fc0bfc(%edi),%bl
    1f1a:	03 09                	add    (%ecx),%ecx
    1f1c:	73 00                	jae    1f1e <MBOOT_HEADER_FLAGS+0x1f1b>
    1f1e:	91                   	xchg   %eax,%ecx
    1f1f:	00 06                	add    %al,(%esi)
    1f21:	1c 32                	sbb    $0x32,%al
    1f23:	1c 9f                	sbb    $0x9f,%al
    1f25:	00 00                	add    %al,(%eax)
    1f27:	00 04 d0             	add    %al,(%eax,%edx,8)
    1f2a:	01 d6                	add    %edx,%esi
    1f2c:	01 02                	add    %eax,(%edx)
    1f2e:	30 9f 00 01 05 03    	xor    %bl,0x3050100(%edi)
    1f34:	07                   	pop    %es
    1f35:	04 a0                	add    $0xa0,%al
    1f37:	02 a0 02 03 08 20    	add    0x20080302(%eax),%ah
    1f3d:	9f                   	lahf
    1f3e:	04 a3                	add    $0xa3,%al
    1f40:	02 a3 02 03 08 20    	add    0x20080302(%ebx),%ah
    1f46:	9f                   	lahf
    1f47:	00 01                	add    %al,(%ecx)
    1f49:	05 03 07 04 a0       	add    $0xa0040703,%eax
    1f4e:	02 a0 02 05 03 62    	add    0x62030502(%eax),%ah
    1f54:	7c 20                	jl     1f76 <MBOOT_HEADER_FLAGS+0x1f73>
    1f56:	00 04 a3             	add    %al,(%ebx,%eiz,4)
    1f59:	02 a3 02 05 03 62    	add    0x62030502(%ebx),%ah
    1f5f:	7c 20                	jl     1f81 <MBOOT_HEADER_FLAGS+0x1f7e>
    1f61:	00 00                	add    %al,(%eax)
    1f63:	03 02                	add    (%edx),%eax
    1f65:	05 00 04 a0 02       	add    $0x2a00400,%eax
    1f6a:	a3 02 03 08 20       	mov    %eax,0x20080302
    1f6f:	9f                   	lahf
    1f70:	04 a3                	add    $0xa3,%al
    1f72:	02 c6                	add    %dh,%al
    1f74:	02 03                	add    (%ebx),%al
    1f76:	08 20                	or     %ah,(%eax)
    1f78:	9f                   	lahf
    1f79:	00 04 02             	add    %al,(%edx,%eax,1)
    1f7c:	06                   	push   %es
    1f7d:	00 04 a0             	add    %al,(%eax,%eiz,4)
    1f80:	02 a3 02 0b 03 62    	add    0x62030b02(%ebx),%ah
    1f86:	7c 20                	jl     1fa8 <MBOOT_HEADER_FLAGS+0x1fa5>
    1f88:	00 94 01 08 ff 1a 9f 	add    %dl,-0x60e500f8(%ecx,%eax,1)
    1f8f:	04 a3                	add    $0xa3,%al
    1f91:	02 c6                	add    %dh,%al
    1f93:	02 0b                	add    (%ebx),%cl
    1f95:	03 62 7c             	add    0x7c(%edx),%esp
    1f98:	20 00                	and    %al,(%eax)
    1f9a:	94                   	xchg   %eax,%esp
    1f9b:	01 08                	add    %ecx,(%eax)
    1f9d:	ff 1a                	lcall  *(%edx)
    1f9f:	9f                   	lahf
    1fa0:	00 01                	add    %al,(%ecx)
    1fa2:	05 04 91 01 91       	add    $0x91019104,%eax
    1fa7:	01 01                	add    %eax,(%ecx)
    1fa9:	51                   	push   %ecx
    1faa:	00 01                	add    %al,(%ecx)
    1fac:	05 04 91 01 91       	add    $0x91019104,%eax
    1fb1:	01 05 03 62 7c 20    	add    %eax,0x207c6203
    1fb7:	00 00                	add    %al,(%eax)
    1fb9:	03 00                	add    (%eax),%eax
    1fbb:	00 01                	add    %al,(%ecx)
    1fbd:	04 91                	add    $0x91,%al
    1fbf:	01 9c 01 07 71 00 48 	add    %ebx,0x48007107(%ecx,%eax,1)
    1fc6:	24 48                	and    $0x48,%al
    1fc8:	26 9f                	es lahf
    1fca:	04 9c                	add    $0x9c,%al
    1fcc:	01 b5 01 01 51 00    	add    %esi,0x510101(%ebp)
    1fd2:	04 00                	add    $0x0,%al
    1fd4:	00 00                	add    %al,(%eax)
    1fd6:	00 01                	add    %al,(%ecx)
    1fd8:	04 91                	add    $0x91,%al
    1fda:	01 98 01 0b 03 62    	add    %ebx,0x62030b01(%eax)
    1fe0:	7c 20                	jl     2002 <MBOOT_HEADER_FLAGS+0x1fff>
    1fe2:	00 94 01 08 ff 1a 9f 	add    %dl,-0x60e500f8(%ecx,%eax,1)
    1fe9:	04 98                	add    $0x98,%al
    1feb:	01 ab 01 01 52 04    	add    %ebp,0x4520101(%ebx)
    1ff1:	ab                   	stos   %eax,%es:(%edi)
    1ff2:	01 b5 01 0b 03 62    	add    %esi,0x62030b01(%ebp)
    1ff8:	7c 20                	jl     201a <MBOOT_HEADER_FLAGS+0x2017>
    1ffa:	00 94 01 08 ff 1a 9f 	add    %dl,-0x60e500f8(%ecx,%eax,1)
    2001:	00 01                	add    %al,(%ecx)
    2003:	00 04 c6             	add    %al,(%esi,%eax,8)
    2006:	02 eb                	add    %bl,%ch
    2008:	02 05 03 60 7c 20    	add    0x207c6003,%al
    200e:	00 00                	add    %al,(%eax)
    2010:	04 00                	add    $0x0,%al
    2012:	04 c6                	add    $0xc6,%al
    2014:	02 d1                	add    %cl,%dl
    2016:	02 04 0a             	add    (%edx,%ecx,1),%al
    2019:	d4 03                	aam    $0x3
    201b:	9f                   	lahf
    201c:	00 04 00             	add    %al,(%eax,%eax,1)
    201f:	04 c6                	add    $0xc6,%al
    2021:	02 d1                	add    %cl,%dl
    2023:	02 02                	add    (%edx),%al
    2025:	3f                   	aas
    2026:	9f                   	lahf
    2027:	00 02                	add    %al,(%edx)
    2029:	00 04 d1             	add    %al,(%ecx,%edx,8)
    202c:	02 db                	add    %bl,%bl
    202e:	02 04 0a             	add    (%edx,%ecx,1),%al
    2031:	d5 03                	aad    $0x3
    2033:	9f                   	lahf
    2034:	00 02                	add    %al,(%edx)
    2036:	00 04 d1             	add    %al,(%ecx,%edx,8)
    2039:	02 db                	add    %bl,%bl
    203b:	02 05 03 60 7c 20    	add    0x207c6003,%al
    2041:	00 00                	add    %al,(%eax)
    2043:	02 00                	add    (%eax),%al
    2045:	04 db                	add    $0xdb,%al
    2047:	02 e6                	add    %dh,%ah
    2049:	02 04 0a             	add    (%edx,%ecx,1),%al
    204c:	d4 03                	aam    $0x3
    204e:	9f                   	lahf
    204f:	00 02                	add    %al,(%edx)
    2051:	00 04 db             	add    %al,(%ebx,%ebx,8)
    2054:	02 e6                	add    %dh,%ah
    2056:	02 02                	add    (%edx),%al
    2058:	3e 9f                	ds lahf
    205a:	00 02                	add    %al,(%edx)
    205c:	00 04 e6             	add    %al,(%esi,%eiz,8)
    205f:	02 eb                	add    %bl,%ch
    2061:	02 04 0a             	add    (%edx,%ecx,1),%al
    2064:	d5 03                	aad    $0x3
    2066:	9f                   	lahf
    2067:	00 02                	add    %al,(%edx)
    2069:	00 04 e6             	add    %al,(%esi,%eiz,8)
    206c:	02 eb                	add    %bl,%ch
    206e:	02 05 03 61 7c 20    	add    0x207c6103,%al
    2074:	00 00                	add    %al,(%eax)
    2076:	01 05 04 87 03 87    	add    %eax,0x87038704
    207c:	03 03                	add    (%ebx),%eax
    207e:	08 20                	or     %ah,(%eax)
    2080:	9f                   	lahf
    2081:	00 01                	add    %al,(%ecx)
    2083:	05 04 87 03 87       	add    $0x87038704,%eax
    2088:	03 05 03 62 7c 20    	add    0x207c6203,%eax
    208e:	00 00                	add    %al,(%eax)
    2090:	03 00                	add    (%eax),%eax
    2092:	04 87                	add    $0x87,%al
    2094:	03 a4 03 03 08 20 9f 	add    -0x60dff7fd(%ebx,%eax,1),%esp
    209b:	00 04 00             	add    %al,(%eax,%eax,1)
    209e:	00 00                	add    %al,(%eax)
    20a0:	04 87                	add    $0x87,%al
    20a2:	03 8a 03 01 52 04    	add    0x4520103(%edx),%ecx
    20a8:	8a 03                	mov    (%ebx),%al
    20aa:	a4                   	movsb  %ds:(%esi),%es:(%edi)
    20ab:	03 0b                	add    (%ebx),%ecx
    20ad:	03 62 7c             	add    0x7c(%edx),%esp
    20b0:	20 00                	and    %al,(%eax)
    20b2:	94                   	xchg   %eax,%esp
    20b3:	01 08                	add    %ecx,(%eax)
    20b5:	ff 1a                	lcall  *(%edx)
    20b7:	9f                   	lahf
    20b8:	00 02                	add    %al,(%edx)
    20ba:	00 04 0f             	add    %al,(%edi,%ecx,1)
    20bd:	14 02                	adc    $0x2,%al
    20bf:	30 9f 00 01 00 04    	xor    %bl,0x4000100(%edi)
    20c5:	3c 64                	cmp    $0x64,%al
    20c7:	02 30                	add    (%eax),%dh
    20c9:	9f                   	lahf
    20ca:	00 04 00             	add    %al,(%eax,%eax,1)
    20cd:	04 3c                	add    $0x3c,%al
    20cf:	47                   	inc    %edi
    20d0:	04 0a                	add    $0xa,%al
    20d2:	d4 03                	aam    $0x3
    20d4:	9f                   	lahf
    20d5:	00 04 00             	add    %al,(%eax,%eax,1)
    20d8:	04 3c                	add    $0x3c,%al
    20da:	47                   	inc    %edi
    20db:	02 3f                	add    (%edi),%bh
    20dd:	9f                   	lahf
    20de:	00 02                	add    %al,(%edx)
    20e0:	00 04 47             	add    %al,(%edi,%eax,2)
    20e3:	51                   	push   %ecx
    20e4:	04 0a                	add    $0xa,%al
    20e6:	d5 03                	aad    $0x3
    20e8:	9f                   	lahf
    20e9:	00 02                	add    %al,(%edx)
    20eb:	00 04 47             	add    %al,(%edi,%eax,2)
    20ee:	51                   	push   %ecx
    20ef:	02 30                	add    (%eax),%dh
    20f1:	9f                   	lahf
    20f2:	00 02                	add    %al,(%edx)
    20f4:	00 04 51             	add    %al,(%ecx,%edx,2)
    20f7:	5c                   	pop    %esp
    20f8:	04 0a                	add    $0xa,%al
    20fa:	d4 03                	aam    $0x3
    20fc:	9f                   	lahf
    20fd:	00 02                	add    %al,(%edx)
    20ff:	00 04 51             	add    %al,(%ecx,%edx,2)
    2102:	5c                   	pop    %esp
    2103:	02 3e                	add    (%esi),%bh
    2105:	9f                   	lahf
    2106:	00 02                	add    %al,(%edx)
    2108:	00 04 5c             	add    %al,(%esp,%ebx,2)
    210b:	64 04 0a             	fs add $0xa,%al
    210e:	d5 03                	aad    $0x3
    2110:	9f                   	lahf
    2111:	00 02                	add    %al,(%edx)
    2113:	00 04 5c             	add    %al,(%esp,%ebx,2)
    2116:	64 02 30             	add    %fs:(%eax),%dh
    2119:	9f                   	lahf
    211a:	00 01                	add    %al,(%ecx)
    211c:	00 04 a9             	add    %al,(%ecx,%ebp,4)
    211f:	05 aa 05 04 0a       	add    $0xa0405aa,%eax
    2124:	d4 03                	aam    $0x3
    2126:	9f                   	lahf
    2127:	00 01                	add    %al,(%ecx)
    2129:	00 04 a9             	add    %al,(%ecx,%ebp,4)
    212c:	05 aa 05 02 3f       	add    $0x3f0205aa,%eax
    2131:	9f                   	lahf
    2132:	00 02                	add    %al,(%edx)
    2134:	00 04 aa             	add    %al,(%edx,%ebp,4)
    2137:	05 b4 05 04 0a       	add    $0xa0405b4,%eax
    213c:	d5 03                	aad    $0x3
    213e:	9f                   	lahf
    213f:	00 02                	add    %al,(%edx)
    2141:	00 04 aa             	add    %al,(%edx,%ebp,4)
    2144:	05 b4 05 01 51       	add    $0x510105b4,%eax
    2149:	00 02                	add    %al,(%edx)
    214b:	00 04 b4             	add    %al,(%esp,%esi,4)
    214e:	05 bf 05 04 0a       	add    $0xa0405bf,%eax
    2153:	d4 03                	aam    $0x3
    2155:	9f                   	lahf
    2156:	00 02                	add    %al,(%edx)
    2158:	00 04 b4             	add    %al,(%esp,%esi,4)
    215b:	05 bf 05 02 3e       	add    $0x3e0205bf,%eax
    2160:	9f                   	lahf
    2161:	00 02                	add    %al,(%edx)
    2163:	00 04 bf             	add    %al,(%edi,%edi,4)
    2166:	05 c8 05 04 0a       	add    $0xa0405c8,%eax
    216b:	d5 03                	aad    $0x3
    216d:	9f                   	lahf
    216e:	00 02                	add    %al,(%edx)
    2170:	00 04 bf             	add    %al,(%edi,%edi,4)
    2173:	05 c8 05 05 71       	add    $0x710505c8,%eax
    2178:	00 38                	add    %bh,(%eax)
    217a:	25 9f 00 5a 00       	and    $0x5a009f,%eax
    217f:	00 00                	add    %al,(%eax)
    2181:	05 00 04 00 00       	add    $0x400,%eax
	...
    2192:	00 04 00             	add    %al,(%eax,%eax,1)
    2195:	1f                   	pop    %ds
    2196:	02 91 00 04 40 64    	add    0x64400400(%ecx),%dl
    219c:	01 51 04             	add    %edx,0x4(%ecx)
    219f:	64 6f                	outsl  %fs:(%esi),(%dx)
    21a1:	01 52 04             	add    %edx,0x4(%edx)
    21a4:	6f                   	outsl  %ds:(%esi),(%dx)
    21a5:	71 01                	jno    21a8 <MBOOT_HEADER_FLAGS+0x21a5>
    21a7:	51                   	push   %ecx
    21a8:	04 9e                	add    $0x9e,%al
    21aa:	01 b0 01 02 91 00    	add    %esi,0x910201(%eax)
    21b0:	00 00                	add    %al,(%eax)
    21b2:	00 00                	add    %al,(%eax)
    21b4:	00 04 00             	add    %al,(%eax,%eax,1)
    21b7:	1a 02                	sbb    (%edx),%al
    21b9:	91                   	xchg   %eax,%ecx
    21ba:	04 04                	add    $0x4,%al
    21bc:	9e                   	sahf
    21bd:	01 b0 01 02 91 04    	add    %esi,0x4910201(%eax)
    21c3:	00 00                	add    %al,(%eax)
    21c5:	00 00                	add    %al,(%eax)
    21c7:	00 04 40             	add    %al,(%eax,%eax,2)
    21ca:	9b                   	fwait
    21cb:	01 01                	add    %eax,(%ecx)
    21cd:	56                   	push   %esi
    21ce:	04 9b                	add    $0x9b,%al
    21d0:	01 9e 01 06 91 5c    	add    %ebx,0x5c910601(%esi)
    21d6:	06                   	push   %es
    21d7:	23 01                	and    (%ecx),%eax
    21d9:	9f                   	lahf
    21da:	00 08                	add    %cl,(%eax)
    21dc:	03 00                	add    (%eax),%eax
    21de:	00 05 00 04 00 00    	add    %al,0x400
	...
    21ec:	00 04 f0             	add    %al,(%eax,%esi,8)
    21ef:	03 85 04 02 91 00    	add    0x910204(%ebp),%eax
    21f5:	04 85                	add    $0x85,%al
    21f7:	04 bb                	add    $0xbb,%al
    21f9:	04 01                	add    $0x1,%al
    21fb:	56                   	push   %esi
    21fc:	04 bb                	add    $0xbb,%al
    21fe:	04 bd                	add    $0xbd,%al
    2200:	04 02                	add    $0x2,%al
    2202:	91                   	xchg   %eax,%ecx
    2203:	00 00                	add    %al,(%eax)
    2205:	00 00                	add    %al,(%eax)
    2207:	00 00                	add    %al,(%eax)
    2209:	04 f0                	add    $0xf0,%al
    220b:	03 a0 04 02 91 04    	add    0x4910204(%eax),%esp
    2211:	04 a0                	add    $0xa0,%al
    2213:	04 bd                	add    $0xbd,%al
    2215:	04 01                	add    $0x1,%al
    2217:	52                   	push   %edx
    2218:	00 00                	add    %al,(%eax)
    221a:	02 02                	add    (%edx),%al
    221c:	00 04 f0             	add    %al,(%eax,%esi,8)
    221f:	03 98 04 02 91 08    	add    0x8910204(%eax),%ebx
    2225:	04 98                	add    $0x98,%al
    2227:	04 b4                	add    $0xb4,%al
    2229:	04 06                	add    $0x6,%al
    222b:	91                   	xchg   %eax,%ecx
    222c:	08 06                	or     %al,(%esi)
    222e:	31 1c 9f             	xor    %ebx,(%edi,%ebx,4)
    2231:	00 00                	add    %al,(%eax)
    2233:	00 04 98             	add    %al,(%eax,%ebx,4)
    2236:	04 b9                	add    $0xb9,%al
    2238:	04 01                	add    $0x1,%al
    223a:	50                   	push   %eax
    223b:	00 01                	add    %al,(%ecx)
    223d:	00 00                	add    %al,(%eax)
    223f:	00 04 fa             	add    %al,(%edx,%edi,8)
    2242:	03 85 04 02 91 00    	add    0x910204(%ebp),%eax
    2248:	04 85                	add    $0x85,%al
    224a:	04 98                	add    $0x98,%al
    224c:	04 01                	add    $0x1,%al
    224e:	56                   	push   %esi
    224f:	00 03                	add    %al,(%ebx)
    2251:	00 00                	add    %al,(%eax)
    2253:	00 04 fa             	add    %al,(%edx,%edi,8)
    2256:	03 85 04 02 91 00    	add    0x910204(%ebp),%eax
    225c:	04 85                	add    $0x85,%al
    225e:	04 98                	add    $0x98,%al
    2260:	04 01                	add    $0x1,%al
    2262:	50                   	push   %eax
    2263:	00 00                	add    %al,(%eax)
    2265:	00 00                	add    %al,(%eax)
    2267:	00 00                	add    %al,(%eax)
    2269:	00 04 a0             	add    %al,(%eax,%eiz,4)
    226c:	03 b2 03 02 91 00    	add    0x910203(%edx),%esi
    2272:	04 b2                	add    $0xb2,%al
    2274:	03 e2                	add    %edx,%esp
    2276:	03 01                	add    (%ecx),%eax
    2278:	56                   	push   %esi
    2279:	04 e2                	add    $0xe2,%al
    227b:	03 e4                	add    %esp,%esp
    227d:	03 02                	add    (%edx),%eax
    227f:	91                   	xchg   %eax,%ecx
    2280:	00 00                	add    %al,(%eax)
    2282:	00 00                	add    %al,(%eax)
    2284:	00 02                	add    %al,(%edx)
    2286:	02 00                	add    (%eax),%al
    2288:	00 00                	add    %al,(%eax)
    228a:	04 a0                	add    $0xa0,%al
    228c:	03 ca                	add    %edx,%ecx
    228e:	03 02                	add    (%edx),%eax
    2290:	91                   	xchg   %eax,%ecx
    2291:	04 04                	add    $0x4,%al
    2293:	d0 03                	rolb   $1,(%ebx)
    2295:	d0 03                	rolb   $1,(%ebx)
    2297:	07                   	pop    %es
    2298:	91                   	xchg   %eax,%ecx
    2299:	04 06                	add    $0x6,%al
    229b:	70 00                	jo     229d <MBOOT_HEADER_FLAGS+0x229a>
    229d:	22 9f 04 d0 03 da    	and    -0x25fc2ffc(%edi),%bl
    22a3:	03 09                	add    (%ecx),%ecx
    22a5:	91                   	xchg   %eax,%ecx
    22a6:	04 06                	add    $0x6,%al
    22a8:	70 00                	jo     22aa <MBOOT_HEADER_FLAGS+0x22a7>
    22aa:	22 23                	and    (%ebx),%ah
    22ac:	01 9f 04 da 03 e0    	add    %ebx,-0x1ffc25fc(%edi)
    22b2:	03 07                	add    (%edi),%eax
    22b4:	91                   	xchg   %eax,%ecx
    22b5:	04 06                	add    $0x6,%al
    22b7:	70 00                	jo     22b9 <MBOOT_HEADER_FLAGS+0x22b6>
    22b9:	22 9f 00 00 02 02    	and    0x2020000(%edi),%bl
    22bf:	00 00                	add    %al,(%eax)
    22c1:	00 04 d0             	add    %al,(%eax,%edx,8)
    22c4:	03 d0                	add    %eax,%edx
    22c6:	03 06                	add    (%esi),%eax
    22c8:	72 00                	jb     22ca <MBOOT_HEADER_FLAGS+0x22c7>
    22ca:	70 00                	jo     22cc <MBOOT_HEADER_FLAGS+0x22c9>
    22cc:	22 9f 04 d0 03 da    	and    -0x25fc2ffc(%edi),%bl
    22d2:	03 08                	add    (%eax),%ecx
    22d4:	72 00                	jb     22d6 <MBOOT_HEADER_FLAGS+0x22d3>
    22d6:	70 00                	jo     22d8 <MBOOT_HEADER_FLAGS+0x22d5>
    22d8:	22 23                	and    (%ebx),%ah
    22da:	01 9f 04 da 03 e0    	add    %ebx,-0x1ffc25fc(%edi)
    22e0:	03 06                	add    (%esi),%eax
    22e2:	72 00                	jb     22e4 <MBOOT_HEADER_FLAGS+0x22e1>
    22e4:	70 00                	jo     22e6 <MBOOT_HEADER_FLAGS+0x22e3>
    22e6:	22 9f 00 00 00 00    	and    0x0(%edi),%bl
    22ec:	00 04 a7             	add    %al,(%edi,%eiz,4)
    22ef:	03 b2 03 02 91 00    	add    0x910203(%edx),%esi
    22f5:	04 b2                	add    $0xb2,%al
    22f7:	03 ca                	add    %edx,%ecx
    22f9:	03 01                	add    (%ecx),%eax
    22fb:	56                   	push   %esi
    22fc:	00 02                	add    %al,(%edx)
    22fe:	00 00                	add    %al,(%eax)
    2300:	00 04 a7             	add    %al,(%edi,%eiz,4)
    2303:	03 b2 03 02 91 00    	add    0x910203(%edx),%esi
    2309:	04 b2                	add    $0xb2,%al
    230b:	03 ca                	add    %edx,%ecx
    230d:	03 01                	add    (%ecx),%eax
    230f:	52                   	push   %edx
    2310:	00 00                	add    %al,(%eax)
    2312:	00 00                	add    %al,(%eax)
    2314:	01 01                	add    %eax,(%ecx)
    2316:	00 00                	add    %al,(%eax)
    2318:	00 04 f0             	add    %al,(%eax,%esi,8)
    231b:	02 fc                	add    %ah,%bh
    231d:	02 02                	add    (%edx),%al
    231f:	91                   	xchg   %eax,%ecx
    2320:	04 04                	add    $0x4,%al
    2322:	80 03 80             	addb   $0x80,(%ebx)
    2325:	03 07                	add    (%edi),%eax
    2327:	91                   	xchg   %eax,%ecx
    2328:	04 06                	add    $0x6,%al
    232a:	70 00                	jo     232c <MBOOT_HEADER_FLAGS+0x2329>
    232c:	22 9f 04 80 03 8a    	and    -0x75fc7ffc(%edi),%bl
    2332:	03 09                	add    (%ecx),%ecx
    2334:	91                   	xchg   %eax,%ecx
    2335:	04 06                	add    $0x6,%al
    2337:	70 00                	jo     2339 <MBOOT_HEADER_FLAGS+0x2336>
    2339:	22 23                	and    (%ebx),%ah
    233b:	01 9f 04 8a 03 93    	add    %ebx,-0x6cfc75fc(%edi)
    2341:	03 07                	add    (%edi),%eax
    2343:	91                   	xchg   %eax,%ecx
    2344:	04 06                	add    $0x6,%al
    2346:	70 00                	jo     2348 <MBOOT_HEADER_FLAGS+0x2345>
    2348:	22 9f 00 00 00 00    	and    0x0(%edi),%bl
    234e:	01 01                	add    %eax,(%ecx)
    2350:	00 00                	add    %al,(%eax)
    2352:	00 04 f9             	add    %al,(%ecx,%edi,8)
    2355:	02 fc                	add    %ah,%bh
    2357:	02 02                	add    (%edx),%al
    2359:	91                   	xchg   %eax,%ecx
    235a:	00 04 80             	add    %al,(%eax,%eax,4)
    235d:	03 80 03 07 91 00    	add    0x910703(%eax),%eax
    2363:	06                   	push   %es
    2364:	70 00                	jo     2366 <MBOOT_HEADER_FLAGS+0x2363>
    2366:	22 9f 04 80 03 8a    	and    -0x75fc7ffc(%edi),%bl
    236c:	03 09                	add    (%ecx),%ecx
    236e:	91                   	xchg   %eax,%ecx
    236f:	00 06                	add    %al,(%esi)
    2371:	70 00                	jo     2373 <MBOOT_HEADER_FLAGS+0x2370>
    2373:	22 23                	and    (%ebx),%ah
    2375:	01 9f 04 8a 03 93    	add    %ebx,-0x6cfc75fc(%edi)
    237b:	03 07                	add    (%edi),%eax
    237d:	91                   	xchg   %eax,%ecx
    237e:	00 06                	add    %al,(%esi)
    2380:	70 00                	jo     2382 <MBOOT_HEADER_FLAGS+0x237f>
    2382:	22 9f 00 00 00 00    	and    0x0(%edi),%bl
    2388:	00 04 90             	add    %al,(%eax,%edx,4)
    238b:	02 a2 02 02 91 00    	add    0x910202(%edx),%ah
    2391:	04 a2                	add    $0xa2,%al
    2393:	02 e9                	add    %cl,%ch
    2395:	02 01                	add    (%ecx),%al
    2397:	51                   	push   %ecx
    2398:	00 00                	add    %al,(%eax)
    239a:	00 00                	add    %al,(%eax)
    239c:	00 00                	add    %al,(%eax)
    239e:	00 04 90             	add    %al,(%eax,%edx,4)
    23a1:	02 a2 02 02 91 04    	add    0x4910202(%edx),%ah
    23a7:	04 a2                	add    $0xa2,%al
    23a9:	02 d5                	add    %ch,%dl
    23ab:	02 01                	add    (%ecx),%al
    23ad:	52                   	push   %edx
    23ae:	04 d9                	add    $0xd9,%al
    23b0:	02 e3                	add    %bl,%ah
    23b2:	02 01                	add    (%ecx),%al
    23b4:	52                   	push   %edx
    23b5:	00 00                	add    %al,(%eax)
    23b7:	04 04                	add    $0x4,%al
    23b9:	00 04 b0             	add    %al,(%eax,%esi,4)
    23bc:	01 be 01 02 91 08    	add    %edi,0x8910201(%esi)
    23c2:	04 be                	add    $0xbe,%al
    23c4:	01 fd                	add    %edi,%ebp
    23c6:	01 06                	add    %eax,(%esi)
    23c8:	91                   	xchg   %eax,%ecx
    23c9:	08 06                	or     %al,(%esi)
    23cb:	31 1c 9f             	xor    %ebx,(%edi,%ebx,4)
    23ce:	00 01                	add    %al,(%ecx)
    23d0:	00 00                	add    %al,(%eax)
    23d2:	00 00                	add    %al,(%eax)
    23d4:	00 04 be             	add    %al,(%esi,%edi,4)
    23d7:	01 c6                	add    %eax,%esi
    23d9:	01 02                	add    %eax,(%edx)
    23db:	91                   	xchg   %eax,%ecx
    23dc:	00 04 c6             	add    %al,(%esi,%eax,8)
    23df:	01 f7                	add    %esi,%edi
    23e1:	01 01                	add    %eax,(%ecx)
    23e3:	50                   	push   %eax
    23e4:	04 fd                	add    $0xfd,%al
    23e6:	01 83 02 01 50 00    	add    %eax,0x500102(%ebx)
    23ec:	02 00                	add    (%eax),%al
    23ee:	00 00                	add    %al,(%eax)
    23f0:	04 be                	add    $0xbe,%al
    23f2:	01 c6                	add    %eax,%esi
    23f4:	01 02                	add    %eax,(%edx)
    23f6:	91                   	xchg   %eax,%ecx
    23f7:	04 04                	add    $0x4,%al
    23f9:	c6 01 86             	movb   $0x86,(%ecx)
    23fc:	02 01                	add    (%ecx),%al
    23fe:	52                   	push   %edx
    23ff:	00 00                	add    %al,(%eax)
    2401:	00 00                	add    %al,(%eax)
    2403:	00 04 80             	add    %al,(%eax,%eax,4)
    2406:	01 96 01 02 91 00    	add    %edx,0x910201(%esi)
    240c:	04 96                	add    $0x96,%al
    240e:	01 ab 01 01 52 00    	add    %ebp,0x520101(%ebx)
    2414:	00 04 04             	add    %al,(%esp,%eax,1)
    2417:	00 00                	add    %al,(%eax)
    2419:	00 04 80             	add    %al,(%eax,%eax,4)
    241c:	01 8e 01 02 91 08    	add    %ecx,0x8910201(%esi)
    2422:	04 8e                	add    $0x8e,%al
    2424:	01 96 01 06 91 08    	add    %edx,0x8910601(%esi)
    242a:	06                   	push   %es
    242b:	31 1c 9f             	xor    %ebx,(%edi,%ebx,4)
    242e:	04 a0                	add    $0xa0,%al
    2430:	01 a5 01 06 91 08    	add    %esp,0x8910601(%ebp)
    2436:	06                   	push   %es
    2437:	31 1c 9f             	xor    %ebx,(%edi,%ebx,4)
    243a:	00 01                	add    %al,(%ecx)
    243c:	00 00                	add    %al,(%eax)
    243e:	01 01                	add    %eax,(%ecx)
    2440:	00 00                	add    %al,(%eax)
    2442:	00 04 8e             	add    %al,(%esi,%ecx,4)
    2445:	01 96 01 02 91 00    	add    %edx,0x910201(%esi)
    244b:	04 96                	add    $0x96,%al
    244d:	01 a0 01 01 57 04    	add    %esp,0x4570101(%eax)
    2453:	a0 01 a1 01 03       	mov    0x301a101,%al
    2458:	77 01                	ja     245b <MBOOT_HEADER_FLAGS+0x2458>
    245a:	9f                   	lahf
    245b:	04 a1                	add    $0xa1,%al
    245d:	01 a5 01 01 57 00    	add    %esp,0x570101(%ebp)
    2463:	02 00                	add    (%eax),%al
    2465:	00 01                	add    %al,(%ecx)
    2467:	01 00                	add    %eax,(%eax)
    2469:	00 00                	add    %al,(%eax)
    246b:	04 8e                	add    $0x8e,%al
    246d:	01 96 01 02 91 04    	add    %edx,0x4910201(%esi)
    2473:	04 96                	add    $0x96,%al
    2475:	01 a0 01 01 56 04    	add    %esp,0x4560101(%eax)
    247b:	a0 01 a1 01 03       	mov    0x301a101,%al
    2480:	76 01                	jbe    2483 <MBOOT_HEADER_FLAGS+0x2480>
    2482:	9f                   	lahf
    2483:	04 a1                	add    $0xa1,%al
    2485:	01 a6 01 01 56 00    	add    %esp,0x560101(%esi)
    248b:	00 02                	add    %al,(%edx)
    248d:	02 00                	add    (%eax),%al
    248f:	04 30                	add    $0x30,%al
    2491:	37                   	aaa
    2492:	02 91 08 04 37 52    	add    0x52370408(%ecx),%dl
    2498:	06                   	push   %es
    2499:	91                   	xchg   %eax,%ecx
    249a:	08 06                	or     %al,(%esi)
    249c:	31 1c 9f             	xor    %ebx,(%edi,%ebx,4)
    249f:	00 00                	add    %al,(%eax)
    24a1:	00 00                	add    %al,(%eax)
    24a3:	02 02                	add    (%edx),%al
    24a5:	00 00                	add    %al,(%eax)
    24a7:	00 04 37             	add    %al,(%edi,%esi,1)
    24aa:	59                   	pop    %ecx
    24ab:	02 91 00 04 59 60    	add    0x60590400(%ecx),%dl
    24b1:	01 50 04             	add    %edx,0x4(%eax)
    24b4:	60                   	pusha
    24b5:	65 03 70 01          	add    %gs:0x1(%eax),%esi
    24b9:	9f                   	lahf
    24ba:	04 65                	add    $0x65,%al
    24bc:	6c                   	insb   (%dx),%es:(%edi)
    24bd:	01 50 00             	add    %edx,0x0(%eax)
    24c0:	00 00                	add    %al,(%eax)
    24c2:	00 00                	add    %al,(%eax)
    24c4:	04 00                	add    $0x0,%al
    24c6:	0d 02 91 00 04       	or     $0x4009102,%eax
    24cb:	0d 24 01 52 00       	or     $0x520124,%eax
    24d0:	00 00                	add    %al,(%eax)
    24d2:	00 00                	add    %al,(%eax)
    24d4:	00 00                	add    %al,(%eax)
    24d6:	04 06                	add    $0x6,%al
    24d8:	0d 02 91 00 04       	or     $0x4009102,%eax
    24dd:	0d 1a 01 50 04       	or     $0x450011a,%eax
    24e2:	1c 24                	sbb    $0x24,%al
    24e4:	01 52 00             	add    %edx,0x0(%edx)

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	1c 00                	sbb    $0x0,%al
   2:	00 00                	add    %al,(%eax)
   4:	02 00                	add    (%eax),%al
   6:	00 00                	add    %al,(%eax)
   8:	00 00                	add    %al,(%eax)
   a:	04 00                	add    $0x0,%al
   c:	00 00                	add    %al,(%eax)
   e:	00 00                	add    %al,(%eax)
  10:	10 00                	adc    %al,(%eax)
  12:	10 00                	adc    %al,(%eax)
  14:	d1 00                	roll   $1,(%eax)
	...
  1e:	00 00                	add    %al,(%eax)
  20:	1c 00                	sbb    $0x0,%al
  22:	00 00                	add    %al,(%eax)
  24:	02 00                	add    (%eax),%al
  26:	de 02                	fiadds (%edx)
  28:	00 00                	add    %al,(%eax)
  2a:	04 00                	add    $0x0,%al
  2c:	00 00                	add    %al,(%eax)
  2e:	00 00                	add    %al,(%eax)
  30:	f0 00 10             	lock add %dl,(%eax)
  33:	00 04 01             	add    %al,(%ecx,%eax,1)
	...
  3e:	00 00                	add    %al,(%eax)
  40:	1c 00                	sbb    $0x0,%al
  42:	00 00                	add    %al,(%eax)
  44:	02 00                	add    (%eax),%al
  46:	b3 05                	mov    $0x5,%bl
  48:	00 00                	add    %al,(%eax)
  4a:	04 00                	add    $0x0,%al
  4c:	00 00                	add    %al,(%eax)
  4e:	00 00                	add    %al,(%eax)
  50:	00 02                	add    %al,(%edx)
  52:	10 00                	adc    %al,(%eax)
  54:	5a                   	pop    %edx
	...
  5d:	00 00                	add    %al,(%eax)
  5f:	00 1c 00             	add    %bl,(%eax,%eax,1)
  62:	00 00                	add    %al,(%eax)
  64:	02 00                	add    (%eax),%al
  66:	b5 07                	mov    $0x7,%ch
  68:	00 00                	add    %al,(%eax)
  6a:	04 00                	add    $0x0,%al
  6c:	00 00                	add    %al,(%eax)
  6e:	00 00                	add    %al,(%eax)
  70:	60                   	pusha
  71:	02 10                	add    (%eax),%dl
  73:	00 f9                	add    %bh,%cl
	...
  7d:	00 00                	add    %al,(%eax)
  7f:	00 1c 00             	add    %bl,(%eax,%eax,1)
  82:	00 00                	add    %al,(%eax)
  84:	02 00                	add    (%eax),%al
  86:	9a 09 00 00 04 00 00 	lcall  $0x0,$0x4000009
  8d:	00 00                	add    %al,(%eax)
  8f:	00 80 03 10 00 75    	add    %al,0x75001003(%eax)
  95:	0d 00 00 00 00       	or     $0x0,%eax
  9a:	00 00                	add    %al,(%eax)
  9c:	00 00                	add    %al,(%eax)
  9e:	00 00                	add    %al,(%eax)
  a0:	1c 00                	sbb    $0x0,%al
  a2:	00 00                	add    %al,(%eax)
  a4:	02 00                	add    (%eax),%al
  a6:	10 19                	adc    %bl,(%ecx)
  a8:	00 00                	add    %al,(%eax)
  aa:	04 00                	add    $0x0,%al
  ac:	00 00                	add    %al,(%eax)
  ae:	00 00                	add    %al,(%eax)
  b0:	00 11                	add    %dl,(%ecx)
  b2:	10 00                	adc    %al,(%eax)
  b4:	94                   	xchg   %eax,%esp
  b5:	03 00                	add    (%eax),%eax
	...
  bf:	00 1c 00             	add    %bl,(%eax,%eax,1)
  c2:	00 00                	add    %al,(%eax)
  c4:	02 00                	add    (%eax),%al
  c6:	94                   	xchg   %eax,%esp
  c7:	29 00                	sub    %eax,(%eax)
  c9:	00 04 00             	add    %al,(%eax,%eax,1)
  cc:	00 00                	add    %al,(%eax)
  ce:	00 00                	add    %al,(%eax)
  d0:	c0 14 10 00          	rclb   $0x0,(%eax,%edx,1)
  d4:	e5 13                	in     $0x13,%eax
	...
  de:	00 00                	add    %al,(%eax)
  e0:	1c 00                	sbb    $0x0,%al
  e2:	00 00                	add    %al,(%eax)
  e4:	02 00                	add    (%eax),%al
  e6:	7c 41                	jl     129 <MBOOT_HEADER_FLAGS+0x126>
  e8:	00 00                	add    %al,(%eax)
  ea:	04 00                	add    $0x0,%al
  ec:	00 00                	add    %al,(%eax)
  ee:	00 00                	add    %al,(%eax)
  f0:	b0 28                	mov    $0x28,%al
  f2:	10 00                	adc    %al,(%eax)
  f4:	76 01                	jbe    f7 <MBOOT_HEADER_FLAGS+0xf4>
	...
  fe:	00 00                	add    %al,(%eax)
 100:	1c 00                	sbb    $0x0,%al
 102:	00 00                	add    %al,(%eax)
 104:	02 00                	add    (%eax),%al
 106:	f6 43 00 00          	testb  $0x0,0x0(%ebx)
 10a:	04 00                	add    $0x0,%al
 10c:	00 00                	add    %al,(%eax)
 10e:	00 00                	add    %al,(%eax)
 110:	30 2a                	xor    %ch,(%edx)
 112:	10 00                	adc    %al,(%eax)
 114:	0b 01                	or     (%ecx),%eax
	...
 11e:	00 00                	add    %al,(%eax)
 120:	1c 00                	sbb    $0x0,%al
 122:	00 00                	add    %al,(%eax)
 124:	02 00                	add    (%eax),%al
 126:	75 46                	jne    16e <MBOOT_HEADER_FLAGS+0x16b>
 128:	00 00                	add    %al,(%eax)
 12a:	04 00                	add    $0x0,%al
 12c:	00 00                	add    %al,(%eax)
 12e:	00 00                	add    %al,(%eax)
 130:	40                   	inc    %eax
 131:	2b 10                	sub    (%eax),%edx
 133:	00 71 00             	add    %dh,0x0(%ecx)
	...
 13e:	00 00                	add    %al,(%eax)
 140:	1c 00                	sbb    $0x0,%al
 142:	00 00                	add    %al,(%eax)
 144:	02 00                	add    (%eax),%al
 146:	bf 47 00 00 04       	mov    $0x4000047,%edi
 14b:	00 00                	add    %al,(%eax)
 14d:	00 00                	add    %al,(%eax)
 14f:	00 c0                	add    %al,%al
 151:	2b 10                	sub    (%eax),%edx
 153:	00 45 00             	add    %al,0x0(%ebp)
	...
 15e:	00 00                	add    %al,(%eax)
 160:	1c 00                	sbb    $0x0,%al
 162:	00 00                	add    %al,(%eax)
 164:	02 00                	add    (%eax),%al
 166:	0e                   	push   %cs
 167:	49                   	dec    %ecx
 168:	00 00                	add    %al,(%eax)
 16a:	04 00                	add    $0x0,%al
 16c:	00 00                	add    %al,(%eax)
 16e:	00 00                	add    %al,(%eax)
 170:	20 2c 10             	and    %ch,(%eax,%edx,1)
 173:	00 ea                	add    %ch,%dl
 175:	02 00                	add    (%eax),%al
	...
 17f:	00 1c 00             	add    %bl,(%eax,%eax,1)
 182:	00 00                	add    %al,(%eax)
 184:	02 00                	add    (%eax),%al
 186:	41                   	inc    %ecx
 187:	50                   	push   %eax
 188:	00 00                	add    %al,(%eax)
 18a:	04 00                	add    $0x0,%al
 18c:	00 00                	add    %al,(%eax)
 18e:	00 00                	add    %al,(%eax)
 190:	40                   	inc    %eax
 191:	2f                   	das
 192:	10 00                	adc    %al,(%eax)
 194:	b0 00                	mov    $0x0,%al
	...
 19e:	00 00                	add    %al,(%eax)
 1a0:	1c 00                	sbb    $0x0,%al
 1a2:	00 00                	add    %al,(%eax)
 1a4:	02 00                	add    (%eax),%al
 1a6:	24 51                	and    $0x51,%al
 1a8:	00 00                	add    %al,(%eax)
 1aa:	04 00                	add    $0x0,%al
 1ac:	00 00                	add    %al,(%eax)
 1ae:	00 00                	add    %al,(%eax)
 1b0:	00 30                	add    %dh,(%eax)
 1b2:	10 00                	adc    %al,(%eax)
 1b4:	3d 02 00 00 00       	cmp    $0x2,%eax
 1b9:	00 00                	add    %al,(%eax)
 1bb:	00 00                	add    %al,(%eax)
 1bd:	00 00                	add    %al,(%eax)
 1bf:	00 1c 00             	add    %bl,(%eax,%eax,1)
 1c2:	00 00                	add    %al,(%eax)
 1c4:	02 00                	add    (%eax),%al
 1c6:	df 54 00 00          	fists  0x0(%eax,%eax,1)
 1ca:	04 00                	add    $0x0,%al
 1cc:	00 00                	add    %al,(%eax)
 1ce:	00 00                	add    %al,(%eax)
 1d0:	40                   	inc    %eax
 1d1:	32 10                	xor    (%eax),%dl
 1d3:	00 b8 00 00 00 00    	add    %bh,0x0(%eax)
 1d9:	00 00                	add    %al,(%eax)
 1db:	00 00                	add    %al,(%eax)
 1dd:	00 00                	add    %al,(%eax)
	...

Disassembly of section .debug_rnglists:

00000000 <.debug_rnglists>:
   0:	13 00                	adc    (%eax),%eax
   2:	00 00                	add    %al,(%eax)
   4:	05 00 04 00 00       	add    $0x400,%eax
   9:	00 00                	add    %al,(%eax)
   b:	00 04 86             	add    %al,(%esi,%eax,4)
   e:	01 90 01 04 97 01    	add    %edx,0x1970401(%eax)
  14:	a1 01 00 2b 00       	mov    0x2b0001,%eax
  19:	00 00                	add    %al,(%eax)
  1b:	05 00 04 00 00       	add    $0x400,%eax
  20:	00 00                	add    %al,(%eax)
  22:	00 04 62             	add    %al,(%edx,%eiz,2)
  25:	67 04 70             	addr16 add $0x70,%al
  28:	bb 01 00 04 c0       	mov    $0xc0040001,%ebx
  2d:	01 c0                	add    %eax,%eax
  2f:	01 04 c5 01 d4 01 04 	add    %eax,0x401d401(,%eax,8)
  36:	e8 01 f2 01 00       	call   1f23c <MBOOT_HEADER_FLAGS+0x1f239>
  3b:	04 d9                	add    $0xd9,%al
  3d:	01 e8                	add    %ebp,%eax
  3f:	01 04 f2             	add    %eax,(%edx,%esi,8)
  42:	01 fc                	add    %edi,%esp
  44:	01 00                	add    %eax,(%eax)
  46:	10 00                	adc    %al,(%eax)
  48:	00 00                	add    %al,(%eax)
  4a:	05 00 04 00 00       	add    $0x400,%eax
  4f:	00 00                	add    %al,(%eax)
  51:	00 07                	add    %al,(%edi)
  53:	60                   	pusha
  54:	02 10                	add    (%eax),%dl
  56:	00 f9                	add    %bh,%cl
  58:	01 00                	add    %eax,(%eax)
  5a:	d2 00                	rolb   %cl,(%eax)
  5c:	00 00                	add    %al,(%eax)
  5e:	05 00 04 00 00       	add    $0x400,%eax
  63:	00 00                	add    %al,(%eax)
  65:	00 04 50             	add    %al,(%eax,%edx,2)
  68:	5b                   	pop    %ebx
  69:	04 5e                	add    $0x5e,%al
  6b:	89 01                	mov    %eax,(%ecx)
  6d:	00 04 90             	add    %al,(%eax,%edx,4)
  70:	05 b9 05 04 bc       	add    $0xbc0405b9,%eax
  75:	05 be 05 04 cb       	add    $0xcb0405be,%eax
  7a:	05 94 06 00 04       	add    $0x4000694,%eax
  7f:	90                   	nop
  80:	05 b3 05 04 cb       	add    $0xcb0405b3,%eax
  85:	05 d9 05 04 db       	add    $0xdb0405d9,%eax
  8a:	05 94 06 00 04       	add    $0x4000694,%eax
  8f:	90                   	nop
  90:	05 a6 05 04 cb       	add    $0xcb0405a6,%eax
  95:	05 d7 05 04 db       	add    $0xdb0405d7,%eax
  9a:	05 94 06 00 04       	add    $0x4000694,%eax
  9f:	90                   	nop
  a0:	09 97 09 04 9a 09    	or     %edx,0x99a0409(%edi)
  a6:	a3 09 00 04 e5       	mov    %eax,0xe5040009
  ab:	0c e8                	or     $0xe8,%al
  ad:	0c 04                	or     $0x4,%al
  af:	ea 0c ed 0c 04 f0 0c 	ljmp   $0xcf0,$0x40ced0c
  b6:	f2 0c 04             	repnz or $0x4,%al
  b9:	f4                   	hlt
  ba:	0c a2                	or     $0xa2,%al
  bc:	0d 00 04 c8 0d       	or     $0xdc80400,%eax
  c1:	cb                   	lret
  c2:	0d 04 ce 0d d9       	or     $0xd90dce04,%eax
  c7:	0d 00 04 cf 0e       	or     $0xecf0400,%eax
  cc:	d4 0e                	aam    $0xe
  ce:	04 e0                	add    $0xe0,%al
  d0:	0e                   	push   %cs
  d1:	ef                   	out    %eax,(%dx)
  d2:	0e                   	push   %cs
  d3:	00 04 8a             	add    %al,(%edx,%ecx,4)
  d6:	12 a8 12 04 ef 13    	adc    0x13ef0412(%eax),%ch
  dc:	ff 13                	call   *(%ebx)
  de:	00 04 b8             	add    %al,(%eax,%edi,4)
  e1:	12 cd                	adc    %ch,%cl
  e3:	12 04 d0             	adc    (%eax,%edx,8),%al
  e6:	12 d1                	adc    %cl,%dl
  e8:	12 00                	adc    (%eax),%al
  ea:	04 8b                	add    $0x8b,%al
  ec:	13 c1                	adc    %ecx,%eax
  ee:	13 04 e6             	adc    (%esi,%eiz,8),%eax
  f1:	14 86                	adc    $0x86,%al
  f3:	15 04 da 15 ea       	adc    $0xea15da04,%eax
  f8:	15 00 04 c1 13       	adc    $0x13c10400,%eax
  fd:	ef                   	out    %eax,(%dx)
  fe:	13 04 ff             	adc    (%edi,%edi,8),%eax
 101:	13 9f 14 04 af 15    	adc    0x15af0414(%edi),%ebx
 107:	bf 15 00 04 b4       	mov    $0xb4040015,%edi
 10c:	14 e6                	adc    $0xe6,%al
 10e:	14 04                	adc    $0x4,%al
 110:	bf 15 da 15 04       	mov    $0x415da15,%edi
 115:	e1 16                	loope  12d <MBOOT_HEADER_FLAGS+0x12a>
 117:	f1                   	int1
 118:	16                   	push   %ss
 119:	00 04 86             	add    %al,(%esi,%eax,4)
 11c:	17                   	pop    %ss
 11d:	c6                   	(bad)
 11e:	17                   	pop    %ss
 11f:	04 80                	add    $0x80,%al
 121:	18 a7 18 00 04 d0    	sbb    %ah,-0x2ffbffe8(%edi)
 127:	19 f3                	sbb    %esi,%ebx
 129:	19 04 f4             	sbb    %eax,(%esp,%esi,8)
 12c:	19 f9                	sbb    %edi,%ecx
 12e:	19 00                	sbb    %eax,(%eax)
 130:	af                   	scas   %es:(%edi),%eax
 131:	01 00                	add    %eax,(%eax)
 133:	00 05 00 04 00 00    	add    %al,0x400
 139:	00 00                	add    %al,(%eax)
 13b:	00 04 2b             	add    %al,(%ebx,%ebp,1)
 13e:	34 04                	xor    $0x4,%al
 140:	34 40                	xor    $0x40,%al
 142:	00 04 33             	add    %al,(%ebx,%esi,1)
 145:	34 04                	xor    $0x4,%al
 147:	34 40                	xor    $0x40,%al
 149:	00 04 34             	add    %al,(%esp,%esi,1)
 14c:	34 04                	xor    $0x4,%al
 14e:	40                   	inc    %eax
 14f:	4e                   	dec    %esi
 150:	00 04 40             	add    %al,(%eax,%eax,2)
 153:	44                   	inc    %esp
 154:	04 49                	add    $0x49,%al
 156:	4e                   	dec    %esi
 157:	00 04 54             	add    %al,(%esp,%edx,2)
 15a:	58                   	pop    %eax
 15b:	04 58                	add    $0x58,%al
 15d:	5d                   	pop    %ebp
 15e:	00 04 57             	add    %al,(%edi,%edx,2)
 161:	58                   	pop    %eax
 162:	04 58                	add    $0x58,%al
 164:	5d                   	pop    %ebp
 165:	00 04 58             	add    %al,(%eax,%ebx,2)
 168:	58                   	pop    %eax
 169:	04 5d                	add    $0x5d,%al
 16b:	7b 00                	jnp    16d <MBOOT_HEADER_FLAGS+0x16a>
 16d:	04 5d                	add    $0x5d,%al
 16f:	6c                   	insb   (%dx),%es:(%edi)
 170:	04 71                	add    $0x71,%al
 172:	7b 00                	jnp    174 <MBOOT_HEADER_FLAGS+0x171>
 174:	04 5d                	add    $0x5d,%al
 176:	68 04 71 72 00       	push   $0x727104
 17b:	04 7b                	add    $0x7b,%al
 17d:	80 01 04             	addb   $0x4,(%ecx)
 180:	80 01 82             	addb   $0x82,(%ecx)
 183:	01 04 82             	add    %eax,(%edx,%eax,4)
 186:	01 84 01 00 04 e3 01 	add    %eax,0x1e30400(%ecx,%eax,1)
 18d:	e8 01 04 f8 01       	call   1f80593 <stack_top+0x1d74923>
 192:	8c 02                	mov    %es,(%edx)
 194:	00 04 e3             	add    %al,(%ebx,%eiz,8)
 197:	01 e8                	add    %ebp,%eax
 199:	01 04 f8             	add    %eax,(%eax,%edi,8)
 19c:	01 fc                	add    %edi,%esp
 19e:	01 04 85 02 8c 02 00 	add    %eax,0x28c02(,%eax,4)
 1a5:	04 e3                	add    $0xe3,%al
 1a7:	01 e8                	add    %ebp,%eax
 1a9:	01 04 85 02 88 02 00 	add    %eax,0x28802(,%eax,4)
 1b0:	04 8c                	add    $0x8c,%al
 1b2:	02 8c 02 04 8f 02 94 	add    -0x6bfd70fc(%edx,%eax,1),%cl
 1b9:	02 04 9d 02 9e 02 00 	add    0x29e02(,%ebx,4),%al
 1c0:	04 b0                	add    $0xb0,%al
 1c2:	02 b0 02 04 b3 02    	add    0x2b30402(%eax),%dh
 1c8:	b8 02 04 bb 02       	mov    $0x2bb0402,%eax
 1cd:	bc 02 00 04 bc       	mov    $0xbc040002,%esp
 1d2:	02 bc 02 04 bf 02 c4 	add    -0x3bfd40fc(%edx,%eax,1),%bh
 1d9:	02 04 c7             	add    (%edi,%eax,8),%al
 1dc:	02 c8                	add    %al,%cl
 1de:	02 00                	add    (%eax),%al
 1e0:	04 d0                	add    $0xd0,%al
 1e2:	02 80 03 04 90 03    	add    0x3900403(%eax),%al
 1e8:	d0 03                	rolb   $1,(%ebx)
 1ea:	04 dd                	add    $0xdd,%al
 1ec:	03 e8                	add    %eax,%ebp
 1ee:	03 00                	add    (%eax),%eax
 1f0:	04 da                	add    $0xda,%al
 1f2:	02 df                	add    %bh,%bl
 1f4:	02 04 80             	add    (%eax,%eax,4),%al
 1f7:	03 80 03 04 90 03    	add    0x3900403(%eax),%eax
 1fd:	b0 03                	mov    $0x3,%al
 1ff:	00 04 da             	add    %al,(%edx,%ebx,8)
 202:	02 df                	add    %bh,%bl
 204:	02 04 90             	add    (%eax,%edx,4),%al
 207:	03 94 03 04 99 03 b0 	add    -0x4ffc66fc(%ebx,%eax,1),%edx
 20e:	03 00                	add    (%eax),%eax
 210:	04 da                	add    $0xda,%al
 212:	02 df                	add    %bh,%bl
 214:	02 04 99             	add    (%ecx,%ebx,4),%al
 217:	03 9c 03 00 04 df 02 	add    0x2df0400(%ebx,%eax,1),%ebx
 21e:	e4 02                	in     $0x2,%al
 220:	04 b0                	add    $0xb0,%al
 222:	03 be 03 00 04 df    	add    -0x20fbfffd(%esi),%edi
 228:	02 e4                	add    %ah,%ah
 22a:	02 04 b0             	add    (%eax,%esi,4),%al
 22d:	03 b4 03 00 04 c3 04 	add    0x4c30400(%ebx,%eax,1),%esi
 234:	c8 04 04 d8          	enter  $0x404,$0xd8
 238:	04 ec                	add    $0xec,%al
 23a:	04 00                	add    $0x0,%al
 23c:	04 c3                	add    $0xc3,%al
 23e:	04 c8                	add    $0xc8,%al
 240:	04 04                	add    $0x4,%al
 242:	d8 04 dc             	fadds  (%esp,%ebx,8)
 245:	04 04                	add    $0x4,%al
 247:	e5 04                	in     $0x4,%eax
 249:	ec                   	in     (%dx),%al
 24a:	04 00                	add    $0x0,%al
 24c:	04 c3                	add    $0xc3,%al
 24e:	04 c8                	add    $0xc8,%al
 250:	04 04                	add    $0x4,%al
 252:	e5 04                	in     $0x4,%eax
 254:	e8 04 00 04 ec       	call   ec04025d <MBOOT_CHECKSUM+0x7b1b262>
 259:	04 ec                	add    $0xec,%al
 25b:	04 04                	add    $0x4,%al
 25d:	ef                   	out    %eax,(%dx)
 25e:	04 f4                	add    $0xf4,%al
 260:	04 04                	add    $0x4,%al
 262:	fd                   	std
 263:	04 fe                	add    $0xfe,%al
 265:	04 00                	add    $0x0,%al
 267:	04 90                	add    $0x90,%al
 269:	05 90 05 04 93       	add    $0x93040590,%eax
 26e:	05 98 05 04 9b       	add    $0x9b040598,%eax
 273:	05 9c 05 00 04       	add    $0x400059c,%eax
 278:	9c                   	pushf
 279:	05 9c 05 04 9f       	add    $0x9f04059c,%eax
 27e:	05 a4 05 04 a7       	add    $0xa70405a4,%eax
 283:	05 a8 05 00 04       	add    $0x40005a8,%eax
 288:	b0 05                	mov    $0x5,%al
 28a:	d0 05 04 e0 05 be    	rolb   $1,0xbe05e004
 290:	06                   	push   %es
 291:	04 e0                	add    $0xe0,%al
 293:	06                   	push   %es
 294:	fa                   	cli
 295:	06                   	push   %es
 296:	00 04 b4             	add    %al,(%esp,%esi,4)
 299:	05 b9 05 04 d0       	add    $0xd00405b9,%eax
 29e:	05 d0 05 04 e0       	add    $0xe00405d0,%eax
 2a3:	05 80 06 00 04       	add    $0x4000680,%eax
 2a8:	b4 05                	mov    $0x5,%ah
 2aa:	b9 05 04 e0 05       	mov    $0x5e00405,%ecx
 2af:	e4 05                	in     $0x5,%al
 2b1:	04 e9                	add    $0xe9,%al
 2b3:	05 80 06 00 04       	add    $0x4000680,%eax
 2b8:	b4 05                	mov    $0x5,%ah
 2ba:	b9 05 04 e9 05       	mov    $0x5e90405,%ecx
 2bf:	ec                   	in     (%dx),%al
 2c0:	05 00 04 91 06       	add    $0x6910400,%eax
 2c5:	99                   	cltd
 2c6:	06                   	push   %es
 2c7:	04 99                	add    $0x99,%al
 2c9:	06                   	push   %es
 2ca:	a0 06 00 04 99       	mov    0x99040006,%al
 2cf:	06                   	push   %es
 2d0:	99                   	cltd
 2d1:	06                   	push   %es
 2d2:	04 a0                	add    $0xa0,%al
 2d4:	06                   	push   %es
 2d5:	b0 06                	mov    $0x6,%al
 2d7:	00 04 a0             	add    %al,(%eax,%eiz,4)
 2da:	06                   	push   %es
 2db:	a4                   	movsb  %ds:(%esi),%es:(%edi)
 2dc:	06                   	push   %es
 2dd:	04 a9                	add    $0xa9,%al
 2df:	06                   	push   %es
 2e0:	b0 06                	mov    $0x6,%al
 2e2:	00 6d 02             	add    %ch,0x2(%ebp)
 2e5:	00 00                	add    %al,(%eax)
 2e7:	05 00 04 00 00       	add    $0x400,%eax
 2ec:	00 00                	add    %al,(%eax)
 2ee:	00 04 0e             	add    %al,(%esi,%ecx,1)
 2f1:	14 04                	adc    $0x4,%al
 2f3:	1b 9b 01 04 c0 01    	sbb    0x1c00401(%ebx),%ebx
 2f9:	d6                   	(bad)
 2fa:	01 04 eb             	add    %eax,(%ebx,%ebp,8)
 2fd:	01 80 02 00 04 30    	add    %eax,0x30040002(%eax)
 303:	45                   	inc    %ebp
 304:	04 60                	add    $0x60,%al
 306:	7d 04                	jge    30c <MBOOT_HEADER_FLAGS+0x309>
 308:	86 01                	xchg   %al,(%ecx)
 30a:	91                   	xchg   %eax,%ecx
 30b:	01 04 c0             	add    %eax,(%eax,%eax,8)
 30e:	01 d6                	add    %edx,%esi
 310:	01 00                	add    %eax,(%eax)
 312:	04 d6                	add    $0xd6,%al
 314:	01 eb                	add    %ebp,%ebx
 316:	01 04 80             	add    %eax,(%eax,%eax,4)
 319:	02 a9 02 04 b1 02    	add    0x2b10402(%ecx),%ch
 31f:	c4 02                	les    (%edx),%eax
 321:	00 04 8c             	add    %al,(%esp,%ecx,4)
 324:	08 90 0c 04 cc 0c    	or     %dl,0xccc040c(%eax)
 32a:	cc                   	int3
 32b:	0c 04                	or     $0x4,%al
 32d:	cc                   	int3
 32e:	0c d6                	or     $0xd6,%al
 330:	0c 00                	or     $0x0,%al
 332:	04 8c                	add    $0x8c,%al
 334:	08 95 08 04 97 08    	or     %dl,0x8970408(%ebp)
 33a:	a2 08 00 04 95       	mov    %al,0x95040008
 33f:	08 97 08 04 a2 08    	or     %dl,0x8a20408(%edi)
 345:	c1 0b 00             	rorl   $0x0,(%ebx)
 348:	04 9d                	add    $0x9d,%al
 34a:	09 fc                	or     %edi,%esp
 34c:	09 04 f0             	or     %eax,(%eax,%esi,8)
 34f:	0a 88 0b 00 04 a0    	or     -0x5ffbfff5(%eax),%cl
 355:	09 f4                	or     %esi,%esp
 357:	09 04 f0             	or     %eax,(%eax,%esi,8)
 35a:	0a 88 0b 00 04 8f    	or     -0x70fbfff5(%eax),%cl
 360:	0d e1 0e 04 f3       	or     $0xf3040ee1,%eax
 365:	0e                   	push   %cs
 366:	f8                   	clc
 367:	0e                   	push   %cs
 368:	04 fd                	add    $0xfd,%al
 36a:	0e                   	push   %cs
 36b:	fd                   	std
 36c:	0e                   	push   %cs
 36d:	04 fd                	add    $0xfd,%al
 36f:	0e                   	push   %cs
 370:	87 0f                	xchg   %ecx,(%edi)
 372:	00 04 a7             	add    %al,(%edi,%eiz,4)
 375:	0d a1 0e 04 f3       	or     $0xf3040ea1,%eax
 37a:	0e                   	push   %cs
 37b:	f8                   	clc
 37c:	0e                   	push   %cs
 37d:	00 04 e0             	add    %al,(%eax,%eiz,8)
 380:	0d 90 0e 04 f3       	or     $0xf3040e90,%eax
 385:	0e                   	push   %cs
 386:	f8                   	clc
 387:	0e                   	push   %cs
 388:	00 04 d9             	add    %al,(%ecx,%ebx,8)
 38b:	0f 90 11             	seto   (%ecx)
 38e:	04 a8                	add    $0xa8,%al
 390:	11 db                	adc    %ebx,%ebx
 392:	11 04 df             	adc    %eax,(%edi,%ebx,8)
 395:	11 e2                	adc    %esp,%edx
 397:	11 04 f3             	adc    %eax,(%ebx,%esi,8)
 39a:	11 fd                	adc    %edi,%ebp
 39c:	11 00                	adc    %eax,(%eax)
 39e:	04 eb                	add    $0xeb,%al
 3a0:	0f d6                	(bad)
 3a2:	10 04 a8             	adc    %al,(%eax,%ebp,4)
 3a5:	11 db                	adc    %ebx,%ebx
 3a7:	11 04 df             	adc    %eax,(%edi,%ebx,8)
 3aa:	11 e2                	adc    %esp,%edx
 3ac:	11 00                	adc    %eax,(%eax)
 3ae:	04 b0                	add    $0xb0,%al
 3b0:	10 c5                	adc    %al,%ch
 3b2:	10 04 a8             	adc    %al,(%eax,%ebp,4)
 3b5:	11 db                	adc    %ebx,%ebx
 3b7:	11 04 df             	adc    %eax,(%edi,%ebx,8)
 3ba:	11 e2                	adc    %esp,%edx
 3bc:	11 00                	adc    %eax,(%eax)
 3be:	04 d6                	add    $0xd6,%al
 3c0:	10 90 11 04 f3 11    	adc    %dl,0x11f30411(%eax)
 3c6:	fd                   	std
 3c7:	11 00                	adc    %eax,(%eax)
 3c9:	04 ac                	add    $0xac,%al
 3cb:	12 f0                	adc    %al,%dh
 3cd:	13 04 88             	adc    (%eax,%ecx,4),%eax
 3d0:	14 a7                	adc    $0xa7,%al
 3d2:	14 04                	adc    $0x4,%al
 3d4:	ab                   	stos   %eax,%es:(%edi)
 3d5:	14 ae                	adc    $0xae,%al
 3d7:	14 04                	adc    $0x4,%al
 3d9:	b2 14                	mov    $0x14,%dl
 3db:	bc 14 00 04 be       	mov    $0xbe040014,%esp
 3e0:	12 b6 13 04 88 14    	adc    0x14880413(%esi),%dh
 3e6:	a7                   	cmpsl  %es:(%edi),%ds:(%esi)
 3e7:	14 04                	adc    $0x4,%al
 3e9:	ab                   	stos   %eax,%es:(%edi)
 3ea:	14 ae                	adc    $0xae,%al
 3ec:	14 00                	adc    $0x0,%al
 3ee:	04 80                	add    $0x80,%al
 3f0:	13 a5 13 04 88 14    	adc    0x14880413(%ebp),%esp
 3f6:	a7                   	cmpsl  %es:(%edi),%ds:(%esi)
 3f7:	14 04                	adc    $0x4,%al
 3f9:	ab                   	stos   %eax,%es:(%edi)
 3fa:	14 ae                	adc    $0xae,%al
 3fc:	14 00                	adc    $0x0,%al
 3fe:	04 b6                	add    $0xb6,%al
 400:	13 f0                	adc    %eax,%esi
 402:	13 04 b2             	adc    (%edx,%esi,4),%eax
 405:	14 bc                	adc    $0xbc,%al
 407:	14 00                	adc    $0x0,%al
 409:	04 e9                	add    $0xe9,%al
 40b:	14 a0                	adc    $0xa0,%al
 40d:	16                   	push   %ss
 40e:	04 b8                	add    $0xb8,%al
 410:	16                   	push   %ss
 411:	eb 16                	jmp    429 <MBOOT_HEADER_FLAGS+0x426>
 413:	04 ef                	add    $0xef,%al
 415:	16                   	push   %ss
 416:	f2 16                	repnz push %ss
 418:	04 83                	add    $0x83,%al
 41a:	17                   	pop    %ss
 41b:	8d 17                	lea    (%edi),%edx
 41d:	00 04 fb             	add    %al,(%ebx,%edi,8)
 420:	14 e6                	adc    $0xe6,%al
 422:	15 04 b8 16 eb       	adc    $0xeb16b804,%eax
 427:	16                   	push   %ss
 428:	04 ef                	add    $0xef,%al
 42a:	16                   	push   %ss
 42b:	f2 16                	repnz push %ss
 42d:	00 04 c0             	add    %al,(%eax,%eax,8)
 430:	15 d5 15 04 b8       	adc    $0xb80415d5,%eax
 435:	16                   	push   %ss
 436:	eb 16                	jmp    44e <MBOOT_HEADER_FLAGS+0x44b>
 438:	04 ef                	add    $0xef,%al
 43a:	16                   	push   %ss
 43b:	f2 16                	repnz push %ss
 43d:	00 04 e6             	add    %al,(%esi,%eiz,8)
 440:	15 a0 16 04 83       	adc    $0x830416a0,%eax
 445:	17                   	pop    %ss
 446:	8d 17                	lea    (%edi),%edx
 448:	00 04 b0             	add    %al,(%eax,%esi,4)
 44b:	18 b0 18 04 bc 18    	sbb    %dh,0x18bc0418(%eax)
 451:	a9 19 04 b8 19       	test   $0x19b80419,%eax
 456:	c7                   	(bad)
 457:	19 04 ca             	sbb    %eax,(%edx,%ecx,8)
 45a:	19 cc                	sbb    %ecx,%esp
 45c:	19 00                	sbb    %eax,(%eax)
 45e:	04 94                	add    $0x94,%al
 460:	1a d5                	sbb    %ch,%dl
 462:	1b 04 f7             	sbb    (%edi,%esi,8),%eax
 465:	1b f7                	sbb    %edi,%esi
 467:	1b 04 bf             	sbb    (%edi,%edi,4),%eax
 46a:	1d c9 1d 00 04       	sbb    $0x4001dc9,%eax
 46f:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
 470:	1a 96 1b 04 f7 1b    	sbb    0x1bf7041b(%esi),%dl
 476:	f7 1b                	negl   (%ebx)
 478:	00 04 96             	add    %al,(%esi,%edx,4)
 47b:	1b d5                	sbb    %ebp,%edx
 47d:	1b 04 bf             	sbb    (%edi,%edi,4),%eax
 480:	1d c9 1d 00 04       	sbb    $0x4001dc9,%eax
 485:	e8 1c af 1d 04       	call   41db3a6 <stack_top+0x3fcf736>
 48a:	c9                   	leave
 48b:	1d f0 1d 00 04       	sbb    $0x4001df0,%eax
 490:	e8 1c e8 1c 04       	call   41cecb1 <stack_top+0x3fc3041>
 495:	ee                   	out    %al,(%dx)
 496:	1c f4                	sbb    $0xf4,%al
 498:	1c 04                	sbb    $0x4,%al
 49a:	88 1d 94 1d 00 04    	mov    %bl,0x4001d94
 4a0:	b1 1e                	mov    $0x1e,%cl
 4a2:	db 20                	(bad) (%eax)
 4a4:	04 db                	add    $0xdb,%al
 4a6:	20 de                	and    %bl,%dh
 4a8:	20 04 d0             	and    %al,(%eax,%edx,8)
 4ab:	25 be 26 04 d0       	and    $0xd00426be,%eax
 4b0:	26 bf 27 00 04 b1    	es mov $0xb1040027,%edi
 4b6:	1e                   	push   %ds
 4b7:	b9 1e 04 bb 1e       	mov    $0x1ebb041e,%ecx
 4bc:	ca 1e 00             	lret   $0x1e
 4bf:	04 b9                	add    $0xb9,%al
 4c1:	1e                   	push   %ds
 4c2:	bb 1e 04 ca 1e       	mov    $0x1eca041e,%ebx
 4c7:	db 20                	(bad) (%eax)
 4c9:	04 db                	add    $0xdb,%al
 4cb:	20 de                	and    %bl,%dh
 4cd:	20 04 d0             	and    %al,(%eax,%edx,8)
 4d0:	25 f9 25 04 d0       	and    $0xd00425f9,%eax
 4d5:	26 bf 27 00 04 90    	es mov $0x90040027,%edi
 4db:	1f                   	pop    %ds
 4dc:	db 20                	(bad) (%eax)
 4de:	04 db                	add    $0xdb,%al
 4e0:	20 de                	and    %bl,%dh
 4e2:	20 04 d0             	and    %al,(%eax,%edx,8)
 4e5:	25 de 25 04 d0       	and    $0xd00425de,%eax
 4ea:	26 bf 27 00 04 b0    	es mov $0xb0040027,%edi
 4f0:	1f                   	pop    %ds
 4f1:	f9                   	stc
 4f2:	1f                   	pop    %ds
 4f3:	04 83                	add    $0x83,%al
 4f5:	20 db                	and    %bl,%bl
 4f7:	20 04 db             	and    %al,(%ebx,%ebx,8)
 4fa:	20 de                	and    %bl,%dh
 4fc:	20 04 d0             	and    %al,(%eax,%edx,8)
 4ff:	26 bf 27 00 04 b3    	es mov $0xb3040027,%edi
 505:	20 db                	and    %bl,%bl
 507:	20 04 db             	and    %al,(%ebx,%ebx,8)
 50a:	20 de                	and    %bl,%dh
 50c:	20 00                	and    %al,(%eax)
 50e:	04 bd                	add    $0xbd,%al
 510:	22 e7                	and    %bh,%ah
 512:	24 04                	and    $0x4,%al
 514:	b9 25 c4 25 04       	mov    $0x425c425,%ecx
 519:	bf 27 d0 27 00       	mov    $0x27d027,%edi
 51e:	04 bd                	add    $0xbd,%al
 520:	22 c6                	and    %dh,%al
 522:	22 04 cb             	and    (%ebx,%ecx,8),%al
 525:	22 d8                	and    %al,%bl
 527:	22 00                	and    (%eax),%al
 529:	04 e2                	add    $0xe2,%al
 52b:	22 e2                	and    %dl,%ah
 52d:	22 04 e3             	and    (%ebx,%eiz,8),%al
 530:	22 94 23 00 04 e3 22 	and    0x22e30400(%ebx,%eiz,1),%dl
 537:	ee                   	out    %al,(%dx)
 538:	22 04 f1             	and    (%ecx,%esi,8),%al
 53b:	22 8e 23 00 04 9e    	and    -0x61fbffdd(%esi),%cl
 541:	24 9e                	and    $0x9e,%al
 543:	24 04                	and    $0x4,%al
 545:	a0 24 a7 24 04       	mov    0x424a724,%al
 54a:	b0 24                	mov    $0x24,%al
 54c:	e7 24                	out    %eax,$0x24
 54e:	04 bf                	add    $0xbf,%al
 550:	27                   	daa
 551:	d0 27                	shlb   $1,(%edi)
 553:	00 53 00             	add    %dl,0x0(%ebx)
 556:	00 00                	add    %al,(%eax)
 558:	05 00 04 00 00       	add    $0x400,%eax
 55d:	00 00                	add    %al,(%eax)
 55f:	00 05 f0 28 10 00    	add    %al,0x1028f0
 565:	04 00                	add    $0x0,%al
 567:	5a                   	pop    %edx
 568:	04 80                	add    $0x80,%al
 56a:	01 bd 01 04 c2 01    	add    %edi,0x1c20401(%ebp)
 570:	e6 01                	out    %al,$0x1
 572:	04 e9                	add    $0xe9,%al
 574:	01 ec                	add    %ebp,%esp
 576:	01 04 89             	add    %eax,(%ecx,%ecx,4)
 579:	02 89 02 04 8c 02    	add    0x28c0402(%ecx),%cl
 57f:	8f 02                	pop    (%edx)
 581:	00 05 f8 28 10 00    	add    %al,0x1028f8
 587:	04 00                	add    $0x0,%al
 589:	52                   	push   %edx
 58a:	04 78                	add    $0x78,%al
 58c:	b5 01                	mov    $0x1,%ch
 58e:	04 ba                	add    $0xba,%al
 590:	01 de                	add    %ebx,%esi
 592:	01 04 e1             	add    %eax,(%ecx,%eiz,8)
 595:	01 e4                	add    %esp,%esp
 597:	01 04 81             	add    %eax,(%ecx,%eax,4)
 59a:	02 81 02 04 84 02    	add    0x2840402(%ecx),%al
 5a0:	87 02                	xchg   %eax,(%edx)
 5a2:	00 07                	add    %al,(%edi)
 5a4:	b0 28                	mov    $0x28,%al
 5a6:	10 00                	adc    %al,(%eax)
 5a8:	f6 02 00             	testb  $0x0,(%edx)
 5ab:	1e                   	push   %ds
 5ac:	00 00                	add    %al,(%eax)
 5ae:	00 05 00 04 00 00    	add    %al,0x400
 5b4:	00 00                	add    %al,(%eax)
 5b6:	00 04 b4             	add    %al,(%esp,%esi,4)
 5b9:	01 b4 01 04 c0 01 e6 	add    %esi,-0x19fe3ffc(%ecx,%eax,1)
 5c0:	01 00                	add    %eax,(%eax)
 5c2:	04 c0                	add    $0xc0,%al
 5c4:	01 c8                	add    %ecx,%eax
 5c6:	01 04 cb             	add    %eax,(%ebx,%ecx,8)
 5c9:	01 e0                	add    %esp,%eax
 5cb:	01 00                	add    %eax,(%eax)
 5cd:	8c 00                	mov    %es,(%eax)
 5cf:	00 00                	add    %al,(%eax)
 5d1:	05 00 04 00 00       	add    $0x400,%eax
 5d6:	00 00                	add    %al,(%eax)
 5d8:	00 04 0f             	add    %al,(%edi,%ecx,1)
 5db:	0f 04                	(bad)
 5dd:	20 3c 00             	and    %bh,(%eax,%eax,1)
 5e0:	04 91                	add    $0x91,%al
 5e2:	01 9c 01 04 a8 01 b5 	add    %ebx,-0x4afe57fc(%ecx,%eax,1)
 5e9:	01 00                	add    %eax,(%eax)
 5eb:	04 fe                	add    $0xfe,%al
 5ed:	01 a0 02 04 a0 02    	add    %esp,0x2a00402(%eax)
 5f3:	a0 02 04 a3 02       	mov    0x2a30402,%al
 5f8:	a3 02 00 04 c6       	mov    %eax,0xc6040002
 5fd:	02 eb                	add    %bl,%ch
 5ff:	02 04 a4             	add    (%esp,%eiz,4),%al
 602:	03 ab 03 00 04 f4    	add    -0xbfbfffd(%ebx),%ebp
 608:	02 fb                	add    %bl,%bh
 60a:	02 04 87             	add    (%edi,%eax,4),%al
 60d:	03 95 03 00 04 d3    	add    -0x2cfbfffd(%ebp),%edx
 613:	03 d3                	add    %ebx,%edx
 615:	03 04 d7             	add    (%edi,%edx,8),%eax
 618:	03 82 04 00 04 90    	add    -0x6ffbfffc(%edx),%eax
 61e:	04 c0                	add    $0xc0,%al
 620:	04 04                	add    $0x4,%al
 622:	c0 04 c0 04          	rolb   $0x4,(%eax,%eax,8)
 626:	04 c3                	add    $0xc3,%al
 628:	04 c3                	add    $0xc3,%al
 62a:	04 00                	add    $0x0,%al
 62c:	04 d3                	add    $0xd3,%al
 62e:	04 d8                	add    $0xd8,%al
 630:	04 04                	add    $0x4,%al
 632:	de 04 81             	fiadds (%ecx,%eax,4)
 635:	05 00 04 d3 04       	add    $0x4d30400,%eax
 63a:	d8 04 04             	fadds  (%esp,%eax,1)
 63d:	de 04 e4             	fiadds (%esp,%eiz,8)
 640:	04 00                	add    $0x0,%al
 642:	04 91                	add    $0x91,%al
 644:	05 9b 05 04 a9       	add    $0xa904059b,%eax
 649:	05 aa 05 00 04       	add    $0x40005aa,%eax
 64e:	bf 05 bf 05 04       	mov    $0x405bf05,%edi
 653:	c1 05 c3 05 04 c7 05 	roll   $0x5,0xc70405c3
 65a:	c8 05 00 1e          	enter  $0x5,$0x1e
 65e:	00 00                	add    %al,(%eax)
 660:	00 05 00 04 00 00    	add    %al,0x400
 666:	00 00                	add    %al,(%eax)
 668:	00 04 a7             	add    %al,(%edi,%eiz,4)
 66b:	03 a7 03 04 ab 03    	add    0x3ab0403(%edi),%esp
 671:	d0 03                	rolb   $1,(%ebx)
 673:	00 04 fa             	add    %al,(%edx,%edi,8)
 676:	03 fa                	add    %edx,%edi
 678:	03 04 fe             	add    (%esi,%edi,8),%eax
 67b:	03                   	.byte 0x3
 67c:	98                   	cwtl
 67d:	04 00                	add    $0x0,%al

Disassembly of section .debug_line:

00000000 <.debug_line>:
       0:	1f                   	pop    %ds
       1:	01 00                	add    %eax,(%eax)
       3:	00 05 00 04 00 37    	add    %al,0x37000400
       9:	00 00                	add    %al,(%eax)
       b:	00 01                	add    %al,(%ecx)
       d:	01 01                	add    %eax,(%ecx)
       f:	fb                   	sti
      10:	0e                   	push   %cs
      11:	0d 00 01 01 01       	or     $0x1010100,%eax
      16:	01 00                	add    %eax,(%eax)
      18:	00 00                	add    %al,(%eax)
      1a:	01 00                	add    %eax,(%eax)
      1c:	00 01                	add    %al,(%ecx)
      1e:	01 01                	add    %eax,(%ecx)
      20:	1f                   	pop    %ds
      21:	03 00                	add    (%eax),%eax
      23:	00 00                	add    %al,(%eax)
      25:	00 28                	add    %ch,(%eax)
      27:	00 00                	add    %al,(%eax)
      29:	00 8f 01 00 00 02    	add    %cl,0x2000001(%edi)
      2f:	01 1f                	add    %ebx,(%edi)
      31:	02 0f                	add    (%edi),%cl
      33:	03 22                	add    (%edx),%esp
      35:	00 00                	add    %al,(%eax)
      37:	00 01                	add    %al,(%ecx)
      39:	22 00                	and    (%eax),%al
      3b:	00 00                	add    %al,(%eax)
      3d:	01 2f                	add    %ebp,(%edi)
      3f:	00 00                	add    %al,(%eax)
      41:	00 02                	add    %al,(%edx)
      43:	05 61 00 05 02       	add    $0x2050061,%eax
      48:	10 00                	adc    %al,(%eax)
      4a:	10 00                	adc    %al,(%eax)
      4c:	03 1a                	add    (%edx),%ebx
      4e:	01 05 05 13 05 61    	add    %eax,0x61051305
      54:	06                   	push   %es
      55:	11 90 05 22 e6 05    	adc    %edx,0x5e62205(%eax)
      5b:	18 31                	sbb    %dh,(%ecx)
      5d:	05 22 47 05 17       	add    $0x17054722,%eax
      62:	3b 05 05 06 83 13    	cmp    0x13830605,%eax
      68:	14 05                	adc    $0x5,%al
      6a:	1a 06                	sbb    (%esi),%al
      6c:	0f 05                	syscall
      6e:	18 69 05             	sbb    %ch,0x5(%ecx)
      71:	05 06 83 13 13       	add    $0x13138306,%eax
      76:	05 1a 06 03 7a       	add    $0x7a03061a,%eax
      7b:	01 05 23 86 05 1a    	add    %eax,0x1a058623
      81:	38 05 23 6a 05 1a    	cmp    %al,0x1a056a23
      87:	38 05 2a 40 05 1a    	cmp    %al,0x1a05402a
      8d:	38 05 01 08 5f 05    	cmp    %al,0x55f0801
      93:	11 06                	adc    %eax,(%esi)
      95:	93                   	xchg   %eax,%ebx
      96:	05 05 13 05 11       	add    $0x11051305,%eax
      9b:	06                   	push   %es
      9c:	11 05 0e 21 05 05    	adc    %eax,0x505210e
      a2:	06                   	push   %es
      a3:	ad                   	lods   %ds:(%esi),%eax
      a4:	05 0d 06 01 05       	add    $0x501060d,%eax
      a9:	05 06 a1 05 06       	add    $0x605a106,%eax
      ae:	03 6f 01             	add    0x1(%edi),%ebp
      b1:	05 05 13 13 13       	add    $0x13131305,%eax
      b6:	14 05                	adc    $0x5,%al
      b8:	18 06                	sbb    %al,(%esi)
      ba:	01 05 05 06 9f 13    	add    %eax,0x139f0605
      c0:	13 05 11 06 16 05    	adc    0x5160611,%eax
      c6:	05 03 0e 2e 05       	add    $0x52e0e03,%eax
      cb:	1a 03                	sbb    (%ebx),%al
      cd:	68 58 9e 05 05       	push   $0x5059e58
      d2:	06                   	push   %es
      d3:	03 12                	add    (%edx),%edx
      d5:	01 05 06 03 6c 01    	add    %eax,0x16c0306
      db:	05 05 13 13 13       	add    $0x13131305,%eax
      e0:	14 05                	adc    $0x5,%al
      e2:	18 06                	sbb    %al,(%esi)
      e4:	01 05 05 06 9f 13    	add    %eax,0x139f0605
      ea:	13 05 1a 06 03 7a    	adc    0x7a03061a,%eax
      f0:	01 9e 05 05 06 03    	add    %ebx,0x3060505(%esi)
      f6:	15 01 05 06 03       	adc    $0x3060501,%eax
      fb:	69 01 05 05 13 13    	imul   $0x13130505,(%ecx),%eax
     101:	13 14 05 18 06 01 05 	adc    0x5010618(,%eax,1),%edx
     108:	05 06 9f 13 13       	add    $0x13139f06,%eax
     10d:	05 1a 06 03 7a       	add    $0x7a03061a,%eax
     112:	01 9e 05 05 06 03    	add    %ebx,0x3060505(%esi)
     118:	18 01                	sbb    %al,(%ecx)
     11a:	05 01 06 59 02       	add    $0x2590601,%eax
     11f:	03 00                	add    (%eax),%eax
     121:	01 01                	add    %eax,(%ecx)
     123:	40                   	inc    %eax
     124:	01 00                	add    %eax,(%eax)
     126:	00 05 00 04 00 37    	add    %al,0x37000400
     12c:	00 00                	add    %al,(%eax)
     12e:	00 01                	add    %al,(%ecx)
     130:	01 01                	add    %eax,(%ecx)
     132:	fb                   	sti
     133:	0e                   	push   %cs
     134:	0d 00 01 01 01       	or     $0x1010100,%eax
     139:	01 00                	add    %eax,(%eax)
     13b:	00 00                	add    %al,(%eax)
     13d:	01 00                	add    %eax,(%eax)
     13f:	00 01                	add    %al,(%ecx)
     141:	01 01                	add    %eax,(%ecx)
     143:	1f                   	pop    %ds
     144:	03 00                	add    (%eax),%eax
     146:	00 00                	add    %al,(%eax)
     148:	00 28                	add    %ch,(%eax)
     14a:	00 00                	add    %al,(%eax)
     14c:	00 8f 01 00 00 02    	add    %cl,0x2000001(%edi)
     152:	01 1f                	add    %ebx,(%edi)
     154:	02 0f                	add    (%edi),%cl
     156:	03 3e                	add    (%esi),%edi
     158:	00 00                	add    %al,(%eax)
     15a:	00 01                	add    %al,(%ecx)
     15c:	3e 00 00             	add    %al,%ds:(%eax)
     15f:	00 01                	add    %al,(%ecx)
     161:	2f                   	das
     162:	00 00                	add    %al,(%eax)
     164:	00 02                	add    %al,(%edx)
     166:	05 48 00 05 02       	add    $0x2050048,%eax
     16b:	f0 00 10             	lock add %dl,(%eax)
     16e:	00 03                	add    %al,(%ebx)
     170:	19 01                	sbb    %eax,(%ecx)
     172:	05 05 13 05 48       	add    $0x48051305,%eax
     177:	06                   	push   %es
     178:	11 4a 05             	adc    %ecx,0x5(%edx)
     17b:	19 bb 05 05 06 83    	sbb    %edi,-0x7cf9fafb(%ebx)
     181:	05 29 06 15 05       	add    $0x5150629,%eax
     186:	17                   	pop    %ss
     187:	39 05 05 06 83 05    	cmp    %eax,0x5830605
     18d:	13 06                	adc    (%esi),%eax
     18f:	01 05 05 06 83 05    	add    %eax,0x5830605
     195:	18 06                	sbb    %al,(%esi)
     197:	01 05 05 06 75 05    	add    %eax,0x5750605
     19d:	01 06                	add    %eax,(%esi)
     19f:	13 05 1a 3b 05 01    	adc    0x1053b1a,%eax
     1a5:	83 20 05             	andl   $0x5,(%eax)
     1a8:	11 06                	adc    %eax,(%esi)
     1aa:	31 05 05 13 05 11    	xor    %eax,0x11051305
     1b0:	06                   	push   %es
     1b1:	11 05 10 21 05 0f    	adc    %eax,0xf052110
     1b7:	08 13                	or     %dl,(%ebx)
     1b9:	05 10 9d 05 05       	add    $0x5059d10,%eax
     1be:	06                   	push   %es
     1bf:	67 15 05 0a 01 05    	addr16 adc $0x5010a05,%eax
     1c5:	17                   	pop    %ss
     1c6:	00 02                	add    %al,(%edx)
     1c8:	04 01                	add    $0x1,%al
     1ca:	01 05 11 06 53 05    	add    %eax,0x5530611
     1d0:	09 06                	or     %eax,(%esi)
     1d2:	96                   	xchg   %eax,%esi
     1d3:	05 06 03 71 01       	add    $0x1710306,%eax
     1d8:	05 05 13 13 05       	add    $0x5131305,%eax
     1dd:	19 06                	sbb    %eax,(%esi)
     1df:	11 05 05 06 08 d8    	adc    %eax,0xd8080605
     1e5:	13 05 13 06 11 05    	adc    0x5110613,%eax
     1eb:	05 06 f4 05 1a       	add    $0x1a05f406,%eax
     1f0:	06                   	push   %es
     1f1:	01 08                	add    %ecx,(%eax)
     1f3:	74 05                	je     1fa <MBOOT_HEADER_FLAGS+0x1f7>
     1f5:	1f                   	pop    %ds
     1f6:	00 02                	add    %al,(%edx)
     1f8:	04 03                	add    $0x3,%al
     1fa:	06                   	push   %es
     1fb:	03 09                	add    (%ecx),%ecx
     1fd:	01 05 17 00 02 04    	add    %eax,0x4020017
     203:	01 01                	add    %eax,(%ecx)
     205:	05 05 4f 13 13       	add    $0x13134f05,%eax
     20a:	05 06 03 6b 58       	add    $0x586b0306,%eax
     20f:	05 05 13 06 03       	add    $0x3061305,%eax
     214:	18 01                	sbb    %al,(%ecx)
     216:	05 19 03 68 58       	add    $0x58680319,%eax
     21b:	05 05 06 67 13       	add    $0x13670605,%eax
     220:	13 05 29 06 13 05    	adc    0x5130629,%eax
     226:	1a 3c 05 05 03 11 66 	sbb    0x66110305(,%eax,1),%bh
     22d:	05 19 03 6b 58       	add    $0x586b0319,%eax
     232:	05 29 6a 05 1a       	add    $0x1a056a29,%eax
     237:	3c 05                	cmp    $0x5,%al
     239:	17                   	pop    %ss
     23a:	63 05 05 06 a1 06    	arpl   %eax,0x6a10605
     240:	01 06                	add    %eax,(%esi)
     242:	03 11                	add    (%ecx),%edx
     244:	01 05 06 03 6a 01    	add    %eax,0x16a0306
     24a:	05 05 13 13 13       	add    $0x13131305,%eax
     24f:	13 05 17 06 10 05    	adc    0x5100617,%eax
     255:	05 06 a1 06 01       	add    $0x106a106,%eax
     25a:	06                   	push   %es
     25b:	03 14 01             	add    (%ecx,%eax,1),%edx
     25e:	05 01 06 59 02       	add    $0x2590601,%eax
     263:	03 00                	add    (%eax),%eax
     265:	01 01                	add    %eax,(%ecx)
     267:	b4 00                	mov    $0x0,%ah
     269:	00 00                	add    %al,(%eax)
     26b:	05 00 04 00 41       	add    $0x41000400,%eax
     270:	00 00                	add    %al,(%eax)
     272:	00 01                	add    %al,(%ecx)
     274:	01 01                	add    %eax,(%ecx)
     276:	fb                   	sti
     277:	0e                   	push   %cs
     278:	0d 00 01 01 01       	or     $0x1010100,%eax
     27d:	01 00                	add    %eax,(%eax)
     27f:	00 00                	add    %al,(%eax)
     281:	01 00                	add    %eax,(%eax)
     283:	00 01                	add    %al,(%ecx)
     285:	01 01                	add    %eax,(%ecx)
     287:	1f                   	pop    %ds
     288:	03 00                	add    (%eax),%eax
     28a:	00 00                	add    %al,(%eax)
     28c:	00 28                	add    %ch,(%eax)
     28e:	00 00                	add    %al,(%eax)
     290:	00 8f 01 00 00 02    	add    %cl,0x2000001(%edi)
     296:	01 1f                	add    %ebx,(%edi)
     298:	02 0f                	add    (%edi),%cl
     29a:	05 4b 00 00 00       	add    $0x4b,%eax
     29f:	01 4b 00             	add    %ecx,0x0(%ebx)
     2a2:	00 00                	add    %al,(%eax)
     2a4:	01 51 00             	add    %edx,0x0(%ecx)
     2a7:	00 00                	add    %al,(%eax)
     2a9:	02 57 00             	add    0x0(%edi),%dl
     2ac:	00 00                	add    %al,(%eax)
     2ae:	02 2f                	add    (%edi),%ch
     2b0:	00 00                	add    %al,(%eax)
     2b2:	00 02                	add    %al,(%edx)
     2b4:	05 2c 00 05 02       	add    $0x205002c,%eax
     2b9:	00 02                	add    %al,(%edx)
     2bb:	10 00                	adc    %al,(%eax)
     2bd:	15 05 05 13 05       	adc    $0x5130505,%eax
     2c2:	2c 06                	sub    $0x6,%al
     2c4:	11 3c 05 0e 3d 05 05 	adc    %edi,0x5053d0e(,%eax,1)
     2cb:	06                   	push   %es
     2cc:	3d 14 05 08 06       	cmp    $0x6080514,%eax
     2d1:	01 05 0c 06 4d 05    	add    %eax,0x54d060c
     2d7:	0f 06                	clts
     2d9:	01 05 0c 06 5b 05    	add    %eax,0x55b060c
     2df:	0f 06                	clts
     2e1:	01 05 09 06 77 06    	add    %eax,0x6770609
     2e7:	58                   	pop    %eax
     2e8:	06                   	push   %es
     2e9:	5a                   	pop    %edx
     2ea:	05 01 06 84 05       	add    $0x5840601,%eax
     2ef:	09 1e                	or     %ebx,(%esi)
     2f1:	06                   	push   %es
     2f2:	03 76 58             	add    0x58(%esi),%esi
     2f5:	06                   	push   %es
     2f6:	58                   	pop    %eax
     2f7:	58                   	pop    %eax
     2f8:	06                   	push   %es
     2f9:	21 05 0f 01 05 09    	and    %eax,0x905010f
     2ff:	01 05 0f 01 05 09    	add    %eax,0x905010f
     305:	4f                   	dec    %edi
     306:	05 01 06 7a 05       	add    $0x57a0601,%eax
     30b:	09 03                	or     %eax,(%ebx)
     30d:	7a 20                	jp     32f <MBOOT_HEADER_FLAGS+0x32c>
     30f:	06                   	push   %es
     310:	56                   	push   %esi
     311:	06                   	push   %es
     312:	4a                   	dec    %edx
     313:	05 01 44 05 09       	add    $0x9054401,%eax
     318:	03 78 20             	add    0x20(%eax),%edi
     31b:	58                   	pop    %eax
     31c:	00 01                	add    %al,(%ecx)
     31e:	01 fc                	add    %edi,%esp
     320:	00 00                	add    %al,(%eax)
     322:	00 05 00 04 00 5a    	add    %al,0x5a000400
     328:	00 00                	add    %al,(%eax)
     32a:	00 01                	add    %al,(%ecx)
     32c:	01 01                	add    %eax,(%ecx)
     32e:	fb                   	sti
     32f:	0e                   	push   %cs
     330:	0d 00 01 01 01       	or     $0x1010100,%eax
     335:	01 00                	add    %eax,(%eax)
     337:	00 00                	add    %al,(%eax)
     339:	01 00                	add    %eax,(%eax)
     33b:	00 01                	add    %al,(%ecx)
     33d:	01 01                	add    %eax,(%ecx)
     33f:	1f                   	pop    %ds
     340:	03 00                	add    (%eax),%eax
     342:	00 00                	add    %al,(%eax)
     344:	00 28                	add    %ch,(%eax)
     346:	00 00                	add    %al,(%eax)
     348:	00 8f 01 00 00 02    	add    %cl,0x2000001(%edi)
     34e:	01 1f                	add    %ebx,(%edi)
     350:	02 0f                	add    (%edi),%cl
     352:	0a 68 00             	or     0x0(%eax),%ch
     355:	00 00                	add    %al,(%eax)
     357:	01 68 00             	add    %ebp,0x0(%eax)
     35a:	00 00                	add    %al,(%eax)
     35c:	01 6f 00             	add    %ebp,0x0(%edi)
     35f:	00 00                	add    %al,(%eax)
     361:	02 77 00             	add    0x0(%edi),%dh
     364:	00 00                	add    %al,(%eax)
     366:	02 7f 00             	add    0x0(%edi),%bh
     369:	00 00                	add    %al,(%eax)
     36b:	02 51 00             	add    0x0(%ecx),%dl
     36e:	00 00                	add    %al,(%eax)
     370:	02 85 00 00 00 02    	add    0x2000000(%ebp),%al
     376:	8b 00                	mov    (%eax),%eax
     378:	00 00                	add    %al,(%eax)
     37a:	02 96 00 00 00 02    	add    0x2000000(%esi),%dl
     380:	2f                   	das
     381:	00 00                	add    %al,(%eax)
     383:	00 02                	add    %al,(%edx)
     385:	05 18 00 05 02       	add    $0x2050018,%eax
     38a:	60                   	pusha
     38b:	02 10                	add    (%eax),%dl
     38d:	00 1a                	add    %bl,(%edx)
     38f:	05 05 14 05 18       	add    $0x18051405,%eax
     394:	06                   	push   %es
     395:	10 05 05 03 0e 4a    	adc    %al,0x4a0e0305
     39b:	03 74 58 06          	add    0x6(%eax,%ebx,2),%esi
     39f:	59                   	pop    %ecx
     3a0:	5a                   	pop    %edx
     3a1:	9f                   	lahf
     3a2:	59                   	pop    %ecx
     3a3:	a0 9f 59 a1 a1       	mov    0xa1a1599f,%al
     3a8:	13 14 05 16 01 05 05 	adc    0x5050116(,%eax,1),%edx
     3af:	06                   	push   %es
     3b0:	03 7a 01             	add    0x1(%edx),%edi
     3b3:	05 09 06 43 9f       	add    $0x9f430609,%eax
     3b8:	05 12 06 01 05       	add    $0x5010612,%eax
     3bd:	09 06                	or     %eax,(%esi)
     3bf:	59                   	pop    %ecx
     3c0:	05 0c 06 01 05       	add    $0x501060c,%eax
     3c5:	16                   	push   %ss
     3c6:	06                   	push   %es
     3c7:	55                   	push   %ebp
     3c8:	05 05 1a 18 a1       	add    $0xa1181a05,%eax
     3cd:	9f                   	lahf
     3ce:	05 0a 06 01 05       	add    $0x501060a,%eax
     3d3:	08 00                	or     %al,(%eax)
     3d5:	02 04 01             	add    (%ecx,%eax,1),%al
     3d8:	58                   	pop    %eax
     3d9:	05 09 06 67 9f       	add    $0x9f670609,%eax
     3de:	05 05 c0 59 05       	add    $0x559c005,%eax
     3e3:	01 06                	add    %eax,(%esi)
     3e5:	13 05 05 49 05 0d    	adc    0xd054905,%eax
     3eb:	06                   	push   %es
     3ec:	03 69 ba             	add    -0x46(%ecx),%ebp
     3ef:	05 16 9a 00 02       	add    $0x2009a16,%eax
     3f4:	04 01                	add    $0x1,%al
     3f6:	06                   	push   %es
     3f7:	01 05 05 06 6e 05    	add    %eax,0x56e0605
     3fd:	09 13                	or     %edx,(%ebx)
     3ff:	9f                   	lahf
     400:	bb 05 0e 01 05       	mov    $0x5010e05,%ebx
     405:	09 01                	or     %eax,(%ecx)
     407:	05 0e 01 05 09       	add    $0x905010e,%eax
     40c:	03 0b                	add    (%ebx),%ecx
     40e:	9e                   	sahf
     40f:	05 05 b0 59 05       	add    $0x559b005,%eax
     414:	01 06                	add    %eax,(%esi)
     416:	13 05 05 49 02 05    	adc    0x5024905,%eax
     41c:	00 01                	add    %al,(%ecx)
     41e:	01 ef                	add    %ebp,%edi
     420:	0a 00                	or     (%eax),%al
     422:	00 05 00 04 00 50    	add    %al,0x50000400
     428:	00 00                	add    %al,(%eax)
     42a:	00 01                	add    %al,(%ecx)
     42c:	01 01                	add    %eax,(%ecx)
     42e:	fb                   	sti
     42f:	0e                   	push   %cs
     430:	0d 00 01 01 01       	or     $0x1010100,%eax
     435:	01 00                	add    %eax,(%eax)
     437:	00 00                	add    %al,(%eax)
     439:	01 00                	add    %eax,(%eax)
     43b:	00 01                	add    %al,(%ecx)
     43d:	01 01                	add    %eax,(%ecx)
     43f:	1f                   	pop    %ds
     440:	03 00                	add    (%eax),%eax
     442:	00 00                	add    %al,(%eax)
     444:	00 28                	add    %ch,(%eax)
     446:	00 00                	add    %al,(%eax)
     448:	00 8f 01 00 00 02    	add    %cl,0x2000001(%edi)
     44e:	01 1f                	add    %ebx,(%edi)
     450:	02 0f                	add    (%edi),%cl
     452:	08 a3 00 00 00 01    	or     %ah,0x1000000(%ebx)
     458:	a3 00 00 00 01       	mov    %eax,0x1000000
     45d:	2f                   	das
     45e:	00 00                	add    %al,(%eax)
     460:	00 02                	add    %al,(%edx)
     462:	ab                   	stos   %eax,%es:(%edi)
     463:	00 00                	add    %al,(%eax)
     465:	00 02                	add    %al,(%edx)
     467:	8b 00                	mov    (%eax),%eax
     469:	00 00                	add    %al,(%eax)
     46b:	02 77 00             	add    0x0(%edi),%dh
     46e:	00 00                	add    %al,(%eax)
     470:	02 b4 00 00 00 02 96 	add    -0x69fe0000(%eax,%eax,1),%dh
     477:	00 00                	add    %al,(%eax)
     479:	00 02                	add    %al,(%edx)
     47b:	05 33 00 05 02       	add    $0x2050033,%eax
     480:	80 03 10             	addb   $0x10,(%ebx)
     483:	00 03                	add    %al,(%ebx)
     485:	d0 02                	rolb   $1,(%edx)
     487:	01 05 05 13 13 05    	add    %eax,0x5131305
     48d:	33 06                	xor    (%esi),%eax
     48f:	10 05 09 5c 05 33    	adc    %al,0x33055c09
     495:	62 05 09 24 05 33    	bound  %eax,0x33052409
     49b:	62 05 0e 68 05 05    	bound  %eax,0x505680e
     4a1:	06                   	push   %es
     4a2:	a0 05 09 06 01       	mov    0x1060905,%al
     4a7:	05 08 00 02 04       	add    $0x4020008,%eax
     4ac:	01 82 05 09 06 75    	add    %eax,0x75060905(%edx)
     4b2:	9f                   	lahf
     4b3:	05 0e 01 05 20       	add    $0x2005010e,%eax
     4b8:	00 02                	add    %al,(%edx)
     4ba:	04 01                	add    $0x1,%al
     4bc:	01 05 17 06 ac 05    	add    %eax,0x5ac0617
     4c2:	0d 06 9f 13 05       	or     $0x5139f06,%eax
     4c7:	2f                   	das
     4c8:	06                   	push   %es
     4c9:	01 05 14 4c 05 29    	add    %eax,0x29054c14
     4cf:	00 02                	add    %al,(%edx)
     4d1:	04 03                	add    $0x3,%al
     4d3:	70 05                	jo     4da <MBOOT_HEADER_FLAGS+0x4d7>
     4d5:	33 3e                	xor    (%esi),%edi
     4d7:	2f                   	das
     4d8:	3b 05 14 3d 05 33    	cmp    0x33053d14,%eax
     4de:	73 05                	jae    4e5 <MBOOT_HEADER_FLAGS+0x4e2>
     4e0:	14 3c                	adc    $0x3c,%al
     4e2:	75 65                	jne    549 <MBOOT_HEADER_FLAGS+0x546>
     4e4:	05 0d 06 67 13       	add    $0x1367060d,%eax
     4e9:	13 05 29 00 02 04    	adc    0x4020029,%eax
     4ef:	03 61 05             	add    0x5(%ecx),%esp
     4f2:	20 00                	and    %al,(%eax)
     4f4:	02 04 01             	add    (%ecx,%eax,1),%al
     4f7:	01 00                	add    %eax,(%eax)
     4f9:	02 04 01             	add    (%ecx,%eax,1),%al
     4fc:	06                   	push   %es
     4fd:	90                   	nop
     4fe:	05 09 06 19 05       	add    $0x5190609,%eax
     503:	01 06                	add    %eax,(%esi)
     505:	b0 05                	mov    $0x5,%al
     507:	09 06                	or     %eax,(%esi)
     509:	aa                   	stos   %al,%es:(%edi)
     50a:	05 01 06 ae 05       	add    $0x5ae0601,%eax
     50f:	48                   	dec    %eax
     510:	06                   	push   %es
     511:	03 bb 7d c8 05 05    	add    0x505c87d(%ebx),%edi
     517:	13 13                	adc    (%ebx),%edx
     519:	13 05 48 06 0f 05    	adc    0x50f0648,%eax
     51f:	09 5a 05             	or     %ebx,0x5(%edx)
     522:	48                   	dec    %eax
     523:	2c 74                	sub    $0x74,%al
     525:	90                   	nop
     526:	05 27 43 3c 05       	add    $0x53c4327,%eax
     52b:	05 06 02 23 11       	add    $0x11230206,%eax
     530:	05 09 13 05 27       	add    $0x27051309,%eax
     535:	06                   	push   %es
     536:	01 05 15 82 05 27    	add    %eax,0x27058215
     53c:	3c 05                	cmp    $0x5,%al
     53e:	1f                   	pop    %ds
     53f:	d6                   	(bad)
     540:	05 09 06 67 05       	add    $0x5670609,%eax
     545:	0e                   	push   %cs
     546:	06                   	push   %es
     547:	2e 05 13 00 02 04    	cs add $0x4020013,%eax
     54d:	01 06                	add    %eax,(%esi)
     54f:	2f                   	das
     550:	06                   	push   %es
     551:	59                   	pop    %ecx
     552:	05 05 06 3c 05       	add    $0x53c0605,%eax
     557:	13 06                	adc    (%esi),%eax
     559:	01 05 05 06 5b 67    	add    %eax,0x675b0605
     55f:	9f                   	lahf
     560:	05 10 01 06 74       	add    $0x74060110,%eax
     565:	05 09 06 91 06       	add    $0x6910609,%eax
     56a:	01 05 10 3b 05 09    	add    %eax,0x9053b10
     570:	3d 05 10 06 65       	cmp    $0x65061005,%eax
     575:	06                   	push   %es
     576:	66 05 05 06          	add    $0x605,%ax
     57a:	4d                   	dec    %ebp
     57b:	9f                   	lahf
     57c:	05 08 06 01 05       	add    $0x5010608,%eax
     581:	05 06 77 05 01       	add    $0x1057706,%eax
     586:	06                   	push   %es
     587:	75 4a                	jne    5d3 <MBOOT_HEADER_FLAGS+0x5d0>
     589:	05 05 3b 05 09       	add    $0x9053b05,%eax
     58e:	06                   	push   %es
     58f:	aa                   	stos   %al,%es:(%edi)
     590:	05 30 03 f4 01       	add    $0x1f40330,%eax
     595:	f2 05 05 14 05 30    	repnz add $0x30051405,%eax
     59b:	06                   	push   %es
     59c:	10 05 0a 3f 05 30    	adc    %al,0x30053f0a
     5a2:	71 05                	jno    5a9 <MBOOT_HEADER_FLAGS+0x5a6>
     5a4:	0a 4d 05             	or     0x5(%ebp),%cl
     5a7:	30 63 05             	xor    %ah,0x5(%ebx)
     5aa:	0a 76 9f             	or     -0x61(%esi),%dh
     5ad:	05 0d 2f 05 0a       	add    $0xa052f0d,%eax
     5b2:	aa                   	stos   %al,%es:(%edi)
     5b3:	05 0d a0 05 10       	add    $0x1005a00d,%eax
     5b8:	33 05 0a 03 79 3c    	xor    0x3c79030a,%eax
     5be:	05 05 06 9f 13       	add    $0x139f0605,%eax
     5c3:	13 15 13 05 14 01    	adc    0x1140513,%edx
     5c9:	06                   	push   %es
     5ca:	d6                   	(bad)
     5cb:	05 09 06 75 05       	add    $0x5750609,%eax
     5d0:	0c 06                	or     $0x6,%al
     5d2:	01 05 15 00 02 04    	add    %eax,0x4020015
     5d8:	01 06                	add    %eax,(%esi)
     5da:	58                   	pop    %eax
     5db:	05 21 00 02 04       	add    $0x4020021,%eax
     5e0:	01 06                	add    %eax,(%esi)
     5e2:	01 05 09 06 3d 05    	add    %eax,0x53d0609
     5e8:	0a 06                	or     (%esi),%al
     5ea:	01 05 14 06 3a 05    	add    %eax,0x53a0614
     5f0:	10 06                	adc    %al,(%esi)
     5f2:	01 05 14 4a 00 02    	add    %eax,0x2004a14
     5f8:	04 01                	add    $0x1,%al
     5fa:	06                   	push   %es
     5fb:	4f                   	dec    %edi
     5fc:	00 02                	add    %al,(%edx)
     5fe:	04 01                	add    $0x1,%al
     600:	06                   	push   %es
     601:	82 05 1c 00 02 04 02 	addb   $0x2,0x402001c
     608:	06                   	push   %es
     609:	58                   	pop    %eax
     60a:	05 1d 00 02 04       	add    $0x402001d,%eax
     60f:	02 06                	add    (%esi),%al
     611:	01 05 14 00 02 04    	add    %eax,0x4020014
     617:	01 06                	add    %eax,(%esi)
     619:	3c 05                	cmp    $0x5,%al
     61b:	10 00                	adc    %al,(%eax)
     61d:	02 04 01             	add    (%ecx,%eax,1),%al
     620:	06                   	push   %es
     621:	01 05 14 00 02 04    	add    %eax,0x4020014
     627:	01 4a 06             	add    %ecx,0x6(%edx)
     62a:	5c                   	pop    %esp
     62b:	05 09 06 81 9e       	add    $0x9e810609,%eax
     630:	2e 05 14 00 02 04    	cs add $0x4020014,%eax
     636:	01 13                	add    %edx,(%ebx)
     638:	05 09 06 75 05       	add    $0x5750609,%eax
     63d:	12 06                	adc    (%esi),%al
     63f:	01 05 16 3c 05 14    	add    %eax,0x14053c16
     645:	06                   	push   %es
     646:	3b 05 10 06 01 05    	cmp    0x5010610,%eax
     64c:	14 4a                	adc    $0x4a,%al
     64e:	05 05 06 4d 05       	add    $0x54d0605,%eax
     653:	10 06                	adc    %al,(%esi)
     655:	01 05 05 06 85 05    	add    %eax,0x5850605
     65b:	16                   	push   %ss
     65c:	06                   	push   %es
     65d:	01 05 05 06 08 21    	add    %eax,0x21080605
     663:	05 0a 01 05 1e       	add    $0x1e05010a,%eax
     668:	00 02                	add    %al,(%edx)
     66a:	04 01                	add    $0x1,%al
     66c:	01 05 11 06 08 4a    	add    %eax,0x4a080611
     672:	05 12 06 c0 05       	add    $0x5c00612,%eax
     677:	1f                   	pop    %ds
     678:	06                   	push   %es
     679:	01 05 15 3c 05 12    	add    %eax,0x12053c15
     67f:	06                   	push   %es
     680:	59                   	pop    %ecx
     681:	05 1f 06 01 d6       	add    $0xd601061f,%eax
     686:	05 21 00 02 04       	add    $0x4020021,%eax
     68b:	02 06                	add    (%esi),%al
     68d:	0d 05 1b 00 02       	or     $0x2001b05,%eax
     692:	04 01                	add    $0x1,%al
     694:	3c 05                	cmp    $0x5,%al
     696:	21 00                	and    %eax,(%eax)
     698:	02 04 02             	add    (%edx,%eax,1),%al
     69b:	06                   	push   %es
     69c:	01 05 1b 00 02 04    	add    %eax,0x402001b
     6a2:	01 58 05             	add    %ebx,0x5(%eax)
     6a5:	1f                   	pop    %ds
     6a6:	5f                   	pop    %edi
     6a7:	05 09 06 66 06       	add    $0x6660609,%eax
     6ac:	01 05 2d 00 02 04    	add    %eax,0x402002d
     6b2:	02 03                	add    (%ebx),%al
     6b4:	77 01                	ja     6b7 <MBOOT_HEADER_FLAGS+0x6b4>
     6b6:	05 1f 03 09 3c       	add    $0x3c09031f,%eax
     6bb:	05 2d 00 02 04       	add    $0x402002d,%eax
     6c0:	02 06                	add    (%esi),%al
     6c2:	03 77 2e             	add    0x2e(%edi),%esi
     6c5:	05 1e 00 02 04       	add    $0x402001e,%eax
     6ca:	01 01                	add    %eax,(%ecx)
     6cc:	00 02                	add    %al,(%edx)
     6ce:	04 01                	add    $0x1,%al
     6d0:	06                   	push   %es
     6d1:	66 00 02             	data16 add %al,(%edx)
     6d4:	04 01                	add    $0x1,%al
     6d6:	3c 05                	cmp    $0x5,%al
     6d8:	1b 00                	sbb    (%eax),%eax
     6da:	02 04 01             	add    (%ecx,%eax,1),%al
     6dd:	06                   	push   %es
     6de:	4c                   	dec    %esp
     6df:	05 12 06 14 b8       	add    $0xb8140612,%eax
     6e4:	05 11 2d 05 12       	add    $0x12052d11,%eax
     6e9:	31 05 0d 06 2d 05    	xor    %eax,0x52d060d
     6ef:	1a 06                	sbb    (%esi),%al
     6f1:	14 05                	adc    $0x5,%al
     6f3:	13 48 05             	adc    0x5(%eax),%ecx
     6f6:	0d 06 3d 13 05       	or     $0x5133d06,%eax
     6fb:	1a 06                	sbb    (%esi),%al
     6fd:	01 05 10 3c 05 27    	add    %eax,0x27053c10
     703:	00 02                	add    %al,(%edx)
     705:	04 01                	add    $0x1,%al
     707:	06                   	push   %es
     708:	58                   	pop    %eax
     709:	00 02                	add    %al,(%edx)
     70b:	04 01                	add    $0x1,%al
     70d:	06                   	push   %es
     70e:	2e 05 2c 00 02 04    	cs add $0x402002c,%eax
     714:	01 06                	add    %eax,(%esi)
     716:	2f                   	das
     717:	05 3d 00 02 04       	add    $0x402003d,%eax
     71c:	01 06                	add    %eax,(%esi)
     71e:	01 00                	add    %eax,(%eax)
     720:	02 04 01             	add    (%ecx,%eax,1),%al
     723:	58                   	pop    %eax
     724:	00 02                	add    %al,(%edx)
     726:	04 01                	add    $0x1,%al
     728:	ac                   	lods   %ds:(%esi),%al
     729:	00 02                	add    %al,(%edx)
     72b:	04 01                	add    $0x1,%al
     72d:	08 3c 05 05 06 18 05 	or     %bh,0x5180605(,%eax,1)
     734:	09 06                	or     %eax,(%esi)
     736:	01 05 08 00 02 04    	add    %eax,0x4020008
     73c:	01 08                	add    %ecx,(%eax)
     73e:	2e 05 09 06 75 05    	cs add $0x5750609,%eax
     744:	01 06                	add    %eax,(%esi)
     746:	b0 05                	mov    $0x5,%al
     748:	09 06                	or     %eax,(%esi)
     74a:	e2 05                	loop   751 <MBOOT_HEADER_FLAGS+0x74e>
     74c:	01 06                	add    %eax,(%esi)
     74e:	ae                   	scas   %es:(%edi),%al
     74f:	05 14 00 02 04       	add    $0x4020014,%eax
     754:	01 06                	add    %eax,(%esi)
     756:	03 64 82 05          	add    0x5(%edx,%eax,4),%esp
     75a:	09 06                	or     %eax,(%esi)
     75c:	03 7a 01             	add    0x1(%edx),%edi
     75f:	05 14 00 02 04       	add    $0x4020014,%eax
     764:	01 88 05 09 85 05    	add    %ecx,0x5850905(%eax)
     76a:	20 06                	and    %al,(%esi)
     76c:	03 db                	add    %ebx,%ebx
     76e:	7d 08                	jge    778 <MBOOT_HEADER_FLAGS+0x775>
     770:	4a                   	dec    %edx
     771:	05 05 13 05 20       	add    $0x20051305,%eax
     776:	06                   	push   %es
     777:	11 05 05 4b 06 91    	adc    %eax,0x91064b05
     77d:	9f                   	lahf
     77e:	91                   	xchg   %eax,%ecx
     77f:	9f                   	lahf
     780:	05 18 06 01 05       	add    $0x5010618,%eax
     785:	05 59 05 18 49       	add    $0x49180559,%eax
     78a:	05 05 06 2f 59       	add    $0x592f0605,%eax
     78f:	91                   	xchg   %eax,%ecx
     790:	91                   	xchg   %eax,%ecx
     791:	05 01 06 9f 3c       	add    $0x3c9f0601,%eax
     796:	05 24 06 03 d5       	add    $0xd5030624,%eax
     79b:	00 74 05 05          	add    %dh,0x5(%ebp,%eax,1)
     79f:	13 05 24 06 11 90    	adc    0x90110624,%eax
     7a5:	05 08 3d 05 13       	add    $0x13053d08,%eax
     7aa:	00 02                	add    %al,(%edx)
     7ac:	04 01                	add    $0x1,%al
     7ae:	4a                   	dec    %edx
     7af:	05 09 06 59 05       	add    $0x5590609,%eax
     7b4:	01 06                	add    %eax,(%esi)
     7b6:	03 c5                	add    %ebp,%eax
     7b8:	00 74 05 09          	add    %dh,0x9(%ebp,%eax,1)
     7bc:	03 bb 7f 74 05 05    	add    0x505747f(%ebx),%edi
     7c2:	06                   	push   %es
     7c3:	cd 13                	int    $0x13
     7c5:	cb                   	lret
     7c6:	13 13                	adc    (%ebx),%edx
     7c8:	05 20 01 05 0c       	add    $0xc050120,%eax
     7cd:	06                   	push   %es
     7ce:	01 05 11 3c 05 20    	add    %eax,0x20053c11
     7d4:	00 02                	add    %al,(%edx)
     7d6:	04 01                	add    $0x1,%al
     7d8:	3c 05                	cmp    $0x5,%al
     7da:	0c b9                	or     $0xb9,%al
     7dc:	74 05                	je     7e3 <MBOOT_HEADER_FLAGS+0x7e0>
     7de:	20 00                	and    %al,(%eax)
     7e0:	02 04 01             	add    (%ecx,%eax,1),%al
     7e3:	9f                   	lahf
     7e4:	05 09 06 59 05       	add    $0x5590609,%eax
     7e9:	2b 06                	sub    (%esi),%eax
     7eb:	01 05 29 3d 05 0c    	add    %eax,0xc053d29
     7f1:	ad                   	lods   %ds:(%esi),%eax
     7f2:	05 1c 00 02 04       	add    $0x402001c,%eax
     7f7:	04 48                	add    $0x48,%al
     7f9:	05 09 06 3e 05       	add    $0x53e0609,%eax
     7fe:	0c 06                	or     $0x6,%al
     800:	01 05 09 06 3d 05    	add    %eax,0x53d0609
     806:	11 06                	adc    %eax,(%esi)
     808:	01 05 20 06 38 05    	add    %eax,0x5380620
     80e:	0c 06                	or     $0x6,%al
     810:	01 05 11 3c 05 20    	add    %eax,0x20053c11
     816:	00 02                	add    %al,(%edx)
     818:	04 01                	add    $0x1,%al
     81a:	ba 05 05 06 98       	mov    $0x98060505,%edx
     81f:	05 08 06 01 05       	add    $0x5010608,%eax
     824:	05 06 03 0b 82       	add    $0x820b0306,%eax
     829:	e5 05                	in     $0x5,%eax
     82b:	0a 01                	or     (%ecx),%al
     82d:	05 17 00 02 04       	add    $0x4020017,%eax
     832:	01 01                	add    %eax,(%ecx)
     834:	05 09 21 05 0e       	add    $0xe052109,%eax
     839:	06                   	push   %es
     83a:	01 05 09 06 75 05    	add    %eax,0x5750609
     840:	17                   	pop    %ss
     841:	00 02                	add    %al,(%edx)
     843:	04 01                	add    $0x1,%al
     845:	06                   	push   %es
     846:	10 05 0e 3d 05 09    	adc    %al,0x9053d0e
     84c:	3d 05 1e 00 02       	cmp    $0x2001e05,%eax
     851:	04 03                	add    $0x3,%al
     853:	06                   	push   %es
     854:	64 05 17 00 02 04    	fs add $0x4020017,%eax
     85a:	01 01                	add    %eax,(%ecx)
     85c:	05 05 5c a1 13       	add    $0x13a15c05,%eax
     861:	05 0a 06 15 05       	add    $0x515060a,%eax
     866:	0e                   	push   %cs
     867:	39 05 05 06 77 05    	cmp    %eax,0x5770605
     86d:	0a 06                	or     (%esi),%al
     86f:	01 05 08 00 02 04    	add    %eax,0x4020008
     875:	01 ba 05 0a 3c 05    	add    %edi,0x53c0a05(%edx)
     87b:	08 00                	or     %al,(%eax)
     87d:	02 04 01             	add    (%ecx,%eax,1),%al
     880:	2e 05 05 06 03 18    	cs add $0x18030605,%eax
     886:	4a                   	dec    %edx
     887:	05 12 06 01 05       	add    $0x5010612,%eax
     88c:	05 06 9f 9f 05       	add    $0x59f9f06,%eax
     891:	01 06                	add    %eax,(%esi)
     893:	bb 05 1b 00 02       	mov    $0x2001b05,%ebx
     898:	04 01                	add    $0x1,%al
     89a:	03 4e e4             	add    -0x1c(%esi),%ecx
     89d:	05 15 00 02 04       	add    $0x4020015,%eax
     8a2:	01 4a 05             	add    %ecx,0x5(%edx)
     8a5:	10 84 05 0d 06 76 05 	adc    %al,0x576060d(%ebp,%eax,1)
     8ac:	2e 06                	cs push %es
     8ae:	01 05 2c 3d 05 1f    	add    %eax,0x1f053d2c
     8b4:	00 02                	add    %al,(%edx)
     8b6:	04 04                	add    $0x4,%al
     8b8:	8f 05 0d 06 3e 13    	pop    0x133e060d
     8be:	05 14 06 01 05       	add    $0x5010614,%eax
     8c3:	15 06 38 05 10       	adc    $0x10053806,%eax
     8c8:	06                   	push   %es
     8c9:	01 05 15 00 02 04    	add    %eax,0x4020015
     8cf:	01 58 00             	add    %ebx,0x0(%eax)
     8d2:	02 04 01             	add    (%ecx,%eax,1),%al
     8d5:	08 58 05             	or     %bl,0x5(%eax)
     8d8:	09 06                	or     %eax,(%esi)
     8da:	03 15 01 a1 13 13    	add    0x1313a101,%edx
     8e0:	05 12 06 01 3c       	add    $0x3c010612,%eax
     8e5:	20 05 09 06 02 32    	and    %al,0x32020609
     8eb:	13 05 0d 13 05 2b    	adc    0x2b05130d,%eax
     8f1:	06                   	push   %es
     8f2:	01 05 19 82 05 2b    	add    %eax,0x2b058219
     8f8:	3c 05                	cmp    $0x5,%al
     8fa:	23 d6                	and    %esi,%edx
     8fc:	05 0d 06 75 05       	add    $0x575060d,%eax
     901:	12 06                	adc    (%esi),%al
     903:	2e 05 17 00 02 04    	cs add $0x4020017,%eax
     909:	01 06                	add    %eax,(%esi)
     90b:	2f                   	das
     90c:	05 09 59 05 17       	add    $0x17055909,%eax
     911:	06                   	push   %es
     912:	01 05 09 06 5b 05    	add    %eax,0x55b0609
     918:	14 01                	adc    $0x1,%al
     91a:	06                   	push   %es
     91b:	3c 05                	cmp    $0x5,%al
     91d:	0d 06 e5 05 12       	or     $0x1205e506,%eax
     922:	06                   	push   %es
     923:	01 05 0d 06 75 05    	add    %eax,0x575060d
     929:	12 06                	adc    (%esi),%al
     92b:	11 05 0d 3d 66 05    	adc    %eax,0x5663d0d
     931:	14 06                	adc    $0x6,%al
     933:	10 06                	adc    %al,(%esi)
     935:	66 05 09 06          	add    $0x609,%ax
     939:	4f                   	dec    %edi
     93a:	9f                   	lahf
     93b:	05 01 06 27 58       	add    $0x58270601,%eax
     940:	05 25 06 68 05       	add    $0x5680625,%eax
     945:	05 13 05 25 06       	add    $0x6250513,%eax
     94a:	11 90 05 08 3d 05    	adc    %edx,0x53d0805(%eax)
     950:	13 00                	adc    (%eax),%eax
     952:	02 04 01             	add    (%ecx,%eax,1),%al
     955:	4a                   	dec    %edx
     956:	05 09 06 59 05       	add    $0x5590609,%eax
     95b:	01 06                	add    %eax,(%esi)
     95d:	03 3e                	add    (%esi),%edi
     95f:	74 05                	je     966 <MBOOT_HEADER_FLAGS+0x963>
     961:	09 03                	or     %eax,(%ebx)
     963:	42                   	inc    %edx
     964:	74 05                	je     96b <MBOOT_HEADER_FLAGS+0x968>
     966:	05 06 cd 13 05       	add    $0x513cd06,%eax
     96b:	0c 06                	or     $0x6,%al
     96d:	5d                   	pop    %ebp
     96e:	05 05 29 06 83       	add    $0x83062905,%eax
     973:	05 0f 06 17 05       	add    $0x517060f,%eax
     978:	12 37                	adc    (%edi),%dh
     97a:	05 05 06 4d 13       	add    $0x134d0605,%eax
     97f:	13 05 1a 01 06 ba    	adc    0xba06011a,%eax
     985:	05 09 06 d7 05       	add    $0x5d70609,%eax
     98a:	11 06                	adc    %eax,(%esi)
     98c:	01 05 1a 06 3b 05    	add    %eax,0x53b061a
     992:	0f 06                	clts
     994:	01 05 1a 4a 05 05    	add    %eax,0x5054a1a
     99a:	06                   	push   %es
     99b:	95                   	xchg   %eax,%ebp
     99c:	05 0c 06 01 05       	add    $0x501060c,%eax
     9a1:	11 59 05             	adc    %ebx,0x5(%ecx)
     9a4:	0c 3b                	or     $0x3b,%al
     9a6:	05 11 2f 05 0c       	add    $0xc052f11,%eax
     9ab:	3b 05 11 3d 05 0c    	cmp    0xc053d11,%eax
     9b1:	2d 05 05 06 2f       	sub    $0x2f060505,%eax
     9b6:	05 0a 01 05 1a       	add    $0x1a05010a,%eax
     9bb:	00 02                	add    %al,(%edx)
     9bd:	04 01                	add    $0x1,%al
     9bf:	01 00                	add    %eax,(%eax)
     9c1:	02 04 01             	add    (%ecx,%eax,1),%al
     9c4:	06                   	push   %es
     9c5:	01 05 09 06 bc 05    	add    %eax,0x5bc0609
     9cb:	0e                   	push   %cs
     9cc:	06                   	push   %es
     9cd:	01 05 09 06 4b 05    	add    %eax,0x54b0609
     9d3:	16                   	push   %ss
     9d4:	06                   	push   %es
     9d5:	01 05 19 3d 05 09    	add    %eax,0x9053d19
     9db:	06                   	push   %es
     9dc:	92                   	xchg   %eax,%edx
     9dd:	05 15 06 01 05       	add    $0x5010615,%eax
     9e2:	27                   	daa
     9e3:	00 02                	add    %al,(%edx)
     9e5:	04 02                	add    $0x2,%al
     9e7:	06                   	push   %es
     9e8:	03 7a 4a             	add    0x4a(%edx),%edi
     9eb:	05 1a 00 02 04       	add    $0x402001a,%eax
     9f0:	01 3c 00             	add    %edi,(%eax,%eax,1)
     9f3:	02 04 01             	add    (%ecx,%eax,1),%al
     9f6:	06                   	push   %es
     9f7:	ac                   	lods   %ds:(%esi),%al
     9f8:	05 05 06 03 0a       	add    $0xa030605,%eax
     9fd:	01 05 08 06 01 05    	add    %eax,0x5010608
     a03:	05 06 03 0e 90       	add    $0x900e0306,%eax
     a08:	f3 05 09 01 05 16    	repz add $0x16050109,%eax
     a0e:	00 02                	add    %al,(%edx)
     a10:	04 01                	add    $0x1,%al
     a12:	01 05 0d cc 05 12    	add    %eax,0x1205cc0d
     a18:	06                   	push   %es
     a19:	01 05 16 00 02 04    	add    %eax,0x4020016
     a1f:	01 38                	add    %edi,(%eax)
     a21:	05 12 40 05 0d       	add    $0xd054012,%eax
     a26:	06                   	push   %es
     a27:	4b                   	dec    %ebx
     a28:	05 1d 00 02 04       	add    $0x402001d,%eax
     a2d:	02 6f 05             	add    0x5(%edi),%ch
     a30:	16                   	push   %ss
     a31:	00 02                	add    %al,(%edx)
     a33:	04 01                	add    $0x1,%al
     a35:	01 05 09 4b 05 14    	add    %eax,0x14054b09
     a3b:	06                   	push   %es
     a3c:	01 05 0b 3c 05 0d    	add    %eax,0xd053c0b
     a42:	06                   	push   %es
     a43:	4b                   	dec    %ebx
     a44:	05 16 00 02 04       	add    $0x4020016,%eax
     a49:	01 06                	add    %eax,(%esi)
     a4b:	56                   	push   %esi
     a4c:	05 0d 3e 05 1d       	add    $0x1d053e0d,%eax
     a51:	00 02                	add    %al,(%edx)
     a53:	04 02                	add    $0x2,%al
     a55:	06                   	push   %es
     a56:	64 05 16 00 02 04    	fs add $0x4020016,%eax
     a5c:	01 01                	add    %eax,(%ecx)
     a5e:	05 05 52 a0 13       	add    $0x13a05205,%eax
     a63:	05 0a 06 01 05       	add    $0x501060a,%eax
     a68:	08 00                	or     %al,(%eax)
     a6a:	02 04 01             	add    (%ecx,%eax,1),%al
     a6d:	9e                   	sahf
     a6e:	05 05 06 79 9f       	add    $0x9f790605,%eax
     a73:	ad                   	lods   %ds:(%esi),%eax
     a74:	05 01 06 c9 05       	add    $0x5c90601,%eax
     a79:	24 00                	and    $0x0,%al
     a7b:	02 04 01             	add    (%ecx,%eax,1),%al
     a7e:	03 5e c8             	add    -0x38(%esi),%ebx
     a81:	05 1e 00 02 04       	add    $0x402001e,%eax
     a86:	01 4a 05             	add    %ecx,0x5(%edx)
     a89:	15 93 05 1d 34       	adc    $0x341d0593,%eax
     a8e:	3c 2e                	cmp    $0x2e,%al
     a90:	05 28 00 02 04       	add    $0x4020028,%eax
     a95:	03 03                	add    (%ebx),%eax
     a97:	7a 01                	jp     a9a <MBOOT_HEADER_FLAGS+0xa97>
     a99:	05 22 00 02 04       	add    $0x4020022,%eax
     a9e:	03 4a 05             	add    0x5(%edx),%ecx
     aa1:	0d 06 84 13 05       	or     $0x5138406,%eax
     aa6:	1a 06                	sbb    (%esi),%al
     aa8:	01 05 1d 3d 05 0d    	add    %eax,0xd053d1d
     aae:	06                   	push   %es
     aaf:	92                   	xchg   %eax,%edx
     ab0:	05 1d 06 01 05       	add    $0x501061d,%eax
     ab5:	2e 00 02             	add    %al,%cs:(%edx)
     ab8:	04 02                	add    $0x2,%al
     aba:	06                   	push   %es
     abb:	03 7a 3c             	add    0x3c(%edx),%edi
     abe:	05 22 00 02 04       	add    $0x4020022,%eax
     ac3:	01 3c 00             	add    %edi,(%eax,%eax,1)
     ac6:	02 04 01             	add    (%ecx,%eax,1),%al
     ac9:	06                   	push   %es
     aca:	d6                   	(bad)
     acb:	05 09 06 03 18       	add    $0x18030609,%eax
     ad0:	01 9f 05 01 06 26    	add    %ebx,0x26060105(%edi)
     ad6:	05 22 06 03 eb       	add    $0xeb030622,%eax
     adb:	00 08                	add    %cl,(%eax)
     add:	4a                   	dec    %edx
     ade:	05 05 13 05 22       	add    $0x22051305,%eax
     ae3:	06                   	push   %es
     ae4:	11 05 0f 21 05 22    	adc    %eax,0x2205210f
     aea:	65 05 1b 3d 05 05    	gs add $0x5053d1b,%eax
     af0:	06                   	push   %es
     af1:	75 13                	jne    b06 <MBOOT_HEADER_FLAGS+0xb03>
     af3:	15 05 0a 01 05       	adc    $0x5010a05,%eax
     af8:	1a 00                	sbb    (%eax),%al
     afa:	02 04 01             	add    (%ecx,%eax,1),%al
     afd:	01 05 11 06 4a 4a    	add    %eax,0x4a4a0611
     b03:	05 28 00 02 04       	add    $0x4020028,%eax
     b08:	02 06                	add    (%esi),%al
     b0a:	74 05                	je     b11 <MBOOT_HEADER_FLAGS+0xb0e>
     b0c:	1a 00                	sbb    (%eax),%al
     b0e:	02 04 01             	add    (%ecx,%eax,1),%al
     b11:	01 05 09 4b 05 17    	add    %eax,0x17054b09
     b17:	06                   	push   %es
     b18:	01 05 21 92 05 0c    	add    %eax,0xc059221
     b1e:	3a 05 0d 06 59 05    	cmp    0x559060d,%al
     b24:	1b 06                	sbb    (%esi),%eax
     b26:	01 05 0d 06 75 05    	add    %eax,0x575060d
     b2c:	11 06                	adc    %eax,(%esi)
     b2e:	01 05 0d 06 67 06    	add    %eax,0x667060d
     b34:	66 05 0b 03          	add    $0x30b,%ax
     b38:	79 01                	jns    b3b <MBOOT_HEADER_FLAGS+0xb38>
     b3a:	05 05 06 03 0c       	add    $0xc030605,%eax
     b3f:	2e 05 09 06 01 05    	cs add $0x5010609,%eax
     b45:	08 00                	or     %al,(%eax)
     b47:	02 04 01             	add    (%ecx,%eax,1),%al
     b4a:	e4 05                	in     $0x5,%al
     b4c:	09 06                	or     %eax,(%esi)
     b4e:	9f                   	lahf
     b4f:	05 0d 03 87 7f       	add    $0x7f87030d,%eax
     b54:	01 05 05 13 9f 9f    	add    %eax,0x9f9f1305
     b5a:	9f                   	lahf
     b5b:	9f                   	lahf
     b5c:	9f                   	lahf
     b5d:	9f                   	lahf
     b5e:	9f                   	lahf
     b5f:	9f                   	lahf
     b60:	c9                   	leave
     b61:	9f                   	lahf
     b62:	9f                   	lahf
     b63:	9f                   	lahf
     b64:	9f                   	lahf
     b65:	9f                   	lahf
     b66:	05 01 06 59 3c       	add    $0x3c590601,%eax
     b6b:	05 05 06 03 a3       	add    $0xa3030605,%eax
     b70:	01 01                	add    %eax,(%ecx)
     b72:	05 0f 06 01 05       	add    $0x501060f,%eax
     b77:	01 9f 05 0a 06 03    	add    %ebx,0x3060a05(%edi)
     b7d:	47                   	inc    %edi
     b7e:	ba 05 0e 06 01       	mov    $0x1060e05,%edx
     b83:	05 0d 00 02 04       	add    $0x402000d,%eax
     b88:	01 e4                	add    %esp,%esp
     b8a:	05 09 06 67 05       	add    $0x5670609,%eax
     b8f:	0d 03 9b 7f 01       	or     $0x17f9b03,%eax
     b94:	05 05 13 59 03       	add    $0x3591305,%eax
     b99:	9a 01 58 05 01 06 13 	lcall  $0x1306,$0x1055801
     ba0:	05 0f 3b 05 01       	add    $0x1053b0f,%eax
     ba5:	9f                   	lahf
     ba6:	05 0a 06 03 4a       	add    $0x4a03060a,%eax
     bab:	4a                   	dec    %edx
     bac:	05 0e 06 01 05       	add    $0x501060e,%eax
     bb1:	0d 00 02 04 01       	or     $0x1040200,%eax
     bb6:	e4 05                	in     $0x5,%al
     bb8:	0a 06                	or     (%esi),%al
     bba:	69 05 0e 06 01 05 0d 	imul   $0x402000d,0x501060e,%eax
     bc1:	00 02 04 
     bc4:	01 e4                	add    %esp,%esp
     bc6:	05 09 06 67 05       	add    $0x5670609,%eax
     bcb:	0d 03 b9 7d 01       	or     $0x17db903,%eax
     bd0:	05 05 13 9f 05       	add    $0x59f1305,%eax
     bd5:	0a 06                	or     (%esi),%al
     bd7:	01 05 08 00 02 04    	add    %eax,0x4020008
     bdd:	01 9e 00 02 04 01    	add    %ebx,0x1040200(%esi)
     be3:	9e                   	sahf
     be4:	05 09 06 03 ea       	add    $0xea030609,%eax
     be9:	02 01                	add    (%ecx),%al
     beb:	03 58 f2             	add    -0xe(%eax),%ebx
     bee:	05 0d 03 93 7f       	add    $0x7f93030d,%eax
     bf3:	01 05 05 13 9f 05    	add    %eax,0x59f1305
     bf9:	01 06                	add    %eax,(%esi)
     bfb:	9f                   	lahf
     bfc:	20 03                	and    %al,(%ebx)
     bfe:	9f                   	lahf
     bff:	01 01                	add    %eax,(%ecx)
     c01:	03 e1                	add    %ecx,%esp
     c03:	7e 3c                	jle    c41 <MBOOT_HEADER_FLAGS+0xc3e>
     c05:	05 05 06 03 9e       	add    $0x9e030605,%eax
     c0a:	01 20                	add    %esp,(%eax)
     c0c:	05 0f 06 01 05       	add    $0x501060f,%eax
     c11:	01 9f 05 0a 06 03    	add    %ebx,0x3060a05(%edi)
     c17:	50                   	push   %eax
     c18:	2e 05 0e 06 01 05    	cs add $0x501060e,%eax
     c1e:	0d 00 02 04 01       	or     $0x1040200,%eax
     c23:	e4 05                	in     $0x5,%al
     c25:	0a 06                	or     (%esi),%al
     c27:	69 05 0e 06 01 05 0d 	imul   $0x402000d,0x501060e,%eax
     c2e:	00 02 04 
     c31:	01 e4                	add    %esp,%esp
     c33:	05 09 06 9f 05       	add    $0x59f0609,%eax
     c38:	0d 03 cb 7d 01       	or     $0x17dcb03,%eax
     c3d:	05 05 13 05 08       	add    $0x8051305,%eax
     c42:	06                   	push   %es
     c43:	01 05 16 00 02 04    	add    %eax,0x4020016
     c49:	01 82 05 13 00 02    	add    %eax,0x2001305(%edx)
     c4f:	04 01                	add    $0x1,%al
     c51:	66 05 05 06          	add    $0x605,%ax
     c55:	97                   	xchg   %eax,%edi
     c56:	05 0a 06 01 05       	add    $0x501060a,%eax
     c5b:	08 00                	or     %al,(%eax)
     c5d:	02 04 01             	add    (%ecx,%eax,1),%al
     c60:	66 05 09 06          	add    $0x609,%ax
     c64:	91                   	xchg   %eax,%ecx
     c65:	06                   	push   %es
     c66:	f2 06                	repnz push %es
     c68:	03 a9 02 01 05 0d    	add    0xd050102(%ecx),%ebp
     c6e:	03 be 7d 01 05 05    	add    0x505017d(%esi),%edi
     c74:	13 05 08 06 01 05    	adc    0x5010608,%eax
     c7a:	16                   	push   %ss
     c7b:	00 02                	add    %al,(%edx)
     c7d:	04 01                	add    $0x1,%al
     c7f:	4a                   	dec    %edx
     c80:	05 13 00 02 04       	add    $0x4020013,%eax
     c85:	01 66 05             	add    %esp,0x5(%esi)
     c88:	05 06 5f 05 0a       	add    $0xa055f06,%eax
     c8d:	06                   	push   %es
     c8e:	01 05 08 00 02 04    	add    %eax,0x4020008
     c94:	01 66 05             	add    %esp,0x5(%esi)
     c97:	09 06                	or     %eax,(%esi)
     c99:	91                   	xchg   %eax,%ecx
     c9a:	06                   	push   %es
     c9b:	f2 06                	repnz push %es
     c9d:	03 72 01             	add    0x1(%edx),%esi
     ca0:	05 05 ae 06 58       	add    $0x5806ae05,%eax
     ca5:	05 09 06 17 9f       	add    $0x9f170609,%eax
     caa:	9f                   	lahf
     cab:	59                   	pop    %ecx
     cac:	06                   	push   %es
     cad:	20 66 05             	and    %ah,0x5(%esi)
     cb0:	0a 06                	or     (%esi),%al
     cb2:	03 c2                	add    %edx,%eax
     cb4:	02 01                	add    (%ecx),%al
     cb6:	05 0e 06 01 05       	add    $0x501060e,%eax
     cbb:	0d 00 02 04 01       	or     $0x1040200,%eax
     cc0:	e4 05                	in     $0x5,%al
     cc2:	09 06                	or     %eax,(%esi)
     cc4:	67 05 0d 03 91 7f    	addr16 add $0x7f91030d,%eax
     cca:	01 05 05 13 05 08    	add    %eax,0x8051305
     cd0:	06                   	push   %es
     cd1:	01 05 15 00 02 04    	add    %eax,0x4020015
     cd7:	01 82 05 12 00 02    	add    %eax,0x2001205(%edx)
     cdd:	04 01                	add    $0x1,%al
     cdf:	66 05 05 06          	add    $0x605,%ax
     ce3:	5e                   	pop    %esi
     ce4:	05 09 06 01 05       	add    $0x5010609,%eax
     ce9:	08 00                	or     %al,(%eax)
     ceb:	02 04 01             	add    (%ecx,%eax,1),%al
     cee:	66 05 09 06          	add    $0x609,%ax
     cf2:	91                   	xchg   %eax,%ecx
     cf3:	06                   	push   %es
     cf4:	f2 06                	repnz push %es
     cf6:	03 b1 7e 01 9f 9f    	add    -0x6060fe82(%ecx),%esi
     cfc:	59                   	pop    %ecx
     cfd:	06                   	push   %es
     cfe:	20 66 05             	and    %ah,0x5(%esi)
     d01:	0a 06                	or     (%esi),%al
     d03:	03 b5 02 01 05 0e    	add    0xe050102(%ebp),%esi
     d09:	06                   	push   %es
     d0a:	01 05 0d 00 02 04    	add    %eax,0x402000d
     d10:	01 e4                	add    %esp,%esp
     d12:	05 2d 00 02 04       	add    $0x402002d,%eax
     d17:	01 9e 05 09 06 4b    	add    %ebx,0x4b060905(%esi)
     d1d:	03 c0                	add    %eax,%eax
     d1f:	7d ba                	jge    cdb <MBOOT_HEADER_FLAGS+0xcd8>
     d21:	06                   	push   %es
     d22:	ac                   	lods   %ds:(%esi),%al
     d23:	58                   	pop    %eax
     d24:	06                   	push   %es
     d25:	03 d0                	add    %eax,%edx
     d27:	01 01                	add    %eax,(%ecx)
     d29:	9f                   	lahf
     d2a:	9f                   	lahf
     d2b:	06                   	push   %es
     d2c:	20 66 06             	and    %ah,0x6(%esi)
     d2f:	03 be 7e 01 06 ac    	add    -0x53f9fe82(%esi),%edi
     d35:	58                   	pop    %eax
     d36:	05 0a 06 03 b2       	add    $0xb203060a,%eax
     d3b:	02 01                	add    (%ecx),%al
     d3d:	05 0e 06 01 05       	add    $0x501060e,%eax
     d42:	0a 06                	or     (%esi),%al
     d44:	e7 05                	out    %eax,$0x5
     d46:	0e                   	push   %cs
     d47:	06                   	push   %es
     d48:	01 05 0d 00 02 04    	add    %eax,0x402000d
     d4e:	01 e4                	add    %esp,%esp
     d50:	05 0a 06 af 05       	add    $0x5af060a,%eax
     d55:	0e                   	push   %cs
     d56:	06                   	push   %es
     d57:	01 05 0d 00 02 04    	add    %eax,0x402000d
     d5d:	01 e4                	add    %esp,%esp
     d5f:	05 09 06 9f 06       	add    $0x69f0609,%eax
     d64:	74 05                	je     d6b <MBOOT_HEADER_FLAGS+0xd68>
     d66:	0a 06                	or     (%esi),%al
     d68:	03 79 58             	add    0x58(%ecx),%edi
     d6b:	05 0e 06 01 05       	add    $0x501060e,%eax
     d70:	0d 00 02 04 01       	or     $0x1040200,%eax
     d75:	e4 05                	in     $0x5,%al
     d77:	2c 00                	sub    $0x0,%al
     d79:	02 04 01             	add    (%ecx,%eax,1),%al
     d7c:	66 05 09 06          	add    $0x609,%ax
     d80:	83 03 95             	addl   $0xffffff95,(%ebx)
     d83:	7f ba                	jg     d3f <MBOOT_HEADER_FLAGS+0xd3c>
     d85:	06                   	push   %es
     d86:	ac                   	lods   %ds:(%esi),%al
     d87:	58                   	pop    %eax
     d88:	05 0a 06 03 ed       	add    $0xed03060a,%eax
     d8d:	00 01                	add    %al,(%ecx)
     d8f:	05 0e 06 01 05       	add    $0x501060e,%eax
     d94:	0d 00 02 04 01       	or     $0x1040200,%eax
     d99:	e4 05                	in     $0x5,%al
     d9b:	09 06                	or     %eax,(%esi)
     d9d:	67 05 0d 03 cf 7d    	addr16 add $0x7dcf030d,%eax
     da3:	01 05 05 13 05 08    	add    %eax,0x8051305
     da9:	06                   	push   %es
     daa:	01 05 15 00 02 04    	add    %eax,0x4020015
     db0:	01 4a 05             	add    %ecx,0x5(%edx)
     db3:	12 00                	adc    (%eax),%al
     db5:	02 04 01             	add    (%ecx,%eax,1),%al
     db8:	66 05 05 06          	add    $0x605,%ax
     dbc:	60                   	pusha
     dbd:	05 09 06 01 05       	add    $0x5010609,%eax
     dc2:	08 00                	or     %al,(%eax)
     dc4:	02 04 01             	add    (%ecx,%eax,1),%al
     dc7:	66 05 09 06          	add    $0x609,%ax
     dcb:	93                   	xchg   %eax,%ebx
     dcc:	9f                   	lahf
     dcd:	67 06                	addr16 push %es
     dcf:	08 20                	or     %ah,(%eax)
     dd1:	05 0a 06 03 a8       	add    $0xa803060a,%eax
     dd6:	02 01                	add    (%ecx),%al
     dd8:	05 0e 06 01 05       	add    $0x501060e,%eax
     ddd:	0d 00 02 04 01       	or     $0x1040200,%eax
     de2:	e4 05                	in     $0x5,%al
     de4:	09 06                	or     %eax,(%esi)
     de6:	67 06                	addr16 push %es
     de8:	74 05                	je     def <MBOOT_HEADER_FLAGS+0xdec>
     dea:	0a 06                	or     (%esi),%al
     dec:	03 79 58             	add    0x58(%ecx),%edi
     def:	05 0e 06 01 05       	add    $0x501060e,%eax
     df4:	0d 00 02 04 01       	or     $0x1040200,%eax
     df9:	e4 05                	in     $0x5,%al
     dfb:	09 06                	or     %eax,(%esi)
     dfd:	03 d3                	add    %ebx,%edx
     dff:	7d 9e                	jge    d9f <MBOOT_HEADER_FLAGS+0xd9c>
     e01:	9f                   	lahf
     e02:	00 02                	add    %al,(%edx)
     e04:	04 01                	add    $0x1,%al
     e06:	06                   	push   %es
     e07:	58                   	pop    %eax
     e08:	06                   	push   %es
     e09:	67 9f                	addr16 lahf
     e0b:	05 0a 03 b3 02       	add    $0x2b3030a,%eax
     e10:	82 05 0e 06 01 05 0d 	addb   $0xd,0x501060e
     e17:	00 02                	add    %al,(%edx)
     e19:	04 01                	add    $0x1,%al
     e1b:	e4 05                	in     $0x5,%al
     e1d:	0a 06                	or     (%esi),%al
     e1f:	03 0d 66 05 0d 06    	add    0x60d0566,%ecx
     e25:	01 05 09 06 c9 9f    	add    %eax,0x9fc90609
     e2b:	9f                   	lahf
     e2c:	9f                   	lahf
     e2d:	03 79 c8             	add    -0x38(%ecx),%edi
     e30:	05 24 03 10 ba       	add    $0xba100324,%eax
     e35:	05 05 13 05 24       	add    $0x24051305,%eax
     e3a:	06                   	push   %es
     e3b:	11 3c 05 08 3d 05 0a 	adc    %edi,0xa053d08(,%eax,1)
     e42:	06                   	push   %es
     e43:	4e                   	dec    %esi
     e44:	05 0d 06 01 05       	add    $0x501060d,%eax
     e49:	0a 06                	or     (%esi),%al
     e4b:	4e                   	dec    %esi
     e4c:	05 0d 06 01 05       	add    $0x501060d,%eax
     e51:	01 4e 05             	add    %ecx,0x5(%esi)
     e54:	25 00 02 04 01       	and    $0x1040200,%eax
     e59:	03 78 66             	add    0x66(%eax),%edi
     e5c:	05 18 00 02 04       	add    $0x4020018,%eax
     e61:	01 58 05             	add    %ebx,0x5(%eax)
     e64:	09 06                	or     %eax,(%esi)
     e66:	4b                   	dec    %ebx
     e67:	05 12 06 01 05       	add    $0x5010612,%eax
     e6c:	09 3d 05 12 73 05    	or     %edi,0x5731205
     e72:	09 06                	or     %eax,(%esi)
     e74:	59                   	pop    %ecx
     e75:	05 01 06 18 05       	add    $0x5180601,%eax
     e7a:	09 03                	or     %eax,(%ebx)
     e7c:	7a 20                	jp     e9e <MBOOT_HEADER_FLAGS+0xe9b>
     e7e:	06                   	push   %es
     e7f:	df 75 05             	fbstp  0x5(%ebp)
     e82:	01 06                	add    %eax,(%esi)
     e84:	03 0a                	add    (%edx),%ecx
     e86:	20 05 09 03 76 20    	and    %al,0x20760309
     e8c:	05 06 06 71 05       	add    $0x5710606,%eax
     e91:	1d 00 02 04 01       	sbb    $0x1040200,%eax
     e96:	06                   	push   %es
     e97:	03 09                	add    (%ecx),%ecx
     e99:	01 05 10 00 02 04    	add    %eax,0x4020010
     e9f:	01 66 05             	add    %esp,0x5(%esi)
     ea2:	09 06                	or     %eax,(%esi)
     ea4:	83 05 21 06 01 05 09 	addl   $0x9,0x5010621
     eab:	06                   	push   %es
     eac:	67 05 1d 06 11 05    	addr16 add $0x511061d,%eax
     eb2:	09 3d 05 1d 3b 05    	or     %edi,0x53b1d05
     eb8:	09 67 3c             	or     %esp,0x3c(%edi)
     ebb:	05 01 14 05 09       	add    $0x9051401,%eax
     ec0:	1e                   	push   %ds
     ec1:	58                   	pop    %eax
     ec2:	05 17 06 00 05       	add    $0x5000617,%eax
     ec7:	02 80 10 10 00 16    	add    0x16001010(%eax),%al
     ecd:	05 05 13 05 17       	add    $0x17051305,%eax
     ed2:	06                   	push   %es
     ed3:	11 05 0f 21 05 05    	adc    %eax,0x505210f
     ed9:	06                   	push   %es
     eda:	9f                   	lahf
     edb:	05 17 06 10 05       	add    $0x5100617,%eax
     ee0:	05 30 06 59 91       	add    $0x91590630,%eax
     ee5:	9f                   	lahf
     ee6:	91                   	xchg   %eax,%ecx
     ee7:	9f                   	lahf
     ee8:	05 01 06 3d 05       	add    $0x53d0601,%eax
     eed:	05 1f 05 16 06       	add    $0x616051f,%eax
     ef2:	08 3f                	or     %bh,(%edi)
     ef4:	05 05 f3 05 09       	add    $0x905f305,%eax
     ef9:	13 05 12 06 01 05    	adc    0x5010612,%eax
     eff:	09 06                	or     %eax,(%esi)
     f01:	59                   	pop    %ecx
     f02:	05 0c 06 01 05       	add    $0x501060c,%eax
     f07:	0d 06 4b 06 3c       	or     $0x3c064b06,%eax
     f0c:	66 02 03             	data16 add (%ebx),%al
     f0f:	00 01                	add    %al,(%ecx)
     f11:	01 bc 08 00 00 05 00 	add    %edi,0x50000(%eax,%ecx,1)
     f18:	04 00                	add    $0x0,%al
     f1a:	41                   	inc    %ecx
     f1b:	00 00                	add    %al,(%eax)
     f1d:	00 01                	add    %al,(%ecx)
     f1f:	01 01                	add    %eax,(%ecx)
     f21:	fb                   	sti
     f22:	0e                   	push   %cs
     f23:	0d 00 01 01 01       	or     $0x1010100,%eax
     f28:	01 00                	add    %eax,(%eax)
     f2a:	00 00                	add    %al,(%eax)
     f2c:	01 00                	add    %eax,(%eax)
     f2e:	00 01                	add    %al,(%ecx)
     f30:	01 01                	add    %eax,(%ecx)
     f32:	1f                   	pop    %ds
     f33:	03 00                	add    (%eax),%eax
     f35:	00 00                	add    %al,(%eax)
     f37:	00 cb                	add    %cl,%bl
     f39:	00 00                	add    %al,(%eax)
     f3b:	00 d3                	add    %dl,%bl
     f3d:	00 00                	add    %al,(%eax)
     f3f:	00 02                	add    %al,(%edx)
     f41:	01 1f                	add    %ebx,(%edi)
     f43:	02 0f                	add    (%edi),%cl
     f45:	05 c5 00 00 00       	add    $0xc5,%eax
     f4a:	01 c5                	add    %eax,%ebp
     f4c:	00 00                	add    %al,(%eax)
     f4e:	00 01                	add    %al,(%ecx)
     f50:	e6 00                	out    %al,$0x0
     f52:	00 00                	add    %al,(%eax)
     f54:	02 2f                	add    (%edi),%ch
     f56:	00 00                	add    %al,(%eax)
     f58:	00 02                	add    %al,(%edx)
     f5a:	96                   	xchg   %eax,%esi
     f5b:	00 00                	add    %al,(%eax)
     f5d:	00 02                	add    %al,(%edx)
     f5f:	05 15 00 05 02       	add    $0x2050015,%eax
     f64:	00 11                	add    %dl,(%ecx)
     f66:	10 00                	adc    %al,(%eax)
     f68:	03 25 01 05 05 13    	add    0x13050501,%esp
     f6e:	05 15 06 11 05       	add    $0x5110615,%eax
     f73:	09 4b 05             	or     %ecx,0x5(%ebx)
     f76:	08 66 05             	or     %ah,0x5(%esi)
     f79:	10 4b 05             	adc    %cl,0x5(%ebx)
     f7c:	01 03                	add    %eax,(%ebx)
     f7e:	1c 58                	sbb    $0x58,%al
     f80:	05 05 06 03 68       	add    $0x68030605,%eax
     f85:	c8 04 02 05          	enter  $0x204,$0x5
     f89:	14 03                	adc    $0x3,%al
     f8b:	60                   	pusha
     f8c:	01 05 05 13 06 ac    	add    %eax,0xac061305
     f92:	04 01                	add    $0x1,%al
     f94:	06                   	push   %es
     f95:	03 20                	add    (%eax),%esp
     f97:	01 05 0d 03 5a 01    	add    %eax,0x15a030d
     f9d:	05 05 13 04 02       	add    $0x2041305,%eax
     fa2:	05 17 10 05 05       	add    $0x5051017,%eax
     fa7:	13 13                	adc    (%ebx),%edx
     fa9:	67 06                	addr16 push %es
     fab:	01 04 01             	add    %eax,(%ecx,%eax,1)
     fae:	06                   	push   %es
     faf:	01 04 02             	add    %eax,(%edx,%eax,1)
     fb2:	05 17 0f 05 05       	add    $0x5050f17,%eax
     fb7:	13 13                	adc    (%ebx),%edx
     fb9:	21 06                	and    %eax,(%esi)
     fbb:	01 04 01             	add    %eax,(%ecx,%eax,1)
     fbe:	06                   	push   %es
     fbf:	13 04 02             	adc    (%edx,%eax,1),%eax
     fc2:	05 17 0e 05 05       	add    $0x5050e17,%eax
     fc7:	13 13                	adc    (%ebx),%edx
     fc9:	21 06                	and    %eax,(%esi)
     fcb:	01 04 01             	add    %eax,(%ecx,%eax,1)
     fce:	06                   	push   %es
     fcf:	14 04                	adc    $0x4,%al
     fd1:	02 05 17 0d 05 05    	add    0x5050d17,%al
     fd7:	13 13                	adc    (%ebx),%edx
     fd9:	21 06                	and    %eax,(%esi)
     fdb:	01 04 01             	add    %eax,(%ecx,%eax,1)
     fde:	06                   	push   %es
     fdf:	03 27                	add    (%edi),%esp
     fe1:	01 05 0d 03 5e 01    	add    %eax,0x15e030d
     fe7:	05 05 13 13 05       	add    $0x5131305,%eax
     fec:	0c 01                	or     $0x1,%al
     fee:	06                   	push   %es
     fef:	01 04 02             	add    %eax,(%edx,%eax,1)
     ff2:	05 05 03 78 01       	add    $0x1780305,%eax
     ff7:	ba 04 01 05 09       	mov    $0x9050104,%edx
     ffc:	06                   	push   %es
     ffd:	03 0d 01 05 0d 03    	add    0x30d0501,%ecx
    1003:	72 01                	jb     1006 <MBOOT_HEADER_FLAGS+0x1003>
    1005:	05 05 13 04 02       	add    $0x2041305,%eax
    100a:	05 17 10 05 05       	add    $0x5051017,%eax
    100f:	13 13                	adc    (%ebx),%edx
    1011:	21 06                	and    %eax,(%esi)
    1013:	01 04 01             	add    %eax,(%ecx,%eax,1)
    1016:	06                   	push   %es
    1017:	01 04 02             	add    %eax,(%edx,%eax,1)
    101a:	05 17 0f 05 05       	add    $0x5050f17,%eax
    101f:	13 13                	adc    (%ebx),%edx
    1021:	21 06                	and    %eax,(%esi)
    1023:	01 04 01             	add    %eax,(%ecx,%eax,1)
    1026:	06                   	push   %es
    1027:	13 04 02             	adc    (%edx,%eax,1),%eax
    102a:	05 17 0e 05 05       	add    $0x5050e17,%eax
    102f:	13 13                	adc    (%ebx),%edx
    1031:	21 06                	and    %eax,(%esi)
    1033:	01 04 01             	add    %eax,(%ecx,%eax,1)
    1036:	06                   	push   %es
    1037:	14 04                	adc    $0x4,%al
    1039:	02 05 17 0d 05 05    	add    0x5050d17,%al
    103f:	13 13                	adc    (%ebx),%edx
    1041:	21 06                	and    %eax,(%esi)
    1043:	01 04 01             	add    %eax,(%ecx,%eax,1)
    1046:	05 0c 06 19 05       	add    $0x519060c,%eax
    104b:	09 59 04             	or     %ebx,0x4(%ecx)
    104e:	02 05 17 03 75 01    	add    0x1750317,%al
    1054:	05 05 13 13 21       	add    $0x21131305,%eax
    1059:	06                   	push   %es
    105a:	01 04 01             	add    %eax,(%ecx,%eax,1)
    105d:	05 09 06 03 09       	add    $0x9030609,%eax
    1062:	01 05 0c 06 01 05    	add    %eax,0x501060c
    1068:	05 06 03 23 4a       	add    $0x4a230306,%eax
    106d:	04 02                	add    $0x2,%al
    106f:	05 14 03 57 01       	add    $0x1570314,%eax
    1074:	05 05 13 06 58       	add    $0x58061305,%eax
    1079:	20 04 01             	and    %al,(%ecx,%eax,1)
    107c:	06                   	push   %es
    107d:	03 29                	add    (%ecx),%ebp
    107f:	01 05 0d 03 51 01    	add    %eax,0x151030d
    1085:	05 05 13 04 02       	add    $0x2041305,%eax
    108a:	05 17 10 05 05       	add    $0x5051017,%eax
    108f:	13 13                	adc    (%ebx),%edx
    1091:	21 06                	and    %eax,(%esi)
    1093:	01 04 01             	add    %eax,(%ecx,%eax,1)
    1096:	06                   	push   %es
    1097:	01 04 02             	add    %eax,(%edx,%eax,1)
    109a:	05 17 0f 05 05       	add    $0x5050f17,%eax
    109f:	13 13                	adc    (%ebx),%edx
    10a1:	21 06                	and    %eax,(%esi)
    10a3:	01 04 01             	add    %eax,(%ecx,%eax,1)
    10a6:	06                   	push   %es
    10a7:	13 04 02             	adc    (%edx,%eax,1),%eax
    10aa:	05 17 0e 05 05       	add    $0x5050e17,%eax
    10af:	13 13                	adc    (%ebx),%edx
    10b1:	21 06                	and    %eax,(%esi)
    10b3:	01 04 01             	add    %eax,(%ecx,%eax,1)
    10b6:	06                   	push   %es
    10b7:	14 04                	adc    $0x4,%al
    10b9:	02 05 17 0d 05 05    	add    0x5050d17,%al
    10bf:	13 13                	adc    (%ebx),%edx
    10c1:	21 06                	and    %eax,(%esi)
    10c3:	01 04 01             	add    %eax,(%ecx,%eax,1)
    10c6:	06                   	push   %es
    10c7:	03 2f                	add    (%edi),%ebp
    10c9:	01 05 0d 03 62 01    	add    %eax,0x162030d
    10cf:	05 05 13 13 05       	add    $0x5131305,%eax
    10d4:	0c 01                	or     $0x1,%al
    10d6:	06                   	push   %es
    10d7:	01 04 02             	add    %eax,(%edx,%eax,1)
    10da:	05 05 03 6c 01       	add    $0x16c0305,%eax
    10df:	f2 04 01             	repnz add $0x1,%al
    10e2:	05 09 06 03 19       	add    $0x19030609,%eax
    10e7:	01 05 0d 03 66 01    	add    %eax,0x166030d
    10ed:	05 05 13 04 02       	add    $0x2041305,%eax
    10f2:	05 17 10 05 05       	add    $0x5051017,%eax
    10f7:	13 13                	adc    (%ebx),%edx
    10f9:	21 06                	and    %eax,(%esi)
    10fb:	01 04 01             	add    %eax,(%ecx,%eax,1)
    10fe:	06                   	push   %es
    10ff:	01 04 02             	add    %eax,(%edx,%eax,1)
    1102:	05 17 0f 05 05       	add    $0x5050f17,%eax
    1107:	13 13                	adc    (%ebx),%edx
    1109:	21 06                	and    %eax,(%esi)
    110b:	01 04 01             	add    %eax,(%ecx,%eax,1)
    110e:	06                   	push   %es
    110f:	13 04 02             	adc    (%edx,%eax,1),%eax
    1112:	05 17 0e 05 05       	add    $0x5050e17,%eax
    1117:	13 13                	adc    (%ebx),%edx
    1119:	21 06                	and    %eax,(%esi)
    111b:	01 04 01             	add    %eax,(%ecx,%eax,1)
    111e:	06                   	push   %es
    111f:	14 04                	adc    $0x4,%al
    1121:	02 05 17 0d 05 05    	add    0x5050d17,%al
    1127:	13 13                	adc    (%ebx),%edx
    1129:	21 06                	and    %eax,(%esi)
    112b:	01 04 01             	add    %eax,(%ecx,%eax,1)
    112e:	05 0c 06 03 13       	add    $0x1303060c,%eax
    1133:	01 05 09 59 04 02    	add    %eax,0x2045909
    1139:	05 17 03 69 01       	add    $0x1690317,%eax
    113e:	05 05 13 13 21       	add    $0x21131305,%eax
    1143:	06                   	push   %es
    1144:	01 04 01             	add    %eax,(%ecx,%eax,1)
    1147:	05 09 06 03 15       	add    $0x15030609,%eax
    114c:	01 05 0c 06 01 04    	add    %eax,0x401060c
    1152:	02 05 05 03 74 90    	add    0x90740305,%al
    1158:	58                   	pop    %eax
    1159:	04 01                	add    $0x1,%al
    115b:	05 09 06 03 2d       	add    $0x2d030609,%eax
    1160:	01 04 02             	add    %eax,(%edx,%eax,1)
    1163:	05 18 03 51 01       	add    $0x1510318,%eax
    1168:	05 05 13 13 2f       	add    $0x2f131305,%eax
    116d:	06                   	push   %es
    116e:	01 04 01             	add    %eax,(%ecx,%eax,1)
    1171:	05 1f 00 02 04       	add    $0x402001f,%eax
    1176:	03 06                	add    (%esi),%eax
    1178:	03 2b                	add    (%ebx),%ebp
    117a:	01 05 17 00 02 04    	add    %eax,0x4020017
    1180:	01 01                	add    %eax,(%ecx)
    1182:	05 09 13 04 02       	add    $0x2041309,%eax
    1187:	05 18 03 51 01       	add    $0x1510318,%eax
    118c:	05 05 13 13 2f       	add    $0x2f131305,%eax
    1191:	06                   	push   %es
    1192:	01 04 01             	add    %eax,(%ecx,%eax,1)
    1195:	05 1f 00 02 04       	add    $0x402001f,%eax
    119a:	03 06                	add    (%esi),%eax
    119c:	03 2b                	add    (%ebx),%ebp
    119e:	01 05 17 00 02 04    	add    %eax,0x4020017
    11a4:	01 01                	add    %eax,(%ecx)
    11a6:	05 05 5c 05 15       	add    $0x15055c05,%eax
    11ab:	06                   	push   %es
    11ac:	01 05 05 06 9f 05    	add    %eax,0x59f0605
    11b2:	0c 06                	or     $0x6,%al
    11b4:	01 05 09 06 03 6e    	add    %eax,0x6e030609
    11ba:	58                   	pop    %eax
    11bb:	9f                   	lahf
    11bc:	05 10 06 01 05       	add    $0x5010610,%eax
    11c1:	01 03                	add    %eax,(%ebx)
    11c3:	12 20                	adc    (%eax),%ah
    11c5:	05 09 06 03 75       	add    $0x75030609,%eax
    11ca:	74 9f                	je     116b <MBOOT_HEADER_FLAGS+0x1168>
    11cc:	05 10 06 01 05       	add    $0x5010610,%eax
    11d1:	49                   	dec    %ecx
    11d2:	06                   	push   %es
    11d3:	03 0c ba             	add    (%edx,%edi,4),%ecx
    11d6:	05 05 13 05 49       	add    $0x49051305,%eax
    11db:	06                   	push   %es
    11dc:	11 05 08 91 05 49    	adc    %eax,0x49059108
    11e2:	57                   	push   %edi
    11e3:	05 08 3d 87 05       	add    $0x5873d08,%eax
    11e8:	05 06 58 04 02       	add    $0x2045806,%eax
    11ed:	06                   	push   %es
    11ee:	03 bc 7f 58 04 01 05 	add    0x5010458(%edi,%edi,2),%edi
    11f5:	08 03                	or     %al,(%ebx)
    11f7:	c4 00                	les    (%eax),%eax
    11f9:	58                   	pop    %eax
    11fa:	05 09 06 03 49       	add    $0x49030609,%eax
    11ff:	f2 05 0d 03 72 01    	repnz add $0x172030d,%eax
    1205:	05 05 13 04 02       	add    $0x2041305,%eax
    120a:	05 17 10 05 05       	add    $0x5051017,%eax
    120f:	13 13                	adc    (%ebx),%edx
    1211:	21 06                	and    %eax,(%esi)
    1213:	01 04 01             	add    %eax,(%ecx,%eax,1)
    1216:	06                   	push   %es
    1217:	01 04 02             	add    %eax,(%edx,%eax,1)
    121a:	05 17 0f 05 05       	add    $0x5050f17,%eax
    121f:	13 13                	adc    (%ebx),%edx
    1221:	21 06                	and    %eax,(%esi)
    1223:	01 04 01             	add    %eax,(%ecx,%eax,1)
    1226:	06                   	push   %es
    1227:	13 04 02             	adc    (%edx,%eax,1),%eax
    122a:	05 17 0e 05 05       	add    $0x5050e17,%eax
    122f:	13 13                	adc    (%ebx),%edx
    1231:	21 06                	and    %eax,(%esi)
    1233:	01 04 01             	add    %eax,(%ecx,%eax,1)
    1236:	06                   	push   %es
    1237:	14 04                	adc    $0x4,%al
    1239:	02 05 17 0d 05 05    	add    0x5050d17,%al
    123f:	13 13                	adc    (%ebx),%edx
    1241:	21 06                	and    %eax,(%esi)
    1243:	01 04 01             	add    %eax,(%ecx,%eax,1)
    1246:	05 0c 06 19 05       	add    $0x519060c,%eax
    124b:	09 91 04 02 05 17    	or     %edx,0x17050204(%ecx)
    1251:	03 75 01             	add    0x1(%ebp),%esi
    1254:	05 05 13 13 3d       	add    $0x3d131305,%eax
    1259:	06                   	push   %es
    125a:	01 04 01             	add    %eax,(%ecx,%eax,1)
    125d:	05 09 06 03 09       	add    $0x9030609,%eax
    1262:	01 05 0c 06 01 05    	add    %eax,0x501060c
    1268:	05 06 03 c6 00       	add    $0xc60306,%eax
    126d:	4a                   	dec    %edx
    126e:	04 02                	add    $0x2,%al
    1270:	05 14 03 b4 7f       	add    $0x7fb40314,%eax
    1275:	01 05 05 13 04 01    	add    %eax,0x1041305
    127b:	05 26 06 03 cb       	add    $0xcb030626,%eax
    1280:	00 01                	add    %al,(%ecx)
    1282:	04 02                	add    $0x2,%al
    1284:	05 05 03 b5 7f       	add    $0x7fb50305,%eax
    1289:	3c 04                	cmp    $0x4,%al
    128b:	01 05 26 03 cb 00    	add    %eax,0xcb0326
    1291:	58                   	pop    %eax
    1292:	05 2d 3c 05 1e       	add    $0x1e053c2d,%eax
    1297:	3c 04                	cmp    $0x4,%al
    1299:	02 05 05 03 b5 7f    	add    0x7fb50305,%al
    129f:	3c 20                	cmp    $0x20,%al
    12a1:	04 01                	add    $0x1,%al
    12a3:	06                   	push   %es
    12a4:	03 cc                	add    %esp,%ecx
    12a6:	00 01                	add    %al,(%ecx)
    12a8:	04 02                	add    $0x2,%al
    12aa:	05 14 03 b3 7f       	add    $0x7fb30314,%eax
    12af:	01 05 05 13 06 82    	add    %eax,0x82061305
    12b5:	04 01                	add    $0x1,%al
    12b7:	06                   	push   %es
    12b8:	03 cd                	add    %ebp,%ecx
    12ba:	00 01                	add    %al,(%ecx)
    12bc:	04 02                	add    $0x2,%al
    12be:	05 14 03 b2 7f       	add    $0x7fb20314,%eax
    12c3:	01 05 05 13 06 9e    	add    %eax,0x9e061305
    12c9:	04 01                	add    $0x1,%al
    12cb:	06                   	push   %es
    12cc:	03 ce                	add    %esi,%ecx
    12ce:	00 01                	add    %al,(%ecx)
    12d0:	04 02                	add    $0x2,%al
    12d2:	05 14 03 b1 7f       	add    $0x7fb10314,%eax
    12d7:	01 05 05 13 04 01    	add    %eax,0x1041305
    12dd:	05 22 06 03 ce       	add    $0xce030622,%eax
    12e2:	00 01                	add    %al,(%ecx)
    12e4:	04 02                	add    $0x2,%al
    12e6:	05 05 03 b2 7f       	add    $0x7fb20305,%eax
    12eb:	3c 04                	cmp    $0x4,%al
    12ed:	01 05 22 03 ce 00    	add    %eax,0xce0322
    12f3:	58                   	pop    %eax
    12f4:	04 02                	add    $0x2,%al
    12f6:	05 05 03 b2 7f       	add    $0x7fb20305,%eax
    12fb:	3c 20                	cmp    $0x20,%al
    12fd:	04 01                	add    $0x1,%al
    12ff:	06                   	push   %es
    1300:	03 cf                	add    %edi,%ecx
    1302:	00 01                	add    %al,(%ecx)
    1304:	04 02                	add    $0x2,%al
    1306:	05 14 03 b0 7f       	add    $0x7fb00314,%eax
    130b:	01 05 05 13 04 01    	add    %eax,0x1041305
    1311:	05 22 06 03 cf       	add    $0xcf030622,%eax
    1316:	00 01                	add    %al,(%ecx)
    1318:	04 02                	add    $0x2,%al
    131a:	05 05 03 b1 7f       	add    $0x7fb10305,%eax
    131f:	3c 04                	cmp    $0x4,%al
    1321:	01 05 22 03 cf 00    	add    %eax,0xcf0322
    1327:	58                   	pop    %eax
    1328:	04 02                	add    $0x2,%al
    132a:	05 05 03 b1 7f       	add    $0x7fb10305,%eax
    132f:	3c 20                	cmp    $0x20,%al
    1331:	04 01                	add    $0x1,%al
    1333:	06                   	push   %es
    1334:	03 d2                	add    %edx,%edx
    1336:	00 01                	add    %al,(%ecx)
    1338:	04 02                	add    $0x2,%al
    133a:	05 14 03 ad 7f       	add    $0x7fad0314,%eax
    133f:	01 05 05 13 06 82    	add    %eax,0x82061305
    1345:	04 01                	add    $0x1,%al
    1347:	06                   	push   %es
    1348:	03 d4                	add    %esp,%edx
    134a:	00 01                	add    %al,(%ecx)
    134c:	13 05 0a 01 05 17    	adc    0x1705010a,%eax
    1352:	00 02                	add    %al,(%edx)
    1354:	04 01                	add    $0x1,%al
    1356:	01 05 0e 06 3c 04    	add    %eax,0x43c060e
    135c:	02 05 05 03 a6 7f    	add    0x7fa60305,%al
    1362:	74 03                	je     1367 <MBOOT_HEADER_FLAGS+0x1364>
    1364:	0a 58 04             	or     0x4(%eax),%bl
    1367:	01 05 17 00 02 04    	add    %eax,0x4020017
    136d:	01 03                	add    %eax,(%ebx)
    136f:	d0 00                	rolb   $1,(%eax)
    1371:	58                   	pop    %eax
    1372:	05 0c 06 03 ba       	add    $0xba03060c,%eax
    1377:	7f 08                	jg     1381 <MBOOT_HEADER_FLAGS+0x137e>
    1379:	ac                   	lods   %ds:(%esi),%al
    137a:	06                   	push   %es
    137b:	01 05 09 06 f7 05    	add    %eax,0x5f70609
    1381:	0d 03 66 01 05       	or     $0x5016603,%eax
    1386:	05 13 04 02 05       	add    $0x5020413,%eax
    138b:	17                   	pop    %ss
    138c:	10 05 05 13 13 21    	adc    %al,0x21131305
    1392:	06                   	push   %es
    1393:	01 04 01             	add    %eax,(%ecx,%eax,1)
    1396:	06                   	push   %es
    1397:	01 04 02             	add    %eax,(%edx,%eax,1)
    139a:	05 17 0f 05 05       	add    $0x5050f17,%eax
    139f:	13 13                	adc    (%ebx),%edx
    13a1:	21 06                	and    %eax,(%esi)
    13a3:	01 04 01             	add    %eax,(%ecx,%eax,1)
    13a6:	06                   	push   %es
    13a7:	13 04 02             	adc    (%edx,%eax,1),%eax
    13aa:	05 17 0e 05 05       	add    $0x5050e17,%eax
    13af:	13 13                	adc    (%ebx),%edx
    13b1:	21 06                	and    %eax,(%esi)
    13b3:	01 04 01             	add    %eax,(%ecx,%eax,1)
    13b6:	06                   	push   %es
    13b7:	14 04                	adc    $0x4,%al
    13b9:	02 05 17 0d 05 05    	add    0x5050d17,%al
    13bf:	13 13                	adc    (%ebx),%edx
    13c1:	21 06                	and    %eax,(%esi)
    13c3:	01 04 01             	add    %eax,(%ecx,%eax,1)
    13c6:	05 0c 06 03 13       	add    $0x1303060c,%eax
    13cb:	01 05 09 59 04 02    	add    %eax,0x2045909
    13d1:	05 17 03 69 01       	add    $0x1690317,%eax
    13d6:	05 05 13 13 3d       	add    $0x3d131305,%eax
    13db:	06                   	push   %es
    13dc:	01 04 01             	add    %eax,(%ecx,%eax,1)
    13df:	05 09 06 03 15       	add    $0x15030609,%eax
    13e4:	01 05 0c 06 01 08    	add    %eax,0x801060c
    13ea:	3c 05                	cmp    $0x5,%al
    13ec:	0d 06 03 cc 00       	or     $0xcc0306,%eax
    13f1:	01 04 02             	add    %eax,(%edx,%eax,1)
    13f4:	05 18 03 a6 7f       	add    $0x7fa60318,%eax
    13f9:	01 05 05 13 13 4b    	add    %eax,0x4b131305
    13ff:	06                   	push   %es
    1400:	01 04 01             	add    %eax,(%ecx,%eax,1)
    1403:	05 20 00 02 04       	add    $0x4020020,%eax
    1408:	01 03                	add    %eax,(%ebx)
    140a:	d7                   	xlat   %ds:(%ebx)
    140b:	00 01                	add    %al,(%ecx)
    140d:	05 23 00 02 04       	add    $0x4020023,%eax
    1412:	03 06                	add    (%esi),%eax
    1414:	3b 05 1b 00 02 04    	cmp    0x402001b,%eax
    141a:	01 01                	add    %eax,(%ecx)
    141c:	05 28 00 02 04       	add    $0x4020028,%eax
    1421:	02 03                	add    (%ebx),%al
    1423:	79 74                	jns    1499 <MBOOT_HEADER_FLAGS+0x1496>
    1425:	05 17 00 02 04       	add    $0x4020017,%eax
    142a:	01 06                	add    %eax,(%esi)
    142c:	4a                   	dec    %edx
    142d:	05 28 00 02 04       	add    $0x4020028,%eax
    1432:	02 66 05             	add    0x5(%esi),%ah
    1435:	17                   	pop    %ss
    1436:	00 02                	add    %al,(%edx)
    1438:	04 01                	add    $0x1,%al
    143a:	06                   	push   %es
    143b:	3c 00                	cmp    $0x0,%al
    143d:	02 04 01             	add    (%ecx,%eax,1),%al
    1440:	06                   	push   %es
    1441:	58                   	pop    %eax
    1442:	05 01 03 0d 01       	add    $0x10d0301,%eax
    1447:	05 0c 3b 05 01       	add    $0x1053b0c,%eax
    144c:	59                   	pop    %ecx
    144d:	4a                   	dec    %edx
    144e:	05 0d 06 03 75       	add    $0x7503060d,%eax
    1453:	20 9f 05 14 06 01    	and    %bl,0x1061405(%edi)
    1459:	05 10 03 64 20       	add    $0x20640310,%eax
    145e:	05 01 03 26 2e       	add    $0x2e260301,%eax
    1463:	74 05                	je     146a <MBOOT_HEADER_FLAGS+0x1467>
    1465:	09 06                	or     %eax,(%esi)
    1467:	03 59 20             	add    0x20(%ecx),%ebx
    146a:	9f                   	lahf
    146b:	05 10 06 01 05       	add    $0x5010610,%eax
    1470:	09 06                	or     %eax,(%esi)
    1472:	03 0a                	add    (%edx),%ecx
    1474:	58                   	pop    %eax
    1475:	9f                   	lahf
    1476:	05 10 06 01 03       	add    $0x3010610,%eax
    147b:	75 20                	jne    149d <MBOOT_HEADER_FLAGS+0x149a>
    147d:	05 09 06 4e 9f       	add    $0x9f4e0609,%eax
    1482:	05 10 06 01 1b       	add    $0x1b010610,%eax
    1487:	05 50 06 03 28       	add    $0x28030650,%eax
    148c:	58                   	pop    %eax
    148d:	05 05 13 05 50       	add    $0x50051305,%eax
    1492:	06                   	push   %es
    1493:	11 05 08 91 05 50    	adc    %eax,0x50059108
    1499:	57                   	push   %edi
    149a:	05 08 3d 87 05       	add    $0x5873d08,%eax
    149f:	05 06 58 04 02       	add    $0x2045806,%eax
    14a4:	06                   	push   %es
    14a5:	03 91 7f 58 04 01    	add    0x104587f(%ecx),%edx
    14ab:	05 08 03 ef 00       	add    $0xef0308,%eax
    14b0:	58                   	pop    %eax
    14b1:	05 09 06 03 9e       	add    $0x9e030609,%eax
    14b6:	7f f2                	jg     14aa <MBOOT_HEADER_FLAGS+0x14a7>
    14b8:	05 0d 03 72 01       	add    $0x172030d,%eax
    14bd:	05 05 13 04 02       	add    $0x2041305,%eax
    14c2:	05 17 10 05 05       	add    $0x5051017,%eax
    14c7:	13 13                	adc    (%ebx),%edx
    14c9:	21 06                	and    %eax,(%esi)
    14cb:	01 04 01             	add    %eax,(%ecx,%eax,1)
    14ce:	06                   	push   %es
    14cf:	01 04 02             	add    %eax,(%edx,%eax,1)
    14d2:	05 17 0f 05 05       	add    $0x5050f17,%eax
    14d7:	13 13                	adc    (%ebx),%edx
    14d9:	21 06                	and    %eax,(%esi)
    14db:	01 04 01             	add    %eax,(%ecx,%eax,1)
    14de:	06                   	push   %es
    14df:	13 04 02             	adc    (%edx,%eax,1),%eax
    14e2:	05 17 0e 05 05       	add    $0x5050e17,%eax
    14e7:	13 13                	adc    (%ebx),%edx
    14e9:	21 06                	and    %eax,(%esi)
    14eb:	01 04 01             	add    %eax,(%ecx,%eax,1)
    14ee:	06                   	push   %es
    14ef:	14 04                	adc    $0x4,%al
    14f1:	02 05 17 0d 05 05    	add    0x5050d17,%al
    14f7:	13 13                	adc    (%ebx),%edx
    14f9:	21 06                	and    %eax,(%esi)
    14fb:	01 04 01             	add    %eax,(%ecx,%eax,1)
    14fe:	05 0c 06 19 05       	add    $0x519060c,%eax
    1503:	09 91 04 02 05 17    	or     %edx,0x17050204(%ecx)
    1509:	03 75 01             	add    0x1(%ebp),%esi
    150c:	05 05 13 13 3d       	add    $0x3d131305,%eax
    1511:	06                   	push   %es
    1512:	01 04 01             	add    %eax,(%ecx,%eax,1)
    1515:	05 09 06 03 09       	add    $0x9030609,%eax
    151a:	01 05 0c 06 01 05    	add    %eax,0x501060c
    1520:	05 06 03 f1 00       	add    $0xf10306,%eax
    1525:	4a                   	dec    %edx
    1526:	04 02                	add    $0x2,%al
    1528:	05 14 03 89 7f       	add    $0x7f890314,%eax
    152d:	01 05 05 13 04 01    	add    %eax,0x1041305
    1533:	05 26 06 03 f6       	add    $0xf6030626,%eax
    1538:	00 01                	add    %al,(%ecx)
    153a:	04 02                	add    $0x2,%al
    153c:	05 05 03 8a 7f       	add    $0x7f8a0305,%eax
    1541:	3c 04                	cmp    $0x4,%al
    1543:	01 05 26 03 f6 00    	add    %eax,0xf60326
    1549:	58                   	pop    %eax
    154a:	05 2d 3c 05 1e       	add    $0x1e053c2d,%eax
    154f:	3c 04                	cmp    $0x4,%al
    1551:	02 05 05 03 8a 7f    	add    0x7f8a0305,%al
    1557:	3c 20                	cmp    $0x20,%al
    1559:	04 01                	add    $0x1,%al
    155b:	06                   	push   %es
    155c:	03 f7                	add    %edi,%esi
    155e:	00 01                	add    %al,(%ecx)
    1560:	04 02                	add    $0x2,%al
    1562:	05 14 03 88 7f       	add    $0x7f880314,%eax
    1567:	01 05 05 13 06 82    	add    %eax,0x82061305
    156d:	04 01                	add    $0x1,%al
    156f:	06                   	push   %es
    1570:	03 f8                	add    %eax,%edi
    1572:	00 01                	add    %al,(%ecx)
    1574:	04 02                	add    $0x2,%al
    1576:	05 14 03 87 7f       	add    $0x7f870314,%eax
    157b:	01 05 05 13 06 9e    	add    %eax,0x9e061305
    1581:	04 01                	add    $0x1,%al
    1583:	06                   	push   %es
    1584:	03 f9                	add    %ecx,%edi
    1586:	00 01                	add    %al,(%ecx)
    1588:	04 02                	add    $0x2,%al
    158a:	05 14 03 86 7f       	add    $0x7f860314,%eax
    158f:	01 05 05 13 04 01    	add    %eax,0x1041305
    1595:	05 22 06 03 f9       	add    $0xf9030622,%eax
    159a:	00 01                	add    %al,(%ecx)
    159c:	04 02                	add    $0x2,%al
    159e:	05 05 03 87 7f       	add    $0x7f870305,%eax
    15a3:	3c 04                	cmp    $0x4,%al
    15a5:	01 05 22 03 f9 00    	add    %eax,0xf90322
    15ab:	58                   	pop    %eax
    15ac:	04 02                	add    $0x2,%al
    15ae:	05 05 03 87 7f       	add    $0x7f870305,%eax
    15b3:	3c 20                	cmp    $0x20,%al
    15b5:	04 01                	add    $0x1,%al
    15b7:	06                   	push   %es
    15b8:	03 fa                	add    %edx,%edi
    15ba:	00 01                	add    %al,(%ecx)
    15bc:	04 02                	add    $0x2,%al
    15be:	05 14 03 85 7f       	add    $0x7f850314,%eax
    15c3:	01 05 05 13 04 01    	add    %eax,0x1041305
    15c9:	05 22 06 03 fa       	add    $0xfa030622,%eax
    15ce:	00 01                	add    %al,(%ecx)
    15d0:	04 02                	add    $0x2,%al
    15d2:	05 05 03 86 7f       	add    $0x7f860305,%eax
    15d7:	3c 04                	cmp    $0x4,%al
    15d9:	01 05 22 03 fa 00    	add    %eax,0xfa0322
    15df:	58                   	pop    %eax
    15e0:	04 02                	add    $0x2,%al
    15e2:	05 05 03 86 7f       	add    $0x7f860305,%eax
    15e7:	3c 20                	cmp    $0x20,%al
    15e9:	04 01                	add    $0x1,%al
    15eb:	06                   	push   %es
    15ec:	03 fd                	add    %ebp,%edi
    15ee:	00 01                	add    %al,(%ecx)
    15f0:	04 02                	add    $0x2,%al
    15f2:	05 14 03 82 7f       	add    $0x7f820314,%eax
    15f7:	01 05 05 13 06 82    	add    %eax,0x82061305
    15fd:	04 01                	add    $0x1,%al
    15ff:	06                   	push   %es
    1600:	03 ff                	add    %edi,%edi
    1602:	00 01                	add    %al,(%ecx)
    1604:	13 05 0a 01 05 17    	adc    0x1705010a,%eax
    160a:	00 02                	add    %al,(%edx)
    160c:	04 01                	add    $0x1,%al
    160e:	01 05 0e 06 2e 04    	add    %eax,0x42e060e
    1614:	02 05 05 03 fb 7e    	add    0x7efb0305,%al
    161a:	2e 04 01             	cs add $0x1,%al
    161d:	05 17 00 02 04       	add    $0x4020017,%eax
    1622:	01 03                	add    %eax,(%ebx)
    1624:	85 01                	test   %eax,(%ecx)
    1626:	58                   	pop    %eax
    1627:	05 0c 06 03 8f       	add    $0x8f03060c,%eax
    162c:	7f 08                	jg     1636 <MBOOT_HEADER_FLAGS+0x1633>
    162e:	66 06                	pushw  %es
    1630:	01 05 09 06 f7 05    	add    %eax,0x5f70609
    1636:	0d 03 66 01 05       	or     $0x5016603,%eax
    163b:	05 13 04 02 05       	add    $0x5020413,%eax
    1640:	17                   	pop    %ss
    1641:	10 05 05 13 13 21    	adc    %al,0x21131305
    1647:	06                   	push   %es
    1648:	01 04 01             	add    %eax,(%ecx,%eax,1)
    164b:	06                   	push   %es
    164c:	01 04 02             	add    %eax,(%edx,%eax,1)
    164f:	05 17 0f 05 05       	add    $0x5050f17,%eax
    1654:	13 13                	adc    (%ebx),%edx
    1656:	21 06                	and    %eax,(%esi)
    1658:	01 04 01             	add    %eax,(%ecx,%eax,1)
    165b:	06                   	push   %es
    165c:	13 04 02             	adc    (%edx,%eax,1),%eax
    165f:	05 17 0e 05 05       	add    $0x5050e17,%eax
    1664:	13 13                	adc    (%ebx),%edx
    1666:	21 06                	and    %eax,(%esi)
    1668:	01 04 01             	add    %eax,(%ecx,%eax,1)
    166b:	06                   	push   %es
    166c:	14 04                	adc    $0x4,%al
    166e:	02 05 17 0d 05 05    	add    0x5050d17,%al
    1674:	13 13                	adc    (%ebx),%edx
    1676:	21 06                	and    %eax,(%esi)
    1678:	01 04 01             	add    %eax,(%ecx,%eax,1)
    167b:	05 0c 06 03 13       	add    $0x1303060c,%eax
    1680:	01 05 09 59 04 02    	add    %eax,0x2045909
    1686:	05 17 03 69 01       	add    $0x1690317,%eax
    168b:	05 05 13 13 3d       	add    $0x3d131305,%eax
    1690:	06                   	push   %es
    1691:	01 04 01             	add    %eax,(%ecx,%eax,1)
    1694:	05 09 06 03 15       	add    $0x15030609,%eax
    1699:	01 05 0c 06 01 08    	add    %eax,0x801060c
    169f:	3c 05                	cmp    $0x5,%al
    16a1:	0d 06 03 f7 00       	or     $0xf70306,%eax
    16a6:	01 04 02             	add    %eax,(%edx,%eax,1)
    16a9:	05 14 03 81 7f       	add    $0x7f810314,%eax
    16ae:	01 05 05 13 06 9e    	add    %eax,0x9e061305
    16b4:	04 01                	add    $0x1,%al
    16b6:	05 23 00 02 04       	add    $0x4020023,%eax
    16bb:	03 06                	add    (%esi),%eax
    16bd:	03 fd                	add    %ebp,%edi
    16bf:	00 01                	add    %al,(%ecx)
    16c1:	05 1b 00 02 04       	add    $0x402001b,%eax
    16c6:	01 01                	add    %eax,(%ecx)
    16c8:	05 09 79 04 02       	add    $0x2047909,%eax
    16cd:	05 14 03 f3 7e       	add    $0x7ef30314,%eax
    16d2:	01 05 05 13 06 82    	add    %eax,0x82061305
    16d8:	04 01                	add    $0x1,%al
    16da:	05 09 06 03 8d       	add    $0x8d030609,%eax
    16df:	01 01                	add    %eax,(%ecx)
    16e1:	05 0d 03 f4 7e       	add    $0x7ef4030d,%eax
    16e6:	01 05 05 13 13 05    	add    %eax,0x5131305
    16ec:	0c 01                	or     $0x1,%al
    16ee:	06                   	push   %es
    16ef:	01 04 02             	add    %eax,(%edx,%eax,1)
    16f2:	05 05 0f 74 04       	add    $0x4740f05,%eax
    16f7:	01 05 09 06 1a 05    	add    %eax,0x51a0609
    16fd:	0d 03 72 01 05       	or     $0x5017203,%eax
    1702:	05 13 04 02 05       	add    $0x5020413,%eax
    1707:	17                   	pop    %ss
    1708:	10 05 05 13 13 21    	adc    %al,0x21131305
    170e:	06                   	push   %es
    170f:	01 04 01             	add    %eax,(%ecx,%eax,1)
    1712:	06                   	push   %es
    1713:	01 04 02             	add    %eax,(%edx,%eax,1)
    1716:	05 17 0f 05 05       	add    $0x5050f17,%eax
    171b:	13 13                	adc    (%ebx),%edx
    171d:	21 06                	and    %eax,(%esi)
    171f:	01 04 01             	add    %eax,(%ecx,%eax,1)
    1722:	06                   	push   %es
    1723:	13 04 02             	adc    (%edx,%eax,1),%eax
    1726:	05 17 0e 05 05       	add    $0x5050e17,%eax
    172b:	13 13                	adc    (%ebx),%edx
    172d:	21 06                	and    %eax,(%esi)
    172f:	01 04 01             	add    %eax,(%ecx,%eax,1)
    1732:	06                   	push   %es
    1733:	14 04                	adc    $0x4,%al
    1735:	02 05 17 0d 05 05    	add    0x5050d17,%al
    173b:	13 13                	adc    (%ebx),%edx
    173d:	21 06                	and    %eax,(%esi)
    173f:	01 04 01             	add    %eax,(%ecx,%eax,1)
    1742:	05 0c 06 19 05       	add    $0x519060c,%eax
    1747:	09 59 04             	or     %ebx,0x4(%ecx)
    174a:	02 05 17 03 75 01    	add    0x1750317,%al
    1750:	05 05 13 13 3d       	add    $0x3d131305,%eax
    1755:	06                   	push   %es
    1756:	01 04 01             	add    %eax,(%ecx,%eax,1)
    1759:	05 09 06 03 09       	add    $0x9030609,%eax
    175e:	01 05 0c 06 01 05    	add    %eax,0x501060c
    1764:	28 00                	sub    %al,(%eax)
    1766:	02 04 02             	add    (%edx,%eax,1),%al
    1769:	06                   	push   %es
    176a:	03 fb                	add    %ebx,%edi
    176c:	00 4a 05             	add    %cl,0x5(%edx)
    176f:	17                   	pop    %ss
    1770:	00 02                	add    %al,(%edx)
    1772:	04 01                	add    $0x1,%al
    1774:	3c 00                	cmp    $0x0,%al
    1776:	02 04 01             	add    (%ecx,%eax,1),%al
    1779:	06                   	push   %es
    177a:	ac                   	lods   %ds:(%esi),%al
    177b:	05 01 03 14 01       	add    $0x1140301,%eax
    1780:	05 0c 3b 05 01       	add    $0x1053b0c,%eax
    1785:	59                   	pop    %ecx
    1786:	4a                   	dec    %edx
    1787:	05 09 06 03 52       	add    $0x52030609,%eax
    178c:	20 9f 05 10 06 01    	and    %bl,0x1061005(%edi)
    1792:	05 01 03 2d 20       	add    $0x202d0301,%eax
    1797:	05 10 03 53 3c       	add    $0x3c530310,%eax
    179c:	05 01 03 2d 2e       	add    $0x2e2d0301,%eax
    17a1:	4a                   	dec    %edx
    17a2:	05 0d 06 03 6e       	add    $0x6e03060d,%eax
    17a7:	20 9f 05 14 06 01    	and    %bl,0x1061405(%edi)
    17ad:	05 0d 06 03 0b       	add    $0xb03060d,%eax
    17b2:	3c 9f                	cmp    $0x9f,%al
    17b4:	05 14 06 01 3c       	add    $0x3c010614,%eax
    17b9:	05 09 06 03 5c       	add    $0x5c030609,%eax
    17be:	01 9f 05 10 06 01    	add    %ebx,0x1061005(%edi)
    17c4:	05 09 06 41 9f       	add    $0x9f410609,%eax
    17c9:	05 10 06 01 02       	add    $0x2010610,%eax
    17ce:	03 00                	add    (%eax),%eax
    17d0:	01 01                	add    %eax,(%ecx)
    17d2:	f6 11                	notb   (%ecx)
    17d4:	00 00                	add    %al,(%eax)
    17d6:	05 00 04 00 50       	add    $0x50000400,%eax
    17db:	00 00                	add    %al,(%eax)
    17dd:	00 01                	add    %al,(%ecx)
    17df:	01 01                	add    %eax,(%ecx)
    17e1:	fb                   	sti
    17e2:	0e                   	push   %cs
    17e3:	0d 00 01 01 01       	or     $0x1010100,%eax
    17e8:	01 00                	add    %eax,(%eax)
    17ea:	00 00                	add    %al,(%eax)
    17ec:	01 00                	add    %eax,(%eax)
    17ee:	00 01                	add    %al,(%ecx)
    17f0:	01 01                	add    %eax,(%ecx)
    17f2:	1f                   	pop    %ds
    17f3:	03 00                	add    (%eax),%eax
    17f5:	00 00                	add    %al,(%eax)
    17f7:	00 cb                	add    %cl,%bl
    17f9:	00 00                	add    %al,(%eax)
    17fb:	00 d3                	add    %dl,%bl
    17fd:	00 00                	add    %al,(%eax)
    17ff:	00 02                	add    %al,(%edx)
    1801:	01 1f                	add    %ebx,(%edi)
    1803:	02 0f                	add    (%edi),%cl
    1805:	08 f3                	or     %dh,%bl
    1807:	00 00                	add    %al,(%eax)
    1809:	00 01                	add    %al,(%ecx)
    180b:	f3 00 00             	repz add %al,(%eax)
    180e:	00 01                	add    %al,(%ecx)
    1810:	2f                   	das
    1811:	00 00                	add    %al,(%eax)
    1813:	00 02                	add    %al,(%edx)
    1815:	77 00                	ja     1817 <MBOOT_HEADER_FLAGS+0x1814>
    1817:	00 00                	add    %al,(%eax)
    1819:	02 b4 00 00 00 02 7f 	add    0x7f020000(%eax,%eax,1),%dh
    1820:	00 00                	add    %al,(%eax)
    1822:	00 02                	add    %al,(%edx)
    1824:	fb                   	sti
    1825:	00 00                	add    %al,(%eax)
    1827:	00 02                	add    %al,(%edx)
    1829:	96                   	xchg   %eax,%esi
    182a:	00 00                	add    %al,(%eax)
    182c:	00 02                	add    %al,(%edx)
    182e:	05 1f 00 05 02       	add    $0x205001f,%eax
    1833:	c0 14 10 00          	rclb   $0x0,(%eax,%edx,1)
    1837:	03 9a 01 01 05 05    	add    0x5050101(%edx),%ebx
    183d:	14 13                	adc    $0x13,%al
    183f:	05 1f 06 0f 68       	add    $0x680f061f,%eax
    1844:	56                   	push   %esi
    1845:	05 17 00 02 04       	add    $0x4020017,%eax
    184a:	01 42 05             	add    %eax,0x5(%edx)
    184d:	1f                   	pop    %ds
    184e:	62 05 05 06 78 05    	bound  %eax,0x5780605
    1854:	0a 01                	or     (%ecx),%al
    1856:	05 17 00 02 04       	add    $0x4020017,%eax
    185b:	01 01                	add    %eax,(%ecx)
    185d:	05 0e 06 66 05       	add    $0x566060e,%eax
    1862:	09 06                	or     %eax,(%esi)
    1864:	e6 05                	out    %al,$0x5
    1866:	0d 06 01 05 0c       	or     $0xc050106,%eax
    186b:	00 02                	add    %al,(%edx)
    186d:	04 01                	add    $0x1,%al
    186f:	e4 05                	in     $0x5,%al
    1871:	1c 00                	sbb    $0x0,%al
    1873:	02 04 01             	add    (%ecx,%eax,1),%al
    1876:	06                   	push   %es
    1877:	6d                   	insl   (%dx),%es:(%edi)
    1878:	05 0e 06 03 77       	add    $0x7703060e,%eax
    187d:	01 2e                	add    %ebp,(%esi)
    187f:	05 39 00 02 04       	add    $0x4020039,%eax
    1884:	03 03                	add    (%ebx),%eax
    1886:	09 08                	or     %ecx,(%eax)
    1888:	82 05 1c 00 02 04 03 	addb   $0x3,0x402001c
    188f:	82 05 0d 06 59 05 1d 	addb   $0x1d,0x559060d
    1896:	06                   	push   %es
    1897:	01 05 46 00 02 04    	add    %eax,0x4020046
    189d:	04 06                	add    $0x6,%al
    189f:	3b 05 1c 00 02 04    	cmp    0x402001c,%eax
    18a5:	01 3c 05 09 5b 05 19 	add    %edi,0x19055b09(,%eax,1)
    18ac:	06                   	push   %es
    18ad:	01 05 09 06 59 05    	add    %eax,0x5590609
    18b3:	2b 00                	sub    (%eax),%eax
    18b5:	02 04 02             	add    (%edx,%eax,1),%al
    18b8:	06                   	push   %es
    18b9:	03 73 01             	add    0x1(%ebx),%esi
    18bc:	05 17 00 02 04       	add    $0x4020017,%eax
    18c1:	01 3c 05 09 03 0d 66 	add    %edi,0x660d0309(,%eax,1)
    18c8:	ac                   	lods   %ds:(%esi),%al
    18c9:	05 2b 00 02 04       	add    $0x402002b,%eax
    18ce:	02 06                	add    (%esi),%al
    18d0:	03 73 01             	add    0x1(%ebx),%esi
    18d3:	05 17 00 02 04       	add    $0x4020017,%eax
    18d8:	01 01                	add    %eax,(%ecx)
    18da:	00 02                	add    %al,(%edx)
    18dc:	04 01                	add    $0x1,%al
    18de:	06                   	push   %es
    18df:	9e                   	sahf
    18e0:	05 05 06 03 11       	add    $0x11030605,%eax
    18e5:	01 05 09 06 01 05    	add    %eax,0x5010609
    18eb:	08 00                	or     %al,(%eax)
    18ed:	02 04 01             	add    (%ecx,%eax,1),%al
    18f0:	e4 05                	in     $0x5,%al
    18f2:	01 03                	add    %eax,(%ebx)
    18f4:	0f 66 05 0d 06 03 63 	pcmpgtd 0x6303060d,%mm0
    18fb:	f2 06                	repnz push %es
    18fd:	08 58 05             	or     %bl,0x5(%eax)
    1900:	09 06                	or     %eax,(%esi)
    1902:	03 10                	add    (%eax),%edx
    1904:	01 05 0d 06 01 05    	add    %eax,0x501060d
    190a:	0c 00                	or     $0x0,%al
    190c:	02 04 01             	add    (%ecx,%eax,1),%al
    190f:	e4 05                	in     $0x5,%al
    1911:	1c 00                	sbb    $0x0,%al
    1913:	02 04 01             	add    (%ecx,%eax,1),%al
    1916:	06                   	push   %es
    1917:	6d                   	insl   (%dx),%es:(%edi)
    1918:	05 0e 06 03 66       	add    $0x6603060e,%eax
    191d:	01 58 f2             	add    %ebx,-0xe(%eax)
    1920:	05 35 00 02 04       	add    $0x4020035,%eax
    1925:	03 03                	add    (%ebx),%eax
    1927:	1a 01                	sbb    (%ecx),%al
    1929:	05 1c 00 02 04       	add    $0x402001c,%eax
    192e:	03 74 05 0d          	add    0xd(%ebp,%eax,1),%esi
    1932:	06                   	push   %es
    1933:	59                   	pop    %ecx
    1934:	05 1d 06 01 05       	add    $0x501061d,%eax
    1939:	42                   	inc    %edx
    193a:	00 02                	add    %al,(%edx)
    193c:	04 04                	add    $0x4,%al
    193e:	06                   	push   %es
    193f:	3b 05 1c 00 02 04    	cmp    0x402001c,%eax
    1945:	01 3c 05 09 5b 05 19 	add    %edi,0x19055b09(,%eax,1)
    194c:	06                   	push   %es
    194d:	01 05 09 06 59 06    	add    %eax,0x6590609
    1953:	ac                   	lods   %ds:(%esi),%al
    1954:	05 01 30 05 0d       	add    $0xd053001,%eax
    1959:	06                   	push   %es
    195a:	03 74 82 05          	add    0x5(%edx,%eax,4),%esi
    195e:	17                   	pop    %ss
    195f:	03 0e                	add    (%esi),%ecx
    1961:	08 d6                	or     %dl,%dh
    1963:	05 05 13 05 17       	add    $0x17051305,%eax
    1968:	06                   	push   %es
    1969:	11 05 0a 3d 05 08    	adc    %eax,0x8053d0a
    196f:	00 02                	add    %al,(%edx)
    1971:	04 01                	add    $0x1,%al
    1973:	d6                   	(bad)
    1974:	05 05 06 b1 05       	add    $0x5b10605,%eax
    1979:	08 06                	or     %al,(%esi)
    197b:	01 05 09 06 ad 9f    	add    %eax,0x9fad0609
    1981:	05 10 06 01 1b       	add    $0x1b010610,%eax
    1986:	05 01 03 13 2e       	add    $0x2e130301,%eax
    198b:	05 05 06 03 75       	add    $0x75030605,%eax
    1990:	ba 05 26 06 13       	mov    $0x13062605,%edx
    1995:	05 20 73 05 05       	add    $0x5057320,%eax
    199a:	79 05                	jns    19a1 <MBOOT_HEADER_FLAGS+0x199e>
    199c:	26 9a 05 35 59 05 3f 	es lcall $0x743f,$0x5593505
    19a3:	74 
    19a4:	05 13 72 05 05       	add    $0x5057213,%eax
    19a9:	06                   	push   %es
    19aa:	67 13 05             	adc    (%di),%eax
    19ad:	27                   	daa
    19ae:	06                   	push   %es
    19af:	01 05 05 06 76 05    	add    %eax,0x5760605
    19b5:	1f                   	pop    %ds
    19b6:	06                   	push   %es
    19b7:	01 05 05 06 9f 59    	add    %eax,0x599f0605
    19bd:	e5 05                	in     $0x5,%eax
    19bf:	0c 06                	or     $0x6,%al
    19c1:	15 05 15 7f 05       	adc    $0x57f1505,%eax
    19c6:	05 06 a0 05 14       	add    $0x1405a006,%eax
    19cb:	06                   	push   %es
    19cc:	01 05 05 06 9f 05    	add    %eax,0x59f0605
    19d2:	01 06                	add    %eax,(%esi)
    19d4:	13 05 09 06 03 6c    	adc    0x6c030609,%eax
    19da:	66 9f                	data16 lahf
    19dc:	05 10 06 01 05       	add    $0x5010610,%eax
    19e1:	2c 06                	sub    $0x6,%al
    19e3:	03 16                	add    (%esi),%edx
    19e5:	d6                   	(bad)
    19e6:	05 05 13 05 01       	add    $0x1051305,%eax
    19eb:	06                   	push   %es
    19ec:	13 05 2a 06 f4 05    	adc    0x5f4062a,%eax
    19f2:	05 13 05 01 06       	add    $0x6010513,%eax
    19f7:	13 05 33 06 f8 05    	adc    0x5f80633,%eax
    19fd:	05 13 05 33 06       	add    $0x6330513,%eax
    1a02:	11 05 35 9f 05 05    	adc    %eax,0x5059f35
    1a08:	06                   	push   %es
    1a09:	9f                   	lahf
    1a0a:	13 14 05 0a 06 01 05 	adc    0x501060a(,%eax,1),%edx
    1a11:	3a 70 05             	cmp    0x5(%eax),%dh
    1a14:	0e                   	push   %cs
    1a15:	58                   	pop    %eax
    1a16:	05 0a 6a 05 08       	add    $0x8056a0a,%eax
    1a1b:	00 02                	add    %al,(%edx)
    1a1d:	04 01                	add    $0x1,%al
    1a1f:	82 05 0a 3c 05 08 00 	addb   $0x0,0x8053c0a
    1a26:	02 04 01             	add    (%ecx,%eax,1),%al
    1a29:	74 05                	je     1a30 <MBOOT_HEADER_FLAGS+0x1a2d>
    1a2b:	05 06 4e 05 19       	add    $0x19054e06,%eax
    1a30:	06                   	push   %es
    1a31:	01 05 1d 66 05 01    	add    %eax,0x105661d
    1a37:	bb 05 32 06 08       	mov    $0x8063205,%ebx
    1a3c:	22 05 05 13 05 32    	and    0x32051305,%al
    1a42:	06                   	push   %es
    1a43:	11 05 08 bb 05 32    	adc    %eax,0x3205bb08
    1a49:	65 05 08 3d 05 01    	gs add $0x1053d08,%eax
    1a4f:	03 f0                	add    %eax,%esi
    1a51:	00 4a 05             	add    %cl,0x5(%edx)
    1a54:	21 00                	and    %eax,(%eax)
    1a56:	02 04 01             	add    (%ecx,%eax,1),%al
    1a59:	03 90 7f 3c 05 01    	add    0x1053c7f(%eax),%edx
    1a5f:	03 f0                	add    %eax,%esi
    1a61:	00 2e                	add    %ch,(%esi)
    1a63:	05 05 06 03 93       	add    $0x93030605,%eax
    1a68:	7f 9e                	jg     1a08 <MBOOT_HEADER_FLAGS+0x1a05>
    1a6a:	05 09 06 01 05       	add    $0x5010609,%eax
    1a6f:	08 00                	or     %al,(%eax)
    1a71:	02 04 01             	add    (%ecx,%eax,1),%al
    1a74:	ac                   	lods   %ds:(%esi),%al
    1a75:	05 05 06 03 09       	add    $0x9030605,%eax
    1a7a:	66 05 09 06          	add    $0x609,%ax
    1a7e:	01 05 08 00 02 04    	add    %eax,0x4020008
    1a84:	01 ac 05 09 06 67 05 	add    %ebp,0x5670609(%ebp,%eax,1)
    1a8b:	1d 06 01 05 0c       	sbb    $0xc050106,%eax
    1a90:	58                   	pop    %eax
    1a91:	05 0d 06 4b 05       	add    $0x54b060d,%eax
    1a96:	1c 06                	sbb    $0x6,%al
    1a98:	01 05 1f 3d 05 1c    	add    %eax,0x1c053d1f
    1a9e:	9d                   	popf
    1a9f:	05 0d 06 59 05       	add    $0x559060d,%eax
    1aa4:	1f                   	pop    %ds
    1aa5:	06                   	push   %es
    1aa6:	01 05 0d 06 d7 59    	add    %eax,0x59d7060d
    1aac:	05 01 06 03 df       	add    $0xdf030601,%eax
    1ab1:	00 01                	add    %al,(%ecx)
    1ab3:	05 10 03 98 7f       	add    $0x7f980310,%eax
    1ab8:	3c 05                	cmp    $0x5,%al
    1aba:	01 03                	add    %eax,(%ebx)
    1abc:	e8 00 58 05 09       	call   90572c1 <stack_top+0x8e4b651>
    1ac1:	06                   	push   %es
    1ac2:	03 94 7f 82 05 23 06 	add    0x6230582(%edi,%edi,2),%edx
    1ac9:	01 05 09 06 9f e5    	add    %eax,0xe59f0609
    1acf:	05 19 06 01 05       	add    $0x5010619,%eax
    1ad4:	09 06                	or     %eax,(%esi)
    1ad6:	9f                   	lahf
    1ad7:	59                   	pop    %ecx
    1ad8:	05 10 06 01 05       	add    $0x5010610,%eax
    1add:	05 06 03 0f 82       	add    $0x820f0306,%eax
    1ae2:	05 09 06 01 05       	add    $0x5010609,%eax
    1ae7:	08 00                	or     %al,(%eax)
    1ae9:	02 04 01             	add    (%ecx,%eax,1),%al
    1aec:	ac                   	lods   %ds:(%esi),%al
    1aed:	05 05 06 6b 13       	add    $0x136b0605,%eax
    1af2:	f5                   	cmc
    1af3:	13 13                	adc    (%ebx),%edx
    1af5:	05 20 01 05 0c       	add    $0xc050120,%eax
    1afa:	06                   	push   %es
    1afb:	01 05 11 3c 05 20    	add    %eax,0x20053c11
    1b01:	00 02                	add    %al,(%edx)
    1b03:	04 01                	add    $0x1,%al
    1b05:	3c 05                	cmp    $0x5,%al
    1b07:	0c b9                	or     $0xb9,%al
    1b09:	3c 4a                	cmp    $0x4a,%al
    1b0b:	05 20 00 02 04       	add    $0x4020020,%eax
    1b10:	01 02                	add    %eax,(%edx)
    1b12:	2e 13 05 09 06 5a 05 	adc    %cs:0x55a0609,%eax
    1b19:	2b 06                	sub    (%esi),%eax
    1b1b:	01 05 29 3d 05 0c    	add    %eax,0xc053d29
    1b21:	ad                   	lods   %ds:(%esi),%eax
    1b22:	05 1c 00 02 04       	add    $0x402001c,%eax
    1b27:	04 48                	add    $0x48,%al
    1b29:	05 09 06 3e 13       	add    $0x133e0609,%eax
    1b2e:	05 0c 06 0d 05       	add    $0x50d060c,%eax
    1b33:	11 41 05             	adc    %eax,0x5(%ecx)
    1b36:	20 06                	and    %al,(%esi)
    1b38:	37                   	aaa
    1b39:	05 0c 06 01 05       	add    $0x501060c,%eax
    1b3e:	11 3c 05 20 00 02 04 	adc    %edi,0x4020020(,%eax,1)
    1b45:	01 9e 05 05 06 03    	add    %ebx,0x3060505(%esi)
    1b4b:	09 74 05 08          	or     %esi,0x8(%ebp,%eax,1)
    1b4f:	06                   	push   %es
    1b50:	01 05 05 06 03 0d    	add    %eax,0xd030605
    1b56:	82 05 0e 06 01 05 05 	addb   $0x5,0x501060e
    1b5d:	06                   	push   %es
    1b5e:	59                   	pop    %ecx
    1b5f:	13 14 05 1c 01 05 09 	adc    0x905011c(,%eax,1),%edx
    1b66:	ad                   	lods   %ds:(%esi),%eax
    1b67:	05 11 03 b2 7f       	add    $0x7fb20311,%eax
    1b6c:	01 05 05 13 05 2f    	add    %eax,0x2f051305
    1b72:	06                   	push   %es
    1b73:	01 05 2a 66 05 17    	add    %eax,0x1705662a
    1b79:	03 cf                	add    %edi,%ecx
    1b7b:	00 3c 05 2f 03 b1 7f 	add    %bh,0x7fb1032f(,%eax,1)
    1b82:	2e 05 1e 3c 82 05    	cs add $0x5823c1e,%eax
    1b88:	09 06                	or     %eax,(%esi)
    1b8a:	03 cf                	add    %edi,%ecx
    1b8c:	00 01                	add    %al,(%ecx)
    1b8e:	05 0e 01 05 20       	add    $0x2005010e,%eax
    1b93:	00 02                	add    %al,(%edx)
    1b95:	04 01                	add    $0x1,%al
    1b97:	01 05 0d d7 05 12    	add    %eax,0x1205d70d
    1b9d:	06                   	push   %es
    1b9e:	01 05 10 00 02 04    	add    %eax,0x4020010
    1ba4:	01 08                	add    %ecx,(%eax)
    1ba6:	20 05 11 06 02 2e    	and    %al,0x2e020611
    1bac:	19 05 22 06 01 05    	sbb    %eax,0x5010622
    1bb2:	14 90                	adc    $0x90,%al
    1bb4:	05 11 06 87 05       	add    $0x5870611,%eax
    1bb9:	14 06                	adc    $0x6,%al
    1bbb:	01 05 39 00 02 04    	add    %eax,0x4020039
    1bc1:	02 82 05 2e 00 02    	add    0x2002e05(%edx),%al
    1bc7:	04 02                	add    $0x2,%al
    1bc9:	4a                   	dec    %edx
    1bca:	05 11 06 87 05       	add    $0x5870611,%eax
    1bcf:	14 06                	adc    $0x6,%al
    1bd1:	01 05 0c 03 c3 7e    	add    %eax,0x7ec3030c
    1bd7:	82 05 09 06 3e 05 15 	addb   $0x15,0x53e0609
    1bde:	06                   	push   %es
    1bdf:	01 05 0e 6c 05 15    	add    %eax,0x15056c0e
    1be5:	03 7a 4a             	add    0x4a(%edx),%edi
    1be8:	05 0c 4a 05 09       	add    $0x9054a0c,%eax
    1bed:	06                   	push   %es
    1bee:	88 13                	mov    %dl,(%ebx)
    1bf0:	13 05 17 06 01 05    	adc    0x5010617,%eax
    1bf6:	33 00                	xor    (%eax),%eax
    1bf8:	02 04 01             	add    (%ecx,%eax,1),%al
    1bfb:	3c 00                	cmp    $0x0,%al
    1bfd:	02 04 01             	add    (%ecx,%eax,1),%al
    1c00:	90                   	nop
    1c01:	05 17 2f 05 33       	add    $0x33052f17,%eax
    1c06:	00 02                	add    %al,(%edx)
    1c08:	04 01                	add    $0x1,%al
    1c0a:	3b 05 09 06 c9 05    	cmp    0x5c90609,%eax
    1c10:	33 00                	xor    (%eax),%eax
    1c12:	02 04 01             	add    (%ecx,%eax,1),%al
    1c15:	06                   	push   %es
    1c16:	01 05 09 06 08 76    	add    %eax,0x76080609
    1c1c:	05 0c 06 01 05       	add    $0x501060c,%eax
    1c21:	1a 00                	sbb    (%eax),%al
    1c23:	02 04 02             	add    (%edx,%eax,1),%al
    1c26:	06                   	push   %es
    1c27:	03 73 82             	add    -0x7e(%ebx),%esi
    1c2a:	05 13 00 02 04       	add    $0x4020013,%eax
    1c2f:	01 3c 00             	add    %edi,(%eax,%eax,1)
    1c32:	02 04 01             	add    (%ecx,%eax,1),%al
    1c35:	06                   	push   %es
    1c36:	58                   	pop    %eax
    1c37:	05 15 06 03 c4       	add    $0xc4030615,%eax
    1c3c:	01 01                	add    %eax,(%ecx)
    1c3e:	05 29 06 01 05       	add    $0x5010629,%eax
    1c43:	18 58 05             	sbb    %bl,0x5(%eax)
    1c46:	19 06                	sbb    %eax,(%esi)
    1c48:	59                   	pop    %ecx
    1c49:	05 3b 06 01 05       	add    $0x501063b,%eax
    1c4e:	3f                   	aas
    1c4f:	3c 05                	cmp    $0x5,%al
    1c51:	3b f2                	cmp    %edx,%esi
    1c53:	05 3f 66 05 15       	add    $0x1505663f,%eax
    1c58:	06                   	push   %es
    1c59:	94                   	xchg   %eax,%esp
    1c5a:	15 05 2d 06 0f       	adc    $0xf062d05,%eax
    1c5f:	05 33 9f 05 53       	add    $0x53059f33,%eax
    1c64:	49                   	dec    %ecx
    1c65:	05 1e 3c 05 15       	add    $0x15053c1e,%eax
    1c6a:	06                   	push   %es
    1c6b:	78 c9                	js     1c36 <MBOOT_HEADER_FLAGS+0x1c33>
    1c6d:	05 30 06 01 05       	add    $0x5010630,%eax
    1c72:	15 06 76 59 05       	adc    $0x5597606,%eax
    1c77:	1c 06                	sbb    $0x6,%al
    1c79:	01 82 e4 05 1b 00    	add    %eax,0x1b05e4(%edx)
    1c7f:	02 04 02             	add    (%edx,%eax,1),%al
    1c82:	03 b2 7e 01 05 32    	add    0x3205017e(%edx),%esi
    1c88:	00 02                	add    %al,(%edx)
    1c8a:	04 03                	add    $0x3,%al
    1c8c:	06                   	push   %es
    1c8d:	66 05 33 00          	add    $0x33,%ax
    1c91:	02 04 03             	add    (%ebx,%eax,1),%al
    1c94:	06                   	push   %es
    1c95:	01 05 1b 00 02 04    	add    %eax,0x402001b
    1c9b:	01 06                	add    %eax,(%esi)
    1c9d:	3c 00                	cmp    $0x0,%al
    1c9f:	02 04 01             	add    (%ecx,%eax,1),%al
    1ca2:	06                   	push   %es
    1ca3:	e4 05                	in     $0x5,%al
    1ca5:	52                   	push   %edx
    1ca6:	00 02                	add    %al,(%edx)
    1ca8:	04 02                	add    $0x2,%al
    1caa:	06                   	push   %es
    1cab:	03 ae 01 01 05 24    	add    0x24050101(%esi),%ebp
    1cb1:	00 02                	add    %al,(%edx)
    1cb3:	04 01                	add    $0x1,%al
    1cb5:	01 05 38 00 02 04    	add    %eax,0x4020038
    1cbb:	02 06                	add    (%esi),%al
    1cbd:	03 7a 08             	add    0x8(%edx),%edi
    1cc0:	74 00                	je     1cc2 <MBOOT_HEADER_FLAGS+0x1cbf>
    1cc2:	02 04 02             	add    (%edx,%eax,1),%al
    1cc5:	06                   	push   %es
    1cc6:	ba 05 20 00 02       	mov    $0x2002005,%edx
    1ccb:	04 01                	add    $0x1,%al
    1ccd:	3c 00                	cmp    $0x0,%al
    1ccf:	02 04 01             	add    (%ecx,%eax,1),%al
    1cd2:	06                   	push   %es
    1cd3:	08 20                	or     %ah,(%eax)
    1cd5:	05 09 06 03 2a       	add    $0x2a030609,%eax
    1cda:	01 05 0a 03 8a 7f    	add    %eax,0x7f8a030a
    1ce0:	01 05 05 13 05 35    	add    %eax,0x35051305
    1ce6:	06                   	push   %es
    1ce7:	01 05 05 06 75 13    	add    %eax,0x13750605
    1ced:	14 05                	adc    $0x5,%al
    1cef:	0a 06                	or     (%esi),%al
    1cf1:	01 66 05             	add    %esp,0x5(%esi)
    1cf4:	3a 1c 05 0a 32 05 3a 	cmp    0x3a05320a(,%eax,1),%bl
    1cfb:	2a 05 0e 3c 05 0a    	sub    0xa053c0e,%al
    1d01:	6a 05                	push   $0x5
    1d03:	08 00                	or     %al,(%eax)
    1d05:	02 04 01             	add    (%ecx,%eax,1),%al
    1d08:	66 05 05 06          	add    $0x605,%ax
    1d0c:	78 05                	js     1d13 <MBOOT_HEADER_FLAGS+0x1d10>
    1d0e:	19 06                	sbb    %eax,(%esi)
    1d10:	01 05 1d 66 74 05    	add    %eax,0x574661d
    1d16:	09 06                	or     %eax,(%esi)
    1d18:	03 ee                	add    %esi,%ebp
    1d1a:	00 01                	add    %al,(%ecx)
    1d1c:	05 0c 06 01 58       	add    $0x5801060c,%eax
    1d21:	08 4a 05             	or     %cl,0x5(%edx)
    1d24:	1b 00                	sbb    (%eax),%eax
    1d26:	02 04 01             	add    (%ecx,%eax,1),%al
    1d29:	03 41 01             	add    0x1(%ecx),%eax
    1d2c:	05 15 00 02 04       	add    $0x4020015,%eax
    1d31:	01 4a 05             	add    %ecx,0x5(%edx)
    1d34:	10 84 05 0d 06 77 05 	adc    %al,0x577060d(%ebp,%eax,1)
    1d3b:	2e 06                	cs push %es
    1d3d:	01 05 2c 3d 05 1f    	add    %eax,0x1f053d2c
    1d43:	00 02                	add    %al,(%edx)
    1d45:	04 04                	add    $0x4,%al
    1d47:	8f 05 0d 06 3e 13    	pop    0x133e060d
    1d4d:	05 14 06 01 05       	add    $0x5010614,%eax
    1d52:	15 06 37 05 10       	adc    $0x10053706,%eax
    1d57:	06                   	push   %es
    1d58:	01 05 15 00 02 04    	add    %eax,0x4020015
    1d5e:	01 58 00             	add    %ebx,0x0(%eax)
    1d61:	02 04 01             	add    (%ecx,%eax,1),%al
    1d64:	08 20                	or     %ah,(%eax)
    1d66:	05 09 06 03 3c       	add    $0x3c030609,%eax
    1d6b:	01 06                	add    %eax,(%esi)
    1d6d:	01 05 1c 06 03 52    	add    %eax,0x5203061c
    1d73:	01 05 1b 06 03 2d    	add    %eax,0x2d03061b
    1d79:	01 05 5c 06 03 09    	add    %eax,0x903065c
    1d7f:	08 3c 05 05 13 05 5c 	or     %bh,0x5c051305(,%eax,1)
    1d86:	06                   	push   %es
    1d87:	11 05 08 bb 05 5c    	adc    %eax,0x5c05bb08
    1d8d:	65 05 0e 3f 05 08    	gs add $0x8053f0e,%eax
    1d93:	56                   	push   %esi
    1d94:	05 1c 06 88 05       	add    $0x588061c,%eax
    1d99:	09 c9                	or     %ecx,%ecx
    1d9b:	05 11 03 f5 7e       	add    $0x7ef50311,%eax
    1da0:	01 05 05 13 05 2f    	add    %eax,0x2f051305
    1da6:	06                   	push   %es
    1da7:	01 05 2a 66 05 2f    	add    %eax,0x2f05662a
    1dad:	3c 05                	cmp    $0x5,%al
    1daf:	1e                   	push   %ds
    1db0:	3c ba                	cmp    $0xba,%al
    1db2:	05 09 06 03 8c       	add    $0x8c030609,%eax
    1db7:	01 01                	add    %eax,(%ecx)
    1db9:	05 0e 01 05 20       	add    $0x2005010e,%eax
    1dbe:	00 02                	add    %al,(%edx)
    1dc0:	04 01                	add    $0x1,%al
    1dc2:	01 05 17 06 9e 05    	add    %eax,0x59e0617
    1dc8:	0d 06 2f 05 12       	or     $0x12052f06,%eax
    1dcd:	06                   	push   %es
    1dce:	01 05 10 00 02 04    	add    %eax,0x4020010
    1dd4:	01 08                	add    %ecx,(%eax)
    1dd6:	66 05 11 06          	add    $0x611,%ax
    1dda:	08 5f 05             	or     %bl,0x5(%edi)
    1ddd:	22 06                	and    (%esi),%al
    1ddf:	01 05 14 3c 05 11    	add    %eax,0x11053c14
    1de5:	06                   	push   %es
    1de6:	87 05 14 06 01 05    	xchg   %eax,0x5010614
    1dec:	1d 4b 05 31 4a       	sbb    $0x4a31054b,%eax
    1df1:	05 11 06 95 05       	add    $0x5950611,%eax
    1df6:	52                   	push   %edx
    1df7:	00 02                	add    %al,(%edx)
    1df9:	04 02                	add    $0x2,%al
    1dfb:	03 73 9e             	add    -0x62(%ebx),%esi
    1dfe:	05 24 00 02 04       	add    $0x4020024,%eax
    1e03:	01 01                	add    %eax,(%ecx)
    1e05:	05 38 00 02 04       	add    $0x4020038,%eax
    1e0a:	02 03                	add    (%ebx),%al
    1e0c:	7a 9e                	jp     1dac <MBOOT_HEADER_FLAGS+0x1da9>
    1e0e:	05 20 00 02 04       	add    $0x4020020,%eax
    1e13:	01 3c 00             	add    %edi,(%eax,%eax,1)
    1e16:	02 04 01             	add    (%ecx,%eax,1),%al
    1e19:	06                   	push   %es
    1e1a:	d6                   	(bad)
    1e1b:	05 09 06 03 17       	add    $0x17030609,%eax
    1e20:	01 05 0a 03 e0 7e    	add    %eax,0x7ee0030a
    1e26:	01 05 05 13 05 35    	add    %eax,0x35051305
    1e2c:	06                   	push   %es
    1e2d:	01 05 05 06 75 13    	add    %eax,0x13750605
    1e33:	14 05                	adc    $0x5,%al
    1e35:	0a 06                	or     (%esi),%al
    1e37:	01 05 3a 70 05 0a    	add    %eax,0xa05703a
    1e3d:	32 05 3a 2a 05 0e    	xor    0xe052a3a,%al
    1e43:	3c 05                	cmp    $0x5,%al
    1e45:	0a 6a 05             	or     0x5(%edx),%ch
    1e48:	08 00                	or     %al,(%eax)
    1e4a:	02 04 01             	add    (%ecx,%eax,1),%al
    1e4d:	66 05 05 06          	add    $0x605,%ax
    1e51:	78 05                	js     1e58 <MBOOT_HEADER_FLAGS+0x1e55>
    1e53:	19 06                	sbb    %eax,(%esi)
    1e55:	01 05 1d 66 74 05    	add    %eax,0x574661d
    1e5b:	09 06                	or     %eax,(%esi)
    1e5d:	03 98 01 01 05 0c    	add    0xc050101(%eax),%ebx
    1e63:	06                   	push   %es
    1e64:	01 58 66             	add    %ebx,0x66(%eax)
    1e67:	05 01 18 05 21       	add    $0x21051801,%eax
    1e6c:	00 02                	add    %al,(%edx)
    1e6e:	04 01                	add    $0x1,%al
    1e70:	03 59 3c             	add    0x3c(%ecx),%ebx
    1e73:	05 01 03 27 2e       	add    $0x2e270301,%eax
    1e78:	05 1c 03 6b c8       	add    $0xc86b031c,%eax
    1e7d:	05 01 03 15 58       	add    $0x58150301,%eax
    1e82:	05 09 06 03 7a       	add    $0x7a030609,%eax
    1e87:	58                   	pop    %eax
    1e88:	06                   	push   %es
    1e89:	01 05 1c 06 03 65    	add    %eax,0x6503061c
    1e8f:	01 05 1b 06 03 1a    	add    %eax,0x1a03061b
    1e95:	01 05 39 06 03 09    	add    %eax,0x9030639
    1e9b:	08 2e                	or     %ch,(%esi)
    1e9d:	05 05 13 05 39       	add    $0x39051305,%eax
    1ea2:	06                   	push   %es
    1ea3:	11 05 31 3d 05 01    	adc    %eax,0x1053d31
    1ea9:	3d 05 31 1f 05       	cmp    $0x51f3105,%eax
    1eae:	01 9f 05 2a 06 e6    	add    %ebx,-0x19f9d5fb(%edi)
    1eb4:	05 05 13 05 08       	add    $0x8051305,%eax
    1eb9:	06                   	push   %es
    1eba:	01 05 05 06 ca 05    	add    %eax,0x5ca0605
    1ec0:	0e                   	push   %cs
    1ec1:	06                   	push   %es
    1ec2:	01 05 05 06 59 13    	add    %eax,0x13590605
    1ec8:	14 05                	adc    $0x5,%al
    1eca:	1c 01                	sbb    $0x1,%al
    1ecc:	05 2a 06 03 79       	add    $0x7903062a,%eax
    1ed1:	ac                   	lods   %ds:(%esi),%al
    1ed2:	05 09 06 c2 05       	add    $0x5c20609,%eax
    1ed7:	11 03                	adc    %eax,(%ebx)
    1ed9:	c7                   	(bad)
    1eda:	7e 01                	jle    1edd <MBOOT_HEADER_FLAGS+0x1eda>
    1edc:	05 05 13 05 2f       	add    $0x2f051305,%eax
    1ee1:	06                   	push   %es
    1ee2:	01 05 2a 66 05 2f    	add    %eax,0x2f05662a
    1ee8:	3c 05                	cmp    $0x5,%al
    1eea:	1e                   	push   %ds
    1eeb:	3c 66                	cmp    $0x66,%al
    1eed:	05 09 06 03 ba       	add    $0xba030609,%eax
    1ef2:	01 01                	add    %eax,(%ecx)
    1ef4:	05 0e 01 05 20       	add    $0x2005010e,%eax
    1ef9:	00 02                	add    %al,(%edx)
    1efb:	04 01                	add    $0x1,%al
    1efd:	01 05 17 06 9e 05    	add    %eax,0x59e0617
    1f03:	0d 06 d7 05 12       	or     $0x1205d706,%eax
    1f08:	06                   	push   %es
    1f09:	01 05 10 00 02 04    	add    %eax,0x4020010
    1f0f:	01 08                	add    %ecx,(%eax)
    1f11:	74 05                	je     1f18 <MBOOT_HEADER_FLAGS+0x1f15>
    1f13:	11 06                	adc    %eax,(%esi)
    1f15:	08 50 05             	or     %dl,0x5(%eax)
    1f18:	22 06                	and    (%esi),%al
    1f1a:	01 05 14 3c 05 2b    	add    %eax,0x2b053c14
    1f20:	00 02                	add    %al,(%edx)
    1f22:	04 02                	add    $0x2,%al
    1f24:	06                   	push   %es
    1f25:	81 05 24 00 02 04 01 	addl   $0x38050101,0x4020024
    1f2c:	01 05 38 
    1f2f:	00 02                	add    %al,(%edx)
    1f31:	04 02                	add    $0x2,%al
    1f33:	03 7a 9e             	add    -0x62(%edx),%edi
    1f36:	05 20 00 02 04       	add    $0x4020020,%eax
    1f3b:	01 3c 00             	add    %edi,(%eax,%eax,1)
    1f3e:	02 04 01             	add    (%ecx,%eax,1),%al
    1f41:	06                   	push   %es
    1f42:	d6                   	(bad)
    1f43:	05 09 06 03 14       	add    $0x14030609,%eax
    1f48:	01 05 0a 03 b5 7e    	add    %eax,0x7eb5030a
    1f4e:	01 05 05 13 05 35    	add    %eax,0x35051305
    1f54:	06                   	push   %es
    1f55:	01 05 05 06 75 13    	add    %eax,0x13750605
    1f5b:	14 05                	adc    $0x5,%al
    1f5d:	0a 06                	or     (%esi),%al
    1f5f:	01 66 05             	add    %esp,0x5(%esi)
    1f62:	3a 1c 05 0a 32 05 3a 	cmp    0x3a05320a(,%eax,1),%bl
    1f69:	2a 05 0e 3c 05 0a    	sub    0xa053c0e,%al
    1f6f:	6a 05                	push   $0x5
    1f71:	08 00                	or     %al,(%eax)
    1f73:	02 04 01             	add    (%ecx,%eax,1),%al
    1f76:	66 05 05 06          	add    $0x605,%ax
    1f7a:	78 05                	js     1f81 <MBOOT_HEADER_FLAGS+0x1f7e>
    1f7c:	19 06                	sbb    %eax,(%esi)
    1f7e:	01 05 1d 66 ba 05    	add    %eax,0x5ba661d
    1f84:	1c 06                	sbb    $0x6,%al
    1f86:	03 ab 01 01 05 01    	add    0x1050101(%ebx),%ebp
    1f8c:	06                   	push   %es
    1f8d:	03 1a                	add    (%edx),%ebx
    1f8f:	ac                   	lods   %ds:(%esi),%al
    1f90:	05 21 00 02 04       	add    $0x4020021,%eax
    1f95:	01 03                	add    %eax,(%ebx)
    1f97:	60                   	pusha
    1f98:	3c 05                	cmp    $0x5,%al
    1f9a:	01 03                	add    %eax,(%ebx)
    1f9c:	20 2e                	and    %ch,(%esi)
    1f9e:	05 15 03 71 82       	add    $0x82710315,%eax
    1fa3:	06                   	push   %es
    1fa4:	4a                   	dec    %edx
    1fa5:	83 ad 05 29 06 01 05 	subl   $0x5,0x1062905(%ebp)
    1fac:	15 06 4b 05 28       	adc    $0x28054b06,%eax
    1fb1:	06                   	push   %es
    1fb2:	01 05 15 06 76 05    	add    %eax,0x5760615
    1fb8:	1a 06                	sbb    (%esi),%al
    1fba:	01 05 18 00 02 04    	add    %eax,0x4020018
    1fc0:	01 90 05 01 03 0a    	add    %edx,0xa030105(%eax)
    1fc6:	82 05 18 00 02 04 01 	addb   $0x1,0x4020018
    1fcd:	03 76 4a             	add    0x4a(%esi),%esi
    1fd0:	05 01 03 0a 3c       	add    $0x3c0a0301,%eax
    1fd5:	3c 05                	cmp    $0x5,%al
    1fd7:	21 00                	and    %eax,(%eax)
    1fd9:	02 04 01             	add    (%ecx,%eax,1),%al
    1fdc:	03 60 ac             	add    -0x54(%eax),%esp
    1fdf:	05 01 03 20 2e       	add    $0x2e200301,%eax
    1fe4:	05 1c 06 03 66       	add    $0x6603061c,%eax
    1fe9:	20 05 10 06 03 d2    	and    %al,0xd2030610
    1fef:	7e 01                	jle    1ff2 <MBOOT_HEADER_FLAGS+0x1fef>
    1ff1:	05 2a 06 03 ca       	add    $0xca03062a,%eax
    1ff6:	01 c8                	add    %ecx,%eax
    1ff8:	05 05 13 05 2a       	add    $0x2a051305,%eax
    1ffd:	06                   	push   %es
    1ffe:	11 05 08 bb 05 2a    	adc    %eax,0x2a05bb08
    2004:	57                   	push   %edi
    2005:	05 08 3d 05 05       	add    $0x5053d08,%eax
    200a:	06                   	push   %es
    200b:	84 05 0e 06 01 05    	test   %al,0x501060e
    2011:	05 06 59 13 14       	add    $0x14135906,%eax
    2016:	05 1c 01 05 09       	add    $0x905011c,%eax
    201b:	ad                   	lods   %ds:(%esi),%eax
    201c:	05 11 03 a4 7e       	add    $0x7ea40311,%eax
    2021:	01 05 05 13 05 2f    	add    %eax,0x2f051305
    2027:	06                   	push   %es
    2028:	01 05 2a 66 05 2f    	add    %eax,0x2f05662a
    202e:	3c 05                	cmp    $0x5,%al
    2030:	1e                   	push   %ds
    2031:	3c 66                	cmp    $0x66,%al
    2033:	05 09 06 03 dd       	add    $0xdd030609,%eax
    2038:	01 01                	add    %eax,(%ecx)
    203a:	05 0e 01 05 20       	add    $0x2005010e,%eax
    203f:	00 02                	add    %al,(%edx)
    2041:	04 01                	add    $0x1,%al
    2043:	01 05 17 06 9e 05    	add    %eax,0x59e0617
    2049:	0d 06 83 05 12       	or     $0x12058306,%eax
    204e:	06                   	push   %es
    204f:	01 05 10 00 02 04    	add    %eax,0x4020010
    2055:	01 08                	add    %ecx,(%eax)
    2057:	ba 05 11 06 08       	mov    $0x8061105,%edx
    205c:	34 05                	xor    $0x5,%al
    205e:	22 06                	and    (%esi),%al
    2060:	01 05 14 3c 05 15    	add    %eax,0x15053c14
    2066:	06                   	push   %es
    2067:	83 05 19 06 01 05 18 	addl   $0x18,0x5010619
    206e:	00 02                	add    %al,(%edx)
    2070:	04 01                	add    $0x1,%al
    2072:	90                   	nop
    2073:	05 2b 00 02 04       	add    $0x402002b,%eax
    2078:	02 06                	add    (%esi),%al
    207a:	72 05                	jb     2081 <MBOOT_HEADER_FLAGS+0x207e>
    207c:	24 00                	and    $0x0,%al
    207e:	02 04 01             	add    (%ecx,%eax,1),%al
    2081:	01 05 38 00 02 04    	add    %eax,0x4020038
    2087:	02 03                	add    (%ebx),%al
    2089:	7a 9e                	jp     2029 <MBOOT_HEADER_FLAGS+0x2026>
    208b:	05 20 00 02 04       	add    $0x4020020,%eax
    2090:	01 3c 00             	add    %edi,(%eax,%eax,1)
    2093:	02 04 01             	add    (%ecx,%eax,1),%al
    2096:	06                   	push   %es
    2097:	d6                   	(bad)
    2098:	05 09 06 03 12       	add    $0x12030609,%eax
    209d:	01 05 0a 03 94 7e    	add    %eax,0x7e94030a
    20a3:	01 05 05 13 05 35    	add    %eax,0x35051305
    20a9:	06                   	push   %es
    20aa:	01 05 05 06 75 13    	add    %eax,0x13750605
    20b0:	14 05                	adc    $0x5,%al
    20b2:	0a 06                	or     (%esi),%al
    20b4:	01 66 05             	add    %esp,0x5(%esi)
    20b7:	3a 1c 05 0a 32 05 3a 	cmp    0x3a05320a(,%eax,1),%bl
    20be:	2a 05 0e 3c 05 0a    	sub    0xa053c0e,%al
    20c4:	6a 05                	push   $0x5
    20c6:	08 00                	or     %al,(%eax)
    20c8:	02 04 01             	add    (%ecx,%eax,1),%al
    20cb:	66 05 05 06          	add    $0x605,%ax
    20cf:	78 05                	js     20d6 <MBOOT_HEADER_FLAGS+0x20d3>
    20d1:	19 06                	sbb    %eax,(%esi)
    20d3:	01 05 1d 66 ba 05    	add    %eax,0x5ba661d
    20d9:	1c 06                	sbb    $0x6,%al
    20db:	03 ce                	add    %esi,%ecx
    20dd:	01 01                	add    %eax,(%ecx)
    20df:	05 01 06 03 18       	add    $0x18030601,%eax
    20e4:	ac                   	lods   %ds:(%esi),%al
    20e5:	05 21 00 02 04       	add    $0x4020021,%eax
    20ea:	01 03                	add    %eax,(%ebx)
    20ec:	62 3c 05 01 03 1e 2e 	bound  %edi,0x2e1e0301(,%eax,1)
    20f3:	05 19 06 03 74       	add    $0x74030619,%eax
    20f8:	82 05 1e 06 13 05 2a 	addb   $0x2a,0x513061e
    20ff:	65 05 19 06 3d 05    	gs add $0x53d0619,%eax
    2105:	1e                   	push   %ds
    2106:	06                   	push   %es
    2107:	01 05 1c 00 02 04    	add    %eax,0x402001c
    210d:	01 d6                	add    %edx,%esi
    210f:	05 01 03 0b 82       	add    $0x820b0301,%eax
    2114:	05 1c 00 02 04       	add    $0x402001c,%eax
    2119:	01 03                	add    %eax,(%ebx)
    211b:	75 4a                	jne    2167 <MBOOT_HEADER_FLAGS+0x2164>
    211d:	05 01 03 0b 3c       	add    $0x3c0b0301,%eax
    2122:	20 2e                	and    %ch,(%esi)
    2124:	05 1c 06 03 68       	add    $0x6803061c,%eax
    2129:	20 05 10 06 03 af    	and    %al,0xaf030610
    212f:	7e 01                	jle    2132 <MBOOT_HEADER_FLAGS+0x212f>
    2131:	05 2f 06 03 eb       	add    $0xeb03062f,%eax
    2136:	01 d6                	add    %edx,%esi
    2138:	05 05 13 05 08       	add    $0x8051305,%eax
    213d:	06                   	push   %es
    213e:	01 05 05 06 ca 05    	add    %eax,0x5ca0605
    2144:	0e                   	push   %cs
    2145:	06                   	push   %es
    2146:	01 05 05 06 59 13    	add    %eax,0x13590605
    214c:	14 05                	adc    $0x5,%al
    214e:	1c 01                	sbb    $0x1,%al
    2150:	05 2f 06 03 79       	add    $0x7903062f,%eax
    2155:	ac                   	lods   %ds:(%esi),%al
    2156:	05 09 06 c2 05       	add    $0x5c20609,%eax
    215b:	11 03                	adc    %eax,(%ebx)
    215d:	83 7e 01 05          	cmpl   $0x5,0x1(%esi)
    2161:	05 13 05 2f 06       	add    $0x62f0513,%eax
    2166:	01 05 2a 66 05 2f    	add    %eax,0x2f05662a
    216c:	3c 05                	cmp    $0x5,%al
    216e:	1e                   	push   %ds
    216f:	3c 66                	cmp    $0x66,%al
    2171:	05 09 06 03 fe       	add    $0xfe030609,%eax
    2176:	01 01                	add    %eax,(%ecx)
    2178:	05 0e 01 05 20       	add    $0x2005010e,%eax
    217d:	00 02                	add    %al,(%edx)
    217f:	04 01                	add    $0x1,%al
    2181:	01 05 17 06 9e 05    	add    %eax,0x59e0617
    2187:	0d 06 d7 05 12       	or     $0x1205d706,%eax
    218c:	06                   	push   %es
    218d:	01 05 10 00 02 04    	add    %eax,0x4020010
    2193:	01 08                	add    %ecx,(%eax)
    2195:	74 05                	je     219c <MBOOT_HEADER_FLAGS+0x2199>
    2197:	11 06                	adc    %eax,(%esi)
    2199:	08 50 05             	or     %dl,0x5(%eax)
    219c:	22 06                	and    (%esi),%al
    219e:	01 05 14 3c 05 2b    	add    %eax,0x2b053c14
    21a4:	00 02                	add    %al,(%edx)
    21a6:	04 02                	add    $0x2,%al
    21a8:	06                   	push   %es
    21a9:	81 05 24 00 02 04 01 	addl   $0x38050101,0x4020024
    21b0:	01 05 38 
    21b3:	00 02                	add    %al,(%edx)
    21b5:	04 02                	add    $0x2,%al
    21b7:	03 7a 9e             	add    -0x62(%edx),%edi
    21ba:	05 20 00 02 04       	add    $0x4020020,%eax
    21bf:	01 3c 00             	add    %edi,(%eax,%eax,1)
    21c2:	02 04 01             	add    (%ecx,%eax,1),%al
    21c5:	06                   	push   %es
    21c6:	d6                   	(bad)
    21c7:	05 09 06 03 14       	add    $0x14030609,%eax
    21cc:	01 05 0a 03 f1 7d    	add    %eax,0x7df1030a
    21d2:	01 05 05 13 05 35    	add    %eax,0x35051305
    21d8:	06                   	push   %es
    21d9:	01 05 05 06 75 13    	add    %eax,0x13750605
    21df:	14 05                	adc    $0x5,%al
    21e1:	0a 06                	or     (%esi),%al
    21e3:	01 66 05             	add    %esp,0x5(%esi)
    21e6:	3a 1c 05 0a 32 05 3a 	cmp    0x3a05320a(,%eax,1),%bl
    21ed:	2a 05 0e 3c 05 0a    	sub    0xa053c0e,%al
    21f3:	6a 05                	push   $0x5
    21f5:	08 00                	or     %al,(%eax)
    21f7:	02 04 01             	add    (%ecx,%eax,1),%al
    21fa:	66 05 05 06          	add    $0x605,%ax
    21fe:	78 05                	js     2205 <MBOOT_HEADER_FLAGS+0x2202>
    2200:	19 06                	sbb    %eax,(%esi)
    2202:	01 05 1d 66 ba 05    	add    %eax,0x5ba661d
    2208:	1c 06                	sbb    $0x6,%al
    220a:	03 ef                	add    %edi,%ebp
    220c:	01 01                	add    %eax,(%ecx)
    220e:	05 01 06 03 1a       	add    $0x1a030601,%eax
    2213:	ac                   	lods   %ds:(%esi),%al
    2214:	05 21 00 02 04       	add    $0x4020021,%eax
    2219:	01 03                	add    %eax,(%ebx)
    221b:	60                   	pusha
    221c:	3c 05                	cmp    $0x5,%al
    221e:	01 03                	add    %eax,(%ebx)
    2220:	20 2e                	and    %ch,(%esi)
    2222:	05 15 03 71 82       	add    $0x82710315,%eax
    2227:	06                   	push   %es
    2228:	4a                   	dec    %edx
    2229:	83 ad 05 29 06 01 05 	subl   $0x5,0x1062905(%ebp)
    2230:	15 06 4b 05 28       	adc    $0x28054b06,%eax
    2235:	06                   	push   %es
    2236:	01 05 15 06 76 05    	add    %eax,0x5760615
    223c:	1a 06                	sbb    (%esi),%al
    223e:	01 05 18 00 02 04    	add    %eax,0x4020018
    2244:	01 90 05 01 03 0a    	add    %edx,0xa030105(%eax)
    224a:	82 05 18 00 02 04 01 	addb   $0x1,0x4020018
    2251:	03 76 4a             	add    0x4a(%esi),%esi
    2254:	05 01 03 0a 3c       	add    $0x3c0a0301,%eax
    2259:	3c 05                	cmp    $0x5,%al
    225b:	21 00                	and    %eax,(%eax)
    225d:	02 04 01             	add    (%ecx,%eax,1),%al
    2260:	03 60 ac             	add    -0x54(%eax),%esp
    2263:	05 01 03 20 2e       	add    $0x2e200301,%eax
    2268:	05 1c 06 03 66       	add    $0x6603061c,%eax
    226d:	20 05 10 06 03 8e    	and    %al,0x8e030610
    2273:	7e 01                	jle    2276 <MBOOT_HEADER_FLAGS+0x2273>
    2275:	05 3e 06 03 a7       	add    $0xa703063e,%eax
    227a:	02 c8                	add    %al,%cl
    227c:	05 05 13 05 3e       	add    $0x3e051305,%eax
    2281:	06                   	push   %es
    2282:	11 05 0a 5d 05 3e    	adc    %eax,0x3e055d0a
    2288:	61                   	popa
    2289:	05 35 75 05 3a       	add    $0x3a057535,%eax
    228e:	9e                   	sahf
    228f:	05 0e 58 05 05       	add    $0x505580e,%eax
    2294:	06                   	push   %es
    2295:	67 13 14             	adc    (%si),%edx
    2298:	05 0a 06 01 05       	add    $0x501060a,%eax
    229d:	08 00                	or     %al,(%eax)
    229f:	02 04 01             	add    (%ecx,%eax,1),%al
    22a2:	90                   	nop
    22a3:	05 05 06 78 05       	add    $0x5780605,%eax
    22a8:	16                   	push   %ss
    22a9:	06                   	push   %es
    22aa:	01 05 12 3c 05 16    	add    %eax,0x16053c12
    22b0:	66 05 05 06          	add    $0x605,%ax
    22b4:	77 05                	ja     22bb <MBOOT_HEADER_FLAGS+0x22b8>
    22b6:	0a 01                	or     (%ecx),%al
    22b8:	05 20 00 02 04       	add    $0x4020020,%eax
    22bd:	01 01                	add    %eax,(%ecx)
    22bf:	05 13 06 01 05       	add    $0x5010613,%eax
    22c4:	20 00                	and    %al,(%eax)
    22c6:	02 04 01             	add    (%ecx,%eax,1),%al
    22c9:	2e 05 3b 00 02 04    	cs add $0x402003b,%eax
    22cf:	02 06                	add    (%esi),%al
    22d1:	e4 05                	in     $0x5,%al
    22d3:	2d 00 02 04 01       	sub    $0x1040200,%eax
    22d8:	06                   	push   %es
    22d9:	01 05 3b 00 02 04    	add    %eax,0x402003b
    22df:	02 74 05 20          	add    0x20(%ebp,%eax,1),%dh
    22e3:	00 02                	add    %al,(%edx)
    22e5:	04 01                	add    $0x1,%al
    22e7:	06                   	push   %es
    22e8:	3c 05                	cmp    $0x5,%al
    22ea:	09 4b 13             	or     %ecx,0x13(%ebx)
    22ed:	05 0e 06 01 05       	add    $0x501060e,%eax
    22f2:	39 3b                	cmp    %edi,(%ebx)
    22f4:	05 12 82 05 0e       	add    $0xe058212,%eax
    22f9:	2f                   	das
    22fa:	05 0c 00 02 04       	add    $0x402000c,%eax
    22ff:	01 66 00             	add    %esp,0x0(%esi)
    2302:	02 04 01             	add    (%ecx,%eax,1),%al
    2305:	74 05                	je     230c <MBOOT_HEADER_FLAGS+0x2309>
    2307:	01 18                	add    %ebx,(%eax)
    2309:	05 10 03 72 3c       	add    $0x3c720310,%eax
    230e:	05 01 03 0e 2e       	add    $0x2e0e0301,%eax
    2313:	20 3c 74             	and    %bh,(%esp,%esi,2)
    2316:	05 0c 3b 05 01       	add    $0x1053b0c,%eax
    231b:	59                   	pop    %ecx
    231c:	20 3c 05 27 06 03 53 	and    %bh,0x53030627(,%eax,1)
    2323:	4a                   	dec    %edx
    2324:	05 05 13 15 05       	add    $0x5151305,%eax
    2329:	0a 01                	or     (%ecx),%al
    232b:	05 2e 00 02 04       	add    $0x402002e,%eax
    2330:	01 01                	add    %eax,(%ecx)
    2332:	05 27 06 0e 05       	add    $0x50e0627,%eax
    2337:	2e 00 02             	add    %al,%cs:(%edx)
    233a:	04 01                	add    $0x1,%al
    233c:	be 05 13 c8 05       	mov    $0x5c81305,%esi
    2341:	09 06                	or     %eax,(%esi)
    2343:	2f                   	das
    2344:	05 0e 06 01 05       	add    $0x501060e,%eax
    2349:	0c 00                	or     $0x0,%al
    234b:	02 04 01             	add    (%ecx,%eax,1),%al
    234e:	08 58 05             	or     %bl,0x5(%eax)
    2351:	28 00                	sub    %al,(%eax)
    2353:	02 04 02             	add    (%edx,%eax,1),%al
    2356:	06                   	push   %es
    2357:	08 da                	or     %bl,%dl
    2359:	05 20 00 02 04       	add    $0x4020020,%eax
    235e:	01 01                	add    %eax,(%ecx)
    2360:	05 0d c9 05 10       	add    $0x1005c90d,%eax
    2365:	06                   	push   %es
    2366:	01 05 11 06 68 13    	add    %eax,0x13680611
    236c:	05 14 06 01 05       	add    $0x5010614,%eax
    2371:	15 06 5a 05 19       	adc    $0x19055a06,%eax
    2376:	06                   	push   %es
    2377:	01 05 18 00 02 04    	add    %eax,0x4020018
    237d:	01 ac 05 01 6e 74 20 	add    %ebp,0x20746e01(%ebp,%eax,1)
    2384:	05 53 00 02 04       	add    $0x4020053,%eax
    2389:	02 06                	add    (%esi),%al
    238b:	03 6d 74             	add    0x74(%ebp),%ebp
    238e:	05 2e 00 02 04       	add    $0x402002e,%eax
    2393:	01 3c 00             	add    %edi,(%eax,%eax,1)
    2396:	02 04 01             	add    (%ecx,%eax,1),%al
    2399:	06                   	push   %es
    239a:	ba 05 01 03 13       	mov    $0x13030105,%edx
    239f:	01 05 14 03 6f 3c    	add    %eax,0x3c6f0314
    23a5:	05 01 03 11 2e       	add    $0x2e110301,%eax
    23aa:	05 4a 06 03 18       	add    $0x1803064a,%eax
    23af:	08 3c 05 05 13 05 19 	or     %bh,0x19051305(,%eax,1)
    23b6:	00 02                	add    %al,(%edx)
    23b8:	04 02                	add    $0x2,%al
    23ba:	06                   	push   %es
    23bb:	01 05 4a c7 05 19    	add    %eax,0x1905c74a
    23c1:	00 02                	add    %al,(%edx)
    23c3:	04 02                	add    $0x2,%al
    23c5:	bb 05 05 06 af       	mov    $0xaf060505,%ebx
    23ca:	05 0e 06 01 05       	add    $0x501060e,%eax
    23cf:	05 06 59 13 13       	add    $0x13135906,%eax
    23d4:	13 13                	adc    (%ebx),%edx
    23d6:	15 05 29 01 05       	adc    $0x5012905,%eax
    23db:	09 ad 05 11 03 ac    	or     %ebp,-0x53fceefb(%ebp)
    23e1:	7d 01                	jge    23e4 <MBOOT_HEADER_FLAGS+0x23e1>
    23e3:	05 05 13 05 2f       	add    $0x2f051305,%eax
    23e8:	06                   	push   %es
    23e9:	01 05 2a 66 05 2f    	add    %eax,0x2f05662a
    23ef:	3c 05                	cmp    $0x5,%al
    23f1:	1e                   	push   %ds
    23f2:	3c 66                	cmp    $0x66,%al
    23f4:	05 09 06 03 d5       	add    $0xd5030609,%eax
    23f9:	02 01                	add    (%ecx),%al
    23fb:	05 0e 01 05 36       	add    $0x3605010e,%eax
    2400:	00 02                	add    %al,(%edx)
    2402:	04 01                	add    $0x1,%al
    2404:	01 05 0d 08 91 05    	add    %eax,0x591080d
    240a:	12 06                	adc    (%esi),%al
    240c:	01 05 10 00 02 04    	add    %eax,0x4020010
    2412:	01 08                	add    %ecx,(%eax)
    2414:	74 05                	je     241b <MBOOT_HEADER_FLAGS+0x2418>
    2416:	11 06                	adc    %eax,(%esi)
    2418:	08 7a 05             	or     %bh,0x5(%edx)
    241b:	22 06                	and    (%esi),%al
    241d:	01 05 14 3c 05 2b    	add    %eax,0x2b053c14
    2423:	00 02                	add    %al,(%edx)
    2425:	04 02                	add    $0x2,%al
    2427:	06                   	push   %es
    2428:	81 05 24 00 02 04 01 	addl   $0x2000101,0x4020024
    242f:	01 00 02 
    2432:	04 01                	add    $0x1,%al
    2434:	06                   	push   %es
    2435:	9e                   	sahf
    2436:	05 47 00 02 04       	add    $0x4020047,%eax
    243b:	02 06                	add    (%esi),%al
    243d:	03 7a 01             	add    0x1(%edx),%edi
    2440:	00 02                	add    %al,(%edx)
    2442:	04 02                	add    $0x2,%al
    2444:	06                   	push   %es
    2445:	01 05 36 00 02 04    	add    %eax,0x4020036
    244b:	01 06                	add    %eax,(%esi)
    244d:	3c 00                	cmp    $0x0,%al
    244f:	02 04 01             	add    (%ecx,%eax,1),%al
    2452:	06                   	push   %es
    2453:	d6                   	(bad)
    2454:	05 0d 06 03 11       	add    $0x1103060d,%eax
    2459:	01 05 0a 03 9d 7d    	add    %eax,0x7d9d030a
    245f:	01 05 05 13 05 35    	add    %eax,0x35051305
    2465:	06                   	push   %es
    2466:	01 05 05 06 75 13    	add    %eax,0x13750605
    246c:	14 05                	adc    $0x5,%al
    246e:	0a 06                	or     (%esi),%al
    2470:	01 05 3a 70 05 0a    	add    %eax,0xa05703a
    2476:	32 05 3a 2a 05 0e    	xor    0xe052a3a,%al
    247c:	3c 05                	cmp    $0x5,%al
    247e:	0a 6a 05             	or     0x5(%edx),%ch
    2481:	08 00                	or     %al,(%eax)
    2483:	02 04 01             	add    (%ecx,%eax,1),%al
    2486:	66 05 05 06          	add    $0x605,%ax
    248a:	b0 05                	mov    $0x5,%al
    248c:	19 06                	sbb    %eax,(%esi)
    248e:	01 05 1d 74 74 58    	add    %eax,0x5874741d
    2494:	05 29 06 03 c6       	add    $0xc6030629,%eax
    2499:	02 01                	add    (%ecx),%al
    249b:	05 01 06 03 cc       	add    $0xcc030601,%eax
    24a0:	00 ac 05 2a 00 02 04 	add    %ch,0x402002a(%ebp,%eax,1)
    24a7:	03 03                	add    (%ebx),%eax
    24a9:	a9 7f 3c 05 01       	test   $0x1053c7f,%eax
    24ae:	03 d7                	add    %edi,%edx
    24b0:	00 2e                	add    %ch,(%esi)
    24b2:	4a                   	dec    %edx
    24b3:	05 1e 03 4f 74       	add    $0x744f031e,%eax
    24b8:	05 47 00 02 04       	add    $0x4020047,%eax
    24bd:	02 06                	add    (%esi),%al
    24bf:	03 68 74             	add    0x74(%eax),%ebp
    24c2:	05 36 00 02 04       	add    $0x4020036,%eax
    24c7:	01 01                	add    %eax,(%ecx)
    24c9:	00 02                	add    %al,(%edx)
    24cb:	04 01                	add    $0x1,%al
    24cd:	06                   	push   %es
    24ce:	01 05 29 06 0f 05    	add    %eax,0x50f0629
    24d4:	05 03 18 01 15       	add    $0x15011803,%eax
    24d9:	05 1e 06 01 05       	add    $0x501061e,%eax
    24de:	05 06 2f 05 08       	add    $0x8052f06,%eax
    24e3:	06                   	push   %es
    24e4:	01 4a 05             	add    %ecx,0x5(%edx)
    24e7:	05 06 69 9f ad       	add    $0xad9f6906,%eax
    24ec:	05 3a 06 13 05       	add    $0x513063a,%eax
    24f1:	17                   	pop    %ss
    24f2:	65 05 05 06 4b 05    	gs add $0x54b0605,%eax
    24f8:	3a 06                	cmp    (%esi),%al
    24fa:	01 05 20 2f 05 3a    	add    %eax,0x3a052f20
    2500:	49                   	dec    %ecx
    2501:	05 21 3c 05 05       	add    $0x5053c21,%eax
    2506:	06                   	push   %es
    2507:	4b                   	dec    %ebx
    2508:	13 05 16 06 01 05    	adc    0x5010616,%eax
    250e:	05 06 69 05 0a       	add    $0xa056906,%eax
    2513:	06                   	push   %es
    2514:	01 05 08 00 02 04    	add    %eax,0x4020008
    251a:	01 e4                	add    %esp,%esp
    251c:	05 1a 06 7c 05       	add    $0x57c061a,%eax
    2521:	0e                   	push   %cs
    2522:	06                   	push   %es
    2523:	39 05 1a 31 d6 82    	cmp    %eax,0x82d6311a
    2529:	05 09 06 2f 05       	add    $0x52f0609,%eax
    252e:	11 03                	adc    %eax,(%ebx)
    2530:	fd                   	std
    2531:	7c 01                	jl     2534 <MBOOT_HEADER_FLAGS+0x2531>
    2533:	05 05 13 05 35       	add    $0x35051305,%eax
    2538:	06                   	push   %es
    2539:	03 84 03 01 05 2f 03 	add    0x32f0501(%ebx,%eax,1),%eax
    2540:	fc                   	cld
    2541:	7c 66                	jl     25a9 <MBOOT_HEADER_FLAGS+0x25a6>
    2543:	66 05 09 06          	add    $0x609,%ax
    2547:	03 83 03 01 13 14    	add    0x14130103(%ebx),%eax
    254d:	05 0e 06 17 05       	add    $0x517060e,%eax
    2552:	35 03 79 3c 05       	xor    $0x53c7903,%eax
    2557:	12 2e                	adc    (%esi),%ch
    2559:	05 0c 3e 05 09       	add    $0x9053e0c,%eax
    255e:	06                   	push   %es
    255f:	5d                   	pop    %ebp
    2560:	05 0e 06 01 05       	add    $0x501060e,%eax
    2565:	2a 03                	sub    (%ebx),%al
    2567:	f5                   	cmc
    2568:	7c 74                	jl     25de <MBOOT_HEADER_FLAGS+0x25db>
    256a:	05 2f 3c 05 1e       	add    $0x1e053c2f,%eax
    256f:	3c 05                	cmp    $0x5,%al
    2571:	0e                   	push   %cs
    2572:	03 8b 03 66 05 0c    	add    0xc056603(%ebx),%ecx
    2578:	00 02                	add    %al,(%edx)
    257a:	04 01                	add    $0x1,%al
    257c:	66 05 09 06          	add    $0x609,%ax
    2580:	b0 05                	mov    $0x5,%al
    2582:	2b 06                	sub    (%esi),%eax
    2584:	01 05 17 3c 05 09    	add    %eax,0x9053c17
    258a:	06                   	push   %es
    258b:	31 05 0c 06 01 58    	xor    %eax,0x5801060c
    2591:	05 01 03 0c 01       	add    $0x10c0301,%eax
    2596:	05 0c 3b 05 01       	add    $0x1053b0c,%eax
    259b:	59                   	pop    %ecx
    259c:	4a                   	dec    %edx
    259d:	05 2a 00 02 04       	add    $0x402002a,%eax
    25a2:	03 03                	add    (%ebx),%eax
    25a4:	a9 7f 20 05 01       	test   $0x105207f,%eax
    25a9:	03 d7                	add    %edi,%edx
    25ab:	00 2e                	add    %ch,(%esi)
    25ad:	05 29 06 03 b4       	add    $0xb4030629,%eax
    25b2:	7f 20                	jg     25d4 <MBOOT_HEADER_FLAGS+0x25d1>
    25b4:	05 10 06 03 b7       	add    $0xb7030610,%eax
    25b9:	7d 01                	jge    25bc <MBOOT_HEADER_FLAGS+0x25b9>
    25bb:	9e                   	sahf
    25bc:	05 0d 06 03 8a       	add    $0x8a03060d,%eax
    25c1:	03 01                	add    (%ecx),%eax
    25c3:	05 25 06 01 05       	add    $0x5010625,%eax
    25c8:	0d 06 75 05 10       	or     $0x10057506,%eax
    25cd:	06                   	push   %es
    25ce:	01 05 0d 06 84 05    	add    %eax,0x584060d
    25d4:	12 06                	adc    (%esi),%al
    25d6:	01 05 10 00 02 04    	add    %eax,0x4020010
    25dc:	01 74 00 02          	add    %esi,0x2(%eax,%eax,1)
    25e0:	04 01                	add    $0x1,%al
    25e2:	ba 05 46 06 03       	mov    $0x3064605,%edx
    25e7:	0a 58 05             	or     0x5(%eax),%bl
    25ea:	05 13 05 46 06       	add    $0x6460513,%eax
    25ef:	11 05 08 bb 05 46    	adc    %eax,0x4605bb08
    25f5:	57                   	push   %edi
    25f6:	05 08 3d 05 24       	add    $0x24053d08,%eax
    25fb:	00 02                	add    %al,(%edx)
    25fd:	04 01                	add    $0x1,%al
    25ff:	82 05 05 06 08 33 05 	addb   $0x5,0x33080605
    2606:	0e                   	push   %cs
    2607:	06                   	push   %es
    2608:	01 05 05 06 67 13    	add    %eax,0x13670605
    260e:	13 15 05 29 01 05    	adc    0x5012905,%edx
    2614:	09 bb 05 11 03 d2    	or     %edi,-0x2dfceefb(%ebx)
    261a:	7c 01                	jl     261d <MBOOT_HEADER_FLAGS+0x261a>
    261c:	05 05 13 05 2f       	add    $0x2f051305,%eax
    2621:	06                   	push   %es
    2622:	01 05 2a 58 05 17    	add    %eax,0x1705582a
    2628:	03 af 03 3c 05 2f    	add    0x2f053c03(%edi),%ebp
    262e:	03 d1                	add    %ecx,%edx
    2630:	7c 2e                	jl     2660 <MBOOT_HEADER_FLAGS+0x265d>
    2632:	05 1e 3c ba 05       	add    $0x5ba3c1e,%eax
    2637:	09 06                	or     %eax,(%esi)
    2639:	03 af 03 01 05 0e    	add    0xe050103(%edi),%ebp
    263f:	01 05 36 00 02 04    	add    %eax,0x4020036
    2645:	01 01                	add    %eax,(%ecx)
    2647:	05 0d 08 59 05       	add    $0x559080d,%eax
    264c:	12 06                	adc    (%esi),%al
    264e:	01 05 10 00 02 04    	add    %eax,0x4020010
    2654:	01 08                	add    %ecx,(%eax)
    2656:	66 05 11 06          	add    $0x611,%ax
    265a:	08 89 05 22 06 01    	or     %cl,0x1062205(%ecx)
    2660:	05 14 3c 05 21       	add    $0x21053c14,%eax
    2665:	00 02                	add    %al,(%edx)
    2667:	04 01                	add    $0x1,%al
    2669:	03 ac 7b 08 ba 05 27 	add    0x2705ba08(%ebx,%edi,2),%ebp
    2670:	00 02                	add    %al,(%edx)
    2672:	04 02                	add    $0x2,%al
    2674:	4a                   	dec    %edx
    2675:	05 09 06 f3 05       	add    $0x5f30609,%eax
    267a:	16                   	push   %ss
    267b:	06                   	push   %es
    267c:	13 05 20 3b 05 09    	adc    0x9053b20,%eax
    2682:	06                   	push   %es
    2683:	3d 05 19 06 13       	cmp    $0x13061905,%eax
    2688:	05 09 06 92 05       	add    $0x5920609,%eax
    268d:	1b 06                	sbb    (%esi),%eax
    268f:	01 74 05 27          	add    %esi,0x27(%ebp,%eax,1)
    2693:	06                   	push   %es
    2694:	0d 05 13 06 03       	or     $0x3061305,%eax
    2699:	0e                   	push   %cs
    269a:	58                   	pop    %eax
    269b:	05 10 06 45 05       	add    $0x5450610,%eax
    26a0:	05 6b 05 0c 06       	add    $0x60c056b,%eax
    26a5:	13 05 15 06 f6 05    	adc    0x5f60615,%eax
    26ab:	22 00                	and    (%eax),%al
    26ad:	02 04 01             	add    (%ecx,%eax,1),%al
    26b0:	06                   	push   %es
    26b1:	9e                   	sahf
    26b2:	05 15 00 02 04       	add    $0x4020015,%eax
    26b7:	01 58 05             	add    %ebx,0x5(%eax)
    26ba:	09 06                	or     %eax,(%esi)
    26bc:	83 13 05             	adcl   $0x5,(%ebx)
    26bf:	16                   	push   %ss
    26c0:	06                   	push   %es
    26c1:	01 05 19 3d 05 09    	add    %eax,0x9053d19
    26c7:	06                   	push   %es
    26c8:	92                   	xchg   %eax,%edx
    26c9:	05 17 06 01 05       	add    $0x5010617,%eax
    26ce:	1b 3c 74             	sbb    (%esp,%esi,2),%edi
    26d1:	05 15 06 0d 05       	add    $0x50d0615,%eax
    26d6:	17                   	pop    %ss
    26d7:	00 02                	add    %al,(%edx)
    26d9:	04 01                	add    $0x1,%al
    26db:	03 1b                	add    (%ebx),%ebx
    26dd:	c8 05 0e 06          	enter  $0xe05,$0x6
    26e1:	3c 2e                	cmp    $0x2e,%al
    26e3:	05 09 06 83 05       	add    $0x5830609,%eax
    26e8:	0c 06                	or     $0x6,%al
    26ea:	01 05 1e 00 02 04    	add    %eax,0x402001e
    26f0:	02 06                	add    (%esi),%al
    26f2:	c7 05 17 00 02 04 01 	movl   $0x2003c01,0x4020017
    26f9:	3c 00 02 
    26fc:	04 01                	add    $0x1,%al
    26fe:	06                   	push   %es
    26ff:	ac                   	lods   %ds:(%esi),%al
    2700:	05 42 00 02 04       	add    $0x4020042,%eax
    2705:	02 06                	add    (%esi),%al
    2707:	03 9e 04 01 05 36    	add    0x36050104(%esi),%ebx
    270d:	00 02                	add    %al,(%edx)
    270f:	04 01                	add    $0x1,%al
    2711:	01 00                	add    %eax,(%eax)
    2713:	02 04 01             	add    (%ecx,%eax,1),%al
    2716:	06                   	push   %es
    2717:	01 05 29 06 0f 05    	add    %eax,0x50f0629
    271d:	05 03 19 01 18       	add    $0x18011903,%eax
    2722:	06                   	push   %es
    2723:	3e 64 06             	ds fs push %es
    2726:	9f                   	lahf
    2727:	13 91 67 a0 9f 05    	adc    0x59fa067(%ecx),%edx
    272d:	1f                   	pop    %ds
    272e:	06                   	push   %es
    272f:	01 05 51 4a 05 0e    	add    %eax,0xe054a51
    2735:	4a                   	dec    %edx
    2736:	05 43 82 05 0e       	add    $0xe058243,%eax
    273b:	3c 05                	cmp    $0x5,%al
    273d:	05 06 2f 05 0a       	add    $0xa052f06,%eax
    2742:	01 05 17 00 02 04    	add    %eax,0x4020017
    2748:	01 01                	add    %eax,(%ecx)
    274a:	05 09 13 13 05       	add    $0x5131309,%eax
    274f:	36 06                	ss push %es
    2751:	11 05 42 f2 05 0e    	adc    %eax,0xe05f242
    2757:	3d 05 09 06 75       	cmp    $0x75060905,%eax
    275c:	05 0e 06 11 05       	add    $0x511060e,%eax
    2761:	09 c9                	or     %ecx,%ecx
    2763:	ac                   	lods   %ds:(%esi),%al
    2764:	05 1e 00 02 04       	add    $0x402001e,%eax
    2769:	03 06                	add    (%esi),%eax
    276b:	0f 05                	syscall
    276d:	17                   	pop    %ss
    276e:	00 02                	add    %al,(%edx)
    2770:	04 01                	add    $0x1,%al
    2772:	01 05 05 06 08 4f    	add    %eax,0x4f080605
    2778:	06                   	push   %es
    2779:	66 a1 05 16 06 01    	mov    0x1061605,%ax
    277f:	05 08 3c 05 05       	add    $0x5053c08,%eax
    2784:	06                   	push   %es
    2785:	eb 05                	jmp    278c <MBOOT_HEADER_FLAGS+0x2789>
    2787:	2a 06                	sub    (%esi),%al
    2789:	16                   	push   %ss
    278a:	05 0b 2a 05 05       	add    $0x5052a0b,%eax
    278f:	06                   	push   %es
    2790:	2f                   	das
    2791:	13 14 05 2a 01 05 0e 	adc    0xe05012a(,%eax,1),%edx
    2798:	06                   	push   %es
    2799:	0f 05                	syscall
    279b:	2a a1 00 02 04 01    	sub    0x1040200(%ecx),%ah
    27a1:	3c 00                	cmp    $0x0,%al
    27a3:	02 04 01             	add    (%ecx,%eax,1),%al
    27a6:	08 12                	or     %dl,(%edx)
    27a8:	05 0e 63 05 09       	add    $0x905630e,%eax
    27ad:	06                   	push   %es
    27ae:	6a 05                	push   $0x5
    27b0:	11 03                	adc    %eax,(%ebx)
    27b2:	98                   	cwtl
    27b3:	7c 01                	jl     27b6 <MBOOT_HEADER_FLAGS+0x27b3>
    27b5:	05 05 13 05 2a       	add    $0x2a051305,%eax
    27ba:	06                   	push   %es
    27bb:	01 05 09 03 e8 03    	add    %eax,0x3e80309
    27c1:	90                   	nop
    27c2:	05 2f 03 98 7c       	add    $0x7c98032f,%eax
    27c7:	58                   	pop    %eax
    27c8:	05 1e 74 66 05       	add    $0x566741e,%eax
    27cd:	09 06                	or     %eax,(%esi)
    27cf:	03 e8                	add    %eax,%ebp
    27d1:	03 01                	add    (%ecx),%eax
    27d3:	9f                   	lahf
    27d4:	05 0e 01 05 1b       	add    $0x1b05010e,%eax
    27d9:	00 02                	add    %al,(%edx)
    27db:	04 01                	add    $0x1,%al
    27dd:	01 05 09 06 11 05    	add    %eax,0x5110609
    27e3:	0d 06 22 13 05       	or     $0x5132206,%eax
    27e8:	38 06                	cmp    %al,(%esi)
    27ea:	11 05 12 4b 05 0d    	adc    %eax,0xd054b12
    27f0:	06                   	push   %es
    27f1:	75 05                	jne    27f8 <MBOOT_HEADER_FLAGS+0x27f5>
    27f3:	1b 00                	sbb    (%eax),%eax
    27f5:	02 04 01             	add    (%ecx,%eax,1),%al
    27f8:	06                   	push   %es
    27f9:	0f 05                	syscall
    27fb:	38 3d 05 44 2e 05    	cmp    %bh,0x52e4405
    2801:	12 3d 05 0d c9 ac    	adc    0xacc90d05,%bh
    2807:	05 22 00 02 04       	add    $0x4020022,%eax
    280c:	03 06                	add    (%esi),%eax
    280e:	0f 05                	syscall
    2810:	1b 00                	sbb    (%eax),%eax
    2812:	02 04 01             	add    (%ecx,%eax,1),%al
    2815:	01 05 09 06 6b 06    	add    %eax,0x66b0609
    281b:	ba a1 13 13 05       	mov    $0x51313a1,%edx
    2820:	33 06                	xor    (%esi),%eax
    2822:	11 05 0c bb 05 33    	adc    %eax,0x3305bb0c
    2828:	65 90                	gs nop
    282a:	05 09 79 05 0c       	add    $0xc057909,%eax
    282f:	54                   	push   %esp
    2830:	05 12 2d 05 0c       	add    $0xc052d12,%eax
    2835:	3d 05 09 06 5c       	cmp    $0x5c060905,%eax
    283a:	59                   	pop    %ecx
    283b:	75 67                	jne    28a4 <MBOOT_HEADER_FLAGS+0x28a1>
    283d:	a1 05 0e 06 01       	mov    0x1060e05,%eax
    2842:	05 0c 00 02 04       	add    $0x402000c,%eax
    2847:	01 08                	add    %ecx,(%eax)
    2849:	58                   	pop    %eax
    284a:	05 09 06 08 17       	add    $0x17080609,%eax
    284f:	13 05 0a 03 80 7c    	adc    0x7c80030a,%eax
    2855:	01 05 05 13 05 27    	add    %eax,0x27051305
    285b:	06                   	push   %es
    285c:	03 fe                	add    %esi,%edi
    285e:	03 01                	add    (%ecx),%eax
    2860:	05 35 03 82 7c       	add    $0x7c820335,%eax
    2865:	2e 05 05 06 75 13    	cs add $0x13750605,%eax
    286b:	14 05                	adc    $0x5,%al
    286d:	27                   	daa
    286e:	06                   	push   %es
    286f:	03 fa                	add    %edx,%edi
    2871:	03 01                	add    (%ecx),%eax
    2873:	05 14 3c 05 3a       	add    $0x3a053c14,%eax
    2878:	03 82 7c 66 05 0a    	add    0xa05667c(%edx),%eax
    287e:	32 05 3a 62 05 0a    	xor    0xa05623a,%al
    2884:	40                   	inc    %eax
    2885:	05 0e 2a 05 0a       	add    $0xa052a0e,%eax
    288a:	6a 05                	push   $0x5
    288c:	08 00                	or     %al,(%eax)
    288e:	02 04 01             	add    (%ecx,%eax,1),%al
    2891:	66 05 05 06          	add    $0x605,%ax
    2895:	b0 05                	mov    $0x5,%al
    2897:	19 06                	sbb    %eax,(%esi)
    2899:	01 05 1d 66 05 2a    	add    %eax,0x2a05661d
    289f:	00 02                	add    %al,(%edx)
    28a1:	04 01                	add    $0x1,%al
    28a3:	03 da                	add    %edx,%ebx
    28a5:	03 c8                	add    %eax,%ecx
    28a7:	06                   	push   %es
    28a8:	90                   	nop
    28a9:	00 02                	add    %al,(%edx)
    28ab:	04 01                	add    $0x1,%al
    28ad:	06                   	push   %es
    28ae:	01 05 05 06 03 20    	add    %eax,0x20030605
    28b4:	08 82 9f bb 67 a0    	or     %al,-0x5f984461(%edx)
    28ba:	05 0c 06 01 05       	add    $0x501060c,%eax
    28bf:	0d 06 03 73 9e       	or     $0x9e730306,%eax
    28c4:	9f                   	lahf
    28c5:	05 14 06 01 20       	add    $0x20010614,%eax
    28ca:	05 10 03 a4 7f       	add    $0x7fa40310,%eax
    28cf:	01 05 01 03 e9 00    	add    %eax,0xe90301
    28d5:	2e 74 05             	je,pn  28dd <MBOOT_HEADER_FLAGS+0x28da>
    28d8:	2b 00                	sub    (%eax),%eax
    28da:	02 04 02             	add    (%edx,%eax,1),%al
    28dd:	06                   	push   %es
    28de:	03 aa 7f 3c 05 24    	add    0x24053c7f(%edx),%ebp
    28e4:	00 02                	add    %al,(%edx)
    28e6:	04 01                	add    $0x1,%al
    28e8:	01 05 42 00 02 04    	add    %eax,0x4020042
    28ee:	02 06                	add    (%esi),%al
    28f0:	03 79 d6             	add    -0x2a(%ecx),%edi
    28f3:	00 02                	add    %al,(%edx)
    28f5:	04 02                	add    $0x2,%al
    28f7:	06                   	push   %es
    28f8:	66 00 02             	data16 add %al,(%edx)
    28fb:	04 02                	add    $0x2,%al
    28fd:	06                   	push   %es
    28fe:	01 05 36 00 02 04    	add    %eax,0x4020036
    2904:	01 06                	add    %eax,(%esi)
    2906:	3c 00                	cmp    $0x0,%al
    2908:	02 04 01             	add    (%ecx,%eax,1),%al
    290b:	06                   	push   %es
    290c:	08 20                	or     %ah,(%eax)
    290e:	05 0d 06 03 12       	add    $0x1203060d,%eax
    2913:	01 05 0a 03 c2 7c    	add    %eax,0x7cc2030a
    2919:	01 05 05 13 05 35    	add    %eax,0x35051305
    291f:	06                   	push   %es
    2920:	01 05 05 06 75 13    	add    %eax,0x13750605
    2926:	14 05                	adc    $0x5,%al
    2928:	0a 06                	or     (%esi),%al
    292a:	01 05 3a 62 05 0a    	add    %eax,0xa05623a
    2930:	32 05 3a 1c 05 0a    	xor    0xa051c3a,%al
    2936:	40                   	inc    %eax
    2937:	05 0e 2a 05 0a       	add    $0xa052a0e,%eax
    293c:	6a 05                	push   $0x5
    293e:	08 00                	or     %al,(%eax)
    2940:	02 04 01             	add    (%ecx,%eax,1),%al
    2943:	66 05 10 3d          	add    $0x3d10,%ax
    2947:	05 08 00 02 04       	add    $0x4020008,%eax
    294c:	01 57 05             	add    %edx,0x5(%edi)
    294f:	05 06 86 05 19       	add    $0x19058606,%eax
    2954:	06                   	push   %es
    2955:	01 05 1d 66 74 58    	add    %eax,0x5874661d
    295b:	2e 05 29 06 03 a0    	cs add $0xa0030629,%eax
    2961:	03 01                	add    (%ecx),%eax
    2963:	05 10 03 c0 7b       	add    $0x7bc00310,%eax
    2968:	08 20                	or     %ah,(%eax)
    296a:	06                   	push   %es
    296b:	01 05 09 06 08 3d    	add    %eax,0x3d080609
    2971:	05 1b 06 01 05       	add    $0x501061b,%eax
    2976:	10 06                	adc    %al,(%esi)
    2978:	3b 06                	cmp    (%esi),%eax
    297a:	3c 82                	cmp    $0x82,%al
    297c:	05 09 06 d7 05       	add    $0x5d70609,%eax
    2981:	1b 06                	sbb    (%esi),%eax
    2983:	01 05 10 06 3b 05    	add    %eax,0x53b0610
    2989:	09 13                	or     %edx,(%ebx)
    298b:	05 10 06 11 05       	add    $0x5110610,%eax
    2990:	1b 3d 05 10 06 49    	sbb    0x49061005,%edi
    2996:	06                   	push   %es
    2997:	d6                   	(bad)
    2998:	06                   	push   %es
    2999:	03 13                	add    (%ebx),%edx
    299b:	82 06 01             	addb   $0x1,(%esi)
    299e:	82 05 09 06 83 05 1b 	addb   $0x1b,0x5830609
    29a5:	06                   	push   %es
    29a6:	01 05 10 06 3b 06    	add    %eax,0x63b0610
    29ac:	3c 90                	cmp    $0x90,%al
    29ae:	03 8a 01 74 9e 05    	add    0x59e7401(%edx),%ecx
    29b4:	09 06                	or     %eax,(%esi)
    29b6:	03 d3                	add    %ebx,%edx
    29b8:	03 01                	add    (%ecx),%eax
    29ba:	9f                   	lahf
    29bb:	05 0f 06 01 05       	add    $0x501060f,%eax
    29c0:	09 06                	or     %eax,(%esi)
    29c2:	59                   	pop    %ecx
    29c3:	05 10 06 01 02       	add    $0x2010610,%eax
    29c8:	06                   	push   %es
    29c9:	00 01                	add    %al,(%ecx)
    29cb:	01 bc 01 00 00 05 00 	add    %edi,0x50000(%ecx,%eax,1)
    29d2:	04 00                	add    $0x0,%al
    29d4:	3c 00                	cmp    $0x0,%al
    29d6:	00 00                	add    %al,(%eax)
    29d8:	01 01                	add    %eax,(%ecx)
    29da:	01 fb                	add    %edi,%ebx
    29dc:	0e                   	push   %cs
    29dd:	0d 00 01 01 01       	or     $0x1010100,%eax
    29e2:	01 00                	add    %eax,(%eax)
    29e4:	00 00                	add    %al,(%eax)
    29e6:	01 00                	add    %eax,(%eax)
    29e8:	00 01                	add    %al,(%ecx)
    29ea:	01 01                	add    %eax,(%ecx)
    29ec:	1f                   	pop    %ds
    29ed:	03 00                	add    (%eax),%eax
    29ef:	00 00                	add    %al,(%eax)
    29f1:	00 cb                	add    %cl,%bl
    29f3:	00 00                	add    %al,(%eax)
    29f5:	00 d3                	add    %dl,%bl
    29f7:	00 00                	add    %al,(%eax)
    29f9:	00 02                	add    %al,(%edx)
    29fb:	01 1f                	add    %ebx,(%edi)
    29fd:	02 0f                	add    (%edi),%cl
    29ff:	04 0c                	add    $0xc,%al
    2a01:	01 00                	add    %eax,(%eax)
    2a03:	00 01                	add    %al,(%ecx)
    2a05:	0c 01                	or     $0x1,%al
    2a07:	00 00                	add    %al,(%eax)
    2a09:	01 e6                	add    %esp,%esi
    2a0b:	00 00                	add    %al,(%eax)
    2a0d:	00 02                	add    %al,(%edx)
    2a0f:	2f                   	das
    2a10:	00 00                	add    %al,(%eax)
    2a12:	00 02                	add    %al,(%edx)
    2a14:	05 1a 00 05 02       	add    $0x205001a,%eax
    2a19:	b0 28                	mov    $0x28,%al
    2a1b:	10 00                	adc    %al,(%eax)
    2a1d:	03 17                	add    (%edi),%edx
    2a1f:	01 05 0c 00 02 04    	add    %eax,0x402000c
    2a25:	01 14 04             	add    %edx,(%esp,%eax,1)
    2a28:	02 05 17 03 6c 01    	add    0x16c0317,%al
    2a2e:	05 05 13 13 2f       	add    $0x2f131305,%eax
    2a33:	06                   	push   %es
    2a34:	01 04 01             	add    %eax,(%ecx,%eax,1)
    2a37:	05 0c 00 02 04       	add    $0x402000c,%eax
    2a3c:	01 03                	add    %eax,(%ebx)
    2a3e:	11 01                	adc    %eax,(%ecx)
    2a40:	05 05 06 4d 05       	add    $0x54d0605,%eax
    2a45:	13 06                	adc    (%esi),%eax
    2a47:	01 05 05 06 9f 05    	add    %eax,0x59f0605
    2a4d:	0f 06                	clts
    2a4f:	01 05 01 9f 05 1a    	add    %eax,0x1a059f01
    2a55:	06                   	push   %es
    2a56:	03 2d 66 06 ac 05    	add    0x5ac0666,%ebp
    2a5c:	10 00                	adc    %al,(%eax)
    2a5e:	02 04 01             	add    (%ecx,%eax,1),%al
    2a61:	06                   	push   %es
    2a62:	08 4e 04             	or     %cl,0x4(%esi)
    2a65:	02 05 17 03 b6 7f    	add    0x7fb60317,%al
    2a6b:	01 05 05 13 13 2f    	add    %eax,0x2f131305
    2a71:	06                   	push   %es
    2a72:	01 04 01             	add    %eax,(%ecx,%eax,1)
    2a75:	05 10 00 02 04       	add    $0x4020010,%eax
    2a7a:	01 03                	add    %eax,(%ebx)
    2a7c:	c7 00 01 05 09 06    	movl   $0x6090501,(%eax)
    2a82:	4d                   	dec    %ebp
    2a83:	04 02                	add    $0x2,%al
    2a85:	05 17 03 b3 7f       	add    $0x7fb30317,%eax
    2a8a:	01 05 05 13 13 2f    	add    %eax,0x2f131305
    2a90:	06                   	push   %es
    2a91:	01 04 01             	add    %eax,(%ecx,%eax,1)
    2a94:	05 09 06 03 cb       	add    $0xcb030609,%eax
    2a99:	00 01                	add    %al,(%ecx)
    2a9b:	05 0d 03 4d 01       	add    $0x14d030d,%eax
    2aa0:	05 05 14 05 08       	add    $0x8051405,%eax
    2aa5:	06                   	push   %es
    2aa6:	01 05 05 06 03 09    	add    %eax,0x9030605
    2aac:	4a                   	dec    %edx
    2aad:	03 0b                	add    (%ebx),%ecx
    2aaf:	08 74 05 08          	or     %dh,0x8(%ebp,%eax,1)
    2ab3:	06                   	push   %es
    2ab4:	01 05 05 06 4e 13    	add    %eax,0x134e0605
    2aba:	05 24 06 13 05       	add    $0x5130624,%eax
    2abf:	08 3b                	or     %bh,(%ebx)
    2ac1:	05 09 06 83 05       	add    $0x5830609,%eax
    2ac6:	0b 06                	or     (%esi),%eax
    2ac8:	01 05 05 06 7a 05    	add    %eax,0x57a0605
    2ace:	08 06                	or     %al,(%esi)
    2ad0:	01 05 1f 00 02 04    	add    %eax,0x402001f
    2ad6:	01 4a 05             	add    %ecx,0x5(%edx)
    2ad9:	0c 06                	or     $0x6,%al
    2adb:	d8 05 26 00 02 04    	fadds  0x4020026
    2ae1:	01 06                	add    %eax,(%esi)
    2ae3:	01 00                	add    %eax,(%eax)
    2ae5:	02 04 01             	add    (%ecx,%eax,1),%al
    2ae8:	d6                   	(bad)
    2ae9:	05 10 06 03 10       	add    $0x10030610,%eax
    2aee:	01 06                	add    %eax,(%esi)
    2af0:	f2 05 05 06 bc 05    	repnz add $0x5bc0605,%eax
    2af6:	01 06                	add    %eax,(%esi)
    2af8:	13 05 09 06 03 4c    	adc    0x4c030609,%eax
    2afe:	9e                   	sahf
    2aff:	05 12 06 01 05       	add    $0x5010612,%eax
    2b04:	09 06                	or     %eax,(%esi)
    2b06:	3d 05 16 06 01       	cmp    $0x1061605,%eax
    2b0b:	05 30 58 05 0c       	add    $0xc055830,%eax
    2b10:	58                   	pop    %eax
    2b11:	05 1b ad 05 05       	add    $0x505ad1b,%eax
    2b16:	88 90 05 0d 06 7a    	mov    %dl,0x7a060d05(%eax)
    2b1c:	05 19 06 01 05       	add    $0x5010619,%eax
    2b21:	0d 06 c9 06 01       	or     $0x106c906,%eax
    2b26:	05 10 06 03 22       	add    $0x22030610,%eax
    2b2b:	01 05 09 03 6a 58    	add    %eax,0x586a0309
    2b31:	05 0b 06 01 74       	add    $0x7401060b,%eax
    2b36:	58                   	pop    %eax
    2b37:	05 09 06 08 79       	add    $0x79080609,%eax
    2b3c:	05 01 06 03 14       	add    $0x14030601,%eax
    2b41:	01 05 18 03 6c 3c    	add    %eax,0x3c6c0318
    2b47:	3c 05                	cmp    $0x5,%al
    2b49:	10 06                	adc    %al,(%esi)
    2b4b:	03 11                	add    (%ecx),%edx
    2b4d:	01 05 01 06 15 58    	add    %eax,0x58150601
    2b53:	05 09 06 03 6e       	add    $0x6e030609,%eax
    2b58:	08 74 05 01          	or     %dh,0x1(%ebp,%eax,1)
    2b5c:	06                   	push   %es
    2b5d:	03 12                	add    (%edx),%edx
    2b5f:	01 05 18 03 6e 3c    	add    %eax,0x3c6e0318
    2b65:	3c 05                	cmp    $0x5,%al
    2b67:	10 06                	adc    %al,(%esi)
    2b69:	03 0f                	add    (%edi),%ecx
    2b6b:	01 05 01 06 15 05    	add    %eax,0x5150601
    2b71:	26 06                	es push %es
    2b73:	08 14 05 05 13 05 01 	or     %dl,0x1051305(,%eax,1)
    2b7a:	06                   	push   %es
    2b7b:	13 05 20 06 f4 05    	adc    0x5f40620,%eax
    2b81:	05 13 05 01 06       	add    $0x6010513,%eax
    2b86:	13 02                	adc    (%edx),%eax
    2b88:	06                   	push   %es
    2b89:	00 01                	add    %al,(%ecx)
    2b8b:	01 48 01             	add    %ecx,0x1(%eax)
    2b8e:	00 00                	add    %al,(%eax)
    2b90:	05 00 04 00 4f       	add    $0x4f000400,%eax
    2b95:	00 00                	add    %al,(%eax)
    2b97:	00 01                	add    %al,(%ecx)
    2b99:	01 01                	add    %eax,(%ecx)
    2b9b:	fb                   	sti
    2b9c:	0e                   	push   %cs
    2b9d:	0d 00 01 01 01       	or     $0x1010100,%eax
    2ba2:	01 00                	add    %eax,(%eax)
    2ba4:	00 00                	add    %al,(%eax)
    2ba6:	01 00                	add    %eax,(%eax)
    2ba8:	00 01                	add    %al,(%ecx)
    2baa:	01 01                	add    %eax,(%ecx)
    2bac:	1f                   	pop    %ds
    2bad:	04 00                	add    $0x0,%al
    2baf:	00 00                	add    %al,(%eax)
    2bb1:	00 cb                	add    %cl,%bl
    2bb3:	00 00                	add    %al,(%eax)
    2bb5:	00 28                	add    %ch,(%eax)
    2bb7:	01 00                	add    %eax,(%eax)
    2bb9:	00 d3                	add    %dl,%bl
    2bbb:	00 00                	add    %al,(%eax)
    2bbd:	00 02                	add    %al,(%edx)
    2bbf:	01 1f                	add    %ebx,(%edi)
    2bc1:	02 0f                	add    (%edi),%cl
    2bc3:	07                   	pop    %es
    2bc4:	1f                   	pop    %ds
    2bc5:	01 00                	add    %eax,(%eax)
    2bc7:	00 01                	add    %al,(%ecx)
    2bc9:	1f                   	pop    %ds
    2bca:	01 00                	add    %eax,(%eax)
    2bcc:	00 01                	add    %al,(%ecx)
    2bce:	2f                   	das
    2bcf:	00 00                	add    %al,(%eax)
    2bd1:	00 02                	add    %al,(%edx)
    2bd3:	ab                   	stos   %eax,%es:(%edi)
    2bd4:	00 00                	add    %al,(%eax)
    2bd6:	00 03                	add    %al,(%ebx)
    2bd8:	77 00                	ja     2bda <MBOOT_HEADER_FLAGS+0x2bd7>
    2bda:	00 00                	add    %al,(%eax)
    2bdc:	03 b4 00 00 00 03 96 	add    -0x69fd0000(%eax,%eax,1),%esi
    2be3:	00 00                	add    %al,(%eax)
    2be5:	00 03                	add    %al,(%ebx)
    2be7:	05 3f 00 05 02       	add    $0x205003f,%eax
    2bec:	30 2a                	xor    %ch,(%edx)
    2bee:	10 00                	adc    %al,(%eax)
    2bf0:	19 05 05 13 05 3f    	sbb    %eax,0x3f051305
    2bf6:	06                   	push   %es
    2bf7:	11 74 05 08          	adc    %esi,0x8(%ebp,%eax,1)
    2bfb:	3d 05 05 06 4d       	cmp    $0x4d060505,%eax
    2c00:	05 12 06 01 05       	add    $0x5010612,%eax
    2c05:	05 06 75 05 17       	add    $0x17057506,%eax
    2c0a:	06                   	push   %es
    2c0b:	01 05 05 06 67 05    	add    %eax,0x5670605
    2c11:	19 06                	sbb    %eax,(%esi)
    2c13:	01 05 05 06 76 a1    	add    %eax,0xa1760605
    2c19:	15 d9 05 0a 06       	adc    $0x60a05d9,%eax
    2c1e:	13 05 0e 3b 05 05    	adc    0x5053b0e,%eax
    2c24:	06                   	push   %es
    2c25:	75 05                	jne    2c2c <MBOOT_HEADER_FLAGS+0x2c29>
    2c27:	0a 06                	or     (%esi),%al
    2c29:	01 05 08 00 02 04    	add    %eax,0x4020008
    2c2f:	01 ac 05 05 06 79 05 	add    %ebp,0x5790605(%ebp,%eax,1)
    2c36:	12 06                	adc    (%esi),%al
    2c38:	01 05 05 06 75 05    	add    %eax,0x5750605
    2c3e:	0c 06                	or     $0x6,%al
    2c40:	01 05 01 59 4a 05    	add    %eax,0x54a5901
    2c46:	09 06                	or     %eax,(%esi)
    2c48:	03 7a 9e             	add    -0x62(%edx),%edi
    2c4b:	9f                   	lahf
    2c4c:	05 10 06 01 05       	add    $0x5010610,%eax
    2c51:	01 25 05 17 00 02    	add    %esp,0x2001705
    2c57:	04 01                	add    $0x1,%al
    2c59:	03 68 3c             	add    0x3c(%eax),%ebp
    2c5c:	05 01 03 18 2e       	add    $0x2e180301,%eax
    2c61:	20 05 44 06 e6 05    	and    %al,0x5e60644
    2c67:	05 13 13 05 44       	add    $0x44051313,%eax
    2c6c:	06                   	push   %es
    2c6d:	10 05 05 4e 05 44    	adc    %al,0x44054e05
    2c73:	54                   	push   %esp
    2c74:	82 05 05 06 6a 05 44 	addb   $0x44,0x56a0605
    2c7b:	06                   	push   %es
    2c7c:	0e                   	push   %cs
    2c7d:	05 05 40 06 9f       	add    $0x9f064005,%eax
    2c82:	05 0a 01 05 17       	add    $0x1705010a,%eax
    2c87:	00 02                	add    %al,(%edx)
    2c89:	04 01                	add    $0x1,%al
    2c8b:	01 05 05 06 11 05    	add    %eax,0x5110605
    2c91:	09 06                	or     %eax,(%esi)
    2c93:	bc 13 05 34 06       	mov    $0x6340513,%esp
    2c98:	11 05 0e 4b 05 09    	adc    %eax,0x9054b0e
    2c9e:	06                   	push   %es
    2c9f:	4b                   	dec    %ebx
    2ca0:	05 17 00 02 04       	add    $0x4020017,%eax
    2ca5:	01 06                	add    %eax,(%esi)
    2ca7:	0f 05                	syscall
    2ca9:	34 3d                	xor    $0x3d,%al
    2cab:	05 40 2e 05 0e       	add    $0xe052e40,%eax
    2cb0:	3d 05 09 9f 66       	cmp    $0x669f0905,%eax
    2cb5:	05 1e 00 02 04       	add    $0x402001e,%eax
    2cba:	03 06                	add    (%esi),%eax
    2cbc:	0f 05                	syscall
    2cbe:	17                   	pop    %ss
    2cbf:	00 02                	add    %al,(%edx)
    2cc1:	04 01                	add    $0x1,%al
    2cc3:	01 05 05 6b a1 03    	add    %eax,0x3a16b05
    2cc9:	09 74 05 01          	or     %esi,0x1(%ebp,%eax,1)
    2ccd:	06                   	push   %es
    2cce:	83 4a 05 05          	orl    $0x5,0x5(%edx)
    2cd2:	3b 02                	cmp    (%edx),%eax
    2cd4:	05 00 01 01 bc       	add    $0xbc010100,%eax
    2cd9:	00 00                	add    %al,(%eax)
    2cdb:	00 05 00 04 00 40    	add    %al,0x40000400
    2ce1:	00 00                	add    %al,(%eax)
    2ce3:	00 01                	add    %al,(%ecx)
    2ce5:	01 01                	add    %eax,(%ecx)
    2ce7:	fb                   	sti
    2ce8:	0e                   	push   %cs
    2ce9:	0d 00 01 01 01       	or     $0x1010100,%eax
    2cee:	01 00                	add    %eax,(%eax)
    2cf0:	00 00                	add    %al,(%eax)
    2cf2:	01 00                	add    %eax,(%eax)
    2cf4:	00 01                	add    %al,(%ecx)
    2cf6:	01 01                	add    %eax,(%ecx)
    2cf8:	1f                   	pop    %ds
    2cf9:	04 00                	add    $0x0,%al
    2cfb:	00 00                	add    %al,(%eax)
    2cfd:	00 cb                	add    %cl,%bl
    2cff:	00 00                	add    %al,(%eax)
    2d01:	00 28                	add    %ch,(%eax)
    2d03:	01 00                	add    %eax,(%eax)
    2d05:	00 d3                	add    %dl,%bl
    2d07:	00 00                	add    %al,(%eax)
    2d09:	00 02                	add    %al,(%edx)
    2d0b:	01 1f                	add    %ebx,(%edi)
    2d0d:	02 0f                	add    (%edi),%cl
    2d0f:	04 4e                	add    $0x4e,%al
    2d11:	01 00                	add    %eax,(%eax)
    2d13:	00 01                	add    %al,(%ecx)
    2d15:	4e                   	dec    %esi
    2d16:	01 00                	add    %eax,(%eax)
    2d18:	00 01                	add    %al,(%ecx)
    2d1a:	2f                   	das
    2d1b:	00 00                	add    %al,(%eax)
    2d1d:	00 02                	add    %al,(%edx)
    2d1f:	b4 00                	mov    $0x0,%ah
    2d21:	00 00                	add    %al,(%eax)
    2d23:	03 05 18 00 05 02    	add    0x2050018,%eax
    2d29:	40                   	inc    %eax
    2d2a:	2b 10                	sub    (%eax),%edx
    2d2c:	00 03                	add    %al,(%ebx)
    2d2e:	09 01                	or     %eax,(%ecx)
    2d30:	05 05 13 05 18       	add    $0x18051305,%eax
    2d35:	06                   	push   %es
    2d36:	11 05 0e 21 05 05    	adc    %eax,0x505210e
    2d3c:	06                   	push   %es
    2d3d:	9f                   	lahf
    2d3e:	05 18 06 10 05       	add    $0x5100618,%eax
    2d43:	05 30 05 01 08       	add    $0x8010530,%eax
    2d48:	13 05 1c 06 08 22    	adc    0x2208061c,%eax
    2d4e:	05 05 13 05 1c       	add    $0x1c051305,%eax
    2d53:	06                   	push   %es
    2d54:	11 05 12 21 05 1c    	adc    %eax,0x1c052112
    2d5a:	57                   	push   %edi
    2d5b:	05 12 2f 05 08       	add    $0x8052f12,%eax
    2d60:	58                   	pop    %eax
    2d61:	05 05 06 86 05       	add    $0x5860605,%eax
    2d66:	1a 06                	sbb    (%esi),%al
    2d68:	15 05 0b 39 05       	adc    $0x5390b05,%eax
    2d6d:	05 06 59 14 05       	add    $0x5145906,%eax
    2d72:	01 06                	add    %eax,(%esi)
    2d74:	14 05                	adc    $0x5,%al
    2d76:	1f                   	pop    %ds
    2d77:	1e                   	push   %ds
    2d78:	05 05 06 91 05       	add    $0x5910605,%eax
    2d7d:	01 06                	add    %eax,(%esi)
    2d7f:	13 05 10 03 78 90    	adc    0x90780310,%eax
    2d85:	05 01 36 05 17       	add    $0x17053601,%eax
    2d8a:	06                   	push   %es
    2d8b:	d8 05 05 15 05 01    	fadds  0x1051505
    2d91:	06                   	push   %es
    2d92:	13 02                	adc    (%edx),%eax
    2d94:	01 00                	add    %eax,(%eax)
    2d96:	01 01                	add    %eax,(%ecx)
    2d98:	8a 00                	mov    (%eax),%al
    2d9a:	00 00                	add    %al,(%eax)
    2d9c:	05 00 04 00 37       	add    $0x37000400,%eax
    2da1:	00 00                	add    %al,(%eax)
    2da3:	00 01                	add    %al,(%ecx)
    2da5:	01 01                	add    %eax,(%ecx)
    2da7:	fb                   	sti
    2da8:	0e                   	push   %cs
    2da9:	0d 00 01 01 01       	or     $0x1010100,%eax
    2dae:	01 00                	add    %eax,(%eax)
    2db0:	00 00                	add    %al,(%eax)
    2db2:	01 00                	add    %eax,(%eax)
    2db4:	00 01                	add    %al,(%ecx)
    2db6:	01 01                	add    %eax,(%ecx)
    2db8:	1f                   	pop    %ds
    2db9:	03 00                	add    (%eax),%eax
    2dbb:	00 00                	add    %al,(%eax)
    2dbd:	00 cb                	add    %cl,%bl
    2dbf:	00 00                	add    %al,(%eax)
    2dc1:	00 d3                	add    %dl,%bl
    2dc3:	00 00                	add    %al,(%eax)
    2dc5:	00 02                	add    %al,(%edx)
    2dc7:	01 1f                	add    %ebx,(%edi)
    2dc9:	02 0f                	add    (%edi),%cl
    2dcb:	03 5f 01             	add    0x1(%edi),%ebx
    2dce:	00 00                	add    %al,(%eax)
    2dd0:	01 5f 01             	add    %ebx,0x1(%edi)
    2dd3:	00 00                	add    %al,(%eax)
    2dd5:	01 96 00 00 00 02    	add    %edx,0x2000000(%esi)
    2ddb:	05 1d 00 05 02       	add    $0x205001d,%eax
    2de0:	c0 2b 10             	shrb   $0x10,(%ebx)
    2de3:	00 18                	add    %bl,(%eax)
    2de5:	05 03 13 05 1f       	add    $0x1f051303,%eax
    2dea:	f5                   	cmc
    2deb:	05 03 13 05 1f       	add    $0x1f051303,%eax
    2df0:	06                   	push   %es
    2df1:	11 05 03 3d 06 83    	adc    %eax,0x83063d03
    2df7:	05 01 06 83 05       	add    $0x5830601,%eax
    2dfc:	03 1f                	add    (%edi),%ebx
    2dfe:	05 18 06 bd 05       	add    $0x5bd0618,%eax
    2e03:	03 13                	add    (%ebx),%edx
    2e05:	05 18 06 11 05       	add    $0x5110618,%eax
    2e0a:	03 3d 05 01 75 05    	add    0x5750105,%edi
    2e10:	03 1f                	add    (%edi),%ebx
    2e12:	58                   	pop    %eax
    2e13:	05 14 06 00 05       	add    $0x5000614,%eax
    2e18:	02 00                	add    (%eax),%al
    2e1a:	2c 10                	sub    $0x10,%al
    2e1c:	00 15 05 03 13 02    	add    %dl,0x2130305
    2e22:	05 00 01 01 8c       	add    $0x8c010100,%eax
    2e27:	04 00                	add    $0x0,%al
    2e29:	00 05 00 04 00 3c    	add    %al,0x3c000400
    2e2f:	00 00                	add    %al,(%eax)
    2e31:	00 01                	add    %al,(%ecx)
    2e33:	01 01                	add    %eax,(%ecx)
    2e35:	fb                   	sti
    2e36:	0e                   	push   %cs
    2e37:	0d 00 01 01 01       	or     $0x1010100,%eax
    2e3c:	01 00                	add    %eax,(%eax)
    2e3e:	00 00                	add    %al,(%eax)
    2e40:	01 00                	add    %eax,(%eax)
    2e42:	00 01                	add    %al,(%ecx)
    2e44:	01 01                	add    %eax,(%ecx)
    2e46:	1f                   	pop    %ds
    2e47:	03 00                	add    (%eax),%eax
    2e49:	00 00                	add    %al,(%eax)
    2e4b:	00 cb                	add    %cl,%bl
    2e4d:	00 00                	add    %al,(%eax)
    2e4f:	00 d3                	add    %dl,%bl
    2e51:	00 00                	add    %al,(%eax)
    2e53:	00 02                	add    %al,(%edx)
    2e55:	01 1f                	add    %ebx,(%edi)
    2e57:	02 0f                	add    (%edi),%cl
    2e59:	04 71                	add    $0x71,%al
    2e5b:	01 00                	add    %eax,(%eax)
    2e5d:	00 01                	add    %al,(%ecx)
    2e5f:	71 01                	jno    2e62 <MBOOT_HEADER_FLAGS+0x2e5f>
    2e61:	00 00                	add    %al,(%eax)
    2e63:	01 e6                	add    %esp,%esi
    2e65:	00 00                	add    %al,(%eax)
    2e67:	00 02                	add    %al,(%edx)
    2e69:	2f                   	das
    2e6a:	00 00                	add    %al,(%eax)
    2e6c:	00 02                	add    %al,(%edx)
    2e6e:	05 15 00 05 02       	add    $0x2050015,%eax
    2e73:	20 2c 10             	and    %ch,(%eax,%edx,1)
    2e76:	00 03                	add    %al,(%ebx)
    2e78:	12 01                	adc    (%ecx),%al
    2e7a:	05 05 14 05 0f       	add    $0xf051405,%eax
    2e7f:	06                   	push   %es
    2e80:	01 05 05 06 75 05    	add    %eax,0x5750605
    2e86:	10 06                	adc    %al,(%esi)
    2e88:	01 05 05 06 85 05    	add    %eax,0x5850605
    2e8e:	0a 01                	or     (%ecx),%al
    2e90:	05 17 00 02 04       	add    $0x4020017,%eax
    2e95:	01 01                	add    %eax,(%ecx)
    2e97:	05 10 06 0f 58       	add    $0x580f0610,%eax
    2e9c:	05 09 06 be 05       	add    $0x5be0609,%eax
    2ea1:	17                   	pop    %ss
    2ea2:	00 02                	add    %al,(%edx)
    2ea4:	04 01                	add    $0x1,%al
    2ea6:	06                   	push   %es
    2ea7:	01 00                	add    %eax,(%eax)
    2ea9:	02 04 01             	add    (%ecx,%eax,1),%al
    2eac:	9d                   	popf
    2ead:	00 02                	add    %al,(%edx)
    2eaf:	04 01                	add    $0x1,%al
    2eb1:	3d 05 32 00 02       	cmp    $0x2003205,%eax
    2eb6:	04 03                	add    $0x3,%al
    2eb8:	06                   	push   %es
    2eb9:	49                   	dec    %ecx
    2eba:	05 17 00 02 04       	add    $0x4020017,%eax
    2ebf:	01 01                	add    %eax,(%ecx)
    2ec1:	05 09 13 05 17       	add    $0x17051309,%eax
    2ec6:	00 02                	add    %al,(%edx)
    2ec8:	04 01                	add    $0x1,%al
    2eca:	06                   	push   %es
    2ecb:	01 05 32 00 02 04    	add    %eax,0x4020032
    2ed1:	03 06                	add    (%esi),%eax
    2ed3:	49                   	dec    %ecx
    2ed4:	05 17 00 02 04       	add    $0x4020017,%eax
    2ed9:	01 01                	add    %eax,(%ecx)
    2edb:	05 05 79 05 06       	add    $0x6057905,%eax
    2ee0:	03 30                	add    (%eax),%esi
    2ee2:	01 05 05 13 13 04    	add    %eax,0x4131305
    2ee8:	02 05 14 03 bc 7f    	add    0x7fbc0314,%al
    2eee:	01 05 05 13 06 ac    	add    %eax,0xac061305
    2ef4:	04 01                	add    $0x1,%al
    2ef6:	06                   	push   %es
    2ef7:	03 c4                	add    %esp,%eax
    2ef9:	00 01                	add    %al,(%ecx)
    2efb:	04 02                	add    $0x2,%al
    2efd:	05 14 03 bb 7f       	add    $0x7fbb0314,%eax
    2f02:	01 05 05 13 06 9e    	add    %eax,0x9e061305
    2f08:	04 01                	add    $0x1,%al
    2f0a:	06                   	push   %es
    2f0b:	03 c5                	add    %ebp,%eax
    2f0d:	00 01                	add    %al,(%ecx)
    2f0f:	04 02                	add    $0x2,%al
    2f11:	05 14 03 ba 7f       	add    $0x7fba0314,%eax
    2f16:	01 05 05 13 06 ac    	add    %eax,0xac061305
    2f1c:	04 01                	add    $0x1,%al
    2f1e:	06                   	push   %es
    2f1f:	03 c6                	add    %esi,%eax
    2f21:	00 01                	add    %al,(%ecx)
    2f23:	04 02                	add    $0x2,%al
    2f25:	05 14 03 b9 7f       	add    $0x7fb90314,%eax
    2f2a:	01 05 05 13 06 82    	add    %eax,0x82061305
    2f30:	04 01                	add    $0x1,%al
    2f32:	05 01 03 12 01       	add    $0x1120301,%eax
    2f37:	05 1a 06 bc 05       	add    $0x5bc061a,%eax
    2f3c:	05 13 05 1a 06       	add    $0x61a0513,%eax
    2f41:	11 05 14 22 05 1a    	adc    %eax,0x1a052214
    2f47:	72 05                	jb     2f4e <MBOOT_HEADER_FLAGS+0x2f4b>
    2f49:	08 75 05             	or     %dh,0x5(%ebp)
    2f4c:	0a 06                	or     (%esi),%al
    2f4e:	93                   	xchg   %eax,%ebx
    2f4f:	05 0d 06 01 05       	add    $0x501060d,%eax
    2f54:	09 06                	or     %eax,(%esi)
    2f56:	97                   	xchg   %eax,%edi
    2f57:	05 11 03 61 01       	add    $0x1610311,%eax
    2f5c:	05 05 13 13 13       	add    $0x13131305,%eax
    2f61:	05 10 06 01 74       	add    $0x74010610,%eax
    2f66:	4a                   	dec    %edx
    2f67:	05 13 03 1c 01       	add    $0x11c0313,%eax
    2f6c:	3d 05 10 03 63       	cmp    $0x63031005,%eax
    2f71:	90                   	nop
    2f72:	3c 05                	cmp    $0x5,%al
    2f74:	09 06                	or     %eax,(%esi)
    2f76:	03 1d 9e 05 05 15    	add    0x1505059e,%ebx
    2f7c:	05 08 06 58 05       	add    $0x5580608,%eax
    2f81:	1f                   	pop    %ds
    2f82:	00 02                	add    %al,(%edx)
    2f84:	04 01                	add    $0x1,%al
    2f86:	06                   	push   %es
    2f87:	08 5b 00             	or     %bl,0x0(%ebx)
    2f8a:	02 04 01             	add    (%ecx,%eax,1),%al
    2f8d:	06                   	push   %es
    2f8e:	66 05 11 06          	add    $0x611,%ax
    2f92:	9f                   	lahf
    2f93:	05 3b 06 01 05       	add    $0x501063b,%eax
    2f98:	1f                   	pop    %ds
    2f99:	00 02                	add    %al,(%edx)
    2f9b:	04 01                	add    $0x1,%al
    2f9d:	3b 05 2f 3d 05 2d    	cmp    0x2d053d2f,%eax
    2fa3:	00 02                	add    %al,(%edx)
    2fa5:	04 03                	add    $0x3,%al
    2fa7:	06                   	push   %es
    2fa8:	73 05                	jae    2faf <MBOOT_HEADER_FLAGS+0x2fac>
    2faa:	1f                   	pop    %ds
    2fab:	00 02                	add    %al,(%edx)
    2fad:	04 01                	add    $0x1,%al
    2faf:	01 05 2e 00 02 04    	add    %eax,0x402002e
    2fb5:	02 49 05             	add    0x5(%ecx),%cl
    2fb8:	1b 00                	sbb    (%eax),%eax
    2fba:	02 04 01             	add    (%ecx,%eax,1),%al
    2fbd:	01 05 10 06 03 5e    	add    %eax,0x5e030610
    2fc3:	c8 05 0d 06          	enter  $0xd05,$0x6
    2fc7:	03 29                	add    (%ecx),%ebp
    2fc9:	02 22                	add    (%edx),%ah
    2fcb:	01 05 11 03 54 01    	add    %eax,0x1540311
    2fd1:	05 05 13 13 13       	add    $0x13131305,%eax
    2fd6:	06                   	push   %es
    2fd7:	01 05 3a 00 02 04    	add    %eax,0x402003a
    2fdd:	01 03                	add    %eax,(%ebx)
    2fdf:	29 01                	sub    %eax,(%ecx)
    2fe1:	05 29 00 02 04       	add    $0x4020029,%eax
    2fe6:	03 06                	add    (%esi),%eax
    2fe8:	3b 05 1b 00 02 04    	cmp    0x402001b,%eax
    2fee:	01 01                	add    %eax,(%ecx)
    2ff0:	05 0d 13 05 11       	add    $0x1105130d,%eax
    2ff5:	03 54 01 05          	add    0x5(%ecx,%eax,1),%edx
    2ff9:	05 13 13 13 06       	add    $0x6131313,%eax
    2ffe:	01 05 1b 00 02 04    	add    %eax,0x402001b
    3004:	01 03                	add    %eax,(%ebx)
    3006:	28 01                	sub    %al,(%ecx)
    3008:	05 3a 00 02 04       	add    $0x402003a,%eax
    300d:	01 3d 05 29 00 02    	add    %edi,0x2002905
    3013:	04 03                	add    $0x3,%al
    3015:	06                   	push   %es
    3016:	49                   	dec    %ecx
    3017:	05 1b 00 02 04       	add    $0x402001b,%eax
    301c:	01 01                	add    %eax,(%ecx)
    301e:	05 09 77 05 14       	add    $0x14057709,%eax
    3023:	06                   	push   %es
    3024:	01 05 05 06 08 4c    	add    %eax,0x4c080605
    302a:	05 06 03 11 01       	add    $0x1110306,%eax
    302f:	05 05 13 13 04       	add    $0x4131305,%eax
    3034:	02 05 14 03 bc 7f    	add    0x7fbc0314,%al
    303a:	01 05 05 13 06 ac    	add    %eax,0xac061305
    3040:	04 01                	add    $0x1,%al
    3042:	06                   	push   %es
    3043:	03 c4                	add    %esp,%eax
    3045:	00 01                	add    %al,(%ecx)
    3047:	04 02                	add    $0x2,%al
    3049:	05 14 03 bb 7f       	add    $0x7fbb0314,%eax
    304e:	01 05 05 13 06 9e    	add    %eax,0x9e061305
    3054:	04 01                	add    $0x1,%al
    3056:	06                   	push   %es
    3057:	03 c5                	add    %ebp,%eax
    3059:	00 01                	add    %al,(%ecx)
    305b:	04 02                	add    $0x2,%al
    305d:	05 14 03 ba 7f       	add    $0x7fba0314,%eax
    3062:	01 05 05 13 06 ac    	add    %eax,0xac061305
    3068:	04 01                	add    $0x1,%al
    306a:	06                   	push   %es
    306b:	03 c6                	add    %esi,%eax
    306d:	00 01                	add    %al,(%ecx)
    306f:	04 02                	add    $0x2,%al
    3071:	05 14 03 b9 7f       	add    $0x7fb90314,%eax
    3076:	01 05 05 13 06 58    	add    %eax,0x58061305
    307c:	04 01                	add    $0x1,%al
    307e:	05 01 03 31 01       	add    $0x1310301,%eax
    3083:	05 09 06 03 68       	add    $0x68030609,%eax
    3088:	4a                   	dec    %edx
    3089:	05 0c 06 01 05       	add    $0x501060c,%eax
    308e:	0d 06 59 05 10       	or     $0x10055906,%eax
    3093:	06                   	push   %es
    3094:	03 69 01             	add    0x1(%ecx),%ebp
    3097:	05 17 03 17 74       	add    $0x74170317,%eax
    309c:	3d 3b 05 0d 06       	cmp    $0x60d053b,%eax
    30a1:	67 05 11 03 65 01    	addr16 add $0x1650311,%eax
    30a7:	05 05 13 13 13       	add    $0x13131305,%eax
    30ac:	05 10 06 01 3c       	add    $0x3c010610,%eax
    30b1:	05 05 06 03 20       	add    $0x20030605,%eax
    30b6:	ac                   	lods   %ds:(%esi),%al
    30b7:	05 08 06 58 05       	add    $0x5580608,%eax
    30bc:	11 03                	adc    %eax,(%ebx)
    30be:	21 9e 30 05 09 06    	and    %ebx,0x6090530(%esi)
    30c4:	03 50 58             	add    0x58(%eax),%edx
    30c7:	05 14 06 01 05       	add    $0x5010614,%eax
    30cc:	24 06                	and    $0x6,%al
    30ce:	03 1d 02 25 01 06    	add    0x6012502,%ebx
    30d4:	01 05 05 06 3d 05    	add    %eax,0x53d0605
    30da:	0a 01                	or     (%ecx),%al
    30dc:	05 1f 00 02 04       	add    $0x402001f,%eax
    30e1:	01 01                	add    %eax,(%ecx)
    30e3:	05 24 06 11 20       	add    $0x20110624,%eax
    30e8:	05 1b 00 02 04       	add    $0x402001b,%eax
    30ed:	01 3d 05 1f 00 02    	add    %edi,0x2001f05
    30f3:	04 01                	add    $0x1,%al
    30f5:	3c 05                	cmp    $0x5,%al
    30f7:	09 06                	or     %eax,(%esi)
    30f9:	08 59 05             	or     %bl,0x5(%ecx)
    30fc:	1f                   	pop    %ds
    30fd:	00 02                	add    %al,(%edx)
    30ff:	04 01                	add    $0x1,%al
    3101:	06                   	push   %es
    3102:	1f                   	pop    %ds
    3103:	05 09 3d 05 29       	add    $0x29053d09,%eax
    3108:	00 02                	add    %al,(%edx)
    310a:	04 03                	add    $0x3,%al
    310c:	06                   	push   %es
    310d:	57                   	push   %edi
    310e:	05 1f 00 02 04       	add    $0x402001f,%eax
    3113:	01 01                	add    %eax,(%ecx)
    3115:	05 1b 00 02 04       	add    $0x402001b,%eax
    311a:	01 06                	add    %eax,(%esi)
    311c:	01 05 1f 00 02 04    	add    %eax,0x402001f
    3122:	01 4a 05             	add    %ecx,0x5(%edx)
    3125:	01 5b 05             	add    %ebx,0x5(%ebx)
    3128:	16                   	push   %ss
    3129:	06                   	push   %es
    312a:	d8 05 05 13 05 0a    	fadds  0xa051305
    3130:	01 05 17 00 02 04    	add    %eax,0x4020017
    3136:	01 01                	add    %eax,(%ecx)
    3138:	05 10 06 03 49       	add    $0x49030610,%eax
    313d:	01 08                	add    %ecx,(%eax)
    313f:	20 05 09 06 03 38    	and    %al,0x38030609
    3145:	08 c8                	or     %cl,%al
    3147:	05 11 03 45 01       	add    $0x1450311,%eax
    314c:	05 05 13 13 13       	add    $0x13131305,%eax
    3151:	06                   	push   %es
    3152:	01 05 17 00 02 04    	add    %eax,0x4020017
    3158:	01 03                	add    %eax,(%ebx)
    315a:	38 01                	cmp    %al,(%ecx)
    315c:	05 32 00 02 04       	add    $0x4020032,%eax
    3161:	03 06                	add    (%esi),%eax
    3163:	3b 05 17 00 02 04    	cmp    0x4020017,%eax
    3169:	01 01                	add    %eax,(%ecx)
    316b:	05 09 13 05 11       	add    $0x11051309,%eax
    3170:	03 45 01             	add    0x1(%ebp),%eax
    3173:	05 05 13 13 13       	add    $0x13131305,%eax
    3178:	06                   	push   %es
    3179:	01 05 17 00 02 04    	add    %eax,0x4020017
    317f:	01 03                	add    %eax,(%ebx)
    3181:	37                   	aaa
    3182:	01 00                	add    %eax,(%eax)
    3184:	02 04 01             	add    (%ecx,%eax,1),%al
    3187:	3d 05 32 00 02       	cmp    $0x2003205,%eax
    318c:	04 03                	add    $0x3,%al
    318e:	06                   	push   %es
    318f:	49                   	dec    %ecx
    3190:	05 17 00 02 04       	add    $0x4020017,%eax
    3195:	01 01                	add    %eax,(%ecx)
    3197:	05 05 77 05 10       	add    $0x10057705,%eax
    319c:	06                   	push   %es
    319d:	01 04 02             	add    %eax,(%edx,%eax,1)
    31a0:	05 05 03 43 2e       	add    $0x2e430305,%eax
    31a5:	04 01                	add    $0x1,%al
    31a7:	05 10 03 3d 58       	add    $0x583d0310,%eax
    31ac:	05 05 06 67 05       	add    $0x5670605,%eax
    31b1:	06                   	push   %es
    31b2:	15 05 05 13 13       	adc    $0x13130505,%eax
    31b7:	04 02                	add    $0x2,%al
    31b9:	05 14 03 bc 7f       	add    $0x7fbc0314,%eax
    31be:	01 05 05 13 06 66    	add    %eax,0x66061305
    31c4:	04 01                	add    $0x1,%al
    31c6:	06                   	push   %es
    31c7:	03 c4                	add    %esp,%eax
    31c9:	00 01                	add    %al,(%ecx)
    31cb:	04 02                	add    $0x2,%al
    31cd:	05 14 03 bb 7f       	add    $0x7fbb0314,%eax
    31d2:	01 05 05 13 06 9e    	add    %eax,0x9e061305
    31d8:	04 01                	add    $0x1,%al
    31da:	06                   	push   %es
    31db:	03 c5                	add    %ebp,%eax
    31dd:	00 01                	add    %al,(%ecx)
    31df:	04 02                	add    $0x2,%al
    31e1:	05 14 03 ba 7f       	add    $0x7fba0314,%eax
    31e6:	01 05 05 13 06 ac    	add    %eax,0xac061305
    31ec:	04 01                	add    $0x1,%al
    31ee:	06                   	push   %es
    31ef:	03 c6                	add    %esi,%eax
    31f1:	00 01                	add    %al,(%ecx)
    31f3:	04 02                	add    $0x2,%al
    31f5:	05 14 03 b9 7f       	add    $0x7fb90314,%eax
    31fa:	01 05 05 13 06 82    	add    %eax,0x82061305
    3200:	04 01                	add    $0x1,%al
    3202:	05 01 03 3f 01       	add    $0x13f0301,%eax
    3207:	05 27 06 e6 05       	add    $0x5e60627,%eax
    320c:	05 13 05 27 06       	add    $0x6270513,%eax
    3211:	11 04 02             	adc    %eax,(%edx,%eax,1)
    3214:	05 05 03 bf 7f       	add    $0x7fbf0305,%eax
    3219:	20 04 01             	and    %al,(%ecx,%eax,1)
    321c:	05 27 03 c1 00       	add    $0xc10327,%eax
    3221:	9e                   	sahf
    3222:	05 10 75 05 05       	add    $0x5057510,%eax
    3227:	06                   	push   %es
    3228:	75 04                	jne    322e <MBOOT_HEADER_FLAGS+0x322b>
    322a:	02 05 14 03 bc 7f    	add    0x7fbc0314,%al
    3230:	01 05 05 13 06 20    	add    %eax,0x20061305
    3236:	04 01                	add    $0x1,%al
    3238:	06                   	push   %es
    3239:	03 c4                	add    %esp,%eax
    323b:	00 01                	add    %al,(%ecx)
    323d:	04 02                	add    $0x2,%al
    323f:	05 14 03 bb 7f       	add    $0x7fbb0314,%eax
    3244:	01 05 05 13 06 9e    	add    %eax,0x9e061305
    324a:	04 01                	add    $0x1,%al
    324c:	06                   	push   %es
    324d:	03 c5                	add    %ebp,%eax
    324f:	00 01                	add    %al,(%ecx)
    3251:	04 02                	add    $0x2,%al
    3253:	05 14 03 ba 7f       	add    $0x7fba0314,%eax
    3258:	01 05 05 13 06 ac    	add    %eax,0xac061305
    325e:	04 01                	add    $0x1,%al
    3260:	06                   	push   %es
    3261:	03 c6                	add    %esi,%eax
    3263:	00 01                	add    %al,(%ecx)
    3265:	04 02                	add    $0x2,%al
    3267:	05 14 03 b9 7f       	add    $0x7fb90314,%eax
    326c:	01 05 05 13 04 01    	add    %eax,0x1041305
    3272:	05 11 06 03 c6       	add    $0xc6030611,%eax
    3277:	00 01                	add    %al,(%ecx)
    3279:	04 02                	add    $0x2,%al
    327b:	05 05 03 ba 7f       	add    $0x7fba0305,%eax
    3280:	2e 04 01             	cs add $0x1,%al
    3283:	05 11 03 c6 00       	add    $0xc60311,%eax
    3288:	2e 04 02             	cs add $0x2,%al
    328b:	05 05 03 ba 7f       	add    $0x7fba0305,%eax
    3290:	4a                   	dec    %edx
    3291:	20 04 01             	and    %al,(%ecx,%eax,1)
    3294:	05 01 03 c7 00       	add    $0xc70301,%eax
    3299:	01 05 2c 06 84 05    	add    %eax,0x584062c
    329f:	05 13 05 2c 06       	add    $0x62c0513,%eax
    32a4:	11 05 1b 3d 05 01    	adc    %eax,0x1053d1b
    32aa:	83 05 1b 1f 05 01 c9 	addl   $0xffffffc9,0x1051f1b
    32b1:	02 01                	add    (%ecx),%al
    32b3:	00 01                	add    %al,(%ecx)
    32b5:	01 c3                	add    %eax,%ebx
    32b7:	00 00                	add    %al,(%eax)
    32b9:	00 05 00 04 00 37    	add    %al,0x37000400
    32bf:	00 00                	add    %al,(%eax)
    32c1:	00 01                	add    %al,(%ecx)
    32c3:	01 01                	add    %eax,(%ecx)
    32c5:	fb                   	sti
    32c6:	0e                   	push   %cs
    32c7:	0d 00 01 01 01       	or     $0x1010100,%eax
    32cc:	01 00                	add    %eax,(%eax)
    32ce:	00 00                	add    %al,(%eax)
    32d0:	01 00                	add    %eax,(%eax)
    32d2:	00 01                	add    %al,(%ecx)
    32d4:	01 01                	add    %eax,(%ecx)
    32d6:	1f                   	pop    %ds
    32d7:	03 00                	add    (%eax),%eax
    32d9:	00 00                	add    %al,(%eax)
    32db:	00 84 01 00 00 88 01 	add    %al,0x1880000(%ecx,%eax,1)
    32e2:	00 00                	add    %al,(%eax)
    32e4:	02 01                	add    (%ecx),%al
    32e6:	1f                   	pop    %ds
    32e7:	02 0f                	add    (%edi),%cl
    32e9:	03 7b 01             	add    0x1(%ebx),%edi
    32ec:	00 00                	add    %al,(%eax)
    32ee:	01 7b 01             	add    %edi,0x1(%ebx)
    32f1:	00 00                	add    %al,(%eax)
    32f3:	01 2f                	add    %ebp,(%edi)
    32f5:	00 00                	add    %al,(%eax)
    32f7:	00 02                	add    %al,(%edx)
    32f9:	05 2f 00 05 02       	add    $0x205002f,%eax
    32fe:	40                   	inc    %eax
    32ff:	2f                   	das
    3300:	10 00                	adc    %al,(%eax)
    3302:	14 05                	adc    $0x5,%al
    3304:	05 13 05 2f 06       	add    $0x62f0513,%eax
    3309:	11 90 05 08 67 05    	adc    %edx,0x5670805(%eax)
    330f:	1f                   	pop    %ds
    3310:	03 0a                	add    (%edx),%ecx
    3312:	82 05 09 38 58 06 08 	addb   $0x8,0x6583809
    3319:	f6 05 1f 06 01 05 0e 	testb  $0xe,0x501061f
    3320:	82 05 1f 3c 05 18 d6 	addb   $0xd6,0x18053c1f
    3327:	05 09 06 75 05       	add    $0x5750609,%eax
    332c:	0d 06 2e 05 10       	or     $0x10052e06,%eax
    3331:	06                   	push   %es
    3332:	2c 06                	sub    $0x6,%al
    3334:	ac                   	lods   %ds:(%esi),%al
    3335:	2e 2e 05 09 06 cf 05 	cs cs add $0x5cf0609,%eax
    333c:	10 06                	adc    %al,(%esi)
    333e:	01 05 13 00 02 04    	add    %eax,0x4020013
    3344:	01 3b                	add    %edi,(%ebx)
    3346:	05 10 3d 05 19       	add    $0x19053d10,%eax
    334b:	00 02                	add    %al,(%edx)
    334d:	04 03                	add    $0x3,%al
    334f:	06                   	push   %es
    3350:	3b 05 13 00 02 04    	cmp    0x4020013,%eax
    3356:	01 01                	add    %eax,(%ecx)
    3358:	05 05 93 05 0c       	add    $0xc059305,%eax
    335d:	06                   	push   %es
    335e:	01 05 01 4b 58 05    	add    %eax,0x5584b01
    3364:	09 06                	or     %eax,(%esi)
    3366:	03 6e 58             	add    0x58(%esi),%ebp
    3369:	13 05 10 06 11 05    	adc    0x5110610,%eax
    336f:	09 06                	or     %eax,(%esi)
    3371:	84 05 01 06 03 10    	test   %al,0x10030601
    3377:	01 02                	add    %eax,(%edx)
    3379:	08 00                	or     %al,(%eax)
    337b:	01 01                	add    %eax,(%ecx)
    337d:	80 03 00             	addb   $0x0,(%ebx)
    3380:	00 05 00 04 00 37    	add    %al,0x37000400
    3386:	00 00                	add    %al,(%eax)
    3388:	00 01                	add    %al,(%ecx)
    338a:	01 01                	add    %eax,(%ecx)
    338c:	fb                   	sti
    338d:	0e                   	push   %cs
    338e:	0d 00 01 01 01       	or     $0x1010100,%eax
    3393:	01 00                	add    %eax,(%eax)
    3395:	00 00                	add    %al,(%eax)
    3397:	01 00                	add    %eax,(%eax)
    3399:	00 01                	add    %al,(%ecx)
    339b:	01 01                	add    %eax,(%ecx)
    339d:	1f                   	pop    %ds
    339e:	03 00                	add    (%eax),%eax
    33a0:	00 00                	add    %al,(%eax)
    33a2:	00 84 01 00 00 88 01 	add    %al,0x1880000(%ecx,%eax,1)
    33a9:	00 00                	add    %al,(%eax)
    33ab:	02 01                	add    (%ecx),%al
    33ad:	1f                   	pop    %ds
    33ae:	02 0f                	add    (%edi),%cl
    33b0:	03 9b 01 00 00 01    	add    0x1000001(%ebx),%ebx
    33b6:	9b                   	fwait
    33b7:	01 00                	add    %eax,(%eax)
    33b9:	00 01                	add    %al,(%ecx)
    33bb:	2f                   	das
    33bc:	00 00                	add    %al,(%eax)
    33be:	00 02                	add    %al,(%edx)
    33c0:	05 20 00 05 02       	add    $0x2050020,%eax
    33c5:	00 30                	add    %dh,(%eax)
    33c7:	10 00                	adc    %al,(%eax)
    33c9:	14 05                	adc    $0x5,%al
    33cb:	05 13 05 20 06       	add    $0x6200513,%eax
    33d0:	11 3c 05 05 06 3e 05 	adc    %edi,0x53e0605(,%eax,1)
    33d7:	0c 00                	or     $0x0,%al
    33d9:	02 04 01             	add    (%ecx,%eax,1),%al
    33dc:	01 05 11 06 57 2e    	add    %eax,0x2e570611
    33e2:	05 10 00 02 04       	add    $0x4020010,%eax
    33e7:	02 06                	add    (%esi),%al
    33e9:	3d 05 11 00 02       	cmp    $0x2001105,%eax
    33ee:	04 02                	add    $0x2,%al
    33f0:	06                   	push   %es
    33f1:	01 05 0c 00 02 04    	add    %eax,0x402000c
    33f7:	01 06                	add    %eax,(%esi)
    33f9:	3c 05                	cmp    $0x5,%al
    33fb:	0e                   	push   %cs
    33fc:	06                   	push   %es
    33fd:	59                   	pop    %ecx
    33fe:	05 01 2f 05 0c       	add    $0xc052f01,%eax
    3403:	00 02                	add    %al,(%edx)
    3405:	04 01                	add    $0x1,%al
    3407:	64 05 05 06 2f 05    	fs add $0x52f0605,%eax
    340d:	01 06                	add    %eax,(%esi)
    340f:	13 05 30 06 d8 06    	adc    0x6d80630,%eax
    3415:	01 05 05 06 3d 05    	add    %eax,0x53d0605
    341b:	30 06                	xor    %al,(%esi)
    341d:	11 05 05 06 4c 05    	adc    %eax,0x54c0605
    3423:	0c 00                	or     $0x0,%al
    3425:	02 04 01             	add    (%ecx,%eax,1),%al
    3428:	01 05 1a 00 02 04    	add    %eax,0x402001a
    342e:	02 06                	add    (%esi),%al
    3430:	01 05 30 48 05 0c    	add    %eax,0xc054830
    3436:	00 02                	add    %al,(%edx)
    3438:	04 01                	add    $0x1,%al
    343a:	84 05 13 00 02 04    	test   %al,0x4020013
    3440:	02 06                	add    (%esi),%al
    3442:	e4 05                	in     $0x5,%al
    3444:	18 00                	sbb    %al,(%eax)
    3446:	02 04 02             	add    (%edx,%eax,1),%al
    3449:	06                   	push   %es
    344a:	01 05 15 00 02 04    	add    %eax,0x4020015
    3450:	02 4a 05             	add    0x5(%edx),%cl
    3453:	18 00                	sbb    %al,(%eax)
    3455:	02 04 02             	add    (%edx,%eax,1),%al
    3458:	3c 05                	cmp    $0x5,%al
    345a:	0c 00                	or     $0x0,%al
    345c:	02 04 01             	add    (%ecx,%eax,1),%al
    345f:	06                   	push   %es
    3460:	3c 00                	cmp    $0x0,%al
    3462:	02 04 01             	add    (%ecx,%eax,1),%al
    3465:	06                   	push   %es
    3466:	01 00                	add    %eax,(%eax)
    3468:	02 04 01             	add    (%ecx,%eax,1),%al
    346b:	4a                   	dec    %edx
    346c:	05 13 00 02 04       	add    $0x4020013,%eax
    3471:	02 06                	add    (%esi),%al
    3473:	01 05 18 00 02 04    	add    %eax,0x4020018
    3479:	02 06                	add    (%esi),%al
    347b:	01 05 0c 00 02 04    	add    %eax,0x402000c
    3481:	01 06                	add    %eax,(%esi)
    3483:	2e 05 13 00 02 04    	cs add $0x4020013,%eax
    3489:	02 01                	add    (%ecx),%al
    348b:	05 15 00 02 04       	add    $0x4020015,%eax
    3490:	02 06                	add    (%esi),%al
    3492:	01 05 18 00 02 04    	add    %eax,0x4020018
    3498:	02 3c 05 0c 00 02 04 	add    0x402000c(,%eax,1),%bh
    349f:	01 06                	add    %eax,(%esi)
    34a1:	3c 00                	cmp    $0x0,%al
    34a3:	02 04 01             	add    (%ecx,%eax,1),%al
    34a6:	06                   	push   %es
    34a7:	01 05 01 4c 05 37    	add    %eax,0x37054c01
    34ad:	06                   	push   %es
    34ae:	08 3e                	or     %bh,(%esi)
    34b0:	06                   	push   %es
    34b1:	01 ac 05 05 06 3d 13 	add    %ebp,0x133d0605(%ebp,%eax,1)
    34b8:	13 05 0c 00 02 04    	adc    0x402000c,%eax
    34be:	01 01                	add    %eax,(%ecx)
    34c0:	00 02                	add    %al,(%edx)
    34c2:	04 01                	add    $0x1,%al
    34c4:	06                   	push   %es
    34c5:	01 05 0e 64 2e 05    	add    %eax,0x52e640e
    34cb:	13 00                	adc    (%eax),%eax
    34cd:	02 04 02             	add    (%edx,%eax,1),%al
    34d0:	06                   	push   %es
    34d1:	a0 05 18 00 02       	mov    0x2001805,%al
    34d6:	04 02                	add    $0x2,%al
    34d8:	06                   	push   %es
    34d9:	01 05 0c 00 02 04    	add    %eax,0x402000c
    34df:	01 06                	add    %eax,(%esi)
    34e1:	20 00                	and    %al,(%eax)
    34e3:	02 04 01             	add    (%ecx,%eax,1),%al
    34e6:	06                   	push   %es
    34e7:	01 05 05 06 4b 05    	add    %eax,0x54b0605
    34ed:	01 06                	add    %eax,(%esi)
    34ef:	13 20                	adc    (%eax),%esp
    34f1:	05 36 06 a0 06       	add    $0x6a00636,%eax
    34f6:	01 ac 05 05 06 3d 13 	add    %ebp,0x133d0605(%ebp,%eax,1)
    34fd:	13 05 0c 01 06 01    	adc    0x106010c,%eax
    3503:	82 05 09 06 08 94 05 	addb   $0x5,0x94080609
    350a:	0b 06                	or     (%esi),%eax
    350c:	01 05 09 06 3d 05    	add    %eax,0x53d0609
    3512:	0b 06                	or     (%esi),%eax
    3514:	01 05 0c 06 37 06    	add    %eax,0x637060c
    351a:	01 05 09 06 4b 05    	add    %eax,0x54b0609
    3520:	0d 06 01 05 14       	or     $0x14050106,%eax
    3525:	3c 05                	cmp    $0x5,%al
    3527:	0c 3c                	or     $0x3c,%al
    3529:	05 0d 06 4b 05       	add    $0x54b060d,%eax
    352e:	14 06                	adc    $0x6,%al
    3530:	01 05 18 3c 05 01    	add    %eax,0x1053c18
    3536:	34 74                	xor    $0x74,%al
    3538:	05 0c 1f 05 01       	add    $0x1051f0c,%eax
    353d:	2f                   	das
    353e:	05 2c 06 ca 05       	add    $0x5ca062c,%eax
    3543:	05 13 05 2c 06       	add    $0x62c0513,%eax
    3548:	11 3c 05 10 06 67 05 	adc    %edi,0x5670610(,%eax,1)
    354f:	0c 06                	or     $0x6,%al
    3551:	01 05 10 3c 66 05    	add    %eax,0x5663c10
    3557:	09 06                	or     %eax,(%esi)
    3559:	08 c9                	or     %cl,%cl
    355b:	05 0c 06 11 05       	add    $0x511060c,%eax
    3560:	0b 4b 05             	or     0x5(%ebx),%ecx
    3563:	09 06                	or     %eax,(%esi)
    3565:	3d 05 0b 06 01       	cmp    $0x1060b05,%eax
    356a:	05 10 06 3a 00       	add    $0x3a0610,%eax
    356f:	02 04 01             	add    (%ecx,%eax,1),%al
    3572:	06                   	push   %es
    3573:	4a                   	dec    %edx
    3574:	05 05 06 4e 05       	add    $0x54e0605,%eax
    3579:	28 06                	sub    %al,(%esi)
    357b:	01 05 01 3d 05 26    	add    %eax,0x26053d01
    3581:	1f                   	pop    %ds
    3582:	05 01 2f 05 28       	add    $0x28052f01,%eax
    3587:	81 3c 05 05 06 2e 05 	cmpl   $0x5130601,0x52e0605(,%eax,1)
    358e:	01 06 13 05 
    3592:	26 1f                	es pop %ds
    3594:	05 01 2f 05 2b       	add    $0x2b052f01,%eax
    3599:	06                   	push   %es
    359a:	84 05 05 13 05 2b    	test   %al,0x2b051305
    35a0:	06                   	push   %es
    35a1:	11 05 0b 22 05 2b    	adc    %eax,0x2b05220b
    35a7:	2c 3c                	sub    $0x3c,%al
    35a9:	05 05 06 3e 05       	add    $0x53e0605,%eax
    35ae:	2b 06                	sub    (%esi),%eax
    35b0:	10 3c 05 0c 00 02 04 	adc    %bh,0x402000c(,%eax,1)
    35b7:	01 06                	add    %eax,(%esi)
    35b9:	4c                   	dec    %esp
    35ba:	05 14 00 02 04       	add    $0x4020014,%eax
    35bf:	01 06                	add    %eax,(%esi)
    35c1:	01 05 12 00 02 04    	add    %eax,0x4020012
    35c7:	01 4a 05             	add    %ecx,0x5(%edx)
    35ca:	0c 00                	or     $0x0,%al
    35cc:	02 04 01             	add    (%ecx,%eax,1),%al
    35cf:	3c 00                	cmp    $0x0,%al
    35d1:	02 04 01             	add    (%ecx,%eax,1),%al
    35d4:	3c 05                	cmp    $0x5,%al
    35d6:	05 06 4b 05 01       	add    $0x1054b06,%eax
    35db:	06                   	push   %es
    35dc:	13 58 20             	adc    0x20(%eax),%ebx
    35df:	05 2b 06 bc 05       	add    $0x5bc062b,%eax
    35e4:	05 13 05 2b 06       	add    $0x62b0513,%eax
    35e9:	11 05 08 06 03 52    	adc    %eax,0x52030608
    35ef:	74 05                	je     35f6 <MBOOT_HEADER_FLAGS+0x35f3>
    35f1:	05 13 13 05 0c       	add    $0xc051313,%eax
    35f6:	00 02                	add    %al,(%edx)
    35f8:	04 01                	add    $0x1,%al
    35fa:	01 05 2b 06 03 2c    	add    %eax,0x2c03062b
    3600:	01 20                	add    %esp,(%eax)
    3602:	05 0c 00 02 04       	add    $0x402000c,%eax
    3607:	01 03                	add    %eax,(%ebx)
    3609:	54                   	push   %esp
    360a:	3c 05                	cmp    $0x5,%al
    360c:	11 3b                	adc    %edi,(%ebx)
    360e:	05 0c 00 02 04       	add    $0x402000c,%eax
    3613:	01 2f                	add    %ebp,(%edi)
    3615:	00 02                	add    %al,(%edx)
    3617:	04 01                	add    $0x1,%al
    3619:	2e 05 10 00 02 04    	cs add $0x4020010,%eax
    361f:	02 06                	add    (%esi),%al
    3621:	d6                   	(bad)
    3622:	05 11 00 02 04       	add    $0x4020011,%eax
    3627:	02 06                	add    (%esi),%al
    3629:	01 05 0c 00 02 04    	add    %eax,0x402000c
    362f:	01 06                	add    %eax,(%esi)
    3631:	3c 05                	cmp    $0x5,%al
    3633:	11 06                	adc    %eax,(%esi)
    3635:	57                   	push   %edi
    3636:	2e 66 05 0c 00       	cs add $0xc,%ax
    363b:	02 04 01             	add    (%ecx,%eax,1),%al
    363e:	06                   	push   %es
    363f:	03 2f                	add    (%edi),%ebp
    3641:	01 05 14 00 02 04    	add    %eax,0x4020014
    3647:	01 06                	add    %eax,(%esi)
    3649:	01 05 12 00 02 04    	add    %eax,0x4020012
    364f:	01 4a 05             	add    %ecx,0x5(%edx)
    3652:	0c 00                	or     $0x0,%al
    3654:	02 04 01             	add    (%ecx,%eax,1),%al
    3657:	3c 00                	cmp    $0x0,%al
    3659:	02 04 01             	add    (%ecx,%eax,1),%al
    365c:	3c 05                	cmp    $0x5,%al
    365e:	05 06 4b 05 01       	add    $0x1054b06,%eax
    3663:	06                   	push   %es
    3664:	13 2e                	adc    (%esi),%ebp
    3666:	2e 05 36 06 d8 06    	cs add $0x6d80636,%eax
    366c:	01 05 05 06 9f 05    	add    %eax,0x59f0605
    3672:	08 03                	or     %al,(%ebx)
    3674:	4b                   	dec    %ebx
    3675:	01 05 05 13 13 05    	add    %eax,0x5131305
    367b:	0c 00                	or     $0x0,%al
    367d:	02 04 01             	add    (%ecx,%eax,1),%al
    3680:	01 05 36 06 03 32    	add    %eax,0x32030636
    3686:	01 20                	add    %esp,(%eax)
    3688:	05 0c 00 02 04       	add    $0x402000c,%eax
    368d:	01 03                	add    %eax,(%ebx)
    368f:	4e                   	dec    %esi
    3690:	3c 05                	cmp    $0x5,%al
    3692:	11 3b                	adc    %edi,(%ebx)
    3694:	05 0c 00 02 04       	add    $0x402000c,%eax
    3699:	01 2f                	add    %ebp,(%edi)
    369b:	00 02                	add    %al,(%edx)
    369d:	04 01                	add    $0x1,%al
    369f:	2e 05 10 00 02 04    	cs add $0x4020010,%eax
    36a5:	02 06                	add    (%esi),%al
    36a7:	ac                   	lods   %ds:(%esi),%al
    36a8:	05 11 00 02 04       	add    $0x4020011,%eax
    36ad:	02 06                	add    (%esi),%al
    36af:	01 05 0c 00 02 04    	add    %eax,0x402000c
    36b5:	01 06                	add    %eax,(%esi)
    36b7:	3c 00                	cmp    $0x0,%al
    36b9:	02 04 01             	add    (%ecx,%eax,1),%al
    36bc:	06                   	push   %es
    36bd:	58                   	pop    %eax
    36be:	05 10 06 03 34       	add    $0x34030610,%eax
    36c3:	01 06                	add    %eax,(%esi)
    36c5:	01 4a 4a             	add    %ecx,0x4a(%edx)
    36c8:	05 09 06 13 05       	add    $0x5130609,%eax
    36cd:	14 06                	adc    $0x6,%al
    36cf:	01 05 0b 3c 05 0e    	add    %eax,0xe053c0b
    36d5:	3c 05                	cmp    $0x5,%al
    36d7:	10 06                	adc    %al,(%esi)
    36d9:	3b 06                	cmp    (%esi),%eax
    36db:	01 05 14 00 02 04    	add    %eax,0x4020014
    36e1:	01 4a 05             	add    %ecx,0x5(%edx)
    36e4:	10 00                	adc    %al,(%eax)
    36e6:	02 04 01             	add    (%ecx,%eax,1),%al
    36e9:	3c 05                	cmp    $0x5,%al
    36eb:	05 06 4d 05 08       	add    $0x8054d06,%eax
    36f0:	06                   	push   %es
    36f1:	01 05 05 06 3d 05    	add    %eax,0x53d0605
    36f7:	01 06                	add    %eax,(%esi)
    36f9:	13 2e                	adc    (%esi),%ebp
    36fb:	2e 02 02             	add    %cs:(%edx),%al
    36fe:	00 01                	add    %al,(%ecx)
    3700:	01 8c 00 00 00 02 00 	add    %ecx,0x20000(%eax,%eax,1)
    3707:	26 00 00             	add    %al,%es:(%eax)
    370a:	00 01                	add    %al,(%ecx)
    370c:	01 fb                	add    %edi,%ebx
    370e:	0e                   	push   %cs
    370f:	0d 00 01 01 01       	or     $0x1010100,%eax
    3714:	01 00                	add    %eax,(%eax)
    3716:	00 00                	add    %al,(%eax)
    3718:	01 00                	add    %eax,(%eax)
    371a:	00 01                	add    %al,(%ecx)
    371c:	00 6b 65             	add    %ch,0x65(%ebx)
    371f:	72 6e                	jb     378f <MBOOT_HEADER_FLAGS+0x378c>
    3721:	65 6c                	gs insb (%dx),%es:(%edi)
    3723:	2f                   	das
    3724:	62 6f 6f             	bound  %ebp,0x6f(%edi)
    3727:	74 2e                	je     3757 <MBOOT_HEADER_FLAGS+0x3754>
    3729:	61                   	popa
    372a:	73 6d                	jae    3799 <MBOOT_HEADER_FLAGS+0x3796>
    372c:	00 00                	add    %al,(%eax)
    372e:	00 00                	add    %al,(%eax)
    3730:	00 00                	add    %al,(%eax)
    3732:	05 02 40 32 10       	add    $0x10324002,%eax
    3737:	00 03                	add    %al,(%ebx)
    3739:	17                   	pop    %ss
    373a:	01 5b 2f             	add    %ebx,0x2f(%ebx)
    373d:	23 59 4b             	and    0x4b(%ecx),%ebx
    3740:	59                   	pop    %ecx
    3741:	3f                   	aas
    3742:	4b                   	dec    %ebx
    3743:	2f                   	das
    3744:	21 2f                	and    %ebp,(%edi)
    3746:	2f                   	das
    3747:	21 2f                	and    %ebp,(%edi)
    3749:	2f                   	das
    374a:	21 2f                	and    %ebp,(%edi)
    374c:	2f                   	das
    374d:	23 5b 22             	and    0x22(%ebx),%ebx
    3750:	21 34 30             	and    %esi,(%eax,%esi,1)
    3753:	2f                   	das
    3754:	21 21                	and    %esp,(%ecx)
    3756:	21 2f                	and    %ebp,(%edi)
    3758:	30 4b 2f             	xor    %cl,0x2f(%ebx)
    375b:	2f                   	das
    375c:	2f                   	das
    375d:	30 21                	xor    %ah,(%ecx)
    375f:	21 59 3e             	and    %ebx,0x3e(%ecx)
    3762:	2f                   	das
    3763:	2f                   	das
    3764:	21 21                	and    %esp,(%ecx)
    3766:	21 3d 23 30 59 21    	and    %edi,0x21593023
    376c:	21 21                	and    %esp,(%ecx)
    376e:	2f                   	das
    376f:	30 4b 2f             	xor    %cl,0x2f(%ebx)
    3772:	2f                   	das
    3773:	2f                   	das
    3774:	30 21                	xor    %ah,(%ecx)
    3776:	21 59 3e             	and    %ebx,0x3e(%ecx)
    3779:	2f                   	das
    377a:	2f                   	das
    377b:	21 21                	and    %esp,(%ecx)
    377d:	22 3d 25 4b 3d 4b    	and    0x4b3d4b25,%bh
    3783:	2f                   	das
    3784:	2f                   	das
    3785:	2f                   	das
    3786:	2f                   	das
    3787:	2f                   	das
    3788:	76 25                	jbe    37af <MBOOT_HEADER_FLAGS+0x37ac>
    378a:	4b                   	dec    %ebx
    378b:	3d 02 01 00 01       	cmp    $0x1000102,%eax
    3790:	01                   	.byte 0x1

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	69 6e 69 74 5f 67 64 	imul   $0x64675f74,0x69(%esi),%ebp
   7:	74 00                	je     9 <MBOOT_HEADER_FLAGS+0x6>
   9:	67 72 61             	addr16 jb 6d <MBOOT_HEADER_FLAGS+0x6a>
   c:	6e                   	outsb  %ds:(%esi),(%dx)
   d:	75 6c                	jne    7b <MBOOT_HEADER_FLAGS+0x78>
   f:	61                   	popa
  10:	72 69                	jb     7b <MBOOT_HEADER_FLAGS+0x78>
  12:	74 79                	je     8d <MBOOT_HEADER_FLAGS+0x8a>
  14:	00 61 63             	add    %ah,0x63(%ecx)
  17:	63 65 73             	arpl   %esp,0x73(%ebp)
  1a:	73 00                	jae    1c <MBOOT_HEADER_FLAGS+0x19>
  1c:	6c                   	insb   (%dx),%es:(%edi)
  1d:	69 6d 69 74 00 73 65 	imul   $0x65730074,0x69(%ebp),%ebp
  24:	74 5f                	je     85 <MBOOT_HEADER_FLAGS+0x82>
  26:	67 64 74 5f          	addr16 fs je 89 <MBOOT_HEADER_FLAGS+0x86>
  2a:	65 6e                	outsb  %gs:(%esi),(%dx)
  2c:	74 72                	je     a0 <MBOOT_HEADER_FLAGS+0x9d>
  2e:	79 00                	jns    30 <MBOOT_HEADER_FLAGS+0x2d>
  30:	47                   	inc    %edi
  31:	4e                   	dec    %esi
  32:	55                   	push   %ebp
  33:	20 43 31             	and    %al,0x31(%ebx)
  36:	37                   	aaa
  37:	20 31                	and    %dh,(%ecx)
  39:	34 2e                	xor    $0x2e,%al
  3b:	32 2e                	xor    (%esi),%ch
  3d:	30 20                	xor    %ah,(%eax)
  3f:	2d 6d 33 32 20       	sub    $0x2032336d,%eax
  44:	2d 6d 70 72 65       	sub    $0x6572706d,%eax
  49:	66 65 72 72          	data16 gs jb bf <MBOOT_HEADER_FLAGS+0xbc>
  4d:	65 64 2d 73 74 61 63 	gs fs sub $0x63617473,%eax
  54:	6b 2d 62 6f 75 6e 64 	imul   $0x64,0x6e756f62,%ebp
  5b:	61                   	popa
  5c:	72 79                	jb     d7 <MBOOT_HEADER_FLAGS+0xd4>
  5e:	3d 32 20 2d 6d       	cmp    $0x6d2d2032,%eax
  63:	74 75                	je     da <MBOOT_HEADER_FLAGS+0xd7>
  65:	6e                   	outsb  %ds:(%esi),(%dx)
  66:	65 3d 67 65 6e 65    	gs cmp $0x656e6567,%eax
  6c:	72 69                	jb     d7 <MBOOT_HEADER_FLAGS+0xd4>
  6e:	63 20                	arpl   %esp,(%eax)
  70:	2d 6d 61 72 63       	sub    $0x6372616d,%eax
  75:	68 3d 70 65 6e       	push   $0x6e65703d
  7a:	74 69                	je     e5 <MBOOT_HEADER_FLAGS+0xe2>
  7c:	75 6d                	jne    eb <MBOOT_HEADER_FLAGS+0xe8>
  7e:	70 72                	jo     f2 <MBOOT_HEADER_FLAGS+0xef>
  80:	6f                   	outsl  %ds:(%esi),(%dx)
  81:	20 2d 67 20 2d 4f    	and    %ch,0x4f2d2067
  87:	32 20                	xor    (%eax),%ah
  89:	2d 66 66 72 65       	sub    $0x65726666,%eax
  8e:	65 73 74             	gs jae 105 <MBOOT_HEADER_FLAGS+0x102>
  91:	61                   	popa
  92:	6e                   	outsb  %ds:(%esi),(%dx)
  93:	64 69 6e 67 20 2d 66 	imul   $0x6e662d20,%fs:0x67(%esi),%ebp
  9a:	6e 
  9b:	6f                   	outsl  %ds:(%esi),(%dx)
  9c:	2d 70 69 63 00       	sub    $0x636970,%eax
  a1:	75 69                	jne    10c <MBOOT_HEADER_FLAGS+0x109>
  a3:	6e                   	outsb  %ds:(%esi),(%dx)
  a4:	74 38                	je     de <MBOOT_HEADER_FLAGS+0xdb>
  a6:	5f                   	pop    %edi
  a7:	74 00                	je     a9 <MBOOT_HEADER_FLAGS+0xa6>
  a9:	75 6e                	jne    119 <MBOOT_HEADER_FLAGS+0x116>
  ab:	73 69                	jae    116 <MBOOT_HEADER_FLAGS+0x113>
  ad:	67 6e                	outsb  %ds:(%si),(%dx)
  af:	65 64 20 63 68       	gs and %ah,%fs:0x68(%ebx)
  b4:	61                   	popa
  b5:	72 00                	jb     b7 <MBOOT_HEADER_FLAGS+0xb4>
  b7:	75 69                	jne    122 <MBOOT_HEADER_FLAGS+0x11f>
  b9:	6e                   	outsb  %ds:(%esi),(%dx)
  ba:	74 33                	je     ef <MBOOT_HEADER_FLAGS+0xec>
  bc:	32 5f 74             	xor    0x74(%edi),%bl
  bf:	00 6c 6f 6e          	add    %ch,0x6e(%edi,%ebp,2)
  c3:	67 20 69 6e          	and    %ch,0x6e(%bx,%di)
  c7:	74 00                	je     c9 <MBOOT_HEADER_FLAGS+0xc6>
  c9:	6c                   	insb   (%dx),%es:(%edi)
  ca:	69 6d 69 74 5f 6c 6f 	imul   $0x6f6c5f74,0x69(%ebp),%ebp
  d1:	77 00                	ja     d3 <MBOOT_HEADER_FLAGS+0xd0>
  d3:	62 61 73             	bound  %esp,0x73(%ecx)
  d6:	65 5f                	gs pop %edi
  d8:	68 69 67 68 00       	push   $0x686769
  dd:	62 61 73             	bound  %esp,0x73(%ecx)
  e0:	65 5f                	gs pop %edi
  e2:	6d                   	insl   (%dx),%es:(%edi)
  e3:	69 64 64 6c 65 00 67 	imul   $0x64670065,0x6c(%esp,%eiz,2),%esp
  ea:	64 
  eb:	74 5f                	je     14c <MBOOT_HEADER_FLAGS+0x149>
  ed:	66 6c                	data16 insb (%dx),%es:(%edi)
  ef:	75 73                	jne    164 <MBOOT_HEADER_FLAGS+0x161>
  f1:	68 00 73 68 6f       	push   $0x6f687300
  f6:	72 74                	jb     16c <MBOOT_HEADER_FLAGS+0x169>
  f8:	20 75 6e             	and    %dh,0x6e(%ebp)
  fb:	73 69                	jae    166 <MBOOT_HEADER_FLAGS+0x163>
  fd:	67 6e                	outsb  %ds:(%si),(%dx)
  ff:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%ecx)
 104:	74 00                	je     106 <MBOOT_HEADER_FLAGS+0x103>
 106:	62 61 73             	bound  %esp,0x73(%ecx)
 109:	65 5f                	gs pop %edi
 10b:	6c                   	insb   (%dx),%es:(%edi)
 10c:	6f                   	outsl  %ds:(%esi),(%dx)
 10d:	77 00                	ja     10f <MBOOT_HEADER_FLAGS+0x10c>
 10f:	62 61 73             	bound  %esp,0x73(%ecx)
 112:	65 00 75 69          	add    %dh,%gs:0x69(%ebp)
 116:	6e                   	outsb  %ds:(%esi),(%dx)
 117:	74 31                	je     14a <MBOOT_HEADER_FLAGS+0x147>
 119:	36 5f                	ss pop %edi
 11b:	74 00                	je     11d <MBOOT_HEADER_FLAGS+0x11a>
 11d:	73 68                	jae    187 <MBOOT_HEADER_FLAGS+0x184>
 11f:	6f                   	outsl  %ds:(%esi),(%dx)
 120:	72 74                	jb     196 <MBOOT_HEADER_FLAGS+0x193>
 122:	20 69 6e             	and    %ch,0x6e(%ecx)
 125:	74 00                	je     127 <MBOOT_HEADER_FLAGS+0x124>
 127:	67 64 74 5f          	addr16 fs je 18a <MBOOT_HEADER_FLAGS+0x187>
 12b:	70 74                	jo     1a1 <MBOOT_HEADER_FLAGS+0x19e>
 12d:	72 00                	jb     12f <MBOOT_HEADER_FLAGS+0x12c>
 12f:	73 65                	jae    196 <MBOOT_HEADER_FLAGS+0x193>
 131:	74 5f                	je     192 <MBOOT_HEADER_FLAGS+0x18f>
 133:	69 64 74 5f 67 61 74 	imul   $0x65746167,0x5f(%esp,%esi,2),%esp
 13a:	65 
 13b:	00 69 6e             	add    %ch,0x6e(%ecx)
 13e:	69 74 5f 69 64 74 00 	imul   $0x6f007464,0x69(%edi,%ebx,2),%esi
 145:	6f 
 146:	66 66 73 65          	data16 data16 jae 1af <MBOOT_HEADER_FLAGS+0x1ac>
 14a:	74 5f                	je     1ab <MBOOT_HEADER_FLAGS+0x1a8>
 14c:	68 69 67 68 00       	push   $0x686769
 151:	69 73 72 30 00 69 64 	imul   $0x64690030,0x72(%ebx),%esi
 158:	74 5f                	je     1b9 <MBOOT_HEADER_FLAGS+0x1b6>
 15a:	65 6e                	outsb  %gs:(%esi),(%dx)
 15c:	74 72                	je     1d0 <MBOOT_HEADER_FLAGS+0x1cd>
 15e:	79 00                	jns    160 <MBOOT_HEADER_FLAGS+0x15d>
 160:	73 65                	jae    1c7 <MBOOT_HEADER_FLAGS+0x1c4>
 162:	6c                   	insb   (%dx),%es:(%edi)
 163:	65 63 74 6f 72       	arpl   %esi,%gs:0x72(%edi,%ebp,2)
 168:	00 7a 65             	add    %bh,0x65(%edx)
 16b:	72 6f                	jb     1dc <MBOOT_HEADER_FLAGS+0x1d9>
 16d:	00 69 73             	add    %ch,0x73(%ecx)
 170:	72 38                	jb     1aa <MBOOT_HEADER_FLAGS+0x1a7>
 172:	30 00                	xor    %al,(%eax)
 174:	69 64 74 5f 70 74 72 	imul   $0x727470,0x5f(%esp,%esi,2),%esp
 17b:	00 
 17c:	69 64 74 70 00 74 79 	imul   $0x70797400,0x70(%esp,%esi,2),%esp
 183:	70 
 184:	65 5f                	gs pop %edi
 186:	61                   	popa
 187:	74 74                	je     1fd <MBOOT_HEADER_FLAGS+0x1fa>
 189:	72 00                	jb     18b <MBOOT_HEADER_FLAGS+0x188>
 18b:	6f                   	outsl  %ds:(%esi),(%dx)
 18c:	66 66 73 65          	data16 data16 jae 1f5 <MBOOT_HEADER_FLAGS+0x1f2>
 190:	74 5f                	je     1f1 <MBOOT_HEADER_FLAGS+0x1ee>
 192:	6c                   	insb   (%dx),%es:(%edi)
 193:	6f                   	outsl  %ds:(%esi),(%dx)
 194:	77 00                	ja     196 <MBOOT_HEADER_FLAGS+0x193>
 196:	69 64 74 5f 66 6c 75 	imul   $0x73756c66,0x5f(%esp,%esi,2),%esp
 19d:	73 
 19e:	68 00 73 79 73       	push   $0x73797300
 1a3:	63 61 6c             	arpl   %esp,0x6c(%ecx)
 1a6:	6c                   	insb   (%dx),%es:(%edi)
 1a7:	00 75 73             	add    %dh,0x73(%ebp)
 1aa:	65 72 65             	gs jb  212 <MBOOT_HEADER_FLAGS+0x20f>
 1ad:	73 70                	jae    21f <MBOOT_HEADER_FLAGS+0x21c>
 1af:	00 70 72             	add    %dh,0x72(%eax)
 1b2:	69 6e 74 43 68 61 72 	imul   $0x72616843,0x74(%esi),%ebp
 1b9:	00 61 72             	add    %ah,0x72(%ecx)
 1bc:	67 31 00             	xor    %eax,(%bx,%si)
 1bf:	70 72                	jo     233 <MBOOT_HEADER_FLAGS+0x230>
 1c1:	69 6e 74 00 72 65 67 	imul   $0x67657200,0x74(%esi),%ebp
 1c8:	73 00                	jae    1ca <MBOOT_HEADER_FLAGS+0x1c7>
 1ca:	69 6e 74 5f 6e 6f 00 	imul   $0x6f6e5f,0x74(%esi),%ebp
 1d1:	69 73 72 5f 68 61 6e 	imul   $0x6e61685f,0x72(%ebx),%esi
 1d8:	64 6c                	fs insb (%dx),%es:(%edi)
 1da:	65 72 00             	gs jb  1dd <MBOOT_HEADER_FLAGS+0x1da>
 1dd:	72 65                	jb     244 <MBOOT_HEADER_FLAGS+0x241>
 1df:	67 69 73 74 65 72 73 	imul   $0x5f737265,0x74(%bp,%di),%esi
 1e6:	5f 
 1e7:	74 00                	je     1e9 <MBOOT_HEADER_FLAGS+0x1e6>
 1e9:	65 66 6c             	gs data16 insb (%dx),%es:(%edi)
 1ec:	61                   	popa
 1ed:	67 73 00             	addr16 jae 1f0 <MBOOT_HEADER_FLAGS+0x1ed>
 1f0:	65 72 72             	gs jb  265 <MBOOT_HEADER_FLAGS+0x262>
 1f3:	5f                   	pop    %edi
 1f4:	63 6f 64             	arpl   %ebp,0x64(%edi)
 1f7:	65 00 75 73          	add    %dh,%gs:0x73(%ebp)
 1fb:	65 6c                	gs insb (%dx),%es:(%edi)
 1fd:	65 73 73             	gs jae 273 <MBOOT_HEADER_FLAGS+0x270>
 200:	5f                   	pop    %edi
 201:	65 73 70             	gs jae 274 <MBOOT_HEADER_FLAGS+0x271>
 204:	00 72 65             	add    %dh,0x65(%edx)
 207:	74 72                	je     27b <MBOOT_HEADER_FLAGS+0x278>
 209:	69 65 73 00 61 74 61 	imul   $0x61746100,0x73(%ebp),%esp
 210:	5f                   	pop    %edi
 211:	69 6e 69 74 00 61 74 	imul   $0x74610074,0x69(%esi),%ebp
 218:	61                   	popa
 219:	5f                   	pop    %edi
 21a:	6f                   	outsl  %ds:(%esi),(%dx)
 21b:	6b 00 76             	imul   $0x76,(%eax),%eax
 21e:	67 61                	addr16 popa
 220:	5f                   	pop    %edi
 221:	77 72                	ja     295 <MBOOT_HEADER_FLAGS+0x292>
 223:	69 74 65 73 74 72 00 	imul   $0x73007274,0x73(%ebp,%eiz,2),%esi
 22a:	73 
 22b:	68 65 6c 6c 5f       	push   $0x5f6c6c65
 230:	69 6e 69 74 00 66 61 	imul   $0x61660074,0x69(%esi),%ebp
 237:	74 33                	je     26c <MBOOT_HEADER_FLAGS+0x269>
 239:	32 5f 69             	xor    0x69(%edi),%bl
 23c:	6e                   	outsb  %ds:(%esi),(%dx)
 23d:	69 74 00 6b 65 79 62 	imul   $0x6f627965,0x6b(%eax,%eax,1),%esi
 244:	6f 
 245:	61                   	popa
 246:	72 64                	jb     2ac <MBOOT_HEADER_FLAGS+0x2a9>
 248:	5f                   	pop    %edi
 249:	69 6e 69 74 00 62 6f 	imul   $0x6f620074,0x69(%esi),%ebp
 250:	6f                   	outsl  %ds:(%esi),(%dx)
 251:	6c                   	insb   (%dx),%es:(%edi)
 252:	00 76 67             	add    %dh,0x67(%esi)
 255:	61                   	popa
 256:	5f                   	pop    %edi
 257:	69 6e 69 74 00 6b 65 	imul   $0x656b0074,0x69(%esi),%ebp
 25e:	72 6e                	jb     2ce <MBOOT_HEADER_FLAGS+0x2cb>
 260:	65 6c                	gs insb (%dx),%es:(%edi)
 262:	5f                   	pop    %edi
 263:	6d                   	insl   (%dx),%es:(%edi)
 264:	61                   	popa
 265:	69 6e 00 73 68 65 6c 	imul   $0x6c656873,0x0(%esi),%ebp
 26c:	6c                   	insb   (%dx),%es:(%edi)
 26d:	5f                   	pop    %edi
 26e:	72 75                	jb     2e5 <MBOOT_HEADER_FLAGS+0x2e2>
 270:	6e                   	outsb  %ds:(%esi),(%dx)
 271:	00 56 47             	add    %dl,0x47(%esi)
 274:	41                   	inc    %ecx
 275:	5f                   	pop    %edi
 276:	42                   	inc    %edx
 277:	52                   	push   %edx
 278:	4f                   	dec    %edi
 279:	57                   	push   %edi
 27a:	4e                   	dec    %esi
 27b:	00 56 47             	add    %dl,0x47(%esi)
 27e:	41                   	inc    %ecx
 27f:	5f                   	pop    %edi
 280:	4c                   	dec    %esp
 281:	49                   	dec    %ecx
 282:	47                   	inc    %edi
 283:	48                   	dec    %eax
 284:	54                   	push   %esp
 285:	5f                   	pop    %edi
 286:	52                   	push   %edx
 287:	45                   	inc    %ebp
 288:	44                   	inc    %esp
 289:	00 56 47             	add    %dl,0x47(%esi)
 28c:	41                   	inc    %ecx
 28d:	5f                   	pop    %edi
 28e:	4c                   	dec    %esp
 28f:	49                   	dec    %ecx
 290:	47                   	inc    %edi
 291:	48                   	dec    %eax
 292:	54                   	push   %esp
 293:	5f                   	pop    %edi
 294:	47                   	inc    %edi
 295:	52                   	push   %edx
 296:	45                   	inc    %ebp
 297:	45                   	inc    %ebp
 298:	4e                   	dec    %esi
 299:	00 63 6d             	add    %ah,0x6d(%ebx)
 29c:	64 5f                	fs pop %edi
 29e:	63 61 74             	arpl   %esp,0x74(%ecx)
 2a1:	00 70 72             	add    %dh,0x72(%eax)
 2a4:	6f                   	outsl  %ds:(%esi),(%dx)
 2a5:	67 72 61             	addr16 jb 309 <MBOOT_HEADER_FLAGS+0x306>
 2a8:	6d                   	insl   (%dx),%es:(%edi)
 2a9:	5f                   	pop    %edi
 2aa:	69 6e 66 6f 5f 74 00 	imul   $0x745f6f,0x66(%esi),%ebp
 2b1:	74 65                	je     318 <MBOOT_HEADER_FLAGS+0x315>
 2b3:	6d                   	insl   (%dx),%es:(%edi)
 2b4:	70 00                	jo     2b6 <MBOOT_HEADER_FLAGS+0x2b3>
 2b6:	73 69                	jae    321 <MBOOT_HEADER_FLAGS+0x31e>
 2b8:	7a 65                	jp     31f <MBOOT_HEADER_FLAGS+0x31c>
 2ba:	5f                   	pop    %edi
 2bb:	74 00                	je     2bd <MBOOT_HEADER_FLAGS+0x2ba>
 2bd:	63 6d 64             	arpl   %ebp,0x64(%ebp)
 2c0:	5f                   	pop    %edi
 2c1:	6d                   	insl   (%dx),%es:(%edi)
 2c2:	6b 64 69 72 00       	imul   $0x0,0x72(%ecx,%ebp,2),%esp
 2c7:	63 6d 64             	arpl   %ebp,0x64(%ebp)
 2ca:	5f                   	pop    %edi
 2cb:	63 64 00 56          	arpl   %esp,0x56(%eax,%eax,1)
 2cf:	47                   	inc    %edi
 2d0:	41                   	inc    %ecx
 2d1:	5f                   	pop    %edi
 2d2:	4d                   	dec    %ebp
 2d3:	41                   	inc    %ecx
 2d4:	47                   	inc    %edi
 2d5:	45                   	inc    %ebp
 2d6:	4e                   	dec    %esi
 2d7:	54                   	push   %esp
 2d8:	41                   	inc    %ecx
 2d9:	00 56 47             	add    %dl,0x47(%esi)
 2dc:	41                   	inc    %ecx
 2dd:	5f                   	pop    %edi
 2de:	47                   	inc    %edi
 2df:	52                   	push   %edx
 2e0:	45                   	inc    %ebp
 2e1:	45                   	inc    %ebp
 2e2:	4e                   	dec    %esi
 2e3:	00 76 67             	add    %dh,0x67(%esi)
 2e6:	61                   	popa
 2e7:	5f                   	pop    %edi
 2e8:	73 65                	jae    34f <MBOOT_HEADER_FLAGS+0x34c>
 2ea:	74 5f                	je     34b <MBOOT_HEADER_FLAGS+0x348>
 2ec:	63 6f 6c             	arpl   %ebp,0x6c(%edi)
 2ef:	6f                   	outsl  %ds:(%esi),(%dx)
 2f0:	72 00                	jb     2f2 <MBOOT_HEADER_FLAGS+0x2ef>
 2f2:	6c                   	insb   (%dx),%es:(%edi)
 2f3:	73 5f                	jae    354 <MBOOT_HEADER_FLAGS+0x351>
 2f5:	63 61 6c             	arpl   %esp,0x6c(%ecx)
 2f8:	6c                   	insb   (%dx),%es:(%edi)
 2f9:	62 61 63             	bound  %esp,0x63(%ecx)
 2fc:	6b 00 66             	imul   $0x66,(%eax),%eax
 2ff:	61                   	popa
 300:	74 33                	je     335 <MBOOT_HEADER_FLAGS+0x332>
 302:	32 5f 72             	xor    0x72(%edi),%bl
 305:	65 61                	gs popa
 307:	64 5f                	fs pop %edi
 309:	66 69 6c 65 00 56 47 	imul   $0x4756,0x0(%ebp,%eiz,2),%bp
 310:	41                   	inc    %ecx
 311:	5f                   	pop    %edi
 312:	44                   	inc    %esp
 313:	41                   	inc    %ecx
 314:	52                   	push   %edx
 315:	4b                   	dec    %ebx
 316:	5f                   	pop    %edi
 317:	47                   	inc    %edi
 318:	52                   	push   %edx
 319:	45                   	inc    %ebp
 31a:	59                   	pop    %ecx
 31b:	00 63 6d             	add    %ah,0x6d(%ebx)
 31e:	64 5f                	fs pop %edi
 320:	65 78 65             	gs js  388 <MBOOT_HEADER_FLAGS+0x385>
 323:	63 00                	arpl   %eax,(%eax)
 325:	66 61                	popaw
 327:	74 33                	je     35c <MBOOT_HEADER_FLAGS+0x359>
 329:	32 5f 64             	xor    0x64(%edi),%bl
 32c:	65 6c                	gs insb (%dx),%es:(%edi)
 32e:	65 74 65             	gs je  396 <MBOOT_HEADER_FLAGS+0x393>
 331:	5f                   	pop    %edi
 332:	66 69 6c 65 00 76 61 	imul   $0x6176,0x0(%ebp,%eiz,2),%bp
 339:	6c                   	insb   (%dx),%es:(%edi)
 33a:	75 65                	jne    3a1 <MBOOT_HEADER_FLAGS+0x39e>
 33c:	00 56 47             	add    %dl,0x47(%esi)
 33f:	41                   	inc    %ecx
 340:	5f                   	pop    %edi
 341:	4c                   	dec    %esp
 342:	49                   	dec    %ecx
 343:	47                   	inc    %edi
 344:	48                   	dec    %eax
 345:	54                   	push   %esp
 346:	5f                   	pop    %edi
 347:	42                   	inc    %edx
 348:	4c                   	dec    %esp
 349:	55                   	push   %ebp
 34a:	45                   	inc    %ebp
 34b:	00 63 6d             	add    %ah,0x6d(%ebx)
 34e:	64 5f                	fs pop %edi
 350:	64 65 6c             	fs gs insb (%dx),%es:(%edi)
 353:	65 74 65             	gs je  3bb <MBOOT_HEADER_FLAGS+0x3b8>
 356:	00 63 6d             	add    %ah,0x6d(%ebx)
 359:	64 5f                	fs pop %edi
 35b:	77 72                	ja     3cf <MBOOT_HEADER_FLAGS+0x3cc>
 35d:	69 74 65 5f 62 69 6e 	imul   $0x616e6962,0x5f(%ebp,%eiz,2),%esi
 364:	61 
 365:	72 79                	jb     3e0 <MBOOT_HEADER_FLAGS+0x3dd>
 367:	00 64 69 72          	add    %ah,0x72(%ecx,%ebp,2)
 36b:	6e                   	outsb  %ds:(%esi),(%dx)
 36c:	61                   	popa
 36d:	6d                   	insl   (%dx),%es:(%edi)
 36e:	65 00 6e 61          	add    %ch,%gs:0x61(%esi)
 372:	6d                   	insl   (%dx),%es:(%edi)
 373:	65 5f                	gs pop %edi
 375:	6c                   	insb   (%dx),%es:(%edi)
 376:	65 6e                	outsb  %gs:(%esi),(%dx)
 378:	00 56 47             	add    %dl,0x47(%esi)
 37b:	41                   	inc    %ecx
 37c:	5f                   	pop    %edi
 37d:	4c                   	dec    %esp
 37e:	49                   	dec    %ecx
 37f:	47                   	inc    %edi
 380:	48                   	dec    %eax
 381:	54                   	push   %esp
 382:	5f                   	pop    %edi
 383:	4d                   	dec    %ebp
 384:	41                   	inc    %ecx
 385:	47                   	inc    %edi
 386:	45                   	inc    %ebp
 387:	4e                   	dec    %esi
 388:	54                   	push   %esp
 389:	41                   	inc    %ecx
 38a:	00 66 61             	add    %ah,0x61(%esi)
 38d:	74 33                	je     3c2 <MBOOT_HEADER_FLAGS+0x3bf>
 38f:	32 5f 77             	xor    0x77(%edi),%bl
 392:	72 69                	jb     3fd <MBOOT_HEADER_FLAGS+0x3fa>
 394:	74 65                	je     3fb <MBOOT_HEADER_FLAGS+0x3f8>
 396:	5f                   	pop    %edi
 397:	66 69 6c 65 00 6d 65 	imul   $0x656d,0x0(%ebp,%eiz,2),%bp
 39e:	6d                   	insl   (%dx),%es:(%edi)
 39f:	73 65                	jae    406 <MBOOT_HEADER_FLAGS+0x403>
 3a1:	74 00                	je     3a3 <MBOOT_HEADER_FLAGS+0x3a0>
 3a3:	56                   	push   %esi
 3a4:	47                   	inc    %edi
 3a5:	41                   	inc    %ecx
 3a6:	5f                   	pop    %edi
 3a7:	43                   	inc    %ebx
 3a8:	59                   	pop    %ecx
 3a9:	41                   	inc    %ecx
 3aa:	4e                   	dec    %esi
 3ab:	00 70 72             	add    %dh,0x72(%eax)
 3ae:	69 6e 74 5f 70 72 6f 	imul   $0x6f72705f,0x74(%esi),%ebp
 3b5:	6d                   	insl   (%dx),%es:(%edi)
 3b6:	70 74                	jo     42c <MBOOT_HEADER_FLAGS+0x429>
 3b8:	00 63 6d             	add    %ah,0x6d(%ebx)
 3bb:	64 5f                	fs pop %edi
 3bd:	72 65                	jb     424 <MBOOT_HEADER_FLAGS+0x421>
 3bf:	61                   	popa
 3c0:	64 5f                	fs pop %edi
 3c2:	62 69 6e             	bound  %ebp,0x6e(%ecx)
 3c5:	61                   	popa
 3c6:	72 79                	jb     441 <MBOOT_HEADER_FLAGS+0x43e>
 3c8:	00 70 72             	add    %dh,0x72(%eax)
 3cb:	6f                   	outsl  %ds:(%esi),(%dx)
 3cc:	67 5f                	addr16 pop %edi
 3ce:	69 6e 66 6f 00 73 68 	imul   $0x6873006f,0x66(%esi),%ebp
 3d5:	65 6c                	gs insb (%dx),%es:(%edi)
 3d7:	6c                   	insb   (%dx),%es:(%edi)
 3d8:	5f                   	pop    %edi
 3d9:	68 61 6e 64 6c       	push   $0x6c646e61
 3de:	65 5f                	gs pop %edi
 3e0:	6b 65 79 70          	imul   $0x70,0x79(%ebp),%esp
 3e4:	72 65                	jb     44b <MBOOT_HEADER_FLAGS+0x448>
 3e6:	73 73                	jae    45b <MBOOT_HEADER_FLAGS+0x458>
 3e8:	00 65 78             	add    %ah,0x78(%ebp)
 3eb:	74 5f                	je     44c <MBOOT_HEADER_FLAGS+0x449>
 3ed:	70 6f                	jo     45e <MBOOT_HEADER_FLAGS+0x45b>
 3ef:	73 00                	jae    3f1 <MBOOT_HEADER_FLAGS+0x3ee>
 3f1:	63 6d 64             	arpl   %ebp,0x64(%ebp)
 3f4:	5f                   	pop    %edi
 3f5:	69 6e 64 65 78 00 66 	imul   $0x66007865,0x64(%esi),%ebp
 3fc:	61                   	popa
 3fd:	74 33                	je     432 <MBOOT_HEADER_FLAGS+0x42f>
 3ff:	32 5f 67             	xor    0x67(%edi),%bl
 402:	65 74 5f             	gs je  464 <MBOOT_HEADER_FLAGS+0x461>
 405:	63 75 72             	arpl   %esi,0x72(%ebp)
 408:	72 65                	jb     46f <MBOOT_HEADER_FLAGS+0x46c>
 40a:	6e                   	outsb  %ds:(%esi),(%dx)
 40b:	74 5f                	je     46c <MBOOT_HEADER_FLAGS+0x469>
 40d:	70 61                	jo     470 <MBOOT_HEADER_FLAGS+0x46d>
 40f:	74 68                	je     479 <MBOOT_HEADER_FLAGS+0x476>
 411:	00 63 6d             	add    %ah,0x6d(%ebx)
 414:	64 5f                	fs pop %edi
 416:	68 65 6c 70 00       	push   $0x706c65
 41b:	63 6d 64             	arpl   %ebp,0x64(%ebp)
 41e:	5f                   	pop    %edi
 41f:	61                   	popa
 420:	62 6f 75             	bound  %ebp,0x75(%edi)
 423:	74 00                	je     425 <MBOOT_HEADER_FLAGS+0x422>
 425:	6c                   	insb   (%dx),%es:(%edi)
 426:	6f                   	outsl  %ds:(%esi),(%dx)
 427:	6e                   	outsb  %ds:(%esi),(%dx)
 428:	67 20 6c 6f          	and    %ch,0x6f(%si)
 42c:	6e                   	outsb  %ds:(%esi),(%dx)
 42d:	67 20 75 6e          	and    %dh,0x6e(%di)
 431:	73 69                	jae    49c <MBOOT_HEADER_FLAGS+0x499>
 433:	67 6e                	outsb  %ds:(%si),(%dx)
 435:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%ecx)
 43a:	74 00                	je     43c <MBOOT_HEADER_FLAGS+0x439>
 43c:	61                   	popa
 43d:	72 67                	jb     4a6 <MBOOT_HEADER_FLAGS+0x4a3>
 43f:	73 00                	jae    441 <MBOOT_HEADER_FLAGS+0x43e>
 441:	63 6d 64             	arpl   %ebp,0x64(%ebp)
 444:	5f                   	pop    %edi
 445:	6c                   	insb   (%dx),%es:(%edi)
 446:	73 00                	jae    448 <MBOOT_HEADER_FLAGS+0x445>
 448:	73 68                	jae    4b2 <MBOOT_HEADER_FLAGS+0x4af>
 44a:	65 6c                	gs insb (%dx),%es:(%edi)
 44c:	6c                   	insb   (%dx),%es:(%edi)
 44d:	5f                   	pop    %edi
 44e:	70 72                	jo     4c2 <MBOOT_HEADER_FLAGS+0x4bf>
 450:	6f                   	outsl  %ds:(%esi),(%dx)
 451:	63 65 73             	arpl   %esp,0x73(%ebp)
 454:	73 5f                	jae    4b5 <MBOOT_HEADER_FLAGS+0x4b2>
 456:	63 6f 6d             	arpl   %ebp,0x6d(%edi)
 459:	6d                   	insl   (%dx),%es:(%edi)
 45a:	61                   	popa
 45b:	6e                   	outsb  %ds:(%esi),(%dx)
 45c:	64 00 62 69          	add    %ah,%fs:0x69(%edx)
 460:	6e                   	outsb  %ds:(%esi),(%dx)
 461:	61                   	popa
 462:	72 79                	jb     4dd <MBOOT_HEADER_FLAGS+0x4da>
 464:	5f                   	pop    %edi
 465:	73 69                	jae    4d0 <MBOOT_HEADER_FLAGS+0x4cd>
 467:	7a 65                	jp     4ce <MBOOT_HEADER_FLAGS+0x4cb>
 469:	00 68 65             	add    %ch,0x65(%eax)
 46c:	78 64                	js     4d2 <MBOOT_HEADER_FLAGS+0x4cf>
 46e:	61                   	popa
 46f:	74 61                	je     4d2 <MBOOT_HEADER_FLAGS+0x4cf>
 471:	00 63 6f             	add    %ah,0x6f(%ebx)
 474:	70 79                	jo     4ef <MBOOT_HEADER_FLAGS+0x4ec>
 476:	5f                   	pop    %edi
 477:	6c                   	insb   (%dx),%es:(%edi)
 478:	65 6e                	outsb  %gs:(%esi),(%dx)
 47a:	00 65 6e             	add    %ah,0x6e(%ebp)
 47d:	74 72                	je     4f1 <MBOOT_HEADER_FLAGS+0x4ee>
 47f:	79 5f                	jns    4e0 <MBOOT_HEADER_FLAGS+0x4dd>
 481:	70 6f                	jo     4f2 <MBOOT_HEADER_FLAGS+0x4ef>
 483:	69 6e 74 00 56 47 41 	imul   $0x41475600,0x74(%esi),%ebp
 48a:	5f                   	pop    %edi
 48b:	57                   	push   %edi
 48c:	48                   	dec    %eax
 48d:	49                   	dec    %ecx
 48e:	54                   	push   %esp
 48f:	45                   	inc    %ebp
 490:	00 73 74             	add    %dh,0x74(%ebx)
 493:	72 6c                	jb     501 <MBOOT_HEADER_FLAGS+0x4fe>
 495:	65 6e                	outsb  %gs:(%esi),(%dx)
 497:	00 66 61             	add    %ah,0x61(%esi)
 49a:	74 5f                	je     4fb <MBOOT_HEADER_FLAGS+0x4f8>
 49c:	6e                   	outsb  %ds:(%esi),(%dx)
 49d:	61                   	popa
 49e:	6d                   	insl   (%dx),%es:(%edi)
 49f:	65 00 56 47          	add    %dl,%gs:0x47(%esi)
 4a3:	41                   	inc    %ecx
 4a4:	5f                   	pop    %edi
 4a5:	4c                   	dec    %esp
 4a6:	49                   	dec    %ecx
 4a7:	47                   	inc    %edi
 4a8:	48                   	dec    %eax
 4a9:	54                   	push   %esp
 4aa:	5f                   	pop    %edi
 4ab:	43                   	inc    %ebx
 4ac:	59                   	pop    %ecx
 4ad:	41                   	inc    %ecx
 4ae:	4e                   	dec    %esi
 4af:	00 66 61             	add    %ah,0x61(%esi)
 4b2:	74 33                	je     4e7 <MBOOT_HEADER_FLAGS+0x4e4>
 4b4:	32 5f 63             	xor    0x63(%edi),%bl
 4b7:	68 61 6e 67 65       	push   $0x65676e61
 4bc:	5f                   	pop    %edi
 4bd:	64 69 72 65 63 74 6f 	imul   $0x726f7463,%fs:0x65(%edx),%esi
 4c4:	72 
 4c5:	79 00                	jns    4c7 <MBOOT_HEADER_FLAGS+0x4c4>
 4c7:	6c                   	insb   (%dx),%es:(%edi)
 4c8:	6f                   	outsl  %ds:(%esi),(%dx)
 4c9:	61                   	popa
 4ca:	64 5f                	fs pop %edi
 4cc:	70 72                	jo     540 <MBOOT_HEADER_FLAGS+0x53d>
 4ce:	6f                   	outsl  %ds:(%esi),(%dx)
 4cf:	67 72 61             	addr16 jb 533 <MBOOT_HEADER_FLAGS+0x530>
 4d2:	6d                   	insl   (%dx),%es:(%edi)
 4d3:	00 63 6d             	add    %ah,0x6d(%ebx)
 4d6:	64 5f                	fs pop %edi
 4d8:	62 75 66             	bound  %esi,0x66(%ebp)
 4db:	66 65 72 00          	data16 gs jb 4df <MBOOT_HEADER_FLAGS+0x4dc>
 4df:	56                   	push   %esi
 4e0:	47                   	inc    %edi
 4e1:	41                   	inc    %ecx
 4e2:	5f                   	pop    %edi
 4e3:	42                   	inc    %edx
 4e4:	4c                   	dec    %esp
 4e5:	41                   	inc    %ecx
 4e6:	43                   	inc    %ebx
 4e7:	4b                   	dec    %ebx
 4e8:	00 6b 65             	add    %ch,0x65(%ebx)
 4eb:	79 62                	jns    54f <MBOOT_HEADER_FLAGS+0x54c>
 4ed:	6f                   	outsl  %ds:(%esi),(%dx)
 4ee:	61                   	popa
 4ef:	72 64                	jb     555 <MBOOT_HEADER_FLAGS+0x552>
 4f1:	5f                   	pop    %edi
 4f2:	72 65                	jb     559 <MBOOT_HEADER_FLAGS+0x556>
 4f4:	61                   	popa
 4f5:	64 00 66 61          	add    %ah,%fs:0x61(%esi)
 4f9:	74 33                	je     52e <MBOOT_HEADER_FLAGS+0x52b>
 4fb:	32 5f 63             	xor    0x63(%edi),%bl
 4fe:	72 65                	jb     565 <MBOOT_HEADER_FLAGS+0x562>
 500:	61                   	popa
 501:	74 65                	je     568 <MBOOT_HEADER_FLAGS+0x565>
 503:	5f                   	pop    %edi
 504:	64 69 72 65 63 74 6f 	imul   $0x726f7463,%fs:0x65(%edx),%esi
 50b:	72 
 50c:	79 00                	jns    50e <MBOOT_HEADER_FLAGS+0x50b>
 50e:	56                   	push   %esi
 50f:	47                   	inc    %edi
 510:	41                   	inc    %ecx
 511:	5f                   	pop    %edi
 512:	52                   	push   %edx
 513:	45                   	inc    %ebp
 514:	44                   	inc    %esp
 515:	00 76 67             	add    %dh,0x67(%esi)
 518:	61                   	popa
 519:	5f                   	pop    %edi
 51a:	63 6f 6c             	arpl   %ebp,0x6c(%edi)
 51d:	6f                   	outsl  %ds:(%esi),(%dx)
 51e:	72 00                	jb     520 <MBOOT_HEADER_FLAGS+0x51d>
 520:	73 69                	jae    58b <MBOOT_HEADER_FLAGS+0x588>
 522:	7a 65                	jp     589 <MBOOT_HEADER_FLAGS+0x586>
 524:	5f                   	pop    %edi
 525:	73 74                	jae    59b <MBOOT_HEADER_FLAGS+0x598>
 527:	72 00                	jb     529 <MBOOT_HEADER_FLAGS+0x526>
 529:	73 74                	jae    59f <MBOOT_HEADER_FLAGS+0x59c>
 52b:	72 63                	jb     590 <MBOOT_HEADER_FLAGS+0x58d>
 52d:	6d                   	insl   (%dx),%es:(%edi)
 52e:	70 00                	jo     530 <MBOOT_HEADER_FLAGS+0x52d>
 530:	66 61                	popaw
 532:	74 33                	je     567 <MBOOT_HEADER_FLAGS+0x564>
 534:	32 5f 6c             	xor    0x6c(%edi),%bl
 537:	69 73 74 5f 64 69 72 	imul   $0x7269645f,0x74(%ebx),%esi
 53e:	65 63 74 6f 72       	arpl   %esi,%gs:0x72(%edi,%ebp,2)
 543:	79 00                	jns    545 <MBOOT_HEADER_FLAGS+0x542>
 545:	66 61                	popaw
 547:	74 33                	je     57c <MBOOT_HEADER_FLAGS+0x579>
 549:	32 5f 63             	xor    0x63(%edi),%bl
 54c:	72 65                	jb     5b3 <MBOOT_HEADER_FLAGS+0x5b0>
 54e:	61                   	popa
 54f:	74 65                	je     5b6 <MBOOT_HEADER_FLAGS+0x5b3>
 551:	5f                   	pop    %edi
 552:	66 69 6c 65 00 76 67 	imul   $0x6776,0x0(%ebp,%eiz,2),%bp
 559:	61                   	popa
 55a:	5f                   	pop    %edi
 55b:	70 75                	jo     5d2 <MBOOT_HEADER_FLAGS+0x5cf>
 55d:	74 63                	je     5c2 <MBOOT_HEADER_FLAGS+0x5bf>
 55f:	68 61 72 00 76       	push   $0x76007261
 564:	67 61                	addr16 popa
 566:	5f                   	pop    %edi
 567:	63 6c 65 61          	arpl   %ebp,0x61(%ebp,%eiz,2)
 56b:	72 00                	jb     56d <MBOOT_HEADER_FLAGS+0x56a>
 56d:	56                   	push   %esi
 56e:	47                   	inc    %edi
 56f:	41                   	inc    %ecx
 570:	5f                   	pop    %edi
 571:	42                   	inc    %edx
 572:	4c                   	dec    %esp
 573:	55                   	push   %ebp
 574:	45                   	inc    %ebp
 575:	00 6c 6f 61          	add    %ch,0x61(%edi,%ebp,2)
 579:	64 65 64 00 63 6d    	fs gs add %ah,%fs:0x6d(%ebx)
 57f:	64 5f                	fs pop %edi
 581:	63 72 65             	arpl   %esi,0x65(%edx)
 584:	61                   	popa
 585:	74 65                	je     5ec <MBOOT_HEADER_FLAGS+0x5e9>
 587:	00 56 47             	add    %dl,0x47(%esi)
 58a:	41                   	inc    %ecx
 58b:	5f                   	pop    %edi
 58c:	4c                   	dec    %esp
 58d:	49                   	dec    %ecx
 58e:	47                   	inc    %edi
 58f:	48                   	dec    %eax
 590:	54                   	push   %esp
 591:	5f                   	pop    %edi
 592:	42                   	inc    %edx
 593:	52                   	push   %edx
 594:	4f                   	dec    %edi
 595:	57                   	push   %edi
 596:	4e                   	dec    %esi
 597:	00 6a 75             	add    %ch,0x75(%edx)
 59a:	6d                   	insl   (%dx),%es:(%edi)
 59b:	70 5f                	jo     5fc <MBOOT_HEADER_FLAGS+0x5f9>
 59d:	74 6f                	je     60e <MBOOT_HEADER_FLAGS+0x60b>
 59f:	5f                   	pop    %edi
 5a0:	70 72                	jo     614 <MBOOT_HEADER_FLAGS+0x611>
 5a2:	6f                   	outsl  %ds:(%esi),(%dx)
 5a3:	67 72 61             	addr16 jb 607 <MBOOT_HEADER_FLAGS+0x604>
 5a6:	6d                   	insl   (%dx),%es:(%edi)
 5a7:	00 63 6d             	add    %ah,0x6d(%ebx)
 5aa:	64 5f                	fs pop %edi
 5ac:	63 6c 65 61          	arpl   %ebp,0x61(%ebp,%eiz,2)
 5b0:	72 00                	jb     5b2 <MBOOT_HEADER_FLAGS+0x5af>
 5b2:	56                   	push   %esi
 5b3:	47                   	inc    %edi
 5b4:	41                   	inc    %ecx
 5b5:	5f                   	pop    %edi
 5b6:	4c                   	dec    %esp
 5b7:	49                   	dec    %ecx
 5b8:	47                   	inc    %edi
 5b9:	48                   	dec    %eax
 5ba:	54                   	push   %esp
 5bb:	5f                   	pop    %edi
 5bc:	47                   	inc    %edi
 5bd:	52                   	push   %edx
 5be:	45                   	inc    %ebp
 5bf:	59                   	pop    %ecx
 5c0:	00 68 65             	add    %ch,0x65(%eax)
 5c3:	78 5f                	js     624 <MBOOT_HEADER_FLAGS+0x621>
 5c5:	6c                   	insb   (%dx),%es:(%edi)
 5c6:	65 6e                	outsb  %gs:(%esi),(%dx)
 5c8:	00 73 74             	add    %dh,0x74(%ebx)
 5cb:	61                   	popa
 5cc:	63 6b 5f             	arpl   %ebp,0x5f(%ebx)
 5cf:	70 6f                	jo     640 <MBOOT_HEADER_FLAGS+0x63d>
 5d1:	69 6e 74 65 72 00 61 	imul   $0x61007265,0x74(%esi),%ebp
 5d8:	74 61                	je     63b <MBOOT_HEADER_FLAGS+0x638>
 5da:	5f                   	pop    %edi
 5db:	69 6e 69 74 69 61 6c 	imul   $0x6c616974,0x69(%esi),%ebp
 5e2:	69 7a 65 64 00 61 74 	imul   $0x74610064,0x65(%edx),%edi
 5e9:	61                   	popa
 5ea:	5f                   	pop    %edi
 5eb:	34 30                	xor    $0x30,%al
 5ed:	30 6e 73             	xor    %ch,0x73(%esi)
 5f0:	5f                   	pop    %edi
 5f1:	64 65 6c             	fs gs insb (%dx),%es:(%edi)
 5f4:	61                   	popa
 5f5:	79 00                	jns    5f7 <MBOOT_HEADER_FLAGS+0x5f4>
 5f7:	73 74                	jae    66d <MBOOT_HEADER_FLAGS+0x66a>
 5f9:	61                   	popa
 5fa:	74 75                	je     671 <MBOOT_HEADER_FLAGS+0x66e>
 5fc:	73 00                	jae    5fe <MBOOT_HEADER_FLAGS+0x5fb>
 5fe:	61                   	popa
 5ff:	74 61                	je     662 <MBOOT_HEADER_FLAGS+0x65f>
 601:	5f                   	pop    %edi
 602:	77 61                	ja     665 <MBOOT_HEADER_FLAGS+0x662>
 604:	69 74 5f 64 72 71 00 	imul   $0x61007172,0x64(%edi,%ebx,2),%esi
 60b:	61 
 60c:	74 61                	je     66f <MBOOT_HEADER_FLAGS+0x66c>
 60e:	5f                   	pop    %edi
 60f:	77 72                	ja     683 <MBOOT_HEADER_FLAGS+0x680>
 611:	69 74 65 5f 73 65 63 	imul   $0x74636573,0x5f(%ebp,%eiz,2),%esi
 618:	74 
 619:	6f                   	outsl  %ds:(%esi),(%dx)
 61a:	72 73                	jb     68f <MBOOT_HEADER_FLAGS+0x68c>
 61c:	00 73 65             	add    %dh,0x65(%ebx)
 61f:	63 74 6f 72          	arpl   %esi,0x72(%edi,%ebp,2)
 623:	5f                   	pop    %edi
 624:	63 6f 75             	arpl   %ebp,0x75(%edi)
 627:	6e                   	outsb  %ds:(%esi),(%dx)
 628:	74 00                	je     62a <MBOOT_HEADER_FLAGS+0x627>
 62a:	6f                   	outsl  %ds:(%esi),(%dx)
 62b:	75 74                	jne    6a1 <MBOOT_HEADER_FLAGS+0x69e>
 62d:	62 00                	bound  %eax,(%eax)
 62f:	61                   	popa
 630:	74 61                	je     693 <MBOOT_HEADER_FLAGS+0x690>
 632:	5f                   	pop    %edi
 633:	72 65                	jb     69a <MBOOT_HEADER_FLAGS+0x697>
 635:	61                   	popa
 636:	64 5f                	fs pop %edi
 638:	73 65                	jae    69f <MBOOT_HEADER_FLAGS+0x69c>
 63a:	63 74 6f 72          	arpl   %esi,0x72(%edi,%ebp,2)
 63e:	73 00                	jae    640 <MBOOT_HEADER_FLAGS+0x63d>
 640:	6f                   	outsl  %ds:(%esi),(%dx)
 641:	75 74                	jne    6b7 <MBOOT_HEADER_FLAGS+0x6b4>
 643:	77 00                	ja     645 <MBOOT_HEADER_FLAGS+0x642>
 645:	74 69                	je     6b0 <MBOOT_HEADER_FLAGS+0x6ad>
 647:	6d                   	insl   (%dx),%es:(%edi)
 648:	65 6f                	outsl  %gs:(%esi),(%dx)
 64a:	75 74                	jne    6c0 <MBOOT_HEADER_FLAGS+0x6bd>
 64c:	00 70 6f             	add    %dh,0x6f(%eax)
 64f:	72 74                	jb     6c5 <MBOOT_HEADER_FLAGS+0x6c2>
 651:	00 61 74             	add    %ah,0x74(%ecx)
 654:	61                   	popa
 655:	5f                   	pop    %edi
 656:	77 61                	ja     6b9 <MBOOT_HEADER_FLAGS+0x6b6>
 658:	69 74 5f 6e 6f 74 5f 	imul   $0x625f746f,0x6e(%edi,%ebx,2),%esi
 65f:	62 
 660:	75 73                	jne    6d5 <MBOOT_HEADER_FLAGS+0x6d2>
 662:	79 00                	jns    664 <MBOOT_HEADER_FLAGS+0x661>
 664:	66 61                	popaw
 666:	74 5f                	je     6c7 <MBOOT_HEADER_FLAGS+0x6c4>
 668:	73 69                	jae    6d3 <MBOOT_HEADER_FLAGS+0x6d0>
 66a:	7a 65                	jp     6d1 <MBOOT_HEADER_FLAGS+0x6ce>
 66c:	5f                   	pop    %edi
 66d:	31 36                	xor    %esi,(%esi)
 66f:	00 66 73             	add    %ah,0x73(%esi)
 672:	5f                   	pop    %edi
 673:	76 65                	jbe    6da <MBOOT_HEADER_FLAGS+0x6d7>
 675:	72 73                	jb     6ea <MBOOT_HEADER_FLAGS+0x6e7>
 677:	69 6f 6e 00 65 6e 74 	imul   $0x746e6500,0x6e(%edi),%ebp
 67e:	72 79                	jb     6f9 <MBOOT_HEADER_FLAGS+0x6f6>
 680:	5f                   	pop    %edi
 681:	73 65                	jae    6e8 <MBOOT_HEADER_FLAGS+0x6e5>
 683:	63 74 6f 72          	arpl   %esi,0x72(%edi,%ebp,2)
 687:	00 66 61             	add    %ah,0x61(%esi)
 68a:	74 33                	je     6bf <MBOOT_HEADER_FLAGS+0x6bc>
 68c:	32 5f 67             	xor    0x67(%edi),%bl
 68f:	65 74 5f             	gs je  6f1 <MBOOT_HEADER_FLAGS+0x6ee>
 692:	63 75 72             	arpl   %esi,0x72(%ebp)
 695:	72 65                	jb     6fc <MBOOT_HEADER_FLAGS+0x6f9>
 697:	6e                   	outsb  %ds:(%esi),(%dx)
 698:	74 5f                	je     6f9 <MBOOT_HEADER_FLAGS+0x6f6>
 69a:	64 69 72 65 63 74 6f 	imul   $0x726f7463,%fs:0x65(%edx),%esi
 6a1:	72 
 6a2:	79 00                	jns    6a4 <MBOOT_HEADER_FLAGS+0x6a1>
 6a4:	61                   	popa
 6a5:	74 74                	je     71b <MBOOT_HEADER_FLAGS+0x718>
 6a7:	72 69                	jb     712 <MBOOT_HEADER_FLAGS+0x70f>
 6a9:	62 75 74             	bound  %esi,0x74(%ebp)
 6ac:	65 73 00             	gs jae 6af <MBOOT_HEADER_FLAGS+0x6ac>
 6af:	73 65                	jae    716 <MBOOT_HEADER_FLAGS+0x713>
 6b1:	63 74 6f 72          	arpl   %esi,0x72(%edi,%ebp,2)
 6b5:	73 5f                	jae    716 <MBOOT_HEADER_FLAGS+0x713>
 6b7:	74 6f                	je     728 <MBOOT_HEADER_FLAGS+0x725>
 6b9:	5f                   	pop    %edi
 6ba:	77 72                	ja     72e <MBOOT_HEADER_FLAGS+0x72b>
 6bc:	69 74 65 00 66 69 72 	imul   $0x73726966,0x0(%ebp,%eiz,2),%esi
 6c3:	73 
 6c4:	74 5f                	je     725 <MBOOT_HEADER_FLAGS+0x722>
 6c6:	63 6c 75 73          	arpl   %ebp,0x73(%ebp,%esi,2)
 6ca:	74 65                	je     731 <MBOOT_HEADER_FLAGS+0x72e>
 6cc:	72 5f                	jb     72d <MBOOT_HEADER_FLAGS+0x72a>
 6ce:	6c                   	insb   (%dx),%es:(%edi)
 6cf:	6f                   	outsl  %ds:(%esi),(%dx)
 6d0:	77 00                	ja     6d2 <MBOOT_HEADER_FLAGS+0x6cf>
 6d2:	69 73 5f 69 6e 69 74 	imul   $0x74696e69,0x5f(%ebx),%esi
 6d9:	69 61 6c 69 7a 65 64 	imul   $0x64657a69,0x6c(%ecx),%esp
 6e0:	00 70 61             	add    %dh,0x61(%eax)
 6e3:	72 65                	jb     74a <MBOOT_HEADER_FLAGS+0x747>
 6e5:	6e                   	outsb  %ds:(%esi),(%dx)
 6e6:	74 5f                	je     747 <MBOOT_HEADER_FLAGS+0x744>
 6e8:	64 69 72 65 63 74 6f 	imul   $0x726f7463,%fs:0x65(%edx),%esi
 6ef:	72 
 6f0:	69 65 73 00 73 65 63 	imul   $0x63657300,0x73(%ebp),%esp
 6f7:	74 6f                	je     768 <MBOOT_HEADER_FLAGS+0x765>
 6f9:	72 73                	jb     76e <MBOOT_HEADER_FLAGS+0x76b>
 6fb:	5f                   	pop    %edi
 6fc:	74 6f                	je     76d <MBOOT_HEADER_FLAGS+0x76a>
 6fe:	5f                   	pop    %edi
 6ff:	72 65                	jb     766 <MBOOT_HEADER_FLAGS+0x763>
 701:	61                   	popa
 702:	64 00 76 6f          	add    %dh,%fs:0x6f(%esi)
 706:	6c                   	insb   (%dx),%es:(%edi)
 707:	75 6d                	jne    776 <MBOOT_HEADER_FLAGS+0x773>
 709:	65 5f                	gs pop %edi
 70b:	69 64 00 63 75 72 72 	imul   $0x65727275,0x63(%eax,%eax,1),%esp
 712:	65 
 713:	6e                   	outsb  %ds:(%esi),(%dx)
 714:	74 5f                	je     775 <MBOOT_HEADER_FLAGS+0x772>
 716:	66 61                	popaw
 718:	74 5f                	je     779 <MBOOT_HEADER_FLAGS+0x776>
 71a:	73 65                	jae    781 <MBOOT_HEADER_FLAGS+0x77e>
 71c:	63 74 6f 72          	arpl   %esi,0x72(%edi,%ebp,2)
 720:	00 6c 61 73          	add    %ch,0x73(%ecx,%eiz,2)
 724:	74 5f                	je     785 <MBOOT_HEADER_FLAGS+0x782>
 726:	61                   	popa
 727:	63 63 65             	arpl   %esp,0x65(%ebx)
 72a:	73 73                	jae    79f <MBOOT_HEADER_FLAGS+0x79c>
 72c:	5f                   	pop    %edi
 72d:	64 61                	fs popa
 72f:	74 65                	je     796 <MBOOT_HEADER_FLAGS+0x793>
 731:	00 72 65             	add    %dh,0x65(%edx)
 734:	73 65                	jae    79b <MBOOT_HEADER_FLAGS+0x798>
 736:	72 76                	jb     7ae <MBOOT_HEADER_FLAGS+0x7ab>
 738:	65 64 5f             	gs fs pop %edi
 73b:	73 65                	jae    7a2 <MBOOT_HEADER_FLAGS+0x79f>
 73d:	63 74 6f 72          	arpl   %esi,0x72(%edi,%ebp,2)
 741:	73 00                	jae    743 <MBOOT_HEADER_FLAGS+0x740>
 743:	6d                   	insl   (%dx),%es:(%edi)
 744:	65 6d                	gs insl (%dx),%es:(%edi)
 746:	63 70 79             	arpl   %esi,0x79(%eax)
 749:	00 73 65             	add    %dh,0x65(%ebx)
 74c:	63 74 6f 72          	arpl   %esi,0x72(%edi,%ebp,2)
 750:	73 5f                	jae    7b1 <MBOOT_HEADER_FLAGS+0x7ae>
 752:	70 65                	jo     7b9 <MBOOT_HEADER_FLAGS+0x7b6>
 754:	72 5f                	jb     7b5 <MBOOT_HEADER_FLAGS+0x7b2>
 756:	63 6c 75 73          	arpl   %ebp,0x73(%ebp,%esi,2)
 75a:	74 65                	je     7c1 <MBOOT_HEADER_FLAGS+0x7be>
 75c:	72 00                	jb     75e <MBOOT_HEADER_FLAGS+0x75b>
 75e:	6c                   	insb   (%dx),%es:(%edi)
 75f:	61                   	popa
 760:	73 74                	jae    7d6 <MBOOT_HEADER_FLAGS+0x7d3>
 762:	5f                   	pop    %edi
 763:	77 72                	ja     7d7 <MBOOT_HEADER_FLAGS+0x7d4>
 765:	69 74 65 5f 74 69 6d 	imul   $0x656d6974,0x5f(%ebp,%eiz,2),%esi
 76c:	65 
 76d:	00 62 79             	add    %ah,0x79(%edx)
 770:	74 65                	je     7d7 <MBOOT_HEADER_FLAGS+0x7d4>
 772:	73 5f                	jae    7d3 <MBOOT_HEADER_FLAGS+0x7d0>
 774:	77 72                	ja     7e8 <MBOOT_HEADER_FLAGS+0x7e5>
 776:	69 74 74 65 6e 00 64 	imul   $0x6964006e,0x65(%esp,%esi,2),%esi
 77d:	69 
 77e:	72 5f                	jb     7df <MBOOT_HEADER_FLAGS+0x7dc>
 780:	62 75 66             	bound  %esi,0x66(%ebp)
 783:	66 65 72 00          	data16 gs jb 787 <MBOOT_HEADER_FLAGS+0x784>
 787:	6e                   	outsb  %ds:(%esi),(%dx)
 788:	6f                   	outsl  %ds:(%esi),(%dx)
 789:	72 6d                	jb     7f8 <MBOOT_HEADER_FLAGS+0x7f5>
 78b:	61                   	popa
 78c:	6c                   	insb   (%dx),%es:(%edi)
 78d:	69 7a 65 64 00 65 78 	imul   $0x78650064,0x65(%edx),%edi
 794:	74 5f                	je     7f5 <MBOOT_HEADER_FLAGS+0x7f2>
 796:	66 6c                	data16 insb (%dx),%es:(%edi)
 798:	61                   	popa
 799:	67 73 00             	addr16 jae 79c <MBOOT_HEADER_FLAGS+0x799>
 79c:	66 61                	popaw
 79e:	74 33                	je     7d3 <MBOOT_HEADER_FLAGS+0x7d0>
 7a0:	32 5f 62             	xor    0x62(%edi),%bl
 7a3:	6f                   	outsl  %ds:(%esi),(%dx)
 7a4:	6f                   	outsl  %ds:(%esi),(%dx)
 7a5:	74 5f                	je     806 <MBOOT_HEADER_FLAGS+0x803>
 7a7:	73 65                	jae    80e <MBOOT_HEADER_FLAGS+0x80b>
 7a9:	63 74 6f 72          	arpl   %esi,0x72(%edi,%ebp,2)
 7ad:	5f                   	pop    %edi
 7ae:	74 00                	je     7b0 <MBOOT_HEADER_FLAGS+0x7ad>
 7b0:	63 75 72             	arpl   %esi,0x72(%ebp)
 7b3:	72 65                	jb     81a <MBOOT_HEADER_FLAGS+0x817>
 7b5:	6e                   	outsb  %ds:(%esi),(%dx)
 7b6:	74 5f                	je     817 <MBOOT_HEADER_FLAGS+0x814>
 7b8:	64 61                	fs popa
 7ba:	74 61                	je     81d <MBOOT_HEADER_FLAGS+0x81a>
 7bc:	5f                   	pop    %edi
 7bd:	63 6c 75 73          	arpl   %ebp,0x73(%ebp,%esi,2)
 7c1:	74 65                	je     828 <MBOOT_HEADER_FLAGS+0x825>
 7c3:	72 00                	jb     7c5 <MBOOT_HEADER_FLAGS+0x7c2>
 7c5:	66 61                	popaw
 7c7:	74 5f                	je     828 <MBOOT_HEADER_FLAGS+0x825>
 7c9:	62 65 67             	bound  %esp,0x67(%ebp)
 7cc:	69 6e 5f 6c 62 61 00 	imul   $0x61626c,0x5f(%esi),%ebp
 7d3:	62 79 74             	bound  %edi,0x74(%ecx)
 7d6:	65 73 5f             	gs jae 838 <MBOOT_HEADER_FLAGS+0x835>
 7d9:	72 65                	jb     840 <MBOOT_HEADER_FLAGS+0x83d>
 7db:	61                   	popa
 7dc:	64 00 73 74          	add    %dh,%fs:0x74(%ebx)
 7e0:	72 63                	jb     845 <MBOOT_HEADER_FLAGS+0x842>
 7e2:	61                   	popa
 7e3:	74 00                	je     7e5 <MBOOT_HEADER_FLAGS+0x7e2>
 7e5:	6d                   	insl   (%dx),%es:(%edi)
 7e6:	65 6d                	gs insl (%dx),%es:(%edi)
 7e8:	63 6d 70             	arpl   %ebp,0x70(%ebp)
 7eb:	00 64 69 72          	add    %ah,0x72(%ecx,%ebp,2)
 7ef:	5f                   	pop    %edi
 7f0:	6e                   	outsb  %ds:(%esi),(%dx)
 7f1:	61                   	popa
 7f2:	6d                   	insl   (%dx),%es:(%edi)
 7f3:	65 00 6e 75          	add    %ch,%gs:0x75(%esi)
 7f7:	6d                   	insl   (%dx),%es:(%edi)
 7f8:	5f                   	pop    %edi
 7f9:	68 65 61 64 73       	push   $0x73646165
 7fe:	00 66 69             	add    %ah,0x69(%esi)
 801:	72 73                	jb     876 <MBOOT_HEADER_FLAGS+0x873>
 803:	74 5f                	je     864 <MBOOT_HEADER_FLAGS+0x861>
 805:	63 6c 75 73          	arpl   %ebp,0x73(%ebp,%esi,2)
 809:	74 65                	je     870 <MBOOT_HEADER_FLAGS+0x86d>
 80b:	72 5f                	jb     86c <MBOOT_HEADER_FLAGS+0x869>
 80d:	68 69 67 68 00       	push   $0x686769
 812:	72 65                	jb     879 <MBOOT_HEADER_FLAGS+0x876>
 814:	73 65                	jae    87b <MBOOT_HEADER_FLAGS+0x878>
 816:	72 76                	jb     88e <MBOOT_HEADER_FLAGS+0x88b>
 818:	65 64 31 00          	gs xor %eax,%fs:(%eax)
 81c:	62 79 74             	bound  %edi,0x74(%ecx)
 81f:	65 73 5f             	gs jae 881 <MBOOT_HEADER_FLAGS+0x87e>
 822:	74 6f                	je     893 <MBOOT_HEADER_FLAGS+0x890>
 824:	5f                   	pop    %edi
 825:	77 72                	ja     899 <MBOOT_HEADER_FLAGS+0x896>
 827:	69 74 65 00 62 6f 6f 	imul   $0x746f6f62,0x0(%ebp,%eiz,2),%esi
 82e:	74 
 82f:	5f                   	pop    %edi
 830:	73 69                	jae    89b <MBOOT_HEADER_FLAGS+0x898>
 832:	67 6e                	outsb  %ds:(%si),(%dx)
 834:	61                   	popa
 835:	74 75                	je     8ac <MBOOT_HEADER_FLAGS+0x8a9>
 837:	72 65                	jb     89e <MBOOT_HEADER_FLAGS+0x89b>
 839:	00 68 69             	add    %ch,0x69(%eax)
 83c:	64 64 65 6e          	fs fs outsb %gs:(%esi),(%dx)
 840:	5f                   	pop    %edi
 841:	73 65                	jae    8a8 <MBOOT_HEADER_FLAGS+0x8a5>
 843:	63 74 6f 72          	arpl   %esi,0x72(%edi,%ebp,2)
 847:	73 00                	jae    849 <MBOOT_HEADER_FLAGS+0x846>
 849:	62 61 63             	bound  %esp,0x63(%ecx)
 84c:	6b 75 70 5f          	imul   $0x5f,0x70(%ebp),%esi
 850:	62 6f 6f             	bound  %ebp,0x6f(%edi)
 853:	74 5f                	je     8b4 <MBOOT_HEADER_FLAGS+0x8b1>
 855:	73 65                	jae    8bc <MBOOT_HEADER_FLAGS+0x8b9>
 857:	63 74 6f 72          	arpl   %esi,0x72(%edi,%ebp,2)
 85b:	00 66 61             	add    %ah,0x61(%esi)
 85e:	74 33                	je     893 <MBOOT_HEADER_FLAGS+0x890>
 860:	32 5f 67             	xor    0x67(%edi),%bl
 863:	65 74 5f             	gs je  8c5 <MBOOT_HEADER_FLAGS+0x8c2>
 866:	6e                   	outsb  %ds:(%esi),(%dx)
 867:	65 78 74             	gs js  8de <MBOOT_HEADER_FLAGS+0x8db>
 86a:	5f                   	pop    %edi
 86b:	63 6c 75 73          	arpl   %ebp,0x73(%ebp,%esi,2)
 86f:	74 65                	je     8d6 <MBOOT_HEADER_FLAGS+0x8d3>
 871:	72 00                	jb     873 <MBOOT_HEADER_FLAGS+0x870>
 873:	74 6f                	je     8e4 <MBOOT_HEADER_FLAGS+0x8e1>
 875:	74 61                	je     8d8 <MBOOT_HEADER_FLAGS+0x8d5>
 877:	6c                   	insb   (%dx),%es:(%edi)
 878:	5f                   	pop    %edi
 879:	73 65                	jae    8e0 <MBOOT_HEADER_FLAGS+0x8dd>
 87b:	63 74 6f 72          	arpl   %esi,0x72(%edi,%ebp,2)
 87f:	73 5f                	jae    8e0 <MBOOT_HEADER_FLAGS+0x8dd>
 881:	31 36                	xor    %esi,(%esi)
 883:	00 6a 75             	add    %ch,0x75(%edx)
 886:	6d                   	insl   (%dx),%es:(%edi)
 887:	70 5f                	jo     8e8 <MBOOT_HEADER_FLAGS+0x8e5>
 889:	62 6f 6f             	bound  %ebp,0x6f(%edi)
 88c:	74 00                	je     88e <MBOOT_HEADER_FLAGS+0x88b>
 88e:	73 65                	jae    8f5 <MBOOT_HEADER_FLAGS+0x8f2>
 890:	63 74 6f 72          	arpl   %esi,0x72(%edi,%ebp,2)
 894:	73 5f                	jae    8f5 <MBOOT_HEADER_FLAGS+0x8f2>
 896:	70 65                	jo     8fd <MBOOT_HEADER_FLAGS+0x8fa>
 898:	72 5f                	jb     8f9 <MBOOT_HEADER_FLAGS+0x8f6>
 89a:	74 72                	je     90e <MBOOT_HEADER_FLAGS+0x90b>
 89c:	61                   	popa
 89d:	63 6b 00             	arpl   %ebp,0x0(%ebx)
 8a0:	63 6f 6d             	arpl   %ebp,0x6d(%edi)
 8a3:	70 61                	jo     906 <MBOOT_HEADER_FLAGS+0x903>
 8a5:	72 65                	jb     90c <MBOOT_HEADER_FLAGS+0x909>
 8a7:	5f                   	pop    %edi
 8a8:	66 69 6c 65 6e 61 6d 	imul   $0x6d61,0x6e(%ebp,%eiz,2),%bp
 8af:	65 00 64 69 72       	add    %ah,%gs:0x72(%ecx,%ebp,2)
 8b4:	65 63 74 6f 72       	arpl   %esi,%gs:0x72(%edi,%ebp,2)
 8b9:	79 5f                	jns    91a <MBOOT_HEADER_FLAGS+0x917>
 8bb:	65 6e                	outsb  %gs:(%esi),(%dx)
 8bd:	74 72                	je     931 <MBOOT_HEADER_FLAGS+0x92e>
 8bf:	79 5f                	jns    920 <MBOOT_HEADER_FLAGS+0x91d>
 8c1:	74 00                	je     8c3 <MBOOT_HEADER_FLAGS+0x8c0>
 8c3:	63 6c 75 73          	arpl   %ebp,0x73(%ebp,%esi,2)
 8c7:	74 65                	je     92e <MBOOT_HEADER_FLAGS+0x92b>
 8c9:	72 5f                	jb     92a <MBOOT_HEADER_FLAGS+0x927>
 8cb:	62 65 67             	bound  %esp,0x67(%ebp)
 8ce:	69 6e 5f 6c 62 61 00 	imul   $0x61626c,0x5f(%esi),%ebp
 8d5:	66 61                	popaw
 8d7:	74 5f                	je     938 <MBOOT_HEADER_FLAGS+0x935>
 8d9:	73 69                	jae    944 <MBOOT_HEADER_FLAGS+0x941>
 8db:	7a 65                	jp     942 <MBOOT_HEADER_FLAGS+0x93f>
 8dd:	5f                   	pop    %edi
 8de:	33 32                	xor    (%edx),%esi
 8e0:	00 66 73             	add    %ah,0x73(%esi)
 8e3:	5f                   	pop    %edi
 8e4:	69 6e 66 6f 00 62 79 	imul   $0x7962006f,0x66(%esi),%ebp
 8eb:	74 65                	je     952 <MBOOT_HEADER_FLAGS+0x94f>
 8ed:	73 5f                	jae    94e <MBOOT_HEADER_FLAGS+0x94b>
 8ef:	74 6f                	je     960 <MBOOT_HEADER_FLAGS+0x95d>
 8f1:	5f                   	pop    %edi
 8f2:	72 65                	jb     959 <MBOOT_HEADER_FLAGS+0x956>
 8f4:	61                   	popa
 8f5:	64 00 64 65 62       	add    %ah,%fs:0x62(%ebp,%eiz,2)
 8fa:	75 67                	jne    963 <MBOOT_HEADER_FLAGS+0x960>
 8fc:	00 63 6c             	add    %ah,0x6c(%ebx)
 8ff:	75 73                	jne    974 <MBOOT_HEADER_FLAGS+0x971>
 901:	74 65                	je     968 <MBOOT_HEADER_FLAGS+0x965>
 903:	72 5f                	jb     964 <MBOOT_HEADER_FLAGS+0x961>
 905:	74 6f                	je     976 <MBOOT_HEADER_FLAGS+0x973>
 907:	5f                   	pop    %edi
 908:	6c                   	insb   (%dx),%es:(%edi)
 909:	62 61 00             	bound  %esp,0x0(%ecx)
 90c:	63 6f 6d             	arpl   %ebp,0x6d(%edi)
 90f:	70 61                	jo     972 <MBOOT_HEADER_FLAGS+0x96f>
 911:	72 65                	jb     978 <MBOOT_HEADER_FLAGS+0x975>
 913:	5f                   	pop    %edi
 914:	6e                   	outsb  %ds:(%esi),(%dx)
 915:	61                   	popa
 916:	6d                   	insl   (%dx),%es:(%edi)
 917:	65 73 00             	gs jae 91a <MBOOT_HEADER_FLAGS+0x917>
 91a:	72 6f                	jb     98b <MBOOT_HEADER_FLAGS+0x988>
 91c:	6f                   	outsl  %ds:(%esi),(%dx)
 91d:	74 5f                	je     97e <MBOOT_HEADER_FLAGS+0x97b>
 91f:	63 6c 75 73          	arpl   %ebp,0x73(%ebp,%esi,2)
 923:	74 65                	je     98a <MBOOT_HEADER_FLAGS+0x987>
 925:	72 00                	jb     927 <MBOOT_HEADER_FLAGS+0x924>
 927:	6e                   	outsb  %ds:(%esi),(%dx)
 928:	75 6d                	jne    997 <MBOOT_HEADER_FLAGS+0x994>
 92a:	5f                   	pop    %edi
 92b:	66 61                	popaw
 92d:	74 73                	je     9a2 <MBOOT_HEADER_FLAGS+0x99f>
 92f:	00 63 72             	add    %ah,0x72(%ebx)
 932:	65 61                	gs popa
 934:	74 69                	je     99f <MBOOT_HEADER_FLAGS+0x99c>
 936:	6f                   	outsl  %ds:(%esi),(%dx)
 937:	6e                   	outsb  %ds:(%esi),(%dx)
 938:	5f                   	pop    %edi
 939:	74 69                	je     9a4 <MBOOT_HEADER_FLAGS+0x9a1>
 93b:	6d                   	insl   (%dx),%es:(%edi)
 93c:	65 00 73 74          	add    %dh,%gs:0x74(%ebx)
 940:	72 63                	jb     9a5 <MBOOT_HEADER_FLAGS+0x9a2>
 942:	70 79                	jo     9bd <MBOOT_HEADER_FLAGS+0x9ba>
 944:	00 6e 65             	add    %ch,0x65(%esi)
 947:	77 5f                	ja     9a8 <MBOOT_HEADER_FLAGS+0x9a5>
 949:	63 6c 75 73          	arpl   %ebp,0x73(%ebp,%esi,2)
 94d:	74 65                	je     9b4 <MBOOT_HEADER_FLAGS+0x9b1>
 94f:	72 00                	jb     951 <MBOOT_HEADER_FLAGS+0x94e>
 951:	6e                   	outsb  %ds:(%esi),(%dx)
 952:	74 5f                	je     9b3 <MBOOT_HEADER_FLAGS+0x9b0>
 954:	72 65                	jb     9bb <MBOOT_HEADER_FLAGS+0x9b8>
 956:	73 65                	jae    9bd <MBOOT_HEADER_FLAGS+0x9ba>
 958:	72 76                	jb     9d0 <MBOOT_HEADER_FLAGS+0x9cd>
 95a:	65 64 00 66 69       	gs add %ah,%fs:0x69(%esi)
 95f:	6c                   	insb   (%dx),%es:(%edi)
 960:	65 5f                	gs pop %edi
 962:	73 69                	jae    9cd <MBOOT_HEADER_FLAGS+0x9ca>
 964:	7a 65                	jp     9cb <MBOOT_HEADER_FLAGS+0x9c8>
 966:	00 64 69 72          	add    %ah,0x72(%ecx,%ebp,2)
 96a:	65 63 74 6f 72       	arpl   %esi,%gs:0x72(%edi,%ebp,2)
 96f:	79 5f                	jns    9d0 <MBOOT_HEADER_FLAGS+0x9cd>
 971:	64 65 70 74          	fs gs jo 9e9 <MBOOT_HEADER_FLAGS+0x9e6>
 975:	68 00 65 6e 74       	push   $0x746e6500
 97a:	72 79                	jb     9f5 <MBOOT_HEADER_FLAGS+0x9f2>
 97c:	5f                   	pop    %edi
 97d:	6e                   	outsb  %ds:(%esi),(%dx)
 97e:	61                   	popa
 97f:	6d                   	insl   (%dx),%es:(%edi)
 980:	65 00 66 73          	add    %ah,%gs:0x73(%esi)
 984:	5f                   	pop    %edi
 985:	74 79                	je     a00 <MBOOT_HEADER_FLAGS+0x9fd>
 987:	70 65                	jo     9ee <MBOOT_HEADER_FLAGS+0x9eb>
 989:	00 6c 61 73          	add    %ch,0x73(%ecx,%eiz,2)
 98d:	74 5f                	je     9ee <MBOOT_HEADER_FLAGS+0x9eb>
 98f:	77 72                	ja     a03 <MBOOT_HEADER_FLAGS+0xa00>
 991:	69 74 65 5f 64 61 74 	imul   $0x65746164,0x5f(%ebp,%eiz,2),%esi
 998:	65 
 999:	00 72 6f             	add    %dh,0x6f(%edx)
 99c:	6f                   	outsl  %ds:(%esi),(%dx)
 99d:	74 5f                	je     9fe <MBOOT_HEADER_FLAGS+0x9fb>
 99f:	65 6e                	outsb  %gs:(%esi),(%dx)
 9a1:	74 72                	je     a15 <MBOOT_HEADER_FLAGS+0xa12>
 9a3:	79 5f                	jns    a04 <MBOOT_HEADER_FLAGS+0xa01>
 9a5:	63 6f 75             	arpl   %ebp,0x75(%edi)
 9a8:	6e                   	outsb  %ds:(%esi),(%dx)
 9a9:	74 00                	je     9ab <MBOOT_HEADER_FLAGS+0x9a8>
 9ab:	66 61                	popaw
 9ad:	74 33                	je     9e2 <MBOOT_HEADER_FLAGS+0x9df>
 9af:	32 5f 69             	xor    0x69(%edi),%bl
 9b2:	73 5f                	jae    a13 <MBOOT_HEADER_FLAGS+0xa10>
 9b4:	64 69 72 65 63 74 6f 	imul   $0x726f7463,%fs:0x65(%edx),%esi
 9bb:	72 
 9bc:	79 00                	jns    9be <MBOOT_HEADER_FLAGS+0x9bb>
 9be:	66 6f                	outsw  %ds:(%esi),(%dx)
 9c0:	75 6e                	jne    a30 <MBOOT_HEADER_FLAGS+0xa2d>
 9c2:	64 00 63 75          	add    %ah,%fs:0x75(%ebx)
 9c6:	72 72                	jb     a3a <MBOOT_HEADER_FLAGS+0xa37>
 9c8:	65 6e                	outsb  %gs:(%esi),(%dx)
 9ca:	74 5f                	je     a2b <MBOOT_HEADER_FLAGS+0xa28>
 9cc:	63 6c 75 73          	arpl   %ebp,0x73(%ebp,%esi,2)
 9d0:	74 65                	je     a37 <MBOOT_HEADER_FLAGS+0xa34>
 9d2:	72 00                	jb     9d4 <MBOOT_HEADER_FLAGS+0x9d1>
 9d4:	63 72 65             	arpl   %esi,0x65(%edx)
 9d7:	61                   	popa
 9d8:	74 69                	je     a43 <MBOOT_HEADER_FLAGS+0xa40>
 9da:	6f                   	outsl  %ds:(%esi),(%dx)
 9db:	6e                   	outsb  %ds:(%esi),(%dx)
 9dc:	5f                   	pop    %edi
 9dd:	64 61                	fs popa
 9df:	74 65                	je     a46 <MBOOT_HEADER_FLAGS+0xa43>
 9e1:	00 76 6f             	add    %dh,0x6f(%esi)
 9e4:	6c                   	insb   (%dx),%es:(%edi)
 9e5:	75 6d                	jne    a54 <MBOOT_HEADER_FLAGS+0xa51>
 9e7:	65 5f                	gs pop %edi
 9e9:	6c                   	insb   (%dx),%es:(%edi)
 9ea:	61                   	popa
 9eb:	62 65 6c             	bound  %esp,0x6c(%ebp)
 9ee:	00 66 6f             	add    %ah,0x6f(%esi)
 9f1:	75 6e                	jne    a61 <MBOOT_HEADER_FLAGS+0xa5e>
 9f3:	64 5f                	fs pop %edi
 9f5:	73 6c                	jae    a63 <MBOOT_HEADER_FLAGS+0xa60>
 9f7:	6f                   	outsl  %ds:(%esi),(%dx)
 9f8:	74 00                	je     9fa <MBOOT_HEADER_FLAGS+0x9f7>
 9fa:	66 61                	popaw
 9fc:	74 33                	je     a31 <MBOOT_HEADER_FLAGS+0xa2e>
 9fe:	32 5f 77             	xor    0x77(%edi),%bl
 a01:	72 69                	jb     a6c <MBOOT_HEADER_FLAGS+0xa69>
 a03:	74 65                	je     a6a <MBOOT_HEADER_FLAGS+0xa67>
 a05:	5f                   	pop    %edi
 a06:	66 61                	popaw
 a08:	74 5f                	je     a69 <MBOOT_HEADER_FLAGS+0xa66>
 a0a:	65 6e                	outsb  %gs:(%esi),(%dx)
 a0c:	74 72                	je     a80 <MBOOT_HEADER_FLAGS+0xa7d>
 a0e:	79 00                	jns    a10 <MBOOT_HEADER_FLAGS+0xa0d>
 a10:	62 79 74             	bound  %edi,0x74(%ecx)
 a13:	65 73 5f             	gs jae a75 <MBOOT_HEADER_FLAGS+0xa72>
 a16:	70 65                	jo     a7d <MBOOT_HEADER_FLAGS+0xa7a>
 a18:	72 5f                	jb     a79 <MBOOT_HEADER_FLAGS+0xa76>
 a1a:	73 65                	jae    a81 <MBOOT_HEADER_FLAGS+0xa7e>
 a1c:	63 74 6f 72          	arpl   %esi,0x72(%edi,%ebp,2)
 a20:	00 63 72             	add    %ah,0x72(%ebx)
 a23:	65 61                	gs popa
 a25:	74 69                	je     a90 <MBOOT_HEADER_FLAGS+0xa8d>
 a27:	6f                   	outsl  %ds:(%esi),(%dx)
 a28:	6e                   	outsb  %ds:(%esi),(%dx)
 a29:	5f                   	pop    %edi
 a2a:	74 69                	je     a95 <MBOOT_HEADER_FLAGS+0xa92>
 a2c:	6d                   	insl   (%dx),%es:(%edi)
 a2d:	65 5f                	gs pop %edi
 a2f:	74 65                	je     a96 <MBOOT_HEADER_FLAGS+0xa93>
 a31:	6e                   	outsb  %ds:(%esi),(%dx)
 a32:	74 68                	je     a9c <MBOOT_HEADER_FLAGS+0xa99>
 a34:	73 00                	jae    a36 <MBOOT_HEADER_FLAGS+0xa33>
 a36:	64 61                	fs popa
 a38:	74 61                	je     a9b <MBOOT_HEADER_FLAGS+0xa98>
 a3a:	5f                   	pop    %edi
 a3b:	73 65                	jae    aa2 <MBOOT_HEADER_FLAGS+0xa9f>
 a3d:	63 74 6f 72          	arpl   %esi,0x72(%edi,%ebp,2)
 a41:	00 66 61             	add    %ah,0x61(%esi)
 a44:	74 33                	je     a79 <MBOOT_HEADER_FLAGS+0xa76>
 a46:	32 5f 64             	xor    0x64(%edi),%bl
 a49:	69 72 5f 65 6e 74 72 	imul   $0x72746e65,0x5f(%edx),%esi
 a50:	79 5f                	jns    ab1 <MBOOT_HEADER_FLAGS+0xaae>
 a52:	74 00                	je     a54 <MBOOT_HEADER_FLAGS+0xa51>
 a54:	66 69 72 73 74 5f    	imul   $0x5f74,0x73(%edx),%si
 a5a:	63 6c 75 73          	arpl   %ebp,0x73(%ebp,%esi,2)
 a5e:	74 65                	je     ac5 <MBOOT_HEADER_FLAGS+0xac2>
 a60:	72 00                	jb     a62 <MBOOT_HEADER_FLAGS+0xa5f>
 a62:	66 61                	popaw
 a64:	74 33                	je     a99 <MBOOT_HEADER_FLAGS+0xa96>
 a66:	32 5f 61             	xor    0x61(%edi),%bl
 a69:	6c                   	insb   (%dx),%es:(%edi)
 a6a:	6c                   	insb   (%dx),%es:(%edi)
 a6b:	6f                   	outsl  %ds:(%esi),(%dx)
 a6c:	63 61 74             	arpl   %esp,0x74(%ecx)
 a6f:	65 5f                	gs pop %edi
 a71:	63 6c 75 73          	arpl   %ebp,0x73(%ebp,%esi,2)
 a75:	74 65                	je     adc <MBOOT_HEADER_FLAGS+0xad9>
 a77:	72 00                	jb     a79 <MBOOT_HEADER_FLAGS+0xa76>
 a79:	64 72 69             	fs jb  ae5 <MBOOT_HEADER_FLAGS+0xae2>
 a7c:	76 65                	jbe    ae3 <MBOOT_HEADER_FLAGS+0xae0>
 a7e:	5f                   	pop    %edi
 a7f:	6e                   	outsb  %ds:(%esi),(%dx)
 a80:	75 6d                	jne    aef <MBOOT_HEADER_FLAGS+0xaec>
 a82:	62 65 72             	bound  %esp,0x72(%ebp)
 a85:	00 74 72 69          	add    %dh,0x69(%edx,%esi,2)
 a89:	6d                   	insl   (%dx),%es:(%edi)
 a8a:	6d                   	insl   (%dx),%es:(%edi)
 a8b:	65 64 5f             	gs fs pop %edi
 a8e:	6e                   	outsb  %ds:(%esi),(%dx)
 a8f:	61                   	popa
 a90:	6d                   	insl   (%dx),%es:(%edi)
 a91:	65 00 6f 65          	add    %ch,%gs:0x65(%edi)
 a95:	6d                   	insl   (%dx),%es:(%edi)
 a96:	5f                   	pop    %edi
 a97:	6e                   	outsb  %ds:(%esi),(%dx)
 a98:	61                   	popa
 a99:	6d                   	insl   (%dx),%es:(%edi)
 a9a:	65 00 74 6f 74       	add    %dh,%gs:0x74(%edi,%ebp,2)
 a9f:	61                   	popa
 aa0:	6c                   	insb   (%dx),%es:(%edi)
 aa1:	5f                   	pop    %edi
 aa2:	73 65                	jae    b09 <MBOOT_HEADER_FLAGS+0xb06>
 aa4:	63 74 6f 72          	arpl   %esi,0x72(%edi,%ebp,2)
 aa8:	73 5f                	jae    b09 <MBOOT_HEADER_FLAGS+0xb06>
 aaa:	33 32                	xor    (%edx),%esi
 aac:	00 75 69             	add    %dh,0x69(%ebp)
 aaf:	6e                   	outsb  %ds:(%esi),(%dx)
 ab0:	74 33                	je     ae5 <MBOOT_HEADER_FLAGS+0xae2>
 ab2:	32 5f 74             	xor    0x74(%edi),%bl
 ab5:	5f                   	pop    %edi
 ab6:	74 6f                	je     b27 <MBOOT_HEADER_FLAGS+0xb24>
 ab8:	5f                   	pop    %edi
 ab9:	73 74                	jae    b2f <MBOOT_HEADER_FLAGS+0xb2c>
 abb:	72 00                	jb     abd <MBOOT_HEADER_FLAGS+0xaba>
 abd:	63 75 72             	arpl   %esi,0x72(%ebp)
 ac0:	72 65                	jb     b27 <MBOOT_HEADER_FLAGS+0xb24>
 ac2:	6e                   	outsb  %ds:(%esi),(%dx)
 ac3:	74 5f                	je     b24 <MBOOT_HEADER_FLAGS+0xb21>
 ac5:	73 65                	jae    b2c <MBOOT_HEADER_FLAGS+0xb29>
 ac7:	63 74 6f 72          	arpl   %esi,0x72(%edi,%ebp,2)
 acb:	00 6d 65             	add    %ch,0x65(%ebp)
 ace:	64 69 61 5f 74 79 70 	imul   $0x65707974,%fs:0x5f(%ecx),%esp
 ad5:	65 
 ad6:	00 65 6e             	add    %ah,0x6e(%ebp)
 ad9:	74 72                	je     b4d <MBOOT_HEADER_FLAGS+0xb4a>
 adb:	79 5f                	jns    b3c <MBOOT_HEADER_FLAGS+0xb39>
 add:	6f                   	outsl  %ds:(%esi),(%dx)
 ade:	66 66 73 65          	data16 data16 jae b47 <MBOOT_HEADER_FLAGS+0xb44>
 ae2:	74 00                	je     ae4 <MBOOT_HEADER_FLAGS+0xae1>
 ae4:	75 70                	jne    b56 <MBOOT_HEADER_FLAGS+0xb53>
 ae6:	64 61                	fs popa
 ae8:	74 65                	je     b4f <MBOOT_HEADER_FLAGS+0xb4c>
 aea:	5f                   	pop    %edi
 aeb:	70 61                	jo     b4e <MBOOT_HEADER_FLAGS+0xb4b>
 aed:	74 68                	je     b57 <MBOOT_HEADER_FLAGS+0xb54>
 aef:	00 6b 65             	add    %ch,0x65(%ebx)
 af2:	79 62                	jns    b56 <MBOOT_HEADER_FLAGS+0xb53>
 af4:	6f                   	outsl  %ds:(%esi),(%dx)
 af5:	61                   	popa
 af6:	72 64                	jb     b5c <MBOOT_HEADER_FLAGS+0xb59>
 af8:	5f                   	pop    %edi
 af9:	69 73 5f 73 68 69 66 	imul   $0x66696873,0x5f(%ebx),%esi
 b00:	74 5f                	je     b61 <MBOOT_HEADER_FLAGS+0xb5e>
 b02:	70 72                	jo     b76 <MBOOT_HEADER_FLAGS+0xb73>
 b04:	65 73 73             	gs jae b7a <MBOOT_HEADER_FLAGS+0xb77>
 b07:	65 64 00 6b 65       	gs add %ch,%fs:0x65(%ebx)
 b0c:	79 62                	jns    b70 <MBOOT_HEADER_FLAGS+0xb6d>
 b0e:	6f                   	outsl  %ds:(%esi),(%dx)
 b0f:	61                   	popa
 b10:	72 64                	jb     b76 <MBOOT_HEADER_FLAGS+0xb73>
 b12:	5f                   	pop    %edi
 b13:	69 73 5f 63 61 70 73 	imul   $0x73706163,0x5f(%ebx),%esi
 b1a:	5f                   	pop    %edi
 b1b:	6f                   	outsl  %ds:(%esi),(%dx)
 b1c:	6e                   	outsb  %ds:(%esi),(%dx)
 b1d:	00 68 61             	add    %ch,0x61(%eax)
 b20:	6e                   	outsb  %ds:(%esi),(%dx)
 b21:	64 6c                	fs insb (%dx),%es:(%edi)
 b23:	65 5f                	gs pop %edi
 b25:	73 63                	jae    b8a <MBOOT_HEADER_FLAGS+0xb87>
 b27:	61                   	popa
 b28:	6e                   	outsb  %ds:(%esi),(%dx)
 b29:	63 6f 64             	arpl   %ebp,0x64(%edi)
 b2c:	65 00 73 63          	add    %dh,%gs:0x63(%ebx)
 b30:	61                   	popa
 b31:	6e                   	outsb  %ds:(%esi),(%dx)
 b32:	63 6f 64             	arpl   %ebp,0x64(%edi)
 b35:	65 5f                	gs pop %edi
 b37:	74 6f                	je     ba8 <MBOOT_HEADER_FLAGS+0xba5>
 b39:	5f                   	pop    %edi
 b3a:	61                   	popa
 b3b:	73 63                	jae    ba0 <MBOOT_HEADER_FLAGS+0xb9d>
 b3d:	69 69 00 63 61 70 73 	imul   $0x73706163,0x0(%ecx),%ebp
 b44:	5f                   	pop    %edi
 b45:	6c                   	insb   (%dx),%es:(%edi)
 b46:	6f                   	outsl  %ds:(%esi),(%dx)
 b47:	63 6b 00             	arpl   %ebp,0x0(%ebx)
 b4a:	73 63                	jae    baf <MBOOT_HEADER_FLAGS+0xbac>
 b4c:	61                   	popa
 b4d:	6e                   	outsb  %ds:(%esi),(%dx)
 b4e:	63 6f 64             	arpl   %ebp,0x64(%edi)
 b51:	65 5f                	gs pop %edi
 b53:	74 6f                	je     bc4 <MBOOT_HEADER_FLAGS+0xbc1>
 b55:	5f                   	pop    %edi
 b56:	61                   	popa
 b57:	73 63                	jae    bbc <MBOOT_HEADER_FLAGS+0xbb9>
 b59:	69 69 5f 73 68 69 66 	imul   $0x66696873,0x5f(%ecx),%ebp
 b60:	74 00                	je     b62 <MBOOT_HEADER_FLAGS+0xb5f>
 b62:	70 72                	jo     bd6 <MBOOT_HEADER_FLAGS+0xbd3>
 b64:	6f                   	outsl  %ds:(%esi),(%dx)
 b65:	67 72 61             	addr16 jb bc9 <MBOOT_HEADER_FLAGS+0xbc6>
 b68:	6d                   	insl   (%dx),%es:(%edi)
 b69:	5f                   	pop    %edi
 b6a:	65 6e                	outsb  %gs:(%esi),(%dx)
 b6c:	74 72                	je     be0 <MBOOT_HEADER_FLAGS+0xbdd>
 b6e:	79 00                	jns    b70 <MBOOT_HEADER_FLAGS+0xb6d>
 b70:	62 75 66             	bound  %esi,0x66(%ebp)
 b73:	66 65 72 5f          	data16 gs jb bd6 <MBOOT_HEADER_FLAGS+0xbd3>
 b77:	73 69                	jae    be2 <MBOOT_HEADER_FLAGS+0xbdf>
 b79:	7a 65                	jp     be0 <MBOOT_HEADER_FLAGS+0xbdd>
 b7b:	00 69 6e             	add    %ch,0x6e(%ecx)
 b7e:	69 74 5f 6d 65 6d 6f 	imul   $0x726f6d65,0x6d(%edi,%ebx,2),%esi
 b85:	72 
 b86:	79 00                	jns    b88 <MBOOT_HEADER_FLAGS+0xb85>
 b88:	68 65 61 70 5f       	push   $0x5f706165
 b8d:	70 74                	jo     c03 <MBOOT_HEADER_FLAGS+0xc00>
 b8f:	72 00                	jb     b91 <MBOOT_HEADER_FLAGS+0xb8e>
 b91:	68 65 61 70 00       	push   $0x706165
 b96:	6b 6d 61 6c          	imul   $0x6c,0x61(%ebp),%ebp
 b9a:	6c                   	insb   (%dx),%es:(%edi)
 b9b:	6f                   	outsl  %ds:(%esi),(%dx)
 b9c:	63 00                	arpl   %eax,(%eax)
 b9e:	6b 66 72 65          	imul   $0x65,0x72(%esi),%esp
 ba2:	65 00 70 72          	add    %dh,%gs:0x72(%eax)
 ba6:	69 6e 74 6c 6e 00 63 	imul   $0x63006e6c,0x74(%esi),%ebp
 bad:	6c                   	insb   (%dx),%es:(%edi)
 bae:	65 61                	gs popa
 bb0:	72 53                	jb     c05 <MBOOT_HEADER_FLAGS+0xc02>
 bb2:	63 72 65             	arpl   %esi,0x65(%edx)
 bb5:	65 6e                	outsb  %gs:(%esi),(%dx)
 bb7:	00 76 67             	add    %dh,0x67(%esi)
 bba:	61                   	popa
 bbb:	5f                   	pop    %edi
 bbc:	73 65                	jae    c23 <MBOOT_HEADER_FLAGS+0xc20>
 bbe:	74 5f                	je     c1f <MBOOT_HEADER_FLAGS+0xc1c>
 bc0:	63 75 72             	arpl   %esi,0x72(%ebp)
 bc3:	73 6f                	jae    c34 <MBOOT_HEADER_FLAGS+0xc31>
 bc5:	72 5f                	jb     c26 <MBOOT_HEADER_FLAGS+0xc23>
 bc7:	70 6f                	jo     c38 <MBOOT_HEADER_FLAGS+0xc35>
 bc9:	73 00                	jae    bcb <MBOOT_HEADER_FLAGS+0xbc8>
 bcb:	63 6f 6c             	arpl   %ebp,0x6c(%edi)
 bce:	6f                   	outsl  %ds:(%esi),(%dx)
 bcf:	72 31                	jb     c02 <MBOOT_HEADER_FLAGS+0xbff>
 bd1:	36 00 76 67          	add    %dh,%ss:0x67(%esi)
 bd5:	61                   	popa
 bd6:	5f                   	pop    %edi
 bd7:	62 75 66             	bound  %esi,0x66(%ebp)
 bda:	66 65 72 00          	data16 gs jb bde <MBOOT_HEADER_FLAGS+0xbdb>
 bde:	76 67                	jbe    c47 <MBOOT_HEADER_FLAGS+0xc44>
 be0:	61                   	popa
 be1:	5f                   	pop    %edi
 be2:	65 6e                	outsb  %gs:(%esi),(%dx)
 be4:	74 72                	je     c58 <MBOOT_HEADER_FLAGS+0xc55>
 be6:	79 00                	jns    be8 <MBOOT_HEADER_FLAGS+0xbe5>
 be8:	64 65 73 74          	fs gs jae c60 <MBOOT_HEADER_FLAGS+0xc5d>
 bec:	00 73 74             	add    %dh,0x74(%ebx)
 bef:	72 6e                	jb     c5f <MBOOT_HEADER_FLAGS+0xc5c>
 bf1:	63 61 74             	arpl   %esp,0x74(%ecx)
	...

Disassembly of section .debug_line_str:

00000000 <.debug_line_str>:
   0:	2f                   	das
   1:	55                   	push   %ebp
   2:	73 65                	jae    69 <MBOOT_HEADER_FLAGS+0x66>
   4:	72 73                	jb     79 <MBOOT_HEADER_FLAGS+0x76>
   6:	2f                   	das
   7:	6d                   	insl   (%dx),%es:(%edi)
   8:	69 63 6b 2f 44 65 73 	imul   $0x7365442f,0x6b(%ebx),%esp
   f:	6b 74 6f 70 2f       	imul   $0x2f,0x70(%edi,%ebp,2),%esi
  14:	52                   	push   %edx
  15:	69 6e 67 4f 53 00 6b 	imul   $0x6b00534f,0x67(%esi),%ebp
  1c:	65 72 6e             	gs jb  8d <MBOOT_HEADER_FLAGS+0x8a>
  1f:	65 6c                	gs insb (%dx),%es:(%edi)
  21:	2f                   	das
  22:	67 64 74 2e          	addr16 fs je 54 <MBOOT_HEADER_FLAGS+0x51>
  26:	63 00                	arpl   %eax,(%eax)
  28:	6b 65 72 6e          	imul   $0x6e,0x72(%ebp),%esp
  2c:	65 6c                	gs insb (%dx),%es:(%edi)
  2e:	00 74 79 70          	add    %dh,0x70(%ecx,%edi,2)
  32:	65 73 2e             	gs jae 63 <MBOOT_HEADER_FLAGS+0x60>
  35:	68 00 6b 65 72       	push   $0x72656b00
  3a:	6e                   	outsb  %ds:(%esi),(%dx)
  3b:	65 6c                	gs insb (%dx),%es:(%edi)
  3d:	2f                   	das
  3e:	69 64 74 2e 63 00 6b 	imul   $0x656b0063,0x2e(%esp,%esi,2),%esp
  45:	65 
  46:	72 6e                	jb     b6 <MBOOT_HEADER_FLAGS+0xb3>
  48:	65 6c                	gs insb (%dx),%es:(%edi)
  4a:	2f                   	das
  4b:	69 73 72 2e 63 00 69 	imul   $0x6900632e,0x72(%ebx),%esi
  52:	64 74 2e             	fs je  83 <MBOOT_HEADER_FLAGS+0x80>
  55:	68 00 73 74 64       	push   $0x64747300
  5a:	74 65                	je     c1 <MBOOT_HEADER_FLAGS+0xbe>
  5c:	72 6d                	jb     cb <MBOOT_HEADER_FLAGS+0xc8>
  5e:	2e 68 00 6b 65 72    	cs push $0x72656b00
  64:	6e                   	outsb  %ds:(%esi),(%dx)
  65:	65 6c                	gs insb (%dx),%es:(%edi)
  67:	2f                   	das
  68:	6d                   	insl   (%dx),%es:(%edi)
  69:	61                   	popa
  6a:	69 6e 2e 63 00 73 68 	imul   $0x68730063,0x2e(%esi),%ebp
  71:	65 6c                	gs insb (%dx),%es:(%edi)
  73:	6c                   	insb   (%dx),%es:(%edi)
  74:	2e 68 00 66 61 74    	cs push $0x74616600
  7a:	33 32                	xor    (%edx),%esi
  7c:	2e 68 00 61 74 61    	cs push $0x61746100
  82:	2e 68 00 67 64 74    	cs push $0x74646700
  88:	2e 68 00 6b 65 79    	cs push $0x79656b00
  8e:	62 6f 61             	bound  %ebp,0x61(%edi)
  91:	72 64                	jb     f7 <MBOOT_HEADER_FLAGS+0xf4>
  93:	2e 68 00 76 67 61    	cs push $0x61677600
  99:	2e 68 00 6b 65 72    	cs push $0x72656b00
  9f:	6e                   	outsb  %ds:(%esi),(%dx)
  a0:	65 6c                	gs insb (%dx),%es:(%edi)
  a2:	2f                   	das
  a3:	73 68                	jae    10d <MBOOT_HEADER_FLAGS+0x10a>
  a5:	65 6c                	gs insb (%dx),%es:(%edi)
  a7:	6c                   	insb   (%dx),%es:(%edi)
  a8:	2e 63 00             	arpl   %eax,%cs:(%eax)
  ab:	6c                   	insb   (%dx),%es:(%edi)
  ac:	6f                   	outsl  %ds:(%esi),(%dx)
  ad:	61                   	popa
  ae:	64 65 72 2e          	fs gs jb e0 <MBOOT_HEADER_FLAGS+0xdd>
  b2:	68 00 73 74 72       	push   $0x72747300
  b7:	69 6e 67 2e 68 00 64 	imul   $0x6400682e,0x67(%esi),%ebp
  be:	72 69                	jb     129 <MBOOT_HEADER_FLAGS+0x126>
  c0:	76 65                	jbe    127 <MBOOT_HEADER_FLAGS+0x124>
  c2:	72 73                	jb     137 <MBOOT_HEADER_FLAGS+0x134>
  c4:	2f                   	das
  c5:	61                   	popa
  c6:	74 61                	je     129 <MBOOT_HEADER_FLAGS+0x126>
  c8:	2e 63 00             	arpl   %eax,%cs:(%eax)
  cb:	64 72 69             	fs jb  137 <MBOOT_HEADER_FLAGS+0x134>
  ce:	76 65                	jbe    135 <MBOOT_HEADER_FLAGS+0x132>
  d0:	72 73                	jb     145 <MBOOT_HEADER_FLAGS+0x142>
  d2:	00 64 72 69          	add    %ah,0x69(%edx,%esi,2)
  d6:	76 65                	jbe    13d <MBOOT_HEADER_FLAGS+0x13a>
  d8:	72 73                	jb     14d <MBOOT_HEADER_FLAGS+0x14a>
  da:	2f                   	das
  db:	2e 2e 2f             	cs cs das
  de:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%esi),%ebp
  e5:	00 69 6f             	add    %ch,0x6f(%ecx)
  e8:	2e 68 00 64 72 69    	cs push $0x69726400
  ee:	76 65                	jbe    155 <MBOOT_HEADER_FLAGS+0x152>
  f0:	72 73                	jb     165 <MBOOT_HEADER_FLAGS+0x162>
  f2:	2f                   	das
  f3:	66 61                	popaw
  f5:	74 33                	je     12a <MBOOT_HEADER_FLAGS+0x127>
  f7:	32 2e                	xor    (%esi),%ch
  f9:	63 00                	arpl   %eax,(%eax)
  fb:	73 74                	jae    171 <MBOOT_HEADER_FLAGS+0x16e>
  fd:	64 69 6e 74 2e 68 00 	imul   $0x6400682e,%fs:0x74(%esi),%ebp
 104:	64 
 105:	72 69                	jb     170 <MBOOT_HEADER_FLAGS+0x16d>
 107:	76 65                	jbe    16e <MBOOT_HEADER_FLAGS+0x16b>
 109:	72 73                	jb     17e <MBOOT_HEADER_FLAGS+0x17b>
 10b:	2f                   	das
 10c:	6b 65 79 62          	imul   $0x62,0x79(%ebp),%esp
 110:	6f                   	outsl  %ds:(%esi),(%dx)
 111:	61                   	popa
 112:	72 64                	jb     178 <MBOOT_HEADER_FLAGS+0x175>
 114:	2e 63 00             	arpl   %eax,%cs:(%eax)
 117:	64 72 69             	fs jb  183 <MBOOT_HEADER_FLAGS+0x180>
 11a:	76 65                	jbe    181 <MBOOT_HEADER_FLAGS+0x17e>
 11c:	72 73                	jb     191 <MBOOT_HEADER_FLAGS+0x18e>
 11e:	2f                   	das
 11f:	6c                   	insb   (%dx),%es:(%edi)
 120:	6f                   	outsl  %ds:(%esi),(%dx)
 121:	61                   	popa
 122:	64 65 72 2e          	fs gs jb 154 <MBOOT_HEADER_FLAGS+0x151>
 126:	63 00                	arpl   %eax,(%eax)
 128:	64 72 69             	fs jb  194 <MBOOT_HEADER_FLAGS+0x191>
 12b:	76 65                	jbe    192 <MBOOT_HEADER_FLAGS+0x18f>
 12d:	72 73                	jb     1a2 <MBOOT_HEADER_FLAGS+0x19f>
 12f:	2f                   	das
 130:	2e 2e 2f             	cs cs das
 133:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%esi),%ebp
 13a:	2f                   	das
 13b:	2e 2e 2f             	cs cs das
 13e:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%esi),%ebp
 145:	00 64 72 69          	add    %ah,0x69(%edx,%esi,2)
 149:	76 65                	jbe    1b0 <MBOOT_HEADER_FLAGS+0x1ad>
 14b:	72 73                	jb     1c0 <MBOOT_HEADER_FLAGS+0x1bd>
 14d:	2f                   	das
 14e:	6d                   	insl   (%dx),%es:(%edi)
 14f:	65 6d                	gs insl (%dx),%es:(%edi)
 151:	6f                   	outsl  %ds:(%esi),(%dx)
 152:	72 79                	jb     1cd <MBOOT_HEADER_FLAGS+0x1ca>
 154:	2e 63 00             	arpl   %eax,%cs:(%eax)
 157:	64 72 69             	fs jb  1c3 <MBOOT_HEADER_FLAGS+0x1c0>
 15a:	76 65                	jbe    1c1 <MBOOT_HEADER_FLAGS+0x1be>
 15c:	72 73                	jb     1d1 <MBOOT_HEADER_FLAGS+0x1ce>
 15e:	2f                   	das
 15f:	73 74                	jae    1d5 <MBOOT_HEADER_FLAGS+0x1d2>
 161:	64 74 65             	fs je  1c9 <MBOOT_HEADER_FLAGS+0x1c6>
 164:	72 6d                	jb     1d3 <MBOOT_HEADER_FLAGS+0x1d0>
 166:	2e 63 00             	arpl   %eax,%cs:(%eax)
 169:	64 72 69             	fs jb  1d5 <MBOOT_HEADER_FLAGS+0x1d2>
 16c:	76 65                	jbe    1d3 <MBOOT_HEADER_FLAGS+0x1d0>
 16e:	72 73                	jb     1e3 <MBOOT_HEADER_FLAGS+0x1e0>
 170:	2f                   	das
 171:	76 67                	jbe    1da <MBOOT_HEADER_FLAGS+0x1d7>
 173:	61                   	popa
 174:	2e 63 00             	arpl   %eax,%cs:(%eax)
 177:	6c                   	insb   (%dx),%es:(%edi)
 178:	69 62 2f 73 74 64 69 	imul   $0x69647473,0x2f(%edx),%esp
 17f:	6e                   	outsb  %ds:(%esi),(%dx)
 180:	74 2e                	je     1b0 <MBOOT_HEADER_FLAGS+0x1ad>
 182:	63 00                	arpl   %eax,(%eax)
 184:	6c                   	insb   (%dx),%es:(%edi)
 185:	69 62 00 6c 69 62 2f 	imul   $0x2f62696c,0x0(%edx),%esp
 18c:	2e 2e 2f             	cs cs das
 18f:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%esi),%ebp
 196:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 19a:	2f                   	das
 19b:	73 74                	jae    211 <MBOOT_HEADER_FLAGS+0x20e>
 19d:	72 69                	jb     208 <MBOOT_HEADER_FLAGS+0x205>
 19f:	6e                   	outsb  %ds:(%esi),(%dx)
 1a0:	67 2e 63 00          	arpl   %eax,%cs:(%bx,%si)

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 47 4e             	sub    %al,0x4e(%edi)
   8:	55                   	push   %ebp
   9:	29 20                	sub    %esp,(%eax)
   b:	31 34 2e             	xor    %esi,(%esi,%ebp,1)
   e:	32 2e                	xor    (%esi),%ch
  10:	30 00                	xor    %al,(%eax)

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	10 00                	adc    %al,(%eax)
   2:	00 00                	add    %al,(%eax)
   4:	ff                   	(bad)
   5:	ff                   	(bad)
   6:	ff                   	(bad)
   7:	ff 01                	incl   (%ecx)
   9:	00 01                	add    %al,(%ecx)
   b:	7c 08                	jl     15 <MBOOT_HEADER_FLAGS+0x12>
   d:	0c 04                	or     $0x4,%al
   f:	04 88                	add    $0x88,%al
  11:	01 00                	add    %eax,(%eax)
  13:	00 28                	add    %ch,(%eax)
  15:	00 00                	add    %al,(%eax)
  17:	00 00                	add    %al,(%eax)
  19:	00 00                	add    %al,(%eax)
  1b:	00 10                	add    %dl,(%eax)
  1d:	00 10                	add    %dl,(%eax)
  1f:	00 6f 00             	add    %ch,0x0(%edi)
  22:	00 00                	add    %al,(%eax)
  24:	41                   	inc    %ecx
  25:	0e                   	push   %cs
  26:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  2c:	46                   	inc    %esi
  2d:	87 03                	xchg   %eax,(%ebx)
  2f:	86 04 83             	xchg   %al,(%ebx,%eax,4)
  32:	05 02 62 c3 41       	add    $0x41c36202,%eax
  37:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
  3b:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
  3e:	04 00                	add    $0x0,%al
  40:	1c 00                	sbb    $0x0,%al
  42:	00 00                	add    %al,(%eax)
  44:	00 00                	add    %al,(%eax)
  46:	00 00                	add    %al,(%eax)
  48:	80 00 10             	addb   $0x10,(%eax)
  4b:	00 61 00             	add    %ah,0x0(%ecx)
  4e:	00 00                	add    %al,(%eax)
  50:	41                   	inc    %ecx
  51:	0e                   	push   %cs
  52:	08 85 02 61 0d 05    	or     %al,0x50d6102(%ebp)
  58:	7e c5                	jle    1f <MBOOT_HEADER_FLAGS+0x1c>
  5a:	0c 04                	or     $0x4,%al
  5c:	04 00                	add    $0x0,%al
  5e:	00 00                	add    %al,(%eax)
  60:	10 00                	adc    %al,(%eax)
  62:	00 00                	add    %al,(%eax)
  64:	ff                   	(bad)
  65:	ff                   	(bad)
  66:	ff                   	(bad)
  67:	ff 01                	incl   (%ecx)
  69:	00 01                	add    %al,(%ecx)
  6b:	7c 08                	jl     75 <MBOOT_HEADER_FLAGS+0x72>
  6d:	0c 04                	or     $0x4,%al
  6f:	04 88                	add    $0x88,%al
  71:	01 00                	add    %eax,(%eax)
  73:	00 20                	add    %ah,(%eax)
  75:	00 00                	add    %al,(%eax)
  77:	00 60 00             	add    %ah,0x0(%eax)
  7a:	00 00                	add    %al,(%eax)
  7c:	f0 00 10             	lock add %dl,(%eax)
  7f:	00 3f                	add    %bh,(%edi)
  81:	00 00                	add    %al,(%eax)
  83:	00 41 0e             	add    %al,0xe(%ecx)
  86:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  8c:	41                   	inc    %ecx
  8d:	83 03 7a             	addl   $0x7a,(%ebx)
  90:	c5 c3 0c             	(bad)
  93:	04 04                	add    $0x4,%al
  95:	00 00                	add    %al,(%eax)
  97:	00 1c 00             	add    %bl,(%eax,%eax,1)
  9a:	00 00                	add    %al,(%eax)
  9c:	60                   	pusha
  9d:	00 00                	add    %al,(%eax)
  9f:	00 30                	add    %dh,(%eax)
  a1:	01 10                	add    %edx,(%eax)
  a3:	00 c4                	add    %al,%ah
  a5:	00 00                	add    %al,(%eax)
  a7:	00 41 0e             	add    %al,0xe(%ecx)
  aa:	08 85 02 68 0d 05    	or     %al,0x50d6802(%ebp)
  b0:	02 9a c5 0c 04 04    	add    0x4040cc5(%edx),%bl
  b6:	00 00                	add    %al,(%eax)
  b8:	10 00                	adc    %al,(%eax)
  ba:	00 00                	add    %al,(%eax)
  bc:	ff                   	(bad)
  bd:	ff                   	(bad)
  be:	ff                   	(bad)
  bf:	ff 01                	incl   (%ecx)
  c1:	00 01                	add    %al,(%ecx)
  c3:	7c 08                	jl     cd <MBOOT_HEADER_FLAGS+0xca>
  c5:	0c 04                	or     $0x4,%al
  c7:	04 88                	add    $0x88,%al
  c9:	01 00                	add    %eax,(%eax)
  cb:	00 2c 00             	add    %ch,(%eax,%eax,1)
  ce:	00 00                	add    %al,(%eax)
  d0:	b8 00 00 00 00       	mov    $0x0,%eax
  d5:	02 10                	add    (%eax),%dl
  d7:	00 5a 00             	add    %bl,0x0(%edx)
  da:	00 00                	add    %al,(%eax)
  dc:	41                   	inc    %ecx
  dd:	0e                   	push   %cs
  de:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  e4:	69 0a c5 0c 04 04    	imul   $0x4040cc5,(%edx),%ecx
  ea:	45                   	inc    %ebp
  eb:	0b 57 0a             	or     0xa(%edi),%edx
  ee:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
  f1:	04 45                	add    $0x45,%al
  f3:	0b 48 c5             	or     -0x3b(%eax),%ecx
  f6:	0c 04                	or     $0x4,%al
  f8:	04 00                	add    $0x0,%al
  fa:	00 00                	add    %al,(%eax)
  fc:	10 00                	adc    %al,(%eax)
  fe:	00 00                	add    %al,(%eax)
 100:	ff                   	(bad)
 101:	ff                   	(bad)
 102:	ff                   	(bad)
 103:	ff 01                	incl   (%ecx)
 105:	00 01                	add    %al,(%ecx)
 107:	7c 08                	jl     111 <MBOOT_HEADER_FLAGS+0x10e>
 109:	0c 04                	or     $0x4,%al
 10b:	04 88                	add    $0x88,%al
 10d:	01 00                	add    %eax,(%eax)
 10f:	00 28                	add    %ch,(%eax)
 111:	00 00                	add    %al,(%eax)
 113:	00 fc                	add    %bh,%ah
 115:	00 00                	add    %al,(%eax)
 117:	00 60 02             	add    %ah,0x2(%eax)
 11a:	10 00                	adc    %al,(%eax)
 11c:	f9                   	stc
 11d:	00 00                	add    %al,(%eax)
 11f:	00 41 0e             	add    %al,0xe(%ecx)
 122:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 128:	41                   	inc    %ecx
 129:	83 03 02             	addl   $0x2,(%ebx)
 12c:	a0 0a c5 c3 0c       	mov    0xcc3c50a,%al
 131:	04 04                	add    $0x4,%al
 133:	4c                   	dec    %esp
 134:	0b 02                	or     (%edx),%eax
 136:	44                   	inc    %esp
 137:	c5 c3 0c             	(bad)
 13a:	04 04                	add    $0x4,%al
 13c:	10 00                	adc    %al,(%eax)
 13e:	00 00                	add    %al,(%eax)
 140:	ff                   	(bad)
 141:	ff                   	(bad)
 142:	ff                   	(bad)
 143:	ff 01                	incl   (%ecx)
 145:	00 01                	add    %al,(%ecx)
 147:	7c 08                	jl     151 <MBOOT_HEADER_FLAGS+0x14e>
 149:	0c 04                	or     $0x4,%al
 14b:	04 88                	add    $0x88,%al
 14d:	01 00                	add    %eax,(%eax)
 14f:	00 38                	add    %bh,(%eax)
 151:	00 00                	add    %al,(%eax)
 153:	00 3c 01             	add    %bh,(%ecx,%eax,1)
 156:	00 00                	add    %al,(%eax)
 158:	80 03 10             	addb   $0x10,(%ebx)
 15b:	00 bb 00 00 00 41    	add    %bh,0x41000000(%ebx)
 161:	0e                   	push   %cs
 162:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 168:	49                   	dec    %ecx
 169:	87 03                	xchg   %eax,(%ebx)
 16b:	86 04 83             	xchg   %al,(%ebx,%eax,4)
 16e:	05 02 95 0a c3       	add    $0xc30a9502,%eax
 173:	41                   	inc    %ecx
 174:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 178:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 17b:	04 44                	add    $0x44,%al
 17d:	0b 4f c3             	or     -0x3d(%edi),%ecx
 180:	41                   	inc    %ecx
 181:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 185:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 188:	04 00                	add    $0x0,%al
 18a:	00 00                	add    %al,(%eax)
 18c:	2c 00                	sub    $0x0,%al
 18e:	00 00                	add    %al,(%eax)
 190:	3c 01                	cmp    $0x1,%al
 192:	00 00                	add    %al,(%eax)
 194:	40                   	inc    %eax
 195:	04 10                	add    $0x10,%al
 197:	00 dd                	add    %bl,%ch
 199:	00 00                	add    %al,(%eax)
 19b:	00 41 0e             	add    %al,0xe(%ecx)
 19e:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 1a4:	42                   	inc    %edx
 1a5:	87 03                	xchg   %eax,(%ebx)
 1a7:	86 04 43             	xchg   %al,(%ebx,%eax,2)
 1aa:	83 05 02 ba 0a c3 41 	addl   $0x41,0xc30aba02
 1b1:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 1b5:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 1b8:	04 4b                	add    $0x4b,%al
 1ba:	0b 00                	or     (%eax),%eax
 1bc:	3c 00                	cmp    $0x0,%al
 1be:	00 00                	add    %al,(%eax)
 1c0:	3c 01                	cmp    $0x1,%al
 1c2:	00 00                	add    %al,(%eax)
 1c4:	20 05 10 00 d2 01    	and    %al,0x1d20010
 1ca:	00 00                	add    %al,(%eax)
 1cc:	41                   	inc    %ecx
 1cd:	0e                   	push   %cs
 1ce:	08 85 02 4b 0d 05    	or     %al,0x50d4b02(%ebp)
 1d4:	42                   	inc    %edx
 1d5:	87 03                	xchg   %eax,(%ebx)
 1d7:	86 04 4d 83 05 03 82 	xchg   %al,-0x7dfcfa7d(,%ecx,2)
 1de:	01 0a                	add    %ecx,(%edx)
 1e0:	c3                   	ret
 1e1:	41                   	inc    %ecx
 1e2:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 1e6:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 1e9:	04 48                	add    $0x48,%al
 1eb:	0b 4f 0a             	or     0xa(%edi),%ecx
 1ee:	c3                   	ret
 1ef:	41                   	inc    %ecx
 1f0:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 1f4:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 1f7:	04 41                	add    $0x41,%al
 1f9:	0b 00                	or     (%eax),%eax
 1fb:	00 20                	add    %ah,(%eax)
 1fd:	00 00                	add    %al,(%eax)
 1ff:	00 3c 01             	add    %bh,(%ecx,%eax,1)
 202:	00 00                	add    %al,(%eax)
 204:	00 07                	add    %al,(%edi)
 206:	10 00                	adc    %al,(%eax)
 208:	5e                   	pop    %esi
 209:	00 00                	add    %al,(%eax)
 20b:	00 41 0e             	add    %al,0xe(%ecx)
 20e:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 214:	41                   	inc    %ecx
 215:	83 03 02             	addl   $0x2,(%ebx)
 218:	59                   	pop    %ecx
 219:	c5 c3 0c             	(bad)
 21c:	04 04                	add    $0x4,%al
 21e:	00 00                	add    %al,(%eax)
 220:	44                   	inc    %esp
 221:	00 00                	add    %al,(%eax)
 223:	00 3c 01             	add    %bh,(%ecx,%eax,1)
 226:	00 00                	add    %al,(%eax)
 228:	60                   	pusha
 229:	07                   	pop    %es
 22a:	10 00                	adc    %al,(%eax)
 22c:	0d 02 00 00 41       	or     $0x41000002,%eax
 231:	0e                   	push   %cs
 232:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 238:	46                   	inc    %esi
 239:	87 03                	xchg   %eax,(%ebx)
 23b:	86 04 83             	xchg   %al,(%ebx,%eax,4)
 23e:	05 57 0a c3 41       	add    $0x41c30a57,%eax
 243:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 247:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 24a:	04 4d                	add    $0x4d,%al
 24c:	0b 02                	or     (%edx),%eax
 24e:	e5 0a                	in     $0xa,%eax
 250:	c3                   	ret
 251:	41                   	inc    %ecx
 252:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 256:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 259:	04 48                	add    $0x48,%al
 25b:	0b 02                	or     (%edx),%eax
 25d:	e9 c3 41 c6 41       	jmp    41c64425 <MBOOT_HEADER_MAGIC+0x26189423>
 262:	c7 41 c5 0c 04 04 48 	movl   $0x4804040c,-0x3b(%ecx)
 269:	00 00                	add    %al,(%eax)
 26b:	00 3c 01             	add    %bh,(%ecx,%eax,1)
 26e:	00 00                	add    %al,(%eax)
 270:	70 09                	jo     27b <MBOOT_HEADER_FLAGS+0x278>
 272:	10 00                	adc    %al,(%eax)
 274:	a3 01 00 00 41       	mov    %eax,0x41000001
 279:	0e                   	push   %cs
 27a:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 280:	46                   	inc    %esi
 281:	87 03                	xchg   %eax,(%ebx)
 283:	86 04 83             	xchg   %al,(%ebx,%eax,4)
 286:	05 57 0a c3 41       	add    $0x41c30a57,%eax
 28b:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 28f:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 292:	04 4d                	add    $0x4d,%al
 294:	0b 03                	or     (%ebx),%eax
 296:	17                   	pop    %ss
 297:	01 0a                	add    %ecx,(%edx)
 299:	c3                   	ret
 29a:	41                   	inc    %ecx
 29b:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 29f:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 2a2:	04 46                	add    $0x46,%al
 2a4:	0b 02                	or     (%edx),%eax
 2a6:	4f                   	dec    %edi
 2a7:	c3                   	ret
 2a8:	41                   	inc    %ecx
 2a9:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 2ad:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 2b0:	04 00                	add    $0x0,%al
 2b2:	00 00                	add    %al,(%eax)
 2b4:	34 00                	xor    $0x0,%al
 2b6:	00 00                	add    %al,(%eax)
 2b8:	3c 01                	cmp    $0x1,%al
 2ba:	00 00                	add    %al,(%eax)
 2bc:	20 0b                	and    %cl,(%ebx)
 2be:	10 00                	adc    %al,(%eax)
 2c0:	db 04 00             	fildl  (%eax,%eax,1)
 2c3:	00 41 0e             	add    %al,0xe(%ecx)
 2c6:	08 85 02 48 0d 05    	or     %al,0x50d4802(%ebp)
 2cc:	41                   	inc    %ecx
 2cd:	83 03 02             	addl   $0x2,(%ebx)
 2d0:	fe 0a                	decb   (%edx)
 2d2:	c5 c3 0c             	(bad)
 2d5:	04 04                	add    $0x4,%al
 2d7:	48                   	dec    %eax
 2d8:	0b 6d 0a             	or     0xa(%ebp),%ebp
 2db:	c5 c3 0c             	(bad)
 2de:	04 04                	add    $0x4,%al
 2e0:	43                   	inc    %ebx
 2e1:	0b 02                	or     (%edx),%eax
 2e3:	7c 0a                	jl     2ef <MBOOT_HEADER_FLAGS+0x2ec>
 2e5:	c5 c3 0c             	(bad)
 2e8:	04 04                	add    $0x4,%al
 2ea:	41                   	inc    %ecx
 2eb:	0b 34 00             	or     (%eax,%eax,1),%esi
 2ee:	00 00                	add    %al,(%eax)
 2f0:	3c 01                	cmp    $0x1,%al
 2f2:	00 00                	add    %al,(%eax)
 2f4:	00 10                	add    %dl,(%eax)
 2f6:	10 00                	adc    %al,(%eax)
 2f8:	79 00                	jns    2fa <MBOOT_HEADER_FLAGS+0x2f7>
 2fa:	00 00                	add    %al,(%eax)
 2fc:	41                   	inc    %ecx
 2fd:	0e                   	push   %cs
 2fe:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 304:	50                   	push   %eax
 305:	0a c5                	or     %ch,%al
 307:	0c 04                	or     $0x4,%al
 309:	04 45                	add    $0x45,%al
 30b:	0b 59 0a             	or     0xa(%ecx),%ebx
 30e:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 311:	04 4f                	add    $0x4f,%al
 313:	0b 49 0a             	or     0xa(%ecx),%ecx
 316:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 319:	04 47                	add    $0x47,%al
 31b:	0b 64 c5 0c          	or     0xc(%ebp,%eax,8),%esp
 31f:	04 04                	add    $0x4,%al
 321:	00 00                	add    %al,(%eax)
 323:	00 1c 00             	add    %bl,(%eax,%eax,1)
 326:	00 00                	add    %al,(%eax)
 328:	3c 01                	cmp    $0x1,%al
 32a:	00 00                	add    %al,(%eax)
 32c:	80 10 10             	adcb   $0x10,(%eax)
 32f:	00 41 00             	add    %al,0x0(%ecx)
 332:	00 00                	add    %al,(%eax)
 334:	41                   	inc    %ecx
 335:	0e                   	push   %cs
 336:	08 85 02 4c 0d 05    	or     %al,0x50d4c02(%ebp)
 33c:	6f                   	outsl  %ds:(%esi),(%dx)
 33d:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 340:	04 00                	add    $0x0,%al
 342:	00 00                	add    %al,(%eax)
 344:	14 00                	adc    $0x0,%al
 346:	00 00                	add    %al,(%eax)
 348:	3c 01                	cmp    $0x1,%al
 34a:	00 00                	add    %al,(%eax)
 34c:	d0 10                	rclb   $1,(%eax)
 34e:	10 00                	adc    %al,(%eax)
 350:	25 00 00 00 41       	and    $0x41000000,%eax
 355:	0e                   	push   %cs
 356:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 35c:	10 00                	adc    %al,(%eax)
 35e:	00 00                	add    %al,(%eax)
 360:	ff                   	(bad)
 361:	ff                   	(bad)
 362:	ff                   	(bad)
 363:	ff 01                	incl   (%ecx)
 365:	00 01                	add    %al,(%ecx)
 367:	7c 08                	jl     371 <MBOOT_HEADER_FLAGS+0x36e>
 369:	0c 04                	or     $0x4,%al
 36b:	04 88                	add    $0x88,%al
 36d:	01 00                	add    %eax,(%eax)
 36f:	00 2c 00             	add    %ch,(%eax,%eax,1)
 372:	00 00                	add    %al,(%eax)
 374:	5c                   	pop    %esp
 375:	03 00                	add    (%eax),%eax
 377:	00 00                	add    %al,(%eax)
 379:	11 10                	adc    %edx,(%eax)
 37b:	00 ba 00 00 00 41    	add    %bh,0x41000000(%edx)
 381:	0e                   	push   %cs
 382:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 388:	41                   	inc    %ecx
 389:	83 03 55             	addl   $0x55,(%ebx)
 38c:	0a c5                	or     %ch,%al
 38e:	c3                   	ret
 38f:	0c 04                	or     $0x4,%al
 391:	04 47                	add    $0x47,%al
 393:	0b 02                	or     (%edx),%eax
 395:	89 0a                	mov    %ecx,(%edx)
 397:	c5 c3 0c             	(bad)
 39a:	04 04                	add    $0x4,%al
 39c:	41                   	inc    %ecx
 39d:	0b 00                	or     (%eax),%eax
 39f:	00 3c 00             	add    %bh,(%eax,%eax,1)
 3a2:	00 00                	add    %al,(%eax)
 3a4:	5c                   	pop    %esp
 3a5:	03 00                	add    (%eax),%eax
 3a7:	00 c0                	add    %al,%al
 3a9:	11 10                	adc    %edx,(%eax)
 3ab:	00 5f 01             	add    %bl,0x1(%edi)
 3ae:	00 00                	add    %al,(%eax)
 3b0:	41                   	inc    %ecx
 3b1:	0e                   	push   %cs
 3b2:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 3b8:	46                   	inc    %esi
 3b9:	87 03                	xchg   %eax,(%ebx)
 3bb:	86 04 83             	xchg   %al,(%ebx,%eax,4)
 3be:	05 03 10 01 0a       	add    $0xa011003,%eax
 3c3:	c3                   	ret
 3c4:	41                   	inc    %ecx
 3c5:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 3c9:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 3cc:	04 41                	add    $0x41,%al
 3ce:	0b 51 0a             	or     0xa(%ecx),%edx
 3d1:	c3                   	ret
 3d2:	41                   	inc    %ecx
 3d3:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 3d7:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 3da:	04 41                	add    $0x41,%al
 3dc:	0b 00                	or     (%eax),%eax
 3de:	00 00                	add    %al,(%eax)
 3e0:	3c 00                	cmp    $0x0,%al
 3e2:	00 00                	add    %al,(%eax)
 3e4:	5c                   	pop    %esp
 3e5:	03 00                	add    (%eax),%eax
 3e7:	00 20                	add    %ah,(%eax)
 3e9:	13 10                	adc    (%eax),%edx
 3eb:	00 74 01 00          	add    %dh,0x0(%ecx,%eax,1)
 3ef:	00 41 0e             	add    %al,0xe(%ecx)
 3f2:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 3f8:	46                   	inc    %esi
 3f9:	87 03                	xchg   %eax,(%ebx)
 3fb:	86 04 83             	xchg   %al,(%ebx,%eax,4)
 3fe:	05 03 1e 01 0a       	add    $0xa011e03,%eax
 403:	c3                   	ret
 404:	41                   	inc    %ecx
 405:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 409:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 40c:	04 41                	add    $0x41,%al
 40e:	0b 51 0a             	or     0xa(%ecx),%edx
 411:	c3                   	ret
 412:	41                   	inc    %ecx
 413:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 417:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 41a:	04 41                	add    $0x41,%al
 41c:	0b 00                	or     (%eax),%eax
 41e:	00 00                	add    %al,(%eax)
 420:	10 00                	adc    %al,(%eax)
 422:	00 00                	add    %al,(%eax)
 424:	ff                   	(bad)
 425:	ff                   	(bad)
 426:	ff                   	(bad)
 427:	ff 01                	incl   (%ecx)
 429:	00 01                	add    %al,(%ecx)
 42b:	7c 08                	jl     435 <MBOOT_HEADER_FLAGS+0x432>
 42d:	0c 04                	or     $0x4,%al
 42f:	04 88                	add    $0x88,%al
 431:	01 00                	add    %eax,(%eax)
 433:	00 3c 00             	add    %bh,(%eax,%eax,1)
 436:	00 00                	add    %al,(%eax)
 438:	20 04 00             	and    %al,(%eax,%eax,1)
 43b:	00 c0                	add    %al,%al
 43d:	14 10                	adc    $0x10,%al
 43f:	00 44 01 00          	add    %al,0x0(%ecx,%eax,1)
 443:	00 41 0e             	add    %al,0xe(%ecx)
 446:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 44c:	43                   	inc    %ebx
 44d:	87 03                	xchg   %eax,(%ebx)
 44f:	86 04 83             	xchg   %al,(%ebx,%eax,4)
 452:	05 02 ae 0a c3       	add    $0xc30aae02,%eax
 457:	41                   	inc    %ecx
 458:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 45c:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 45f:	04 49                	add    $0x49,%al
 461:	0b 02                	or     (%edx),%eax
 463:	6d                   	insl   (%dx),%es:(%edi)
 464:	0a c3                	or     %bl,%al
 466:	41                   	inc    %ecx
 467:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 46b:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 46e:	04 41                	add    $0x41,%al
 470:	0b 00                	or     (%eax),%eax
 472:	00 00                	add    %al,(%eax)
 474:	28 00                	sub    %al,(%eax)
 476:	00 00                	add    %al,(%eax)
 478:	20 04 00             	and    %al,(%eax,%eax,1)
 47b:	00 10                	add    %dl,(%eax)
 47d:	16                   	push   %ss
 47e:	10 00                	adc    %al,(%eax)
 480:	ca 00 00             	lret   $0x0
 483:	00 41 0e             	add    %al,0xe(%ecx)
 486:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 48c:	72 0a                	jb     498 <MBOOT_HEADER_FLAGS+0x495>
 48e:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 491:	04 4b                	add    $0x4b,%al
 493:	0b 02                	or     (%edx),%eax
 495:	73 0a                	jae    4a1 <MBOOT_HEADER_FLAGS+0x49e>
 497:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 49a:	04 45                	add    $0x45,%al
 49c:	0b 00                	or     (%eax),%eax
 49e:	00 00                	add    %al,(%eax)
 4a0:	0c 00                	or     $0x0,%al
 4a2:	00 00                	add    %al,(%eax)
 4a4:	20 04 00             	and    %al,(%eax,%eax,1)
 4a7:	00 e0                	add    %ah,%al
 4a9:	16                   	push   %ss
 4aa:	10 00                	adc    %al,(%eax)
 4ac:	06                   	push   %es
 4ad:	00 00                	add    %al,(%eax)
 4af:	00 0c 00             	add    %cl,(%eax,%eax,1)
 4b2:	00 00                	add    %al,(%eax)
 4b4:	20 04 00             	and    %al,(%eax,%eax,1)
 4b7:	00 f0                	add    %dh,%al
 4b9:	16                   	push   %ss
 4ba:	10 00                	adc    %al,(%eax)
 4bc:	06                   	push   %es
 4bd:	00 00                	add    %al,(%eax)
 4bf:	00 20                	add    %ah,(%eax)
 4c1:	00 00                	add    %al,(%eax)
 4c3:	00 20                	add    %ah,(%eax)
 4c5:	04 00                	add    $0x0,%al
 4c7:	00 00                	add    %al,(%eax)
 4c9:	17                   	pop    %ss
 4ca:	10 00                	adc    %al,(%eax)
 4cc:	53                   	push   %ebx
 4cd:	00 00                	add    %al,(%eax)
 4cf:	00 41 0e             	add    %al,0xe(%ecx)
 4d2:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 4d8:	47                   	inc    %edi
 4d9:	83 03 02             	addl   $0x2,(%ebx)
 4dc:	48                   	dec    %eax
 4dd:	c5 c3 0c             	(bad)
 4e0:	04 04                	add    $0x4,%al
 4e2:	00 00                	add    %al,(%eax)
 4e4:	38 00                	cmp    %al,(%eax)
 4e6:	00 00                	add    %al,(%eax)
 4e8:	20 04 00             	and    %al,(%eax,%eax,1)
 4eb:	00 60 17             	add    %ah,0x17(%eax)
 4ee:	10 00                	adc    %al,(%eax)
 4f0:	b6 03                	mov    $0x3,%dh
 4f2:	00 00                	add    %al,(%eax)
 4f4:	41                   	inc    %ecx
 4f5:	0e                   	push   %cs
 4f6:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 4fc:	49                   	dec    %ecx
 4fd:	87 03                	xchg   %eax,(%ebx)
 4ff:	86 04 83             	xchg   %al,(%ebx,%eax,4)
 502:	05 53 0a c3 41       	add    $0x41c30a53,%eax
 507:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 50b:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 50e:	04 46                	add    $0x46,%al
 510:	0b 02                	or     (%edx),%eax
 512:	59                   	pop    %ecx
 513:	0a c3                	or     %bl,%al
 515:	41                   	inc    %ecx
 516:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 51a:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 51d:	04 44                	add    $0x44,%al
 51f:	0b 38                	or     (%eax),%edi
 521:	00 00                	add    %al,(%eax)
 523:	00 20                	add    %ah,(%eax)
 525:	04 00                	add    $0x0,%al
 527:	00 20                	add    %ah,(%eax)
 529:	1b 10                	sbb    (%eax),%edx
 52b:	00 27                	add    %ah,(%edi)
 52d:	01 00                	add    %eax,(%eax)
 52f:	00 41 0e             	add    %al,0xe(%ecx)
 532:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 538:	49                   	dec    %ecx
 539:	87 03                	xchg   %eax,(%ebx)
 53b:	86 04 83             	xchg   %al,(%ebx,%eax,4)
 53e:	05 02 fb 0a c3       	add    $0xc30afb02,%eax
 543:	41                   	inc    %ecx
 544:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 548:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 54b:	04 46                	add    $0x46,%al
 54d:	0b 49 0a             	or     0xa(%ecx),%ecx
 550:	c3                   	ret
 551:	41                   	inc    %ecx
 552:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 556:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 559:	04 41                	add    $0x41,%al
 55b:	0b 1c 00             	or     (%eax,%eax,1),%ebx
 55e:	00 00                	add    %al,(%eax)
 560:	20 04 00             	and    %al,(%eax,%eax,1)
 563:	00 50 1c             	add    %dl,0x1c(%eax)
 566:	10 00                	adc    %al,(%eax)
 568:	12 00                	adc    (%eax),%al
 56a:	00 00                	add    %al,(%eax)
 56c:	41                   	inc    %ecx
 56d:	0e                   	push   %cs
 56e:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 574:	44                   	inc    %esp
 575:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 578:	04 00                	add    $0x0,%al
 57a:	00 00                	add    %al,(%eax)
 57c:	44                   	inc    %esp
 57d:	00 00                	add    %al,(%eax)
 57f:	00 20                	add    %ah,(%eax)
 581:	04 00                	add    $0x0,%al
 583:	00 70 1c             	add    %dh,0x1c(%eax)
 586:	10 00                	adc    %al,(%eax)
 588:	4d                   	dec    %ebp
 589:	01 00                	add    %eax,(%eax)
 58b:	00 5e 0e             	add    %bl,0xe(%esi)
 58e:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 594:	49                   	dec    %ecx
 595:	87 03                	xchg   %eax,(%ebx)
 597:	86 04 83             	xchg   %al,(%ebx,%eax,4)
 59a:	05 02 c8 0a c3       	add    $0xc30ac802,%eax
 59f:	41                   	inc    %ecx
 5a0:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 5a4:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 5a7:	04 44                	add    $0x44,%al
 5a9:	0b 77 c3             	or     -0x3d(%edi),%esi
 5ac:	44                   	inc    %esp
 5ad:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 5b1:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 5b4:	04 4e                	add    $0x4e,%al
 5b6:	0c 05                	or     $0x5,%al
 5b8:	08 83 05 85 02 86    	or     %al,-0x79fd7afb(%ebx)
 5be:	04 87                	add    $0x87,%al
 5c0:	03 00                	add    (%eax),%eax
 5c2:	00 00                	add    %al,(%eax)
 5c4:	38 00                	cmp    %al,(%eax)
 5c6:	00 00                	add    %al,(%eax)
 5c8:	20 04 00             	and    %al,(%eax,%eax,1)
 5cb:	00 c0                	add    %al,%al
 5cd:	1d 10 00 3c 01       	sbb    $0x13c0010,%eax
 5d2:	00 00                	add    %al,(%eax)
 5d4:	41                   	inc    %ecx
 5d5:	0e                   	push   %cs
 5d6:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 5dc:	49                   	dec    %ecx
 5dd:	87 03                	xchg   %eax,(%ebx)
 5df:	86 04 83             	xchg   %al,(%ebx,%eax,4)
 5e2:	05 02 f5 0a c3       	add    $0xc30af502,%eax
 5e7:	41                   	inc    %ecx
 5e8:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 5ec:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 5ef:	04 44                	add    $0x44,%al
 5f1:	0b 63 0a             	or     0xa(%ebx),%esp
 5f4:	c3                   	ret
 5f5:	44                   	inc    %esp
 5f6:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 5fa:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 5fd:	04 41                	add    $0x41,%al
 5ff:	0b 44 00 00          	or     0x0(%eax,%eax,1),%eax
 603:	00 20                	add    %ah,(%eax)
 605:	04 00                	add    $0x0,%al
 607:	00 00                	add    %al,(%eax)
 609:	1f                   	pop    %ds
 60a:	10 00                	adc    %al,(%eax)
 60c:	4d                   	dec    %ebp
 60d:	01 00                	add    %eax,(%eax)
 60f:	00 5e 0e             	add    %bl,0xe(%esi)
 612:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 618:	49                   	dec    %ecx
 619:	87 03                	xchg   %eax,(%ebx)
 61b:	86 04 83             	xchg   %al,(%ebx,%eax,4)
 61e:	05 02 c8 0a c3       	add    $0xc30ac802,%eax
 623:	41                   	inc    %ecx
 624:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 628:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 62b:	04 44                	add    $0x44,%al
 62d:	0b 77 c3             	or     -0x3d(%edi),%esi
 630:	44                   	inc    %esp
 631:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 635:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 638:	04 4e                	add    $0x4e,%al
 63a:	0c 05                	or     $0x5,%al
 63c:	08 83 05 85 02 86    	or     %al,-0x79fd7afb(%ebx)
 642:	04 87                	add    $0x87,%al
 644:	03 00                	add    (%eax),%eax
 646:	00 00                	add    %al,(%eax)
 648:	38 00                	cmp    %al,(%eax)
 64a:	00 00                	add    %al,(%eax)
 64c:	20 04 00             	and    %al,(%eax,%eax,1)
 64f:	00 50 20             	add    %dl,0x20(%eax)
 652:	10 00                	adc    %al,(%eax)
 654:	9d                   	popf
 655:	00 00                	add    %al,(%eax)
 657:	00 41 0e             	add    %al,0xe(%ecx)
 65a:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 660:	42                   	inc    %edx
 661:	87 03                	xchg   %eax,(%ebx)
 663:	86 04 4d 83 05 02 74 	xchg   %al,0x74020583(,%ecx,2)
 66a:	0a c3                	or     %bl,%al
 66c:	41                   	inc    %ecx
 66d:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 671:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 674:	04 47                	add    $0x47,%al
 676:	0b 49 c3             	or     -0x3d(%ecx),%ecx
 679:	41                   	inc    %ecx
 67a:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 67e:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 681:	04 00                	add    $0x0,%al
 683:	00 38                	add    %bh,(%eax)
 685:	00 00                	add    %al,(%eax)
 687:	00 20                	add    %ah,(%eax)
 689:	04 00                	add    $0x0,%al
 68b:	00 f0                	add    %dh,%al
 68d:	20 10                	and    %dl,(%eax)
 68f:	00 a3 00 00 00 41    	add    %ah,0x41000000(%ebx)
 695:	0e                   	push   %cs
 696:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 69c:	49                   	dec    %ecx
 69d:	87 03                	xchg   %eax,(%ebx)
 69f:	86 04 83             	xchg   %al,(%ebx,%eax,4)
 6a2:	05 02 73 0a c3       	add    $0xc30a7302,%eax
 6a7:	41                   	inc    %ecx
 6a8:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 6ac:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 6af:	04 46                	add    $0x46,%al
 6b1:	0b 55 c3             	or     -0x3d(%ebp),%edx
 6b4:	43                   	inc    %ebx
 6b5:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 6b9:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 6bc:	04 00                	add    $0x0,%al
 6be:	00 00                	add    %al,(%eax)
 6c0:	44                   	inc    %esp
 6c1:	00 00                	add    %al,(%eax)
 6c3:	00 20                	add    %ah,(%eax)
 6c5:	04 00                	add    $0x0,%al
 6c7:	00 a0 21 10 00 10    	add    %ah,0x10001021(%eax)
 6cd:	02 00                	add    (%eax),%al
 6cf:	00 4e 0e             	add    %cl,0xe(%esi)
 6d2:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 6d8:	49                   	dec    %ecx
 6d9:	87 03                	xchg   %eax,(%ebx)
 6db:	86 04 83             	xchg   %al,(%ebx,%eax,4)
 6de:	05 02 ed 0a c3       	add    $0xc30aed02,%eax
 6e3:	41                   	inc    %ecx
 6e4:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 6e8:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 6eb:	04 47                	add    $0x47,%al
 6ed:	0b 02                	or     (%edx),%eax
 6ef:	c8 c3 41 c6          	enter  $0x41c3,$0xc6
 6f3:	41                   	inc    %ecx
 6f4:	c7 41 c5 0c 04 04 44 	movl   $0x4404040c,-0x3b(%ecx)
 6fb:	0c 05                	or     $0x5,%al
 6fd:	08 83 05 85 02 86    	or     %al,-0x79fd7afb(%ebx)
 703:	04 87                	add    $0x87,%al
 705:	03 00                	add    (%eax),%eax
 707:	00 2c 00             	add    %ch,(%eax,%eax,1)
 70a:	00 00                	add    %al,(%eax)
 70c:	20 04 00             	and    %al,(%eax,%eax,1)
 70f:	00 b0 23 10 00 f5    	add    %dh,-0xaffefdd(%eax)
 715:	04 00                	add    $0x0,%al
 717:	00 41 0e             	add    %al,0xe(%ecx)
 71a:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 720:	49                   	dec    %ecx
 721:	87 03                	xchg   %eax,(%ebx)
 723:	86 04 83             	xchg   %al,(%ebx,%eax,4)
 726:	05 03 ce 03 0a       	add    $0xa03ce03,%eax
 72b:	c3                   	ret
 72c:	41                   	inc    %ecx
 72d:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 731:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 734:	04 43                	add    $0x43,%al
 736:	0b 00                	or     (%eax),%eax
 738:	10 00                	adc    %al,(%eax)
 73a:	00 00                	add    %al,(%eax)
 73c:	ff                   	(bad)
 73d:	ff                   	(bad)
 73e:	ff                   	(bad)
 73f:	ff 01                	incl   (%ecx)
 741:	00 01                	add    %al,(%ecx)
 743:	7c 08                	jl     74d <MBOOT_HEADER_FLAGS+0x74a>
 745:	0c 04                	or     $0x4,%al
 747:	04 88                	add    $0x88,%al
 749:	01 00                	add    %eax,(%eax)
 74b:	00 0c 00             	add    %cl,(%eax,%eax,1)
 74e:	00 00                	add    %al,(%eax)
 750:	38 07                	cmp    %al,(%edi)
 752:	00 00                	add    %al,(%eax)
 754:	b0 28                	mov    $0x28,%al
 756:	10 00                	adc    %al,(%eax)
 758:	1b 00                	sbb    (%eax),%eax
 75a:	00 00                	add    %al,(%eax)
 75c:	48                   	dec    %eax
 75d:	00 00                	add    %al,(%eax)
 75f:	00 38                	add    %bh,(%eax)
 761:	07                   	pop    %es
 762:	00 00                	add    %al,(%eax)
 764:	d0 28                	shrb   $1,(%eax)
 766:	10 00                	adc    %al,(%eax)
 768:	34 01                	xor    $0x1,%al
 76a:	00 00                	add    %al,(%eax)
 76c:	41                   	inc    %ecx
 76d:	0e                   	push   %cs
 76e:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 774:	42                   	inc    %edx
 775:	87 03                	xchg   %eax,(%ebx)
 777:	86 04 46             	xchg   %al,(%esi,%eax,2)
 77a:	83 05 02 8f 0a c3 41 	addl   $0x41,0xc30a8f02
 781:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 785:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 788:	04 43                	add    $0x43,%al
 78a:	0b 02                	or     (%edx),%eax
 78c:	6d                   	insl   (%dx),%es:(%edi)
 78d:	0a c3                	or     %bl,%al
 78f:	41                   	inc    %ecx
 790:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 794:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 797:	04 41                	add    $0x41,%al
 799:	0b 5f c3             	or     -0x3d(%edi),%ebx
 79c:	41                   	inc    %ecx
 79d:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 7a1:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 7a4:	04 00                	add    $0x0,%al
 7a6:	00 00                	add    %al,(%eax)
 7a8:	0c 00                	or     $0x0,%al
 7aa:	00 00                	add    %al,(%eax)
 7ac:	38 07                	cmp    %al,(%edi)
 7ae:	00 00                	add    %al,(%eax)
 7b0:	10 2a                	adc    %ch,(%edx)
 7b2:	10 00                	adc    %al,(%eax)
 7b4:	06                   	push   %es
 7b5:	00 00                	add    %al,(%eax)
 7b7:	00 0c 00             	add    %cl,(%eax,%eax,1)
 7ba:	00 00                	add    %al,(%eax)
 7bc:	38 07                	cmp    %al,(%edi)
 7be:	00 00                	add    %al,(%eax)
 7c0:	20 2a                	and    %ch,(%edx)
 7c2:	10 00                	adc    %al,(%eax)
 7c4:	06                   	push   %es
 7c5:	00 00                	add    %al,(%eax)
 7c7:	00 10                	add    %dl,(%eax)
 7c9:	00 00                	add    %al,(%eax)
 7cb:	00 ff                	add    %bh,%bh
 7cd:	ff                   	(bad)
 7ce:	ff                   	(bad)
 7cf:	ff 01                	incl   (%ecx)
 7d1:	00 01                	add    %al,(%ecx)
 7d3:	7c 08                	jl     7dd <MBOOT_HEADER_FLAGS+0x7da>
 7d5:	0c 04                	or     $0x4,%al
 7d7:	04 88                	add    $0x88,%al
 7d9:	01 00                	add    %eax,(%eax)
 7db:	00 28                	add    %ch,(%eax)
 7dd:	00 00                	add    %al,(%eax)
 7df:	00 c8                	add    %cl,%al
 7e1:	07                   	pop    %es
 7e2:	00 00                	add    %al,(%eax)
 7e4:	30 2a                	xor    %ch,(%edx)
 7e6:	10 00                	adc    %al,(%eax)
 7e8:	82 00 00             	addb   $0x0,(%eax)
 7eb:	00 41 0e             	add    %al,0xe(%ecx)
 7ee:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 7f4:	44                   	inc    %esp
 7f5:	83 03 02             	addl   $0x2,(%ebx)
 7f8:	5f                   	pop    %edi
 7f9:	0a c5                	or     %ch,%al
 7fb:	c3                   	ret
 7fc:	0c 04                	or     $0x4,%al
 7fe:	04 4a                	add    $0x4a,%al
 800:	0b 51 c5             	or     -0x3b(%ecx),%edx
 803:	c3                   	ret
 804:	0c 04                	or     $0x4,%al
 806:	04 00                	add    $0x0,%al
 808:	2c 00                	sub    $0x0,%al
 80a:	00 00                	add    %al,(%eax)
 80c:	c8 07 00 00          	enter  $0x7,$0x0
 810:	c0 2a 10             	shrb   $0x10,(%edx)
 813:	00 7b 00             	add    %bh,0x0(%ebx)
 816:	00 00                	add    %al,(%eax)
 818:	41                   	inc    %ecx
 819:	0e                   	push   %cs
 81a:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 820:	41                   	inc    %ecx
 821:	87 03                	xchg   %eax,(%ebx)
 823:	46                   	inc    %esi
 824:	86 04 47             	xchg   %al,(%edi,%eax,2)
 827:	83 05 02 62 c3 41 c6 	addl   $0xffffffc6,0x41c36202
 82e:	41                   	inc    %ecx
 82f:	c7 41 c5 0c 04 04 00 	movl   $0x4040c,-0x3b(%ecx)
 836:	00 00                	add    %al,(%eax)
 838:	10 00                	adc    %al,(%eax)
 83a:	00 00                	add    %al,(%eax)
 83c:	ff                   	(bad)
 83d:	ff                   	(bad)
 83e:	ff                   	(bad)
 83f:	ff 01                	incl   (%ecx)
 841:	00 01                	add    %al,(%ecx)
 843:	7c 08                	jl     84d <MBOOT_HEADER_FLAGS+0x84a>
 845:	0c 04                	or     $0x4,%al
 847:	04 88                	add    $0x88,%al
 849:	01 00                	add    %eax,(%eax)
 84b:	00 1c 00             	add    %bl,(%eax,%eax,1)
 84e:	00 00                	add    %al,(%eax)
 850:	38 08                	cmp    %cl,(%eax)
 852:	00 00                	add    %al,(%eax)
 854:	40                   	inc    %eax
 855:	2b 10                	sub    (%eax),%edx
 857:	00 23                	add    %ah,(%ebx)
 859:	00 00                	add    %al,(%eax)
 85b:	00 41 0e             	add    %al,0xe(%ecx)
 85e:	08 85 02 4c 0d 05    	or     %al,0x50d4c02(%ebp)
 864:	55                   	push   %ebp
 865:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 868:	04 00                	add    $0x0,%al
 86a:	00 00                	add    %al,(%eax)
 86c:	24 00                	and    $0x0,%al
 86e:	00 00                	add    %al,(%eax)
 870:	38 08                	cmp    %cl,(%eax)
 872:	00 00                	add    %al,(%eax)
 874:	70 2b                	jo     8a1 <MBOOT_HEADER_FLAGS+0x89e>
 876:	10 00                	adc    %al,(%eax)
 878:	34 00                	xor    $0x0,%al
 87a:	00 00                	add    %al,(%eax)
 87c:	41                   	inc    %ecx
 87d:	0e                   	push   %cs
 87e:	08 85 02 47 0d 05    	or     %al,0x50d4702(%ebp)
 884:	56                   	push   %esi
 885:	0a c5                	or     %ch,%al
 887:	0c 04                	or     $0x4,%al
 889:	04 52                	add    $0x52,%al
 88b:	0b 43 c5             	or     -0x3b(%ebx),%eax
 88e:	0c 04                	or     $0x4,%al
 890:	04 00                	add    $0x0,%al
 892:	00 00                	add    %al,(%eax)
 894:	0c 00                	or     $0x0,%al
 896:	00 00                	add    %al,(%eax)
 898:	38 08                	cmp    %cl,(%eax)
 89a:	00 00                	add    %al,(%eax)
 89c:	b0 2b                	mov    $0x2b,%al
 89e:	10 00                	adc    %al,(%eax)
 8a0:	01 00                	add    %eax,(%eax)
 8a2:	00 00                	add    %al,(%eax)
 8a4:	10 00                	adc    %al,(%eax)
 8a6:	00 00                	add    %al,(%eax)
 8a8:	ff                   	(bad)
 8a9:	ff                   	(bad)
 8aa:	ff                   	(bad)
 8ab:	ff 01                	incl   (%ecx)
 8ad:	00 01                	add    %al,(%ecx)
 8af:	7c 08                	jl     8b9 <MBOOT_HEADER_FLAGS+0x8b6>
 8b1:	0c 04                	or     $0x4,%al
 8b3:	04 88                	add    $0x88,%al
 8b5:	01 00                	add    %eax,(%eax)
 8b7:	00 0c 00             	add    %cl,(%eax,%eax,1)
 8ba:	00 00                	add    %al,(%eax)
 8bc:	a4                   	movsb  %ds:(%esi),%es:(%edi)
 8bd:	08 00                	or     %al,(%eax)
 8bf:	00 c0                	add    %al,%al
 8c1:	2b 10                	sub    (%eax),%edx
 8c3:	00 05 00 00 00 1c    	add    %al,0x1c000000
 8c9:	00 00                	add    %al,(%eax)
 8cb:	00 a4 08 00 00 d0 2b 	add    %ah,0x2bd00000(%eax,%ecx,1)
 8d2:	10 00                	adc    %al,(%eax)
 8d4:	19 00                	sbb    %eax,(%eax)
 8d6:	00 00                	add    %al,(%eax)
 8d8:	41                   	inc    %ecx
 8d9:	0e                   	push   %cs
 8da:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8e0:	51                   	push   %ecx
 8e1:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 8e4:	04 00                	add    $0x0,%al
 8e6:	00 00                	add    %al,(%eax)
 8e8:	1c 00                	sbb    $0x0,%al
 8ea:	00 00                	add    %al,(%eax)
 8ec:	a4                   	movsb  %ds:(%esi),%es:(%edi)
 8ed:	08 00                	or     %al,(%eax)
 8ef:	00 f0                	add    %dh,%al
 8f1:	2b 10                	sub    (%eax),%edx
 8f3:	00 10                	add    %dl,(%eax)
 8f5:	00 00                	add    %al,(%eax)
 8f7:	00 41 0e             	add    %al,0xe(%ecx)
 8fa:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 900:	48                   	dec    %eax
 901:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 904:	04 00                	add    $0x0,%al
 906:	00 00                	add    %al,(%eax)
 908:	0c 00                	or     $0x0,%al
 90a:	00 00                	add    %al,(%eax)
 90c:	a4                   	movsb  %ds:(%esi),%es:(%edi)
 90d:	08 00                	or     %al,(%eax)
 90f:	00 00                	add    %al,(%eax)
 911:	2c 10                	sub    $0x10,%al
 913:	00 05 00 00 00 10    	add    %al,0x10000000
 919:	00 00                	add    %al,(%eax)
 91b:	00 ff                	add    %bh,%bh
 91d:	ff                   	(bad)
 91e:	ff                   	(bad)
 91f:	ff 01                	incl   (%ecx)
 921:	00 01                	add    %al,(%ecx)
 923:	7c 08                	jl     92d <MBOOT_HEADER_FLAGS+0x92a>
 925:	0c 04                	or     $0x4,%al
 927:	04 88                	add    $0x88,%al
 929:	01 00                	add    %eax,(%eax)
 92b:	00 0c 00             	add    %cl,(%eax,%eax,1)
 92e:	00 00                	add    %al,(%eax)
 930:	18 09                	sbb    %cl,(%ecx)
 932:	00 00                	add    %al,(%eax)
 934:	20 2c 10             	and    %ch,(%eax,%edx,1)
 937:	00 65 00             	add    %ah,0x0(%ebp)
 93a:	00 00                	add    %al,(%eax)
 93c:	28 00                	sub    %al,(%eax)
 93e:	00 00                	add    %al,(%eax)
 940:	18 09                	sbb    %cl,(%ecx)
 942:	00 00                	add    %al,(%eax)
 944:	90                   	nop
 945:	2c 10                	sub    $0x10,%al
 947:	00 5f 01             	add    %bl,0x1(%edi)
 94a:	00 00                	add    %al,(%eax)
 94c:	41                   	inc    %ecx
 94d:	0e                   	push   %cs
 94e:	08 85 02 49 0d 05    	or     %al,0x50d4902(%ebp)
 954:	45                   	inc    %ebp
 955:	86 03                	xchg   %al,(%ebx)
 957:	83 04 02 ed          	addl   $0xffffffed,(%edx,%eax,1)
 95b:	0a c3                	or     %bl,%al
 95d:	41                   	inc    %ecx
 95e:	c6 41 c5 0c          	movb   $0xc,-0x3b(%ecx)
 962:	04 04                	add    $0x4,%al
 964:	41                   	inc    %ecx
 965:	0b 00                	or     (%eax),%eax
 967:	00 20                	add    %ah,(%eax)
 969:	00 00                	add    %al,(%eax)
 96b:	00 18                	add    %bl,(%eax)
 96d:	09 00                	or     %eax,(%eax)
 96f:	00 f0                	add    %dh,%al
 971:	2d 10 00 37 00       	sub    $0x370010,%eax
 976:	00 00                	add    %al,(%eax)
 978:	41                   	inc    %ecx
 979:	0e                   	push   %cs
 97a:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 980:	41                   	inc    %ecx
 981:	83 03 72             	addl   $0x72,(%ebx)
 984:	c5 c3 0c             	(bad)
 987:	04 04                	add    $0x4,%al
 989:	00 00                	add    %al,(%eax)
 98b:	00 0c 00             	add    %cl,(%eax,%eax,1)
 98e:	00 00                	add    %al,(%eax)
 990:	18 09                	sbb    %cl,(%ecx)
 992:	00 00                	add    %al,(%eax)
 994:	30 2e                	xor    %ch,(%esi)
 996:	10 00                	adc    %al,(%eax)
 998:	72 00                	jb     99a <MBOOT_HEADER_FLAGS+0x997>
 99a:	00 00                	add    %al,(%eax)
 99c:	24 00                	and    $0x0,%al
 99e:	00 00                	add    %al,(%eax)
 9a0:	18 09                	sbb    %cl,(%ecx)
 9a2:	00 00                	add    %al,(%eax)
 9a4:	b0 2e                	mov    $0x2e,%al
 9a6:	10 00                	adc    %al,(%eax)
 9a8:	3c 00                	cmp    $0x0,%al
 9aa:	00 00                	add    %al,(%eax)
 9ac:	41                   	inc    %ecx
 9ad:	0e                   	push   %cs
 9ae:	08 85 02 4c 0d 05    	or     %al,0x50d4c02(%ebp)
 9b4:	45                   	inc    %ebp
 9b5:	86 03                	xchg   %al,(%ebx)
 9b7:	83 04 67 c3          	addl   $0xffffffc3,(%edi,%eiz,2)
 9bb:	41                   	inc    %ecx
 9bc:	c6 41 c5 0c          	movb   $0xc,-0x3b(%ecx)
 9c0:	04 04                	add    $0x4,%al
 9c2:	00 00                	add    %al,(%eax)
 9c4:	1c 00                	sbb    $0x0,%al
 9c6:	00 00                	add    %al,(%eax)
 9c8:	18 09                	sbb    %cl,(%ecx)
 9ca:	00 00                	add    %al,(%eax)
 9cc:	f0 2e 10 00          	lock adc %al,%cs:(%eax)
 9d0:	1a 00                	sbb    (%eax),%al
 9d2:	00 00                	add    %al,(%eax)
 9d4:	41                   	inc    %ecx
 9d5:	0e                   	push   %cs
 9d6:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 9dc:	49                   	dec    %ecx
 9dd:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 9e0:	04 00                	add    $0x0,%al
 9e2:	00 00                	add    %al,(%eax)
 9e4:	10 00                	adc    %al,(%eax)
 9e6:	00 00                	add    %al,(%eax)
 9e8:	ff                   	(bad)
 9e9:	ff                   	(bad)
 9ea:	ff                   	(bad)
 9eb:	ff 01                	incl   (%ecx)
 9ed:	00 01                	add    %al,(%ecx)
 9ef:	7c 08                	jl     9f9 <MBOOT_HEADER_FLAGS+0x9f6>
 9f1:	0c 04                	or     $0x4,%al
 9f3:	04 88                	add    $0x88,%al
 9f5:	01 00                	add    %eax,(%eax)
 9f7:	00 38                	add    %bh,(%eax)
 9f9:	00 00                	add    %al,(%eax)
 9fb:	00 e4                	add    %ah,%ah
 9fd:	09 00                	or     %eax,(%eax)
 9ff:	00 40 2f             	add    %al,0x2f(%eax)
 a02:	10 00                	adc    %al,(%eax)
 a04:	b0 00                	mov    $0x0,%al
 a06:	00 00                	add    %al,(%eax)
 a08:	41                   	inc    %ecx
 a09:	0e                   	push   %cs
 a0a:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 a10:	46                   	inc    %esi
 a11:	87 03                	xchg   %eax,(%ebx)
 a13:	86 04 83             	xchg   %al,(%ebx,%eax,4)
 a16:	05 02 91 0a c3       	add    $0xc30a9102,%eax
 a1b:	41                   	inc    %ecx
 a1c:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 a20:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 a23:	04 43                	add    $0x43,%al
 a25:	0b 4c c3 41          	or     0x41(%ebx,%eax,8),%ecx
 a29:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
 a2d:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 a30:	04 00                	add    $0x0,%al
 a32:	00 00                	add    %al,(%eax)
 a34:	10 00                	adc    %al,(%eax)
 a36:	00 00                	add    %al,(%eax)
 a38:	ff                   	(bad)
 a39:	ff                   	(bad)
 a3a:	ff                   	(bad)
 a3b:	ff 01                	incl   (%ecx)
 a3d:	00 01                	add    %al,(%ecx)
 a3f:	7c 08                	jl     a49 <MBOOT_HEADER_FLAGS+0xa46>
 a41:	0c 04                	or     $0x4,%al
 a43:	04 88                	add    $0x88,%al
 a45:	01 00                	add    %eax,(%eax)
 a47:	00 24 00             	add    %ah,(%eax,%eax,1)
 a4a:	00 00                	add    %al,(%eax)
 a4c:	34 0a                	xor    $0xa,%al
 a4e:	00 00                	add    %al,(%eax)
 a50:	00 30                	add    %dh,(%eax)
 a52:	10 00                	adc    %al,(%eax)
 a54:	24 00                	and    $0x0,%al
 a56:	00 00                	add    %al,(%eax)
 a58:	41                   	inc    %ecx
 a59:	0e                   	push   %cs
 a5a:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 a60:	58                   	pop    %eax
 a61:	0a c5                	or     %ch,%al
 a63:	0c 04                	or     $0x4,%al
 a65:	04 45                	add    $0x45,%al
 a67:	0b 43 c5             	or     -0x3b(%ebx),%eax
 a6a:	0c 04                	or     $0x4,%al
 a6c:	04 00                	add    $0x0,%al
 a6e:	00 00                	add    %al,(%eax)
 a70:	28 00                	sub    %al,(%eax)
 a72:	00 00                	add    %al,(%eax)
 a74:	34 0a                	xor    $0xa,%al
 a76:	00 00                	add    %al,(%eax)
 a78:	30 30                	xor    %dh,(%eax)
 a7a:	10 00                	adc    %al,(%eax)
 a7c:	43                   	inc    %ebx
 a7d:	00 00                	add    %al,(%eax)
 a7f:	00 41 0e             	add    %al,0xe(%ecx)
 a82:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 a88:	41                   	inc    %ecx
 a89:	87 03                	xchg   %eax,(%ebx)
 a8b:	48                   	dec    %eax
 a8c:	86 04 44             	xchg   %al,(%esp,%eax,2)
 a8f:	83 05 6d c3 43 c6 41 	addl   $0x41,0xc643c36d
 a96:	c7 41 c5 0c 04 04 24 	movl   $0x2404040c,-0x3b(%ecx)
 a9d:	00 00                	add    %al,(%eax)
 a9f:	00 34 0a             	add    %dh,(%edx,%ecx,1)
 aa2:	00 00                	add    %al,(%eax)
 aa4:	80 30 10             	xorb   $0x10,(%eax)
 aa7:	00 2b                	add    %ch,(%ebx)
 aa9:	00 00                	add    %al,(%eax)
 aab:	00 41 0e             	add    %al,0xe(%ecx)
 aae:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 ab4:	48                   	dec    %eax
 ab5:	87 03                	xchg   %eax,(%ebx)
 ab7:	86 04 5b             	xchg   %al,(%ebx,%ebx,2)
 aba:	c6 43 c7 41          	movb   $0x41,-0x39(%ebx)
 abe:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 ac1:	04 00                	add    $0x0,%al
 ac3:	00 30                	add    %dh,(%eax)
 ac5:	00 00                	add    %al,(%eax)
 ac7:	00 34 0a             	add    %dh,(%edx,%ecx,1)
 aca:	00 00                	add    %al,(%eax)
 acc:	b0 30                	mov    $0x30,%al
 ace:	10 00                	adc    %al,(%eax)
 ad0:	56                   	push   %esi
 ad1:	00 00                	add    %al,(%eax)
 ad3:	00 41 0e             	add    %al,0xe(%ecx)
 ad6:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 adc:	41                   	inc    %ecx
 add:	86 03                	xchg   %al,(%ebx)
 adf:	47                   	inc    %edi
 ae0:	83 04 7f 0a          	addl   $0xa,(%edi,%edi,2)
 ae4:	c3                   	ret
 ae5:	41                   	inc    %ecx
 ae6:	c6 41 c5 0c          	movb   $0xc,-0x3b(%ecx)
 aea:	04 04                	add    $0x4,%al
 aec:	44                   	inc    %esp
 aed:	0b 41 c3             	or     -0x3d(%ecx),%eax
 af0:	43                   	inc    %ebx
 af1:	c6 41 c5 0c          	movb   $0xc,-0x3b(%ecx)
 af5:	04 04                	add    $0x4,%al
 af7:	00 24 00             	add    %ah,(%eax,%eax,1)
 afa:	00 00                	add    %al,(%eax)
 afc:	34 0a                	xor    $0xa,%al
 afe:	00 00                	add    %al,(%eax)
 b00:	10 31                	adc    %dh,(%ecx)
 b02:	10 00                	adc    %al,(%eax)
 b04:	59                   	pop    %ecx
 b05:	00 00                	add    %al,(%eax)
 b07:	00 41 0e             	add    %al,0xe(%ecx)
 b0a:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 b10:	02 43 0a             	add    0xa(%ebx),%al
 b13:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 b16:	04 4a                	add    $0x4a,%al
 b18:	0b 46 c5             	or     -0x3b(%esi),%eax
 b1b:	0c 04                	or     $0x4,%al
 b1d:	04 00                	add    $0x0,%al
 b1f:	00 20                	add    %ah,(%eax)
 b21:	00 00                	add    %al,(%eax)
 b23:	00 34 0a             	add    %dh,(%edx,%ecx,1)
 b26:	00 00                	add    %al,(%eax)
 b28:	70 31                	jo     b5b <MBOOT_HEADER_FLAGS+0xb58>
 b2a:	10 00                	adc    %al,(%eax)
 b2c:	25 00 00 00 41       	and    $0x41000000,%eax
 b31:	0e                   	push   %cs
 b32:	08 85 02 44 0d 05    	or     %al,0x50d4402(%ebp)
 b38:	41                   	inc    %ecx
 b39:	83 03 5e             	addl   $0x5e,(%ebx)
 b3c:	c5 c3 0c             	(bad)
 b3f:	04 04                	add    $0x4,%al
 b41:	00 00                	add    %al,(%eax)
 b43:	00 24 00             	add    %ah,(%eax,%eax,1)
 b46:	00 00                	add    %al,(%eax)
 b48:	34 0a                	xor    $0xa,%al
 b4a:	00 00                	add    %al,(%eax)
 b4c:	a0 31 10 00 44       	mov    0x44001031,%al
 b51:	00 00                	add    %al,(%eax)
 b53:	00 41 0e             	add    %al,0xe(%ecx)
 b56:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 b5c:	41                   	inc    %ecx
 b5d:	86 03                	xchg   %al,(%ebx)
 b5f:	44                   	inc    %esp
 b60:	83 04 79 c3          	addl   $0xffffffc3,(%ecx,%edi,2)
 b64:	41                   	inc    %ecx
 b65:	c6 41 c5 0c          	movb   $0xc,-0x3b(%ecx)
 b69:	04 04                	add    $0x4,%al
 b6b:	00 24 00             	add    %ah,(%eax,%eax,1)
 b6e:	00 00                	add    %al,(%eax)
 b70:	34 0a                	xor    $0xa,%al
 b72:	00 00                	add    %al,(%eax)
 b74:	f0 31 10             	lock xor %edx,(%eax)
 b77:	00 4d 00             	add    %cl,0x0(%ebp)
 b7a:	00 00                	add    %al,(%eax)
 b7c:	41                   	inc    %ecx
 b7d:	0e                   	push   %cs
 b7e:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 b84:	41                   	inc    %ecx
 b85:	86 03                	xchg   %al,(%ebx)
 b87:	47                   	inc    %edi
 b88:	83 04 7f c3          	addl   $0xffffffc3,(%edi,%edi,2)
 b8c:	41                   	inc    %ecx
 b8d:	c6 41 c5 0c          	movb   $0xc,-0x3b(%ecx)
 b91:	04 04                	add    $0x4,%al
 b93:	00 00                	add    %al,(%eax)
 b95:	00 00                	add    %al,(%eax)
	...
